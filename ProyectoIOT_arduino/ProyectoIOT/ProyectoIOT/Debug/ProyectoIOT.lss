
ProyectoIOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002f8  00800200  00006f18  00006fac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006f18  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a1  008004f8  008004f8  000072a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000072a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007300  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000e30  00000000  00000000  00007340  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002c533  00000000  00000000  00008170  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00005ebf  00000000  00000000  000346a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000083e1  00000000  00000000  0003a562  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00003704  00000000  00000000  00042944  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005a73  00000000  00000000  00046048  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0001475a  00000000  00000000  0004babb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000e98  00000000  00000000  00060215  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c4       	rjmp	.+2182   	; 0x888 <__dtors_end>
       2:	00 00       	nop
       4:	72 c4       	rjmp	.+2276   	; 0x8ea <__bad_interrupt>
       6:	00 00       	nop
       8:	70 c4       	rjmp	.+2272   	; 0x8ea <__bad_interrupt>
       a:	00 00       	nop
       c:	6e c4       	rjmp	.+2268   	; 0x8ea <__bad_interrupt>
       e:	00 00       	nop
      10:	6c c4       	rjmp	.+2264   	; 0x8ea <__bad_interrupt>
      12:	00 00       	nop
      14:	6a c4       	rjmp	.+2260   	; 0x8ea <__bad_interrupt>
      16:	00 00       	nop
      18:	68 c4       	rjmp	.+2256   	; 0x8ea <__bad_interrupt>
      1a:	00 00       	nop
      1c:	66 c4       	rjmp	.+2252   	; 0x8ea <__bad_interrupt>
      1e:	00 00       	nop
      20:	64 c4       	rjmp	.+2248   	; 0x8ea <__bad_interrupt>
      22:	00 00       	nop
      24:	62 c4       	rjmp	.+2244   	; 0x8ea <__bad_interrupt>
      26:	00 00       	nop
      28:	60 c4       	rjmp	.+2240   	; 0x8ea <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5e c4       	rjmp	.+2236   	; 0x8ea <__bad_interrupt>
      2e:	00 00       	nop
      30:	5c c4       	rjmp	.+2232   	; 0x8ea <__bad_interrupt>
      32:	00 00       	nop
      34:	5a c4       	rjmp	.+2228   	; 0x8ea <__bad_interrupt>
      36:	00 00       	nop
      38:	58 c4       	rjmp	.+2224   	; 0x8ea <__bad_interrupt>
      3a:	00 00       	nop
      3c:	56 c4       	rjmp	.+2220   	; 0x8ea <__bad_interrupt>
      3e:	00 00       	nop
      40:	54 c4       	rjmp	.+2216   	; 0x8ea <__bad_interrupt>
      42:	00 00       	nop
      44:	52 c4       	rjmp	.+2212   	; 0x8ea <__bad_interrupt>
      46:	00 00       	nop
      48:	50 c4       	rjmp	.+2208   	; 0x8ea <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4e c4       	rjmp	.+2204   	; 0x8ea <__bad_interrupt>
      4e:	00 00       	nop
      50:	4c c4       	rjmp	.+2200   	; 0x8ea <__bad_interrupt>
      52:	00 00       	nop
      54:	4a c4       	rjmp	.+2196   	; 0x8ea <__bad_interrupt>
      56:	00 00       	nop
      58:	48 c4       	rjmp	.+2192   	; 0x8ea <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 3a 15 	jmp	0x2a74	; 0x2a74 <__vector_23>
      60:	44 c4       	rjmp	.+2184   	; 0x8ea <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 47 11 	jmp	0x228e	; 0x228e <__vector_25>
      68:	0c 94 7d 11 	jmp	0x22fa	; 0x22fa <__vector_26>
      6c:	3e c4       	rjmp	.+2172   	; 0x8ea <__bad_interrupt>
      6e:	00 00       	nop
      70:	3c c4       	rjmp	.+2168   	; 0x8ea <__bad_interrupt>
      72:	00 00       	nop
      74:	3a c4       	rjmp	.+2164   	; 0x8ea <__bad_interrupt>
      76:	00 00       	nop
      78:	38 c4       	rjmp	.+2160   	; 0x8ea <__bad_interrupt>
      7a:	00 00       	nop
      7c:	36 c4       	rjmp	.+2156   	; 0x8ea <__bad_interrupt>
      7e:	00 00       	nop
      80:	34 c4       	rjmp	.+2152   	; 0x8ea <__bad_interrupt>
      82:	00 00       	nop
      84:	32 c4       	rjmp	.+2148   	; 0x8ea <__bad_interrupt>
      86:	00 00       	nop
      88:	30 c4       	rjmp	.+2144   	; 0x8ea <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2e c4       	rjmp	.+2140   	; 0x8ea <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 dc 11 	jmp	0x23b8	; 0x23b8 <__vector_36>
      94:	0c 94 12 12 	jmp	0x2424	; 0x2424 <__vector_37>
      98:	28 c4       	rjmp	.+2128   	; 0x8ea <__bad_interrupt>
      9a:	00 00       	nop
      9c:	26 c4       	rjmp	.+2124   	; 0x8ea <__bad_interrupt>
      9e:	00 00       	nop
      a0:	24 c4       	rjmp	.+2120   	; 0x8ea <__bad_interrupt>
      a2:	00 00       	nop
      a4:	22 c4       	rjmp	.+2116   	; 0x8ea <__bad_interrupt>
      a6:	00 00       	nop
      a8:	20 c4       	rjmp	.+2112   	; 0x8ea <__bad_interrupt>
      aa:	00 00       	nop
      ac:	1e c4       	rjmp	.+2108   	; 0x8ea <__bad_interrupt>
      ae:	00 00       	nop
      b0:	1c c4       	rjmp	.+2104   	; 0x8ea <__bad_interrupt>
      b2:	00 00       	nop
      b4:	1a c4       	rjmp	.+2100   	; 0x8ea <__bad_interrupt>
      b6:	00 00       	nop
      b8:	18 c4       	rjmp	.+2096   	; 0x8ea <__bad_interrupt>
      ba:	00 00       	nop
      bc:	16 c4       	rjmp	.+2092   	; 0x8ea <__bad_interrupt>
      be:	00 00       	nop
      c0:	14 c4       	rjmp	.+2088   	; 0x8ea <__bad_interrupt>
      c2:	00 00       	nop
      c4:	12 c4       	rjmp	.+2084   	; 0x8ea <__bad_interrupt>
      c6:	00 00       	nop
      c8:	10 c4       	rjmp	.+2080   	; 0x8ea <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0e c4       	rjmp	.+2076   	; 0x8ea <__bad_interrupt>
      ce:	00 00       	nop
      d0:	0c c4       	rjmp	.+2072   	; 0x8ea <__bad_interrupt>
      d2:	00 00       	nop
      d4:	0a c4       	rjmp	.+2068   	; 0x8ea <__bad_interrupt>
      d6:	00 00       	nop
      d8:	08 c4       	rjmp	.+2064   	; 0x8ea <__bad_interrupt>
      da:	00 00       	nop
      dc:	06 c4       	rjmp	.+2060   	; 0x8ea <__bad_interrupt>
      de:	00 00       	nop
      e0:	04 c4       	rjmp	.+2056   	; 0x8ea <__bad_interrupt>
      e2:	00 00       	nop
      e4:	9a 16       	cp	r9, r26
      e6:	9f 16       	cp	r9, r31
      e8:	a4 16       	cp	r10, r20
      ea:	ae 16       	cp	r10, r30
      ec:	b8 16       	cp	r11, r24
      ee:	31 17       	cp	r19, r17
      f0:	c2 16       	cp	r12, r18
      f2:	ca 16       	cp	r12, r26
      f4:	d2 16       	cp	r13, r18
      f6:	dc 16       	cp	r13, r28
      f8:	e6 16       	cp	r14, r22
      fa:	f0 16       	cp	r15, r16
      fc:	ff 16       	cp	r15, r31
      fe:	09 17       	cp	r16, r25
     100:	31 17       	cp	r19, r17
     102:	13 17       	cp	r17, r19
     104:	1d 17       	cp	r17, r29
     106:	27 17       	cp	r18, r23
     108:	55 17       	cp	r21, r21
     10a:	58 17       	cp	r21, r24
     10c:	47 17       	cp	r20, r23
     10e:	4b 17       	cp	r20, r27
     110:	51 17       	cp	r21, r17
     112:	8f 17       	cp	r24, r31
     114:	5c 17       	cp	r21, r28
     116:	60 17       	cp	r22, r16
     118:	66 17       	cp	r22, r22
     11a:	6a 17       	cp	r22, r26
     11c:	6e 17       	cp	r22, r30
     11e:	74 17       	cp	r23, r20
     120:	78 17       	cp	r23, r24
     122:	7c 17       	cp	r23, r28
     124:	8f 17       	cp	r24, r31
     126:	82 17       	cp	r24, r18
     128:	86 17       	cp	r24, r22
     12a:	8a 17       	cp	r24, r26

0000012c <__trampolines_end>:
     12c:	00 40       	sbci	r16, 0x00	; 0
     12e:	7a 10       	cpse	r7, r10
     130:	f3 5a       	subi	r31, 0xA3	; 163
     132:	00 a0       	ldd	r0, Z+32	; 0x20
     134:	72 4e       	sbci	r23, 0xE2	; 226
     136:	18 09       	sbc	r17, r8
     138:	00 10       	cpse	r0, r0
     13a:	a5 d4       	rcall	.+2378   	; 0xa86 <_ZN9MaxMatrix12setColumnAllEhh+0x74>
     13c:	e8 00       	.word	0x00e8	; ????
     13e:	00 e8       	ldi	r16, 0x80	; 128
     140:	76 48       	sbci	r23, 0x86	; 134
     142:	17 00       	.word	0x0017	; ????
     144:	00 e4       	ldi	r16, 0x40	; 64
     146:	0b 54       	subi	r16, 0x4B	; 75
     148:	02 00       	.word	0x0002	; ????
     14a:	00 ca       	rjmp	.-3072   	; 0xfffff54c <__eeprom_end+0xff7ef54c>
     14c:	9a 3b       	cpi	r25, 0xBA	; 186
     14e:	00 00       	nop
     150:	00 e1       	ldi	r16, 0x10	; 16
     152:	f5 05       	cpc	r31, r5
     154:	00 00       	nop
     156:	80 96       	adiw	r24, 0x20	; 32
     158:	98 00       	.word	0x0098	; ????
     15a:	00 00       	nop
     15c:	40 42       	sbci	r20, 0x20	; 32
     15e:	0f 00       	.word	0x000f	; ????
     160:	00 00       	nop
     162:	a0 86       	std	Z+8, r10	; 0x08
     164:	01 00       	.word	0x0001	; ????
     166:	00 00       	nop
     168:	10 27       	eor	r17, r16
     16a:	00 00       	nop
     16c:	00 00       	nop
     16e:	e8 03       	fmulsu	r22, r16
     170:	00 00       	nop
     172:	00 00       	nop
     174:	64 00       	.word	0x0064	; ????
     176:	00 00       	nop
     178:	00 00       	nop
     17a:	0a 00       	.word	0x000a	; ????
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	01 00       	.word	0x0001	; ????
     182:	00 00       	nop
     184:	00 00       	nop
     186:	2c 76       	andi	r18, 0x6C	; 108
     188:	d8 88       	ldd	r13, Y+16	; 0x10
     18a:	dc 67       	ori	r29, 0x7C	; 124
     18c:	4f 08       	sbc	r4, r15
     18e:	23 df       	rcall	.-442    	; 0xffffffd6 <__eeprom_end+0xff7effd6>
     190:	c1 df       	rcall	.-126    	; 0x114 <__SREG__+0xd5>
     192:	ae 59       	subi	r26, 0x9E	; 158
     194:	e1 b1       	in	r30, 0x01	; 1
     196:	b7 96       	adiw	r30, 0x27	; 39
     198:	e5 e3       	ldi	r30, 0x35	; 53
     19a:	e4 53       	subi	r30, 0x34	; 52
     19c:	c6 3a       	cpi	r28, 0xA6	; 166
     19e:	e6 51       	subi	r30, 0x16	; 22
     1a0:	99 76       	andi	r25, 0x69	; 105
     1a2:	96 e8       	ldi	r25, 0x86	; 134
     1a4:	e6 c2       	rjmp	.+1484   	; 0x772 <_ZZN6EspDrv14getClientStateEhE3__c_0+0x9>
     1a6:	84 26       	eor	r8, r20
     1a8:	eb 89       	ldd	r30, Y+19	; 0x13
     1aa:	8c 9b       	sbis	0x11, 4	; 17
     1ac:	62 ed       	ldi	r22, 0xD2	; 210
     1ae:	40 7c       	andi	r20, 0xC0	; 192
     1b0:	6f fc       	.word	0xfc6f	; ????
     1b2:	ef bc       	out	0x2f, r14	; 47
     1b4:	9c 9f       	mul	r25, r28
     1b6:	40 f2       	brcs	.-112    	; 0x148 <__trampolines_end+0x1c>
     1b8:	ba a5       	ldd	r27, Y+42	; 0x2a
     1ba:	6f a5       	ldd	r22, Y+47	; 0x2f
     1bc:	f4 90       	lpm	r15, Z
     1be:	05 5a       	subi	r16, 0xA5	; 165
     1c0:	2a f7       	brpl	.-54     	; 0x18c <__trampolines_end+0x60>
     1c2:	5c 93       	st	X, r21
     1c4:	6b 6c       	ori	r22, 0xCB	; 203
     1c6:	f9 67       	ori	r31, 0x79	; 121
     1c8:	6d c1       	rjmp	.+730    	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     1ca:	1b fc       	.word	0xfc1b	; ????
     1cc:	e0 e4       	ldi	r30, 0x40	; 64
     1ce:	0d 47       	sbci	r16, 0x7D	; 125
     1d0:	fe f5       	brtc	.+126    	; 0x250 <_ZL2CH+0x2a>
     1d2:	20 e6       	ldi	r18, 0x60	; 96
     1d4:	b5 00       	.word	0x00b5	; ????
     1d6:	d0 ed       	ldi	r29, 0xD0	; 208
     1d8:	90 2e       	mov	r9, r16
     1da:	03 00       	.word	0x0003	; ????
     1dc:	94 35       	cpi	r25, 0x54	; 84
     1de:	77 05       	cpc	r23, r7
     1e0:	00 80       	ld	r0, Z
     1e2:	84 1e       	adc	r8, r20
     1e4:	08 00       	.word	0x0008	; ????
     1e6:	00 20       	and	r0, r0
     1e8:	4e 0a       	sbc	r4, r30
     1ea:	00 00       	nop
     1ec:	00 c8       	rjmp	.-4096   	; 0xfffff1ee <__eeprom_end+0xff7ef1ee>
     1ee:	0c 33       	cpi	r16, 0x3C	; 60
     1f0:	33 33       	cpi	r19, 0x33	; 51
     1f2:	33 0f       	add	r19, r19
     1f4:	98 6e       	ori	r25, 0xE8	; 232
     1f6:	12 83       	std	Z+2, r17	; 0x02
     1f8:	11 41       	sbci	r17, 0x11	; 17
     1fa:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1fc:	21 14       	cp	r2, r1
     1fe:	89 3b       	cpi	r24, 0xB9	; 185
     200:	e6 55       	subi	r30, 0x56	; 86
     202:	16 cf       	rjmp	.-468    	; 0x30 <__FUSE_REGION_LENGTH__+0x2d>
     204:	fe e6       	ldi	r31, 0x6E	; 110
     206:	db 18       	sub	r13, r11
     208:	d1 84       	ldd	r13, Z+9	; 0x09
     20a:	4b 38       	cpi	r20, 0x8B	; 139
     20c:	1b f7       	brvc	.-58     	; 0x1d4 <__trampolines_end+0xa8>
     20e:	7c 1d       	adc	r23, r12
     210:	90 1d       	adc	r25, r0
     212:	a4 bb       	out	0x14, r26	; 20
     214:	e4 24       	eor	r14, r4
     216:	20 32       	cpi	r18, 0x20	; 32
     218:	84 72       	andi	r24, 0x24	; 36
     21a:	5e 22       	and	r5, r30
     21c:	81 00       	.word	0x0081	; ????
     21e:	c9 f1       	breq	.+114    	; 0x292 <_ZL2CH+0x6c>
     220:	24 ec       	ldi	r18, 0xC4	; 196
     222:	a1 e5       	ldi	r26, 0x51	; 81
     224:	3d 27       	eor	r19, r29

00000226 <_ZL2CH>:
     226:	03 08 00 00 00 00 00 01 08 5f 00 00 00 00 03 08     ........._......
     236:	03 00 03 00 00 05 08 14 3e 14 3e 14 04 08 24 6a     ........>.>...$j
     246:	2b 12 00 05 08 63 13 08 64 63 05 08 36 49 56 20     +....c..dc..6IV 
     256:	50 01 08 03 00 00 00 00 03 08 1c 22 41 00 00 03     P.........."A...
     266:	08 41 22 1c 00 00 05 08 28 18 0e 18 28 05 08 08     .A".....(...(...
     276:	08 3e 08 08 02 08 b0 70 00 00 00 04 08 08 08 08     .>.....p........
     286:	08 00 02 08 60 60 00 00 00 04 08 60 18 06 01 00     ....``.....`....
     296:	04 08 3e 41 41 3e 00 03 08 42 7f 40 00 00 04 08     ..>AA>...B.@....
     2a6:	62 51 49 46 00 04 08 22 41 49 36 00 04 08 18 14     bQIF..."AI6.....
     2b6:	12 7f 00 04 08 27 45 45 39 00 04 08 3e 49 49 30     .....'EE9...>II0
     2c6:	00 04 08 61 11 09 07 00 04 08 36 49 49 36 00 04     ...a......6II6..
     2d6:	08 06 49 49 3e 00 02 08 50 00 00 00 00 02 08 80     ..II>...P.......
     2e6:	50 00 00 00 03 08 10 28 44 00 00 03 08 14 14 14     P......(D.......
     2f6:	00 00 03 08 44 28 10 00 00 04 08 02 59 09 06 00     ....D(......Y...
     306:	05 08 3e 49 55 5d 0e 04 08 7e 11 11 7e 00 04 08     ..>IU]...~..~...
     316:	7f 49 49 36 00 04 08 3e 41 41 22 00 04 08 7f 41     .II6...>AA"....A
     326:	41 3e 00 04 08 7f 49 49 41 00 04 08 7f 09 09 01     A>....IIA.......
     336:	00 04 08 3e 41 49 7a 00 04 08 7f 08 08 7f 00 03     ...>AIz.........
     346:	08 41 7f 41 00 00 04 08 30 40 41 3f 00 04 08 7f     .A.A....0@A?....
     356:	08 14 63 00 04 08 7f 40 40 40 00 05 08 7f 02 0c     ..c....@@@......
     366:	02 7f 05 08 7f 04 08 10 7f 04 08 3e 41 41 3e 00     ...........>AA>.
     376:	04 08 7f 09 09 06 00 04 08 3e 41 41 be 00 04 08     .........>AA....
     386:	7f 09 09 76 00 04 08 46 49 49 32 00 05 08 01 01     ...v...FII2.....
     396:	7f 01 01 04 08 3f 40 40 3f 00 05 08 0f 30 40 30     .....?@@?....0@0
     3a6:	0f 05 08 3f 40 38 40 3f 05 08 63 14 08 14 63 05     ...?@8@?..c...c.
     3b6:	08 07 08 70 08 07 04 08 61 51 49 47 00 02 08 7f     ...p....aQIG....
     3c6:	41 00 00 00 04 08 01 06 18 60 00 02 08 41 7f 00     A........`...A..
     3d6:	00 00 03 08 02 01 02 00 00 04 08 40 40 40 40 00     ...........@@@@.
     3e6:	02 08 01 02 00 00 00 04 08 20 54 54 78 00 04 08     ......... TTx...
     3f6:	7f 44 44 38 00 04 08 38 44 44 28 00 04 08 38 44     .DD8...8DD(...8D
     406:	44 7f 00 04 08 38 54 54 18 00 03 08 04 7e 05 00     D....8TT.....~..
     416:	00 04 08 98 a4 a4 78 00 04 08 7f 04 04 78 00 03     ......x......x..
     426:	08 44 7d 40 00 00 04 08 40 80 84 7d 00 04 08 7f     .D}@....@..}....
     436:	10 28 44 00 03 08 41 7f 40 00 00 05 08 7c 04 7c     .(D...A.@....|.|
     446:	04 78 04 08 7c 04 04 78 00 04 08 38 44 44 38 00     .x..|..x...8DD8.
     456:	04 08 fc 24 24 18 00 04 08 18 24 24 fc 00 04 08     ...$$.....$$....
     466:	7c 08 04 04 00 04 08 48 54 54 24 00 03 08 04 3f     |......HTT$....?
     476:	44 00 00 04 08 3c 40 40 7c 00 05 08 1c 20 40 20     D....<@@|.... @ 
     486:	1c 05 08 3c 40 3c 40 3c 05 08 44 28 10 28 44 04     ...<@<@<..D(.(D.
     496:	08 9c a0 a0 7c 00 03 08 64 54 4c 00 00 03 08 08     ....|...dTL.....
     4a6:	36 41 00 00 01 08 7f 00 00 00 00 03 08 41 36 08     6A...........A6.
     4b6:	00 00 04 08 08 04 08 04 00                          .........

000004bf <digital_pin_to_timer_PGM>:
     4bf:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
     4eb:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00000505 <digital_pin_to_bit_mask_PGM>:
     505:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
     515:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
     525:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
     535:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
     545:	04 08 10 20 40 80                                   ... @.

0000054b <digital_pin_to_port_PGM>:
     54b:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
     55b:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
     56b:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
     57b:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
     58b:	0b 0b 0b 0b 0b 0b                                   ......

00000591 <port_to_output_PGM>:
     591:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
     5a1:	02 01 00 00 05 01 08 01 0b 01                       ..........

000005ab <port_to_mode_PGM>:
     5ab:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
     5bb:	01 01 00 00 04 01 07 01 0a 01                       ..........

000005c5 <_ZZN12WiFiEspClass4initEP6StreamE3__c>:
     5c5:	49 6e 69 74 69 61 6c 69 7a 69 6e 67 20 45 53 50     Initializing ESP
     5d5:	20 6d 6f 64 75 6c 65 00                              module.

000005dd <_ZZN13WiFiEspClient4stopEvE3__c>:
     5dd:	44 69 73 63 6f 6e 6e 65 63 74 69 6e 67 20 00        Disconnecting .

000005ec <_ZZN13WiFiEspClient5writeEPKhjE3__c>:
     5ec:	46 61 69 6c 65 64 20 74 6f 20 77 72 69 74 65 20     Failed to write 
     5fc:	74 6f 20 73 6f 63 6b 65 74 00                       to socket.

00000606 <_ZZN13WiFiEspClient7connectEPKcjhE3__c_0>:
     606:	4e 6f 20 73 6f 63 6b 65 74 20 61 76 61 69 6c 61     No socket availa
     616:	62 6c 65 00                                         ble.

0000061a <_ZZN13WiFiEspClient7connectEPKcjhE3__c>:
     61a:	43 6f 6e 6e 65 63 74 69 6e 67 20 74 6f 00           Connecting to.

00000628 <_ZZN13WiFiEspClient7connectE9IPAddressjE3__c>:
     628:	25 64 2e 25 64 2e 25 64 2e 25 64 00                 %d.%d.%d.%d.

00000634 <_ZZN6EspDrv9readUntilEiPKcbE3__c>:
     634:	3e 3e 3e 20 54 49 4d 45 4f 55 54 20 3e 3e 3e 00     >>> TIMEOUT >>>.

00000644 <_ZZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_PciE3__c_3>:
     644:	4e 6f 20 74 61 67 20 66 6f 75 6e 64 00              No tag found.

00000651 <_ZZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_PciE3__c_1>:
     651:	45 6e 64 20 74 61 67 20 6e 6f 74 20 66 6f 75 6e     End tag not foun
     661:	64 00                                               d.

00000663 <_ZZN6EspDrv8sendDataEhPKhjE3__c_2>:
     663:	44 61 74 61 20 70 61 63 6b 65 74 20 73 65 6e 64     Data packet send
     673:	20 65 72 72 6f 72 20 28 32 29 00                     error (2).

0000067e <_ZZN6EspDrv8sendDataEhPKhjE3__c_1>:
     67e:	44 61 74 61 20 70 61 63 6b 65 74 20 73 65 6e 64     Data packet send
     68e:	20 65 72 72 6f 72 20 28 31 29 00                     error (1).

00000699 <_ZZN6EspDrv8sendDataEhPKhjE3__c_0>:
     699:	41 54 2b 43 49 50 53 45 4e 44 3d 25 64 2c 25 75     AT+CIPSEND=%d,%u
	...

000006aa <_ZZN6EspDrv7getDataEhPhbPbE3__c_1>:
     6aa:	54 49 4d 45 4f 55 54 3a 00                          TIMEOUT:.

000006b3 <_ZZN6EspDrv7getDataEhPhbPbE3__c>:
     6b3:	54 61 67 20 43 4c 4f 53 45 44 20 6e 6f 74 20 66     Tag CLOSED not f
     6c3:	6f 75 6e 64 00                                      ound.

000006c8 <_ZZN6EspDrv10stopClientEhE3__c_0>:
     6c8:	41 54 2b 43 49 50 43 4c 4f 53 45 3d 25 64 00        AT+CIPCLOSE=%d.

000006d7 <_ZZN6EspDrv11startClientEPKcjhhE3__c_3>:
     6d7:	41 54 2b 43 49 50 53 54 41 52 54 3d 25 64 2c 22     AT+CIPSTART=%d,"
     6e7:	55 44 50 22 2c 22 25 73 22 2c 30 2c 25 75 2c 32     UDP","%s",0,%u,2
	...

000006f8 <_ZZN6EspDrv11startClientEPKcjhhE3__c_2>:
     6f8:	41 54 2b 43 49 50 53 54 41 52 54 3d 25 64 2c 22     AT+CIPSTART=%d,"
     708:	53 53 4c 22 2c 22 25 73 22 2c 25 75 00              SSL","%s",%u.

00000715 <_ZZN6EspDrv11startClientEPKcjhhE3__c_1>:
     715:	41 54 2b 43 49 50 53 53 4c 53 49 5a 45 3d 34 30     AT+CIPSSLSIZE=40
     725:	39 36 00                                            96.

00000728 <_ZZN6EspDrv11startClientEPKcjhhE3__c_0>:
     728:	41 54 2b 43 49 50 53 54 41 52 54 3d 25 64 2c 22     AT+CIPSTART=%d,"
     738:	54 43 50 22 2c 22 25 73 22 2c 25 75 00              TCP","%s",%u.

00000745 <_ZZN6EspDrv12getFwVersionEvE3__c_0>:
     745:	41 54 2b 47 4d 52 00                                AT+GMR.

0000074c <_ZZN6EspDrv12getFwVersionEvE3__c_1>:
     74c:	53 44 4b 20 76 65 72 73 69 6f 6e 3a 00              SDK version:.

00000759 <_ZZN6EspDrv12getFwVersionEvE3__c_2>:
     759:	0d 0a 00                                            ...

0000075c <_ZZN6EspDrv14getClientStateEhE3__c_1>:
     75c:	41 54 2b 43 49 50 53 54 41 54 55 53 00              AT+CIPSTATUS.

00000769 <_ZZN6EspDrv14getClientStateEhE3__c_0>:
     769:	2b 43 49 50 53 54 41 54 55 53 3a 25 64 2c 00        +CIPSTATUS:%d,.

00000778 <_ZZN6EspDrv19getConnectionStatusEvE3__c_0>:
     778:	41 54 2b 43 49 50 53 54 41 54 55 53 00              AT+CIPSTATUS.

00000785 <_ZZN6EspDrv19getConnectionStatusEvE3__c_1>:
     785:	53 54 41 54 55 53 3a 00                             STATUS:.

0000078d <_ZZN6EspDrv19getConnectionStatusEvE3__c_2>:
     78d:	0d 0a 00                                            ...

00000790 <_ZZN6EspDrv11wifiConnectEPKcS1_E3__c_2>:
     790:	46 61 69 6c 65 64 20 63 6f 6e 6e 65 63 74 69 6e     Failed connectin
     7a0:	67 20 74 6f 00                                      g to.

000007a5 <_ZZN6EspDrv11wifiConnectEPKcS1_E3__c_1>:
     7a5:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 00              Connected to.

000007b2 <_ZZN6EspDrv11wifiConnectEPKcS1_E3__c_0>:
     7b2:	41 54 2b 43 57 4a 41 50 5f 43 55 52 3d 22 25 73     AT+CWJAP_CUR="%s
     7c2:	22 2c 22 25 73 22 00                                ","%s".

000007c9 <_ZZN6EspDrv5resetEvE3__c_6>:
     7c9:	41 54 2b 43 57 44 48 43 50 3d 31 2c 31 00           AT+CWDHCP=1,1.

000007d7 <_ZZN6EspDrv5resetEvE3__c_5>:
     7d7:	41 54 2b 43 57 41 55 54 4f 43 4f 4e 4e 3d 30 00     AT+CWAUTOCONN=0.

000007e7 <_ZZN6EspDrv5resetEvE3__c_4>:
     7e7:	41 54 2b 43 49 50 44 49 4e 46 4f 3d 31 00           AT+CIPDINFO=1.

000007f5 <_ZZN6EspDrv5resetEvE3__c_3>:
     7f5:	41 54 2b 43 49 50 4d 55 58 3d 31 00                 AT+CIPMUX=1.

00000801 <_ZZN6EspDrv5resetEvE3__c_2>:
     801:	41 54 2b 43 57 4d 4f 44 45 3d 31 00                 AT+CWMODE=1.

0000080d <_ZZN6EspDrv5resetEvE3__c_1>:
     80d:	41 54 45 30 00                                      ATE0.

00000812 <_ZZN6EspDrv5resetEvE3__c_0>:
     812:	41 54 2b 52 53 54 00                                AT+RST.

00000819 <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_3>:
     819:	49 6e 69 74 69 6c 69 7a 61 74 69 6f 6e 20 73 75     Initilization su
     829:	63 63 65 73 73 66 75 6c 20 2d 00                    ccessful -.

00000834 <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_2>:
     834:	57 61 72 6e 69 6e 67 3a 20 55 6e 73 75 70 70 6f     Warning: Unsuppo
     844:	72 74 65 64 20 66 69 72 6d 77 61 72 65 00           rted firmware.

00000852 <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_1>:
     852:	43 61 6e 6e 6f 74 20 69 6e 69 74 69 61 6c 69 7a     Cannot initializ
     862:	65 20 45 53 50 20 6d 6f 64 75 6c 65 00              e ESP module.

0000086f <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_0>:
     86f:	41 54 00                                            AT.

00000872 <__ctors_start>:
     872:	83 0b       	sbc	r24, r19
     874:	c4 0d       	add	r28, r4
     876:	14 0e       	add	r1, r20
     878:	af 11       	cpse	r26, r15
     87a:	44 12       	cpse	r4, r20
     87c:	18 23       	and	r17, r24
     87e:	66 23       	and	r22, r22
     880:	6c 25       	eor	r22, r12
     882:	dd 2b       	or	r29, r29

00000884 <__ctors_end>:
     884:	d0 0d       	add	r29, r0
     886:	ec 2b       	or	r30, r28

00000888 <__dtors_end>:
     888:	11 24       	eor	r1, r1
     88a:	1f be       	out	0x3f, r1	; 63
     88c:	cf ef       	ldi	r28, 0xFF	; 255
     88e:	d1 e2       	ldi	r29, 0x21	; 33
     890:	de bf       	out	0x3e, r29	; 62
     892:	cd bf       	out	0x3d, r28	; 61
     894:	00 e0       	ldi	r16, 0x00	; 0
     896:	0c bf       	out	0x3c, r16	; 60

00000898 <__do_copy_data>:
     898:	14 e0       	ldi	r17, 0x04	; 4
     89a:	a0 e0       	ldi	r26, 0x00	; 0
     89c:	b2 e0       	ldi	r27, 0x02	; 2
     89e:	e8 e1       	ldi	r30, 0x18	; 24
     8a0:	ff e6       	ldi	r31, 0x6F	; 111
     8a2:	00 e0       	ldi	r16, 0x00	; 0
     8a4:	0b bf       	out	0x3b, r16	; 59
     8a6:	02 c0       	rjmp	.+4      	; 0x8ac <__do_copy_data+0x14>
     8a8:	07 90       	elpm	r0, Z+
     8aa:	0d 92       	st	X+, r0
     8ac:	a8 3f       	cpi	r26, 0xF8	; 248
     8ae:	b1 07       	cpc	r27, r17
     8b0:	d9 f7       	brne	.-10     	; 0x8a8 <__do_copy_data+0x10>

000008b2 <__do_clear_bss>:
     8b2:	26 e0       	ldi	r18, 0x06	; 6
     8b4:	a8 ef       	ldi	r26, 0xF8	; 248
     8b6:	b4 e0       	ldi	r27, 0x04	; 4
     8b8:	01 c0       	rjmp	.+2      	; 0x8bc <.do_clear_bss_start>

000008ba <.do_clear_bss_loop>:
     8ba:	1d 92       	st	X+, r1

000008bc <.do_clear_bss_start>:
     8bc:	a9 39       	cpi	r26, 0x99	; 153
     8be:	b2 07       	cpc	r27, r18
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <.do_clear_bss_loop>

000008c2 <__do_global_ctors>:
     8c2:	14 e0       	ldi	r17, 0x04	; 4
     8c4:	c2 e4       	ldi	r28, 0x42	; 66
     8c6:	d4 e0       	ldi	r29, 0x04	; 4
     8c8:	00 e0       	ldi	r16, 0x00	; 0
     8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <__do_global_ctors+0x16>
     8cc:	21 97       	sbiw	r28, 0x01	; 1
     8ce:	01 09       	sbc	r16, r1
     8d0:	80 2f       	mov	r24, r16
     8d2:	fe 01       	movw	r30, r28
     8d4:	0e 94 bd 2e 	call	0x5d7a	; 0x5d7a <__tablejump2__>
     8d8:	c9 33       	cpi	r28, 0x39	; 57
     8da:	d1 07       	cpc	r29, r17
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	08 07       	cpc	r16, r24
     8e0:	a9 f7       	brne	.-22     	; 0x8cc <__do_global_ctors+0xa>
     8e2:	0e 94 c7 12 	call	0x258e	; 0x258e <main>
     8e6:	0c 94 7a 37 	jmp	0x6ef4	; 0x6ef4 <__do_global_dtors>

000008ea <__bad_interrupt>:
     8ea:	8a cb       	rjmp	.-2284   	; 0x0 <__vectors>

000008ec <_ZN9MaxMatrixC1Ehhhh>:


#include "Arduino.h"
#include "MaxMatrix.h"

MaxMatrix::MaxMatrix(byte _data, byte _load, byte _clock, byte _num) 
     8ec:	0f 93       	push	r16
     8ee:	fc 01       	movw	r30, r24
{
	data = _data;
     8f0:	60 83       	st	Z, r22
	load = _load;
     8f2:	41 83       	std	Z+1, r20	; 0x01
	clock = _clock;
     8f4:	22 83       	std	Z+2, r18	; 0x02
	num = _num;
     8f6:	03 83       	std	Z+3, r16	; 0x03
     8f8:	dc 01       	movw	r26, r24
     8fa:	14 96       	adiw	r26, 0x04	; 4
     8fc:	ec 5a       	subi	r30, 0xAC	; 172
     8fe:	ff 4f       	sbci	r31, 0xFF	; 255
	for (int i=0; i<80; i++)
		buffer[i] = 0;
     900:	1d 92       	st	X+, r1
{
	data = _data;
	load = _load;
	clock = _clock;
	num = _num;
	for (int i=0; i<80; i++)
     902:	ae 17       	cp	r26, r30
     904:	bf 07       	cpc	r27, r31
     906:	e1 f7       	brne	.-8      	; 0x900 <_ZN9MaxMatrixC1Ehhhh+0x14>
		buffer[i] = 0;
}
     908:	0f 91       	pop	r16
     90a:	08 95       	ret

0000090c <_ZN9MaxMatrix10setCommandEhh>:
	for (int i=0; i<80; i++)
		buffer[i] = 0;
}

void MaxMatrix::setCommand(byte command, byte value)
{
     90c:	ef 92       	push	r14
     90e:	ff 92       	push	r15
     910:	0f 93       	push	r16
     912:	1f 93       	push	r17
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	ec 01       	movw	r28, r24
     91a:	e6 2e       	mov	r14, r22
     91c:	f4 2e       	mov	r15, r20
	digitalWrite(load, LOW);    
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	89 81       	ldd	r24, Y+1	; 0x01
     922:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	for (int i=0; i<num; i++) 
     926:	00 e0       	ldi	r16, 0x00	; 0
     928:	10 e0       	ldi	r17, 0x00	; 0
     92a:	8b 81       	ldd	r24, Y+3	; 0x03
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	08 17       	cp	r16, r24
     930:	19 07       	cpc	r17, r25
     932:	7c f4       	brge	.+30     	; 0x952 <_ZN9MaxMatrix10setCommandEhh+0x46>
	{
		shiftOut(data, clock, MSBFIRST, command);
     934:	2e 2d       	mov	r18, r14
     936:	41 e0       	ldi	r20, 0x01	; 1
     938:	6a 81       	ldd	r22, Y+2	; 0x02
     93a:	88 81       	ld	r24, Y
     93c:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
		shiftOut(data, clock, MSBFIRST, value);
     940:	2f 2d       	mov	r18, r15
     942:	41 e0       	ldi	r20, 0x01	; 1
     944:	6a 81       	ldd	r22, Y+2	; 0x02
     946:	88 81       	ld	r24, Y
     948:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
}

void MaxMatrix::setCommand(byte command, byte value)
{
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     94c:	0f 5f       	subi	r16, 0xFF	; 255
     94e:	1f 4f       	sbci	r17, 0xFF	; 255
     950:	ec cf       	rjmp	.-40     	; 0x92a <_ZN9MaxMatrix10setCommandEhh+0x1e>
	{
		shiftOut(data, clock, MSBFIRST, command);
		shiftOut(data, clock, MSBFIRST, value);
	}
	digitalWrite(load, LOW);
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	89 81       	ldd	r24, Y+1	; 0x01
     956:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	digitalWrite(load, HIGH);
     95a:	61 e0       	ldi	r22, 0x01	; 1
     95c:	89 81       	ldd	r24, Y+1	; 0x01
}
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	ff 90       	pop	r15
     968:	ef 90       	pop	r14
	{
		shiftOut(data, clock, MSBFIRST, command);
		shiftOut(data, clock, MSBFIRST, value);
	}
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
     96a:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <digitalWrite>

0000096e <_ZN9MaxMatrix12setIntensityEh>:
	
	setIntensity(0x0f);    // the first 0x0f is the value you can set
}

void MaxMatrix::setIntensity(byte intensity)
{
     96e:	46 2f       	mov	r20, r22
	setCommand(max7219_reg_intensity, intensity);
     970:	6a e0       	ldi	r22, 0x0A	; 10
     972:	cc cf       	rjmp	.-104    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>

00000974 <_ZN9MaxMatrix9setColumnEhh>:
	digitalWrite(load, HIGH);
}


void MaxMatrix::setColumn(byte col, byte value)
{
     974:	bf 92       	push	r11
     976:	cf 92       	push	r12
     978:	df 92       	push	r13
     97a:	ef 92       	push	r14
     97c:	ff 92       	push	r15
     97e:	0f 93       	push	r16
     980:	1f 93       	push	r17
     982:	cf 93       	push	r28
     984:	df 93       	push	r29
     986:	ec 01       	movw	r28, r24
     988:	f6 2e       	mov	r15, r22
     98a:	b4 2e       	mov	r11, r20
	int n = col / 8;
     98c:	c6 2e       	mov	r12, r22
     98e:	c6 94       	lsr	r12
     990:	c6 94       	lsr	r12
     992:	c6 94       	lsr	r12
     994:	d1 2c       	mov	r13, r1
     996:	86 2f       	mov	r24, r22
     998:	87 70       	andi	r24, 0x07	; 7
     99a:	e8 2e       	mov	r14, r24
	int c = col % 8;
	digitalWrite(load, LOW);    
     99c:	60 e0       	ldi	r22, 0x00	; 0
     99e:	89 81       	ldd	r24, Y+1	; 0x01
     9a0:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	for (int i=0; i<num; i++) 
     9a4:	00 e0       	ldi	r16, 0x00	; 0
     9a6:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i == n)
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     9a8:	e3 94       	inc	r14
void MaxMatrix::setColumn(byte col, byte value)
{
	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     9aa:	8b 81       	ldd	r24, Y+3	; 0x03
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	08 17       	cp	r16, r24
     9b0:	19 07       	cpc	r17, r25
     9b2:	d4 f4       	brge	.+52     	; 0x9e8 <_ZN9MaxMatrix9setColumnEhh+0x74>
	{
		if (i == n)
     9b4:	0c 15       	cp	r16, r12
     9b6:	1d 05       	cpc	r17, r13
     9b8:	41 f4       	brne	.+16     	; 0x9ca <_ZN9MaxMatrix9setColumnEhh+0x56>
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     9ba:	2e 2d       	mov	r18, r14
     9bc:	41 e0       	ldi	r20, 0x01	; 1
     9be:	6a 81       	ldd	r22, Y+2	; 0x02
     9c0:	88 81       	ld	r24, Y
     9c2:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
			shiftOut(data, clock, MSBFIRST, value);
     9c6:	2b 2d       	mov	r18, r11
     9c8:	07 c0       	rjmp	.+14     	; 0x9d8 <_ZN9MaxMatrix9setColumnEhh+0x64>
		}
		else
		{
			shiftOut(data, clock, MSBFIRST, 0);
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	41 e0       	ldi	r20, 0x01	; 1
     9ce:	6a 81       	ldd	r22, Y+2	; 0x02
     9d0:	88 81       	ld	r24, Y
     9d2:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
			shiftOut(data, clock, MSBFIRST, 0);
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	41 e0       	ldi	r20, 0x01	; 1
     9da:	6a 81       	ldd	r22, Y+2	; 0x02
     9dc:	88 81       	ld	r24, Y
     9de:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
void MaxMatrix::setColumn(byte col, byte value)
{
	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     9e2:	0f 5f       	subi	r16, 0xFF	; 255
     9e4:	1f 4f       	sbci	r17, 0xFF	; 255
     9e6:	e1 cf       	rjmp	.-62     	; 0x9aa <_ZN9MaxMatrix9setColumnEhh+0x36>
		{
			shiftOut(data, clock, MSBFIRST, 0);
			shiftOut(data, clock, MSBFIRST, 0);
		}
	}
	digitalWrite(load, LOW);
     9e8:	60 e0       	ldi	r22, 0x00	; 0
     9ea:	89 81       	ldd	r24, Y+1	; 0x01
     9ec:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	digitalWrite(load, HIGH);
     9f0:	61 e0       	ldi	r22, 0x01	; 1
     9f2:	89 81       	ldd	r24, Y+1	; 0x01
     9f4:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	
	buffer[col] = value;
     9f8:	cf 0d       	add	r28, r15
     9fa:	d1 1d       	adc	r29, r1
     9fc:	bc 82       	std	Y+4, r11	; 0x04
}
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	1f 91       	pop	r17
     a04:	0f 91       	pop	r16
     a06:	ff 90       	pop	r15
     a08:	ef 90       	pop	r14
     a0a:	df 90       	pop	r13
     a0c:	cf 90       	pop	r12
     a0e:	bf 90       	pop	r11
     a10:	08 95       	ret

00000a12 <_ZN9MaxMatrix12setColumnAllEhh>:

void MaxMatrix::setColumnAll(byte col, byte value)
{
     a12:	af 92       	push	r10
     a14:	bf 92       	push	r11
     a16:	cf 92       	push	r12
     a18:	df 92       	push	r13
     a1a:	ef 92       	push	r14
     a1c:	ff 92       	push	r15
     a1e:	0f 93       	push	r16
     a20:	1f 93       	push	r17
     a22:	cf 93       	push	r28
     a24:	df 93       	push	r29
     a26:	ec 01       	movw	r28, r24
     a28:	16 2f       	mov	r17, r22
     a2a:	04 2f       	mov	r16, r20
	digitalWrite(load, LOW);    
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	89 81       	ldd	r24, Y+1	; 0x01
     a30:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
     a34:	a1 2e       	mov	r10, r17
     a36:	b1 2c       	mov	r11, r1
     a38:	7e 01       	movw	r14, r28
	for (int i=0; i<num; i++) 
     a3a:	c1 2c       	mov	r12, r1
     a3c:	d1 2c       	mov	r13, r1
	{
		shiftOut(data, clock, MSBFIRST, col + 1);
     a3e:	1f 5f       	subi	r17, 0xFF	; 255
}

void MaxMatrix::setColumnAll(byte col, byte value)
{
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     a40:	8b 81       	ldd	r24, Y+3	; 0x03
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	c8 16       	cp	r12, r24
     a46:	d9 06       	cpc	r13, r25
     a48:	a4 f4       	brge	.+40     	; 0xa72 <_ZN9MaxMatrix12setColumnAllEhh+0x60>
	{
		shiftOut(data, clock, MSBFIRST, col + 1);
     a4a:	21 2f       	mov	r18, r17
     a4c:	41 e0       	ldi	r20, 0x01	; 1
     a4e:	6a 81       	ldd	r22, Y+2	; 0x02
     a50:	88 81       	ld	r24, Y
     a52:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
		shiftOut(data, clock, MSBFIRST, value);
     a56:	20 2f       	mov	r18, r16
     a58:	41 e0       	ldi	r20, 0x01	; 1
     a5a:	6a 81       	ldd	r22, Y+2	; 0x02
     a5c:	88 81       	ld	r24, Y
     a5e:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
		buffer[col * i] = value;
     a62:	f7 01       	movw	r30, r14
     a64:	04 83       	std	Z+4, r16	; 0x04
}

void MaxMatrix::setColumnAll(byte col, byte value)
{
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     a66:	ff ef       	ldi	r31, 0xFF	; 255
     a68:	cf 1a       	sub	r12, r31
     a6a:	df 0a       	sbc	r13, r31
     a6c:	ea 0c       	add	r14, r10
     a6e:	fb 1c       	adc	r15, r11
     a70:	e7 cf       	rjmp	.-50     	; 0xa40 <_ZN9MaxMatrix12setColumnAllEhh+0x2e>
	{
		shiftOut(data, clock, MSBFIRST, col + 1);
		shiftOut(data, clock, MSBFIRST, value);
		buffer[col * i] = value;
	}
	digitalWrite(load, LOW);
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	89 81       	ldd	r24, Y+1	; 0x01
     a76:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	digitalWrite(load, HIGH);
     a7a:	61 e0       	ldi	r22, 0x01	; 1
     a7c:	89 81       	ldd	r24, Y+1	; 0x01
}
     a7e:	df 91       	pop	r29
     a80:	cf 91       	pop	r28
     a82:	1f 91       	pop	r17
     a84:	0f 91       	pop	r16
     a86:	ff 90       	pop	r15
     a88:	ef 90       	pop	r14
     a8a:	df 90       	pop	r13
     a8c:	cf 90       	pop	r12
     a8e:	bf 90       	pop	r11
     a90:	af 90       	pop	r10
		shiftOut(data, clock, MSBFIRST, col + 1);
		shiftOut(data, clock, MSBFIRST, value);
		buffer[col * i] = value;
	}
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
     a92:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <digitalWrite>

00000a96 <_ZN9MaxMatrix5clearEv>:
{
	setCommand(max7219_reg_intensity, intensity);
}

void MaxMatrix::clear()
{
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	ec 01       	movw	r28, r24
     a9e:	10 e0       	ldi	r17, 0x00	; 0
	for (int i=0; i<8; i++) 
		setColumnAll(i,0);
     aa0:	40 e0       	ldi	r20, 0x00	; 0
     aa2:	61 2f       	mov	r22, r17
     aa4:	ce 01       	movw	r24, r28
     aa6:	b5 df       	rcall	.-150    	; 0xa12 <_ZN9MaxMatrix12setColumnAllEhh>
     aa8:	1f 5f       	subi	r17, 0xFF	; 255
	setCommand(max7219_reg_intensity, intensity);
}

void MaxMatrix::clear()
{
	for (int i=0; i<8; i++) 
     aaa:	18 30       	cpi	r17, 0x08	; 8
     aac:	c9 f7       	brne	.-14     	; 0xaa0 <_ZN9MaxMatrix5clearEv+0xa>
     aae:	fe 01       	movw	r30, r28
     ab0:	34 96       	adiw	r30, 0x04	; 4
     ab2:	cc 5a       	subi	r28, 0xAC	; 172
     ab4:	df 4f       	sbci	r29, 0xFF	; 255
		setColumnAll(i,0);
		
	for (int i=0; i<80; i++)
		buffer[i] = 0;
     ab6:	11 92       	st	Z+, r1
void MaxMatrix::clear()
{
	for (int i=0; i<8; i++) 
		setColumnAll(i,0);
		
	for (int i=0; i<80; i++)
     ab8:	ec 17       	cp	r30, r28
     aba:	fd 07       	cpc	r31, r29
     abc:	e1 f7       	brne	.-8      	; 0xab6 <_ZN9MaxMatrix5clearEv+0x20>
		buffer[i] = 0;
}
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	1f 91       	pop	r17
     ac4:	08 95       	ret

00000ac6 <_ZN9MaxMatrix4initEv>:
	for (int i=0; i<80; i++)
		buffer[i] = 0;
}

void MaxMatrix::init()
{
     ac6:	cf 93       	push	r28
     ac8:	df 93       	push	r29
     aca:	ec 01       	movw	r28, r24
	pinMode(data,  OUTPUT);
     acc:	61 e0       	ldi	r22, 0x01	; 1
     ace:	88 81       	ld	r24, Y
     ad0:	0e 94 90 17 	call	0x2f20	; 0x2f20 <pinMode>
	pinMode(clock, OUTPUT);
     ad4:	61 e0       	ldi	r22, 0x01	; 1
     ad6:	8a 81       	ldd	r24, Y+2	; 0x02
     ad8:	0e 94 90 17 	call	0x2f20	; 0x2f20 <pinMode>
	pinMode(load,  OUTPUT);
     adc:	61 e0       	ldi	r22, 0x01	; 1
     ade:	89 81       	ldd	r24, Y+1	; 0x01
     ae0:	0e 94 90 17 	call	0x2f20	; 0x2f20 <pinMode>
	digitalWrite(clock, HIGH); 
     ae4:	61 e0       	ldi	r22, 0x01	; 1
     ae6:	8a 81       	ldd	r24, Y+2	; 0x02
     ae8:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>

	setCommand(max7219_reg_scanLimit, 0x07);      
     aec:	47 e0       	ldi	r20, 0x07	; 7
     aee:	6b e0       	ldi	r22, 0x0B	; 11
     af0:	ce 01       	movw	r24, r28
     af2:	0c df       	rcall	.-488    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
	setCommand(max7219_reg_decodeMode, 0x00);  // using an led matrix (not digits)
     af4:	40 e0       	ldi	r20, 0x00	; 0
     af6:	69 e0       	ldi	r22, 0x09	; 9
     af8:	ce 01       	movw	r24, r28
     afa:	08 df       	rcall	.-496    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
	setCommand(max7219_reg_shutdown, 0x01);    // not in shutdown mode
     afc:	41 e0       	ldi	r20, 0x01	; 1
     afe:	6c e0       	ldi	r22, 0x0C	; 12
     b00:	ce 01       	movw	r24, r28
     b02:	04 df       	rcall	.-504    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
	setCommand(max7219_reg_displayTest, 0x00); // no display test
     b04:	40 e0       	ldi	r20, 0x00	; 0
     b06:	6f e0       	ldi	r22, 0x0F	; 15
     b08:	ce 01       	movw	r24, r28
	
	// empty registers, turn all LEDs off
	clear();
     b0a:	00 df       	rcall	.-512    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
     b0c:	ce 01       	movw	r24, r28
	
	setIntensity(0x0f);    // the first 0x0f is the value you can set
     b0e:	c3 df       	rcall	.-122    	; 0xa96 <_ZN9MaxMatrix5clearEv>
     b10:	6f e0       	ldi	r22, 0x0F	; 15
}
     b12:	ce 01       	movw	r24, r28
     b14:	df 91       	pop	r29
	setCommand(max7219_reg_displayTest, 0x00); // no display test
	
	// empty registers, turn all LEDs off
	clear();
	
	setIntensity(0x0f);    // the first 0x0f is the value you can set
     b16:	cf 91       	pop	r28
     b18:	2a cf       	rjmp	.-428    	; 0x96e <_ZN9MaxMatrix12setIntensityEh>

00000b1a <_ZN9MaxMatrix6setDotEhhh>:
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
}

void MaxMatrix::setDot(byte col, byte row, byte value)
{
     b1a:	af 92       	push	r10
     b1c:	bf 92       	push	r11
     b1e:	cf 92       	push	r12
     b20:	df 92       	push	r13
     b22:	ef 92       	push	r14
     b24:	ff 92       	push	r15
     b26:	1f 93       	push	r17
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	ec 01       	movw	r28, r24
     b2e:	e6 2e       	mov	r14, r22
     b30:	f1 2c       	mov	r15, r1
    bitWrite(buffer[col], row, value);
     b32:	fc 01       	movw	r30, r24
     b34:	ee 0d       	add	r30, r14
     b36:	ff 1d       	adc	r31, r15
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	a0 e0       	ldi	r26, 0x00	; 0
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	04 c0       	rjmp	.+8      	; 0xb4a <_ZN9MaxMatrix6setDotEhhh+0x30>
     b42:	88 0f       	add	r24, r24
     b44:	99 1f       	adc	r25, r25
     b46:	aa 1f       	adc	r26, r26
     b48:	bb 1f       	adc	r27, r27
     b4a:	4a 95       	dec	r20
     b4c:	d2 f7       	brpl	.-12     	; 0xb42 <_ZN9MaxMatrix6setDotEhhh+0x28>
     b4e:	22 23       	and	r18, r18
     b50:	19 f0       	breq	.+6      	; 0xb58 <_ZN9MaxMatrix6setDotEhhh+0x3e>
     b52:	24 81       	ldd	r18, Z+4	; 0x04
     b54:	82 2b       	or	r24, r18
     b56:	03 c0       	rjmp	.+6      	; 0xb5e <_ZN9MaxMatrix6setDotEhhh+0x44>
     b58:	80 95       	com	r24
     b5a:	94 81       	ldd	r25, Z+4	; 0x04
     b5c:	89 23       	and	r24, r25
     b5e:	84 83       	std	Z+4, r24	; 0x04

	int n = col / 8;
     b60:	a6 2e       	mov	r10, r22
     b62:	a6 94       	lsr	r10
     b64:	a6 94       	lsr	r10
     b66:	a6 94       	lsr	r10
     b68:	b1 2c       	mov	r11, r1
     b6a:	16 2f       	mov	r17, r22
     b6c:	17 70       	andi	r17, 0x07	; 7
	int c = col % 8;
	digitalWrite(load, LOW);    
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	89 81       	ldd	r24, Y+1	; 0x01
     b72:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	for (int i=0; i<num; i++) 
     b76:	c1 2c       	mov	r12, r1
     b78:	d1 2c       	mov	r13, r1
	{
		if (i == n)
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     b7a:	1f 5f       	subi	r17, 0xFF	; 255
			shiftOut(data, clock, MSBFIRST, buffer[col]);
     b7c:	ec 0e       	add	r14, r28
     b7e:	fd 1e       	adc	r15, r29
     b80:	84 e0       	ldi	r24, 0x04	; 4
     b82:	e8 0e       	add	r14, r24
     b84:	f1 1c       	adc	r15, r1
    bitWrite(buffer[col], row, value);

	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     b86:	8b 81       	ldd	r24, Y+3	; 0x03
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	c8 16       	cp	r12, r24
     b8c:	d9 06       	cpc	r13, r25
     b8e:	e4 f4       	brge	.+56     	; 0xbc8 <_ZN9MaxMatrix6setDotEhhh+0xae>
	{
		if (i == n)
     b90:	ca 14       	cp	r12, r10
     b92:	db 04       	cpc	r13, r11
     b94:	49 f4       	brne	.+18     	; 0xba8 <_ZN9MaxMatrix6setDotEhhh+0x8e>
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     b96:	21 2f       	mov	r18, r17
     b98:	41 e0       	ldi	r20, 0x01	; 1
     b9a:	6a 81       	ldd	r22, Y+2	; 0x02
     b9c:	88 81       	ld	r24, Y
     b9e:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
			shiftOut(data, clock, MSBFIRST, buffer[col]);
     ba2:	f7 01       	movw	r30, r14
     ba4:	20 81       	ld	r18, Z
     ba6:	07 c0       	rjmp	.+14     	; 0xbb6 <_ZN9MaxMatrix6setDotEhhh+0x9c>
		}
		else
		{
			shiftOut(data, clock, MSBFIRST, 0);
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	41 e0       	ldi	r20, 0x01	; 1
     bac:	6a 81       	ldd	r22, Y+2	; 0x02
     bae:	88 81       	ld	r24, Y
     bb0:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
			shiftOut(data, clock, MSBFIRST, 0);
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	41 e0       	ldi	r20, 0x01	; 1
     bb8:	6a 81       	ldd	r22, Y+2	; 0x02
     bba:	88 81       	ld	r24, Y
     bbc:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
    bitWrite(buffer[col], row, value);

	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     bc0:	ff ef       	ldi	r31, 0xFF	; 255
     bc2:	cf 1a       	sub	r12, r31
     bc4:	df 0a       	sbc	r13, r31
     bc6:	df cf       	rjmp	.-66     	; 0xb86 <_ZN9MaxMatrix6setDotEhhh+0x6c>
		{
			shiftOut(data, clock, MSBFIRST, 0);
			shiftOut(data, clock, MSBFIRST, 0);
		}
	}
	digitalWrite(load, LOW);
     bc8:	60 e0       	ldi	r22, 0x00	; 0
     bca:	89 81       	ldd	r24, Y+1	; 0x01
     bcc:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
	digitalWrite(load, HIGH);
     bd0:	61 e0       	ldi	r22, 0x01	; 1
     bd2:	89 81       	ldd	r24, Y+1	; 0x01
}
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	ff 90       	pop	r15
     bdc:	ef 90       	pop	r14
     bde:	df 90       	pop	r13
     be0:	cf 90       	pop	r12
     be2:	bf 90       	pop	r11
     be4:	af 90       	pop	r10
			shiftOut(data, clock, MSBFIRST, 0);
			shiftOut(data, clock, MSBFIRST, 0);
		}
	}
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
     be6:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <digitalWrite>

00000bea <_ZN9MaxMatrix11writeSpriteEiiPKh>:
}

void MaxMatrix::writeSprite(int x, int y, const byte* sprite)
{
     bea:	2f 92       	push	r2
     bec:	3f 92       	push	r3
     bee:	4f 92       	push	r4
     bf0:	5f 92       	push	r5
     bf2:	6f 92       	push	r6
     bf4:	7f 92       	push	r7
     bf6:	8f 92       	push	r8
     bf8:	9f 92       	push	r9
     bfa:	af 92       	push	r10
     bfc:	bf 92       	push	r11
     bfe:	cf 92       	push	r12
     c00:	df 92       	push	r13
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	4c 01       	movw	r8, r24
     c10:	3a 01       	movw	r6, r20
     c12:	89 01       	movw	r16, r18
	int w = sprite[0];
     c14:	f9 01       	movw	r30, r18
     c16:	20 80       	ld	r2, Z
     c18:	31 2c       	mov	r3, r1
	int h = sprite[1];
     c1a:	41 80       	ldd	r4, Z+1	; 0x01
     c1c:	51 2c       	mov	r5, r1
     c1e:	eb 01       	movw	r28, r22
	
	if (h == 8 && y == 0)
     c20:	79 01       	movw	r14, r18
     c22:	f8 e0       	ldi	r31, 0x08	; 8
     c24:	4f 16       	cp	r4, r31
     c26:	51 04       	cpc	r5, r1
     c28:	29 f5       	brne	.+74     	; 0xc74 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x8a>
     c2a:	45 2b       	or	r20, r21
     c2c:	19 f5       	brne	.+70     	; 0xc74 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x8a>
		for (int i=0; i<w; i++)
     c2e:	c7 01       	movw	r24, r14
     c30:	80 1b       	sub	r24, r16
     c32:	91 0b       	sbc	r25, r17
     c34:	82 15       	cp	r24, r2
     c36:	93 05       	cpc	r25, r3
     c38:	d4 f5       	brge	.+116    	; 0xcae <_ZN9MaxMatrix11writeSpriteEiiPKh+0xc4>
		{
			int c = x + i;
			if (c>=0 && c<80)
     c3a:	c0 35       	cpi	r28, 0x50	; 80
     c3c:	d1 05       	cpc	r29, r1
     c3e:	28 f4       	brcc	.+10     	; 0xc4a <_ZN9MaxMatrix11writeSpriteEiiPKh+0x60>
				setColumn(c, sprite[i+2]);
     c40:	f7 01       	movw	r30, r14
     c42:	42 81       	ldd	r20, Z+2	; 0x02
     c44:	6c 2f       	mov	r22, r28
     c46:	c4 01       	movw	r24, r8
     c48:	95 de       	rcall	.-726    	; 0x974 <_ZN9MaxMatrix9setColumnEhh>
     c4a:	21 96       	adiw	r28, 0x01	; 1
     c4c:	ff ef       	ldi	r31, 0xFF	; 255
     c4e:	ef 1a       	sub	r14, r31
     c50:	ff 0a       	sbc	r15, r31
{
	int w = sprite[0];
	int h = sprite[1];
	
	if (h == 8 && y == 0)
		for (int i=0; i<w; i++)
     c52:	ed cf       	rjmp	.-38     	; 0xc2e <_ZN9MaxMatrix11writeSpriteEiiPKh+0x44>
		for (int i=0; i<w; i++)
			for (int j=0; j<h; j++)
			{
				int c = x + i;
				int r = y + j;
				if (c>=0 && c<80 && r>=0 && r<8)
     c54:	c0 35       	cpi	r28, 0x50	; 80
     c56:	d1 05       	cpc	r29, r1
     c58:	b8 f0       	brcs	.+46     	; 0xc88 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x9e>
			if (c>=0 && c<80)
				setColumn(c, sprite[i+2]);
		}
	else
		for (int i=0; i<w; i++)
			for (int j=0; j<h; j++)
     c5a:	ff ef       	ldi	r31, 0xFF	; 255
     c5c:	af 1a       	sub	r10, r31
     c5e:	bf 0a       	sbc	r11, r31
     c60:	8f ef       	ldi	r24, 0xFF	; 255
     c62:	c8 1a       	sub	r12, r24
     c64:	d8 0a       	sbc	r13, r24
     c66:	a4 14       	cp	r10, r4
     c68:	b5 04       	cpc	r11, r5
     c6a:	a4 f3       	brlt	.-24     	; 0xc54 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x6a>
     c6c:	ef ef       	ldi	r30, 0xFF	; 255
     c6e:	ee 1a       	sub	r14, r30
     c70:	fe 0a       	sbc	r15, r30
     c72:	21 96       	adiw	r28, 0x01	; 1
			int c = x + i;
			if (c>=0 && c<80)
				setColumn(c, sprite[i+2]);
		}
	else
		for (int i=0; i<w; i++)
     c74:	c7 01       	movw	r24, r14
     c76:	80 1b       	sub	r24, r16
     c78:	91 0b       	sbc	r25, r17
     c7a:	82 15       	cp	r24, r2
     c7c:	93 05       	cpc	r25, r3
     c7e:	bc f4       	brge	.+46     	; 0xcae <_ZN9MaxMatrix11writeSpriteEiiPKh+0xc4>
     c80:	63 01       	movw	r12, r6
     c82:	a1 2c       	mov	r10, r1
     c84:	b1 2c       	mov	r11, r1
     c86:	ef cf       	rjmp	.-34     	; 0xc66 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x7c>
			for (int j=0; j<h; j++)
			{
				int c = x + i;
				int r = y + j;
				if (c>=0 && c<80 && r>=0 && r<8)
     c88:	88 e0       	ldi	r24, 0x08	; 8
     c8a:	c8 16       	cp	r12, r24
     c8c:	d1 04       	cpc	r13, r1
     c8e:	28 f7       	brcc	.-54     	; 0xc5a <_ZN9MaxMatrix11writeSpriteEiiPKh+0x70>
					setDot(c, r, bitRead(sprite[i+2], j));
     c90:	f7 01       	movw	r30, r14
     c92:	22 81       	ldd	r18, Z+2	; 0x02
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	0a 2c       	mov	r0, r10
     c98:	02 c0       	rjmp	.+4      	; 0xc9e <_ZN9MaxMatrix11writeSpriteEiiPKh+0xb4>
     c9a:	35 95       	asr	r19
     c9c:	27 95       	ror	r18
     c9e:	0a 94       	dec	r0
     ca0:	e2 f7       	brpl	.-8      	; 0xc9a <_ZN9MaxMatrix11writeSpriteEiiPKh+0xb0>
     ca2:	21 70       	andi	r18, 0x01	; 1
     ca4:	4c 2d       	mov	r20, r12
     ca6:	6c 2f       	mov	r22, r28
     ca8:	c4 01       	movw	r24, r8
     caa:	37 df       	rcall	.-402    	; 0xb1a <_ZN9MaxMatrix6setDotEhhh>
     cac:	d6 cf       	rjmp	.-84     	; 0xc5a <_ZN9MaxMatrix11writeSpriteEiiPKh+0x70>
			}
}
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	1f 91       	pop	r17
     cb4:	0f 91       	pop	r16
     cb6:	ff 90       	pop	r15
     cb8:	ef 90       	pop	r14
     cba:	df 90       	pop	r13
     cbc:	cf 90       	pop	r12
     cbe:	bf 90       	pop	r11
     cc0:	af 90       	pop	r10
     cc2:	9f 90       	pop	r9
     cc4:	8f 90       	pop	r8
     cc6:	7f 90       	pop	r7
     cc8:	6f 90       	pop	r6
     cca:	5f 90       	pop	r5
     ccc:	4f 90       	pop	r4
     cce:	3f 90       	pop	r3
     cd0:	2f 90       	pop	r2
     cd2:	08 95       	ret

00000cd4 <_ZN9MaxMatrix6reloadEv>:

void MaxMatrix::reload()
{
     cd4:	af 92       	push	r10
     cd6:	bf 92       	push	r11
     cd8:	cf 92       	push	r12
     cda:	df 92       	push	r13
     cdc:	ef 92       	push	r14
     cde:	ff 92       	push	r15
     ce0:	1f 93       	push	r17
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	ec 01       	movw	r28, r24
     ce8:	7c 01       	movw	r14, r24
     cea:	11 e0       	ldi	r17, 0x01	; 1
	for (int i=0; i<8; i++)
	{
		int col = i;
		digitalWrite(load, LOW);    
     cec:	60 e0       	ldi	r22, 0x00	; 0
     cee:	89 81       	ldd	r24, Y+1	; 0x01
     cf0:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
     cf4:	67 01       	movw	r12, r14
		for (int j=0; j<num; j++) 
     cf6:	a1 2c       	mov	r10, r1
     cf8:	b1 2c       	mov	r11, r1
     cfa:	8b 81       	ldd	r24, Y+3	; 0x03
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	a8 16       	cp	r10, r24
     d00:	b9 06       	cpc	r11, r25
     d02:	a4 f4       	brge	.+40     	; 0xd2c <_ZN9MaxMatrix6reloadEv+0x58>
		{
			shiftOut(data, clock, MSBFIRST, i + 1);
     d04:	21 2f       	mov	r18, r17
     d06:	41 e0       	ldi	r20, 0x01	; 1
     d08:	6a 81       	ldd	r22, Y+2	; 0x02
     d0a:	88 81       	ld	r24, Y
     d0c:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
			shiftOut(data, clock, MSBFIRST, buffer[col]);
     d10:	f6 01       	movw	r30, r12
     d12:	24 81       	ldd	r18, Z+4	; 0x04
     d14:	41 e0       	ldi	r20, 0x01	; 1
     d16:	6a 81       	ldd	r22, Y+2	; 0x02
     d18:	88 81       	ld	r24, Y
     d1a:	0e 94 fa 17 	call	0x2ff4	; 0x2ff4 <shiftOut>
{
	for (int i=0; i<8; i++)
	{
		int col = i;
		digitalWrite(load, LOW);    
		for (int j=0; j<num; j++) 
     d1e:	ff ef       	ldi	r31, 0xFF	; 255
     d20:	af 1a       	sub	r10, r31
     d22:	bf 0a       	sbc	r11, r31
     d24:	88 e0       	ldi	r24, 0x08	; 8
     d26:	c8 0e       	add	r12, r24
     d28:	d1 1c       	adc	r13, r1
     d2a:	e7 cf       	rjmp	.-50     	; 0xcfa <_ZN9MaxMatrix6reloadEv+0x26>
		{
			shiftOut(data, clock, MSBFIRST, i + 1);
			shiftOut(data, clock, MSBFIRST, buffer[col]);
			col += 8;
		}
		digitalWrite(load, LOW);
     d2c:	60 e0       	ldi	r22, 0x00	; 0
     d2e:	89 81       	ldd	r24, Y+1	; 0x01
     d30:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
		digitalWrite(load, HIGH);
     d34:	61 e0       	ldi	r22, 0x01	; 1
     d36:	89 81       	ldd	r24, Y+1	; 0x01
     d38:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <digitalWrite>
     d3c:	ef ef       	ldi	r30, 0xFF	; 255
     d3e:	ee 1a       	sub	r14, r30
     d40:	fe 0a       	sbc	r15, r30
     d42:	1f 5f       	subi	r17, 0xFF	; 255
			}
}

void MaxMatrix::reload()
{
	for (int i=0; i<8; i++)
     d44:	19 30       	cpi	r17, 0x09	; 9
     d46:	91 f6       	brne	.-92     	; 0xcec <_ZN9MaxMatrix6reloadEv+0x18>
			col += 8;
		}
		digitalWrite(load, LOW);
		digitalWrite(load, HIGH);
	}
}
     d48:	df 91       	pop	r29
     d4a:	cf 91       	pop	r28
     d4c:	1f 91       	pop	r17
     d4e:	ff 90       	pop	r15
     d50:	ef 90       	pop	r14
     d52:	df 90       	pop	r13
     d54:	cf 90       	pop	r12
     d56:	bf 90       	pop	r11
     d58:	af 90       	pop	r10
     d5a:	08 95       	ret

00000d5c <_ZN9MaxMatrix9shiftLeftEbb>:

void MaxMatrix::shiftLeft(bool rotate, bool fill_zero)
{
	byte old = buffer[0];
     d5c:	fc 01       	movw	r30, r24
     d5e:	24 81       	ldd	r18, Z+4	; 0x04
     d60:	34 96       	adiw	r30, 0x04	; 4
     d62:	dc 01       	movw	r26, r24
     d64:	ac 5a       	subi	r26, 0xAC	; 172
     d66:	bf 4f       	sbci	r27, 0xFF	; 255
	int i;
	for (i=0; i<80; i++)
		buffer[i] = buffer[i+1];
     d68:	31 81       	ldd	r19, Z+1	; 0x01
     d6a:	31 93       	st	Z+, r19

void MaxMatrix::shiftLeft(bool rotate, bool fill_zero)
{
	byte old = buffer[0];
	int i;
	for (i=0; i<80; i++)
     d6c:	ea 17       	cp	r30, r26
     d6e:	fb 07       	cpc	r31, r27
     d70:	d9 f7       	brne	.-10     	; 0xd68 <_ZN9MaxMatrix9shiftLeftEbb+0xc>
		buffer[i] = buffer[i+1];
	if (rotate) buffer[num*8-1] = old;
     d72:	66 23       	and	r22, r22
     d74:	49 f0       	breq	.+18     	; 0xd88 <_ZN9MaxMatrix9shiftLeftEbb+0x2c>
     d76:	fc 01       	movw	r30, r24
     d78:	33 81       	ldd	r19, Z+3	; 0x03
     d7a:	48 e0       	ldi	r20, 0x08	; 8
     d7c:	34 9f       	mul	r19, r20
     d7e:	e0 0d       	add	r30, r0
     d80:	f1 1d       	adc	r31, r1
     d82:	11 24       	eor	r1, r1
     d84:	23 83       	std	Z+3, r18	; 0x03
     d86:	0a c0       	rjmp	.+20     	; 0xd9c <_ZN9MaxMatrix9shiftLeftEbb+0x40>
	else if (fill_zero) buffer[num*8-1] = 0;
     d88:	44 23       	and	r20, r20
     d8a:	41 f0       	breq	.+16     	; 0xd9c <_ZN9MaxMatrix9shiftLeftEbb+0x40>
     d8c:	fc 01       	movw	r30, r24
     d8e:	23 81       	ldd	r18, Z+3	; 0x03
     d90:	38 e0       	ldi	r19, 0x08	; 8
     d92:	23 9f       	mul	r18, r19
     d94:	e0 0d       	add	r30, r0
     d96:	f1 1d       	adc	r31, r1
     d98:	11 24       	eor	r1, r1
     d9a:	13 82       	std	Z+3, r1	; 0x03
	
	reload();
     d9c:	9b cf       	rjmp	.-202    	; 0xcd4 <_ZN9MaxMatrix6reloadEv>

00000d9e <_ZN4MQTT15readTemperatureEv>:
     d9e:	86 e3       	ldi	r24, 0x36	; 54
     da0:	0e 94 4e 16 	call	0x2c9c	; 0x2c9c <analogRead>
     da4:	bc 01       	movw	r22, r24
     da6:	99 0f       	add	r25, r25
     da8:	88 0b       	sbc	r24, r24
     daa:	99 0b       	sbc	r25, r25
     dac:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__floatsisf>
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	40 ea       	ldi	r20, 0xA0	; 160
     db6:	50 e4       	ldi	r21, 0x40	; 64
     db8:	0e 94 79 0f 	call	0x1ef2	; 0x1ef2 <__mulsf3>
     dbc:	20 e0       	ldi	r18, 0x00	; 0
     dbe:	30 ec       	ldi	r19, 0xC0	; 192
     dc0:	4f e7       	ldi	r20, 0x7F	; 127
     dc2:	54 e4       	ldi	r21, 0x44	; 68
     dc4:	a0 d7       	rcall	.+3904   	; 0x1d06 <__divsf3>
     dc6:	2d ec       	ldi	r18, 0xCD	; 205
     dc8:	3c ec       	ldi	r19, 0xCC	; 204
     dca:	4c ec       	ldi	r20, 0xCC	; 204
     dcc:	5e e3       	ldi	r21, 0x3E	; 62
     dce:	36 d7       	rcall	.+3692   	; 0x1c3c <__subsf3>
     dd0:	2a e0       	ldi	r18, 0x0A	; 10
     dd2:	37 ed       	ldi	r19, 0xD7	; 215
     dd4:	43 ea       	ldi	r20, 0xA3	; 163
     dd6:	5c e3       	ldi	r21, 0x3C	; 60
     dd8:	96 c7       	rjmp	.+3884   	; 0x1d06 <__divsf3>
     dda:	08 95       	ret

00000ddc <_ZN4MQTT15sendTemperatureEv>:
     ddc:	8f 92       	push	r8
     dde:	9f 92       	push	r9
     de0:	af 92       	push	r10
     de2:	bf 92       	push	r11
     de4:	cf 92       	push	r12
     de6:	df 92       	push	r13
     de8:	ef 92       	push	r14
     dea:	ff 92       	push	r15
     dec:	0f 93       	push	r16
     dee:	1f 93       	push	r17
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	cd b7       	in	r28, 0x3d	; 61
     df6:	de b7       	in	r29, 0x3e	; 62
     df8:	62 97       	sbiw	r28, 0x12	; 18
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	f8 94       	cli
     dfe:	de bf       	out	0x3e, r29	; 62
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	cd bf       	out	0x3d, r28	; 61
     e04:	8c 01       	movw	r16, r24
     e06:	cd b6       	in	r12, 0x3d	; 61
     e08:	de b6       	in	r13, 0x3e	; 62
     e0a:	c9 df       	rcall	.-110    	; 0xd9e <_ZN4MQTT15readTemperatureEv>
     e0c:	4b 01       	movw	r8, r22
     e0e:	5c 01       	movw	r10, r24
     e10:	68 e3       	ldi	r22, 0x38	; 56
     e12:	72 e0       	ldi	r23, 0x02	; 2
     e14:	8d e1       	ldi	r24, 0x1D	; 29
     e16:	95 e0       	ldi	r25, 0x05	; 5
     e18:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
     e1c:	c8 01       	movw	r24, r16
     e1e:	bf df       	rcall	.-130    	; 0xd9e <_ZN4MQTT15readTemperatureEv>
     e20:	ab 01       	movw	r20, r22
     e22:	bc 01       	movw	r22, r24
     e24:	22 e0       	ldi	r18, 0x02	; 2
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	8d e1       	ldi	r24, 0x1D	; 29
     e2a:	95 e0       	ldi	r25, 0x05	; 5
     e2c:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_ZN5Print7printlnEdi>
     e30:	22 e0       	ldi	r18, 0x02	; 2
     e32:	b5 01       	movw	r22, r10
     e34:	a4 01       	movw	r20, r8
     e36:	ce 01       	movw	r24, r28
     e38:	07 96       	adiw	r24, 0x07	; 7
     e3a:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZN6StringC1Efh>
     e3e:	68 e3       	ldi	r22, 0x38	; 56
     e40:	72 e0       	ldi	r23, 0x02	; 2
     e42:	ce 01       	movw	r24, r28
     e44:	01 96       	adiw	r24, 0x01	; 1
     e46:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
     e4a:	be 01       	movw	r22, r28
     e4c:	69 5f       	subi	r22, 0xF9	; 249
     e4e:	7f 4f       	sbci	r23, 0xFF	; 255
     e50:	ce 01       	movw	r24, r28
     e52:	01 96       	adiw	r24, 0x01	; 1
     e54:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
     e58:	bc 01       	movw	r22, r24
     e5a:	ce 01       	movw	r24, r28
     e5c:	0d 96       	adiw	r24, 0x0d	; 13
     e5e:	0e 94 b7 18 	call	0x316e	; 0x316e <_ZN6StringC1ERKS_>
     e62:	ce 01       	movw	r24, r28
     e64:	01 96       	adiw	r24, 0x01	; 1
     e66:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
     e6a:	ce 01       	movw	r24, r28
     e6c:	07 96       	adiw	r24, 0x07	; 7
     e6e:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
     e72:	49 89       	ldd	r20, Y+17	; 0x11
     e74:	5a 89       	ldd	r21, Y+18	; 0x12
     e76:	4f 5f       	subi	r20, 0xFF	; 255
     e78:	5f 4f       	sbci	r21, 0xFF	; 255
     e7a:	8d b7       	in	r24, 0x3d	; 61
     e7c:	9e b7       	in	r25, 0x3e	; 62
     e7e:	84 1b       	sub	r24, r20
     e80:	95 0b       	sbc	r25, r21
     e82:	0f b6       	in	r0, 0x3f	; 63
     e84:	f8 94       	cli
     e86:	9e bf       	out	0x3e, r25	; 62
     e88:	0f be       	out	0x3f, r0	; 63
     e8a:	8d bf       	out	0x3d, r24	; 61
     e8c:	ed b7       	in	r30, 0x3d	; 61
     e8e:	fe b7       	in	r31, 0x3e	; 62
     e90:	31 96       	adiw	r30, 0x01	; 1
     e92:	7f 01       	movw	r14, r30
     e94:	20 e0       	ldi	r18, 0x00	; 0
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	bf 01       	movw	r22, r30
     e9a:	ce 01       	movw	r24, r28
     e9c:	0d 96       	adiw	r24, 0x0d	; 13
     e9e:	0e 94 b5 19 	call	0x336a	; 0x336a <_ZNK6String8getBytesEPhjj>
     ea2:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <_ZN4MQTT24TEMPERATURE_SENSOR_TOPICE>
     ea6:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <_ZN4MQTT24TEMPERATURE_SENSOR_TOPICE+0x1>
     eaa:	a7 01       	movw	r20, r14
     eac:	f8 01       	movw	r30, r16
     eae:	84 81       	ldd	r24, Z+4	; 0x04
     eb0:	95 81       	ldd	r25, Z+5	; 0x05
     eb2:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN12PubSubClient7publishEPKcS1_>
     eb6:	ce 01       	movw	r24, r28
     eb8:	0d 96       	adiw	r24, 0x0d	; 13
     eba:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
     ebe:	0f b6       	in	r0, 0x3f	; 63
     ec0:	f8 94       	cli
     ec2:	de be       	out	0x3e, r13	; 62
     ec4:	0f be       	out	0x3f, r0	; 63
     ec6:	cd be       	out	0x3d, r12	; 61
     ec8:	62 96       	adiw	r28, 0x12	; 18
     eca:	0f b6       	in	r0, 0x3f	; 63
     ecc:	f8 94       	cli
     ece:	de bf       	out	0x3e, r29	; 62
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	cd bf       	out	0x3d, r28	; 61
     ed4:	df 91       	pop	r29
     ed6:	cf 91       	pop	r28
     ed8:	1f 91       	pop	r17
     eda:	0f 91       	pop	r16
     edc:	ff 90       	pop	r15
     ede:	ef 90       	pop	r14
     ee0:	df 90       	pop	r13
     ee2:	cf 90       	pop	r12
     ee4:	bf 90       	pop	r11
     ee6:	af 90       	pop	r10
     ee8:	9f 90       	pop	r9
     eea:	8f 90       	pop	r8
     eec:	08 95       	ret

00000eee <_ZN4MQTT16readLuminiscenseEv>:
     eee:	87 e3       	ldi	r24, 0x37	; 55
     ef0:	0e 94 4e 16 	call	0x2c9c	; 0x2c9c <analogRead>
     ef4:	bc 01       	movw	r22, r24
     ef6:	99 0f       	add	r25, r25
     ef8:	88 0b       	sbc	r24, r24
     efa:	99 0b       	sbc	r25, r25
     efc:	6e d7       	rcall	.+3804   	; 0x1dda <__floatsisf>
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	40 ea       	ldi	r20, 0xA0	; 160
     f04:	50 e4       	ldi	r21, 0x40	; 64
     f06:	f5 d7       	rcall	.+4074   	; 0x1ef2 <__mulsf3>
     f08:	20 e0       	ldi	r18, 0x00	; 0
     f0a:	30 ec       	ldi	r19, 0xC0	; 192
     f0c:	4f e7       	ldi	r20, 0x7F	; 127
     f0e:	54 e4       	ldi	r21, 0x44	; 68
     f10:	fa d6       	rcall	.+3572   	; 0x1d06 <__divsf3>
     f12:	20 e0       	ldi	r18, 0x00	; 0
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	4a e7       	ldi	r20, 0x7A	; 122
     f18:	54 e4       	ldi	r21, 0x44	; 68
     f1a:	eb d7       	rcall	.+4054   	; 0x1ef2 <__mulsf3>
     f1c:	20 e0       	ldi	r18, 0x00	; 0
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	40 e0       	ldi	r20, 0x00	; 0
     f22:	5f e3       	ldi	r21, 0x3F	; 63
     f24:	8b d6       	rcall	.+3350   	; 0x1c3c <__subsf3>
     f26:	2a e9       	ldi	r18, 0x9A	; 154
     f28:	39 e9       	ldi	r19, 0x99	; 153
     f2a:	41 e7       	ldi	r20, 0x71	; 113
     f2c:	51 e4       	ldi	r21, 0x41	; 65
     f2e:	eb c6       	rjmp	.+3542   	; 0x1d06 <__divsf3>
     f30:	08 95       	ret

00000f32 <_ZN4MQTT14sendLampStatusEv>:
     f32:	cf 92       	push	r12
     f34:	df 92       	push	r13
     f36:	ef 92       	push	r14
     f38:	ff 92       	push	r15
     f3a:	0f 93       	push	r16
     f3c:	1f 93       	push	r17
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
     f42:	cd b7       	in	r28, 0x3d	; 61
     f44:	de b7       	in	r29, 0x3e	; 62
     f46:	62 97       	sbiw	r28, 0x12	; 18
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	f8 94       	cli
     f4c:	de bf       	out	0x3e, r29	; 62
     f4e:	0f be       	out	0x3f, r0	; 63
     f50:	cd bf       	out	0x3d, r28	; 61
     f52:	7c 01       	movw	r14, r24
     f54:	0d b7       	in	r16, 0x3d	; 61
     f56:	1e b7       	in	r17, 0x3e	; 62
     f58:	62 e5       	ldi	r22, 0x52	; 82
     f5a:	72 e0       	ldi	r23, 0x02	; 2
     f5c:	8d e1       	ldi	r24, 0x1D	; 29
     f5e:	95 e0       	ldi	r25, 0x05	; 5
     f60:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
     f64:	61 b1       	in	r22, 0x01	; 1
     f66:	61 70       	andi	r22, 0x01	; 1
     f68:	4a e0       	ldi	r20, 0x0A	; 10
     f6a:	50 e0       	ldi	r21, 0x00	; 0
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	8d e1       	ldi	r24, 0x1D	; 29
     f70:	95 e0       	ldi	r25, 0x05	; 5
     f72:	0e 94 3b 14 	call	0x2876	; 0x2876 <_ZN5Print7printlnEii>
     f76:	10 99       	sbic	0x02, 0	; 2
     f78:	03 c0       	rjmp	.+6      	; 0xf80 <_ZN4MQTT14sendLampStatusEv+0x4e>
     f7a:	6c e4       	ldi	r22, 0x4C	; 76
     f7c:	72 e0       	ldi	r23, 0x02	; 2
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <_ZN4MQTT14sendLampStatusEv+0x52>
     f80:	67 e4       	ldi	r22, 0x47	; 71
     f82:	72 e0       	ldi	r23, 0x02	; 2
     f84:	ce 01       	movw	r24, r28
     f86:	07 96       	adiw	r24, 0x07	; 7
     f88:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
     f8c:	62 e5       	ldi	r22, 0x52	; 82
     f8e:	72 e0       	ldi	r23, 0x02	; 2
     f90:	ce 01       	movw	r24, r28
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
     f98:	be 01       	movw	r22, r28
     f9a:	69 5f       	subi	r22, 0xF9	; 249
     f9c:	7f 4f       	sbci	r23, 0xFF	; 255
     f9e:	ce 01       	movw	r24, r28
     fa0:	01 96       	adiw	r24, 0x01	; 1
     fa2:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
     fa6:	bc 01       	movw	r22, r24
     fa8:	ce 01       	movw	r24, r28
     faa:	0d 96       	adiw	r24, 0x0d	; 13
     fac:	0e 94 b7 18 	call	0x316e	; 0x316e <_ZN6StringC1ERKS_>
     fb0:	ce 01       	movw	r24, r28
     fb2:	01 96       	adiw	r24, 0x01	; 1
     fb4:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
     fb8:	ce 01       	movw	r24, r28
     fba:	07 96       	adiw	r24, 0x07	; 7
     fbc:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
     fc0:	49 89       	ldd	r20, Y+17	; 0x11
     fc2:	5a 89       	ldd	r21, Y+18	; 0x12
     fc4:	4f 5f       	subi	r20, 0xFF	; 255
     fc6:	5f 4f       	sbci	r21, 0xFF	; 255
     fc8:	8d b7       	in	r24, 0x3d	; 61
     fca:	9e b7       	in	r25, 0x3e	; 62
     fcc:	84 1b       	sub	r24, r20
     fce:	95 0b       	sbc	r25, r21
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	f8 94       	cli
     fd4:	9e bf       	out	0x3e, r25	; 62
     fd6:	0f be       	out	0x3f, r0	; 63
     fd8:	8d bf       	out	0x3d, r24	; 61
     fda:	ed b7       	in	r30, 0x3d	; 61
     fdc:	fe b7       	in	r31, 0x3e	; 62
     fde:	31 96       	adiw	r30, 0x01	; 1
     fe0:	6f 01       	movw	r12, r30
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	bf 01       	movw	r22, r30
     fe8:	ce 01       	movw	r24, r28
     fea:	0d 96       	adiw	r24, 0x0d	; 13
     fec:	0e 94 b5 19 	call	0x336a	; 0x336a <_ZNK6String8getBytesEPhjj>
     ff0:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <_ZN4MQTT17LAMP_STATUC_TOPICE>
     ff4:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <_ZN4MQTT17LAMP_STATUC_TOPICE+0x1>
     ff8:	a6 01       	movw	r20, r12
     ffa:	f7 01       	movw	r30, r14
     ffc:	84 81       	ldd	r24, Z+4	; 0x04
     ffe:	95 81       	ldd	r25, Z+5	; 0x05
    1000:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN12PubSubClient7publishEPKcS1_>
    1004:	ce 01       	movw	r24, r28
    1006:	0d 96       	adiw	r24, 0x0d	; 13
    1008:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    100c:	0f b6       	in	r0, 0x3f	; 63
    100e:	f8 94       	cli
    1010:	1e bf       	out	0x3e, r17	; 62
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	0d bf       	out	0x3d, r16	; 61
    1016:	62 96       	adiw	r28, 0x12	; 18
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	f8 94       	cli
    101c:	de bf       	out	0x3e, r29	; 62
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	cd bf       	out	0x3d, r28	; 61
    1022:	df 91       	pop	r29
    1024:	cf 91       	pop	r28
    1026:	1f 91       	pop	r17
    1028:	0f 91       	pop	r16
    102a:	ff 90       	pop	r15
    102c:	ef 90       	pop	r14
    102e:	df 90       	pop	r13
    1030:	cf 90       	pop	r12
    1032:	08 95       	ret

00001034 <_ZN4MQTT16sendLuminiscenseEv>:
    1034:	cf 92       	push	r12
    1036:	df 92       	push	r13
    1038:	ef 92       	push	r14
    103a:	ff 92       	push	r15
    103c:	0f 93       	push	r16
    103e:	1f 93       	push	r17
    1040:	cf 93       	push	r28
    1042:	df 93       	push	r29
    1044:	cd b7       	in	r28, 0x3d	; 61
    1046:	de b7       	in	r29, 0x3e	; 62
    1048:	62 97       	sbiw	r28, 0x12	; 18
    104a:	0f b6       	in	r0, 0x3f	; 63
    104c:	f8 94       	cli
    104e:	de bf       	out	0x3e, r29	; 62
    1050:	0f be       	out	0x3f, r0	; 63
    1052:	cd bf       	out	0x3d, r28	; 61
    1054:	8c 01       	movw	r16, r24
    1056:	cd b6       	in	r12, 0x3d	; 61
    1058:	de b6       	in	r13, 0x3e	; 62
    105a:	60 e6       	ldi	r22, 0x60	; 96
    105c:	72 e0       	ldi	r23, 0x02	; 2
    105e:	8d e1       	ldi	r24, 0x1D	; 29
    1060:	95 e0       	ldi	r25, 0x05	; 5
    1062:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    1066:	c8 01       	movw	r24, r16
    1068:	42 df       	rcall	.-380    	; 0xeee <_ZN4MQTT16readLuminiscenseEv>
    106a:	ab 01       	movw	r20, r22
    106c:	bc 01       	movw	r22, r24
    106e:	22 e0       	ldi	r18, 0x02	; 2
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	8d e1       	ldi	r24, 0x1D	; 29
    1074:	95 e0       	ldi	r25, 0x05	; 5
    1076:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_ZN5Print7printlnEdi>
    107a:	c8 01       	movw	r24, r16
    107c:	38 df       	rcall	.-400    	; 0xeee <_ZN4MQTT16readLuminiscenseEv>
    107e:	ab 01       	movw	r20, r22
    1080:	bc 01       	movw	r22, r24
    1082:	22 e0       	ldi	r18, 0x02	; 2
    1084:	ce 01       	movw	r24, r28
    1086:	07 96       	adiw	r24, 0x07	; 7
    1088:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZN6StringC1Efh>
    108c:	60 e6       	ldi	r22, 0x60	; 96
    108e:	72 e0       	ldi	r23, 0x02	; 2
    1090:	ce 01       	movw	r24, r28
    1092:	01 96       	adiw	r24, 0x01	; 1
    1094:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    1098:	be 01       	movw	r22, r28
    109a:	69 5f       	subi	r22, 0xF9	; 249
    109c:	7f 4f       	sbci	r23, 0xFF	; 255
    109e:	ce 01       	movw	r24, r28
    10a0:	01 96       	adiw	r24, 0x01	; 1
    10a2:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
    10a6:	bc 01       	movw	r22, r24
    10a8:	ce 01       	movw	r24, r28
    10aa:	0d 96       	adiw	r24, 0x0d	; 13
    10ac:	0e 94 b7 18 	call	0x316e	; 0x316e <_ZN6StringC1ERKS_>
    10b0:	ce 01       	movw	r24, r28
    10b2:	01 96       	adiw	r24, 0x01	; 1
    10b4:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    10b8:	ce 01       	movw	r24, r28
    10ba:	07 96       	adiw	r24, 0x07	; 7
    10bc:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    10c0:	49 89       	ldd	r20, Y+17	; 0x11
    10c2:	5a 89       	ldd	r21, Y+18	; 0x12
    10c4:	4f 5f       	subi	r20, 0xFF	; 255
    10c6:	5f 4f       	sbci	r21, 0xFF	; 255
    10c8:	8d b7       	in	r24, 0x3d	; 61
    10ca:	9e b7       	in	r25, 0x3e	; 62
    10cc:	84 1b       	sub	r24, r20
    10ce:	95 0b       	sbc	r25, r21
    10d0:	0f b6       	in	r0, 0x3f	; 63
    10d2:	f8 94       	cli
    10d4:	9e bf       	out	0x3e, r25	; 62
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	8d bf       	out	0x3d, r24	; 61
    10da:	ed b7       	in	r30, 0x3d	; 61
    10dc:	fe b7       	in	r31, 0x3e	; 62
    10de:	31 96       	adiw	r30, 0x01	; 1
    10e0:	7f 01       	movw	r14, r30
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	bf 01       	movw	r22, r30
    10e8:	ce 01       	movw	r24, r28
    10ea:	0d 96       	adiw	r24, 0x0d	; 13
    10ec:	0e 94 b5 19 	call	0x336a	; 0x336a <_ZNK6String8getBytesEPhjj>
    10f0:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <_ZN4MQTT20ARDUINO_LUMINISCENSEE>
    10f4:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <_ZN4MQTT20ARDUINO_LUMINISCENSEE+0x1>
    10f8:	a7 01       	movw	r20, r14
    10fa:	f8 01       	movw	r30, r16
    10fc:	84 81       	ldd	r24, Z+4	; 0x04
    10fe:	95 81       	ldd	r25, Z+5	; 0x05
    1100:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN12PubSubClient7publishEPKcS1_>
    1104:	ce 01       	movw	r24, r28
    1106:	0d 96       	adiw	r24, 0x0d	; 13
    1108:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	f8 94       	cli
    1110:	de be       	out	0x3e, r13	; 62
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	cd be       	out	0x3d, r12	; 61
    1116:	62 96       	adiw	r28, 0x12	; 18
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	f8 94       	cli
    111c:	de bf       	out	0x3e, r29	; 62
    111e:	0f be       	out	0x3f, r0	; 63
    1120:	cd bf       	out	0x3d, r28	; 61
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	0f 91       	pop	r16
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	08 95       	ret

00001134 <_ZN4MQTT13sendPwmStatusEv>:
    1134:	cf 92       	push	r12
    1136:	df 92       	push	r13
    1138:	ef 92       	push	r14
    113a:	ff 92       	push	r15
    113c:	0f 93       	push	r16
    113e:	1f 93       	push	r17
    1140:	cf 93       	push	r28
    1142:	df 93       	push	r29
    1144:	cd b7       	in	r28, 0x3d	; 61
    1146:	de b7       	in	r29, 0x3e	; 62
    1148:	62 97       	sbiw	r28, 0x12	; 18
    114a:	0f b6       	in	r0, 0x3f	; 63
    114c:	f8 94       	cli
    114e:	de bf       	out	0x3e, r29	; 62
    1150:	0f be       	out	0x3f, r0	; 63
    1152:	cd bf       	out	0x3d, r28	; 61
    1154:	6c 01       	movw	r12, r24
    1156:	ed b6       	in	r14, 0x3d	; 61
    1158:	fe b6       	in	r15, 0x3e	; 62
    115a:	60 e7       	ldi	r22, 0x70	; 112
    115c:	72 e0       	ldi	r23, 0x02	; 2
    115e:	8d e1       	ldi	r24, 0x1D	; 29
    1160:	95 e0       	ldi	r25, 0x05	; 5
    1162:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    1166:	60 91 f9 04 	lds	r22, 0x04F9	; 0x8004f9 <_ZN4MQTT9pwm_valueE>
    116a:	70 91 fa 04 	lds	r23, 0x04FA	; 0x8004fa <_ZN4MQTT9pwm_valueE+0x1>
    116e:	4a e0       	ldi	r20, 0x0A	; 10
    1170:	50 e0       	ldi	r21, 0x00	; 0
    1172:	8d e1       	ldi	r24, 0x1D	; 29
    1174:	95 e0       	ldi	r25, 0x05	; 5
    1176:	0e 94 3b 14 	call	0x2876	; 0x2876 <_ZN5Print7printlnEii>
    117a:	60 91 f9 04 	lds	r22, 0x04F9	; 0x8004f9 <_ZN4MQTT9pwm_valueE>
    117e:	70 91 fa 04 	lds	r23, 0x04FA	; 0x8004fa <_ZN4MQTT9pwm_valueE+0x1>
    1182:	4a e0       	ldi	r20, 0x0A	; 10
    1184:	ce 01       	movw	r24, r28
    1186:	07 96       	adiw	r24, 0x07	; 7
    1188:	0e 94 d4 18 	call	0x31a8	; 0x31a8 <_ZN6StringC1Eih>
    118c:	6d e7       	ldi	r22, 0x7D	; 125
    118e:	72 e0       	ldi	r23, 0x02	; 2
    1190:	ce 01       	movw	r24, r28
    1192:	01 96       	adiw	r24, 0x01	; 1
    1194:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    1198:	be 01       	movw	r22, r28
    119a:	69 5f       	subi	r22, 0xF9	; 249
    119c:	7f 4f       	sbci	r23, 0xFF	; 255
    119e:	ce 01       	movw	r24, r28
    11a0:	01 96       	adiw	r24, 0x01	; 1
    11a2:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
    11a6:	bc 01       	movw	r22, r24
    11a8:	ce 01       	movw	r24, r28
    11aa:	0d 96       	adiw	r24, 0x0d	; 13
    11ac:	0e 94 b7 18 	call	0x316e	; 0x316e <_ZN6StringC1ERKS_>
    11b0:	ce 01       	movw	r24, r28
    11b2:	01 96       	adiw	r24, 0x01	; 1
    11b4:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    11b8:	ce 01       	movw	r24, r28
    11ba:	07 96       	adiw	r24, 0x07	; 7
    11bc:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    11c0:	49 89       	ldd	r20, Y+17	; 0x11
    11c2:	5a 89       	ldd	r21, Y+18	; 0x12
    11c4:	4f 5f       	subi	r20, 0xFF	; 255
    11c6:	5f 4f       	sbci	r21, 0xFF	; 255
    11c8:	8d b7       	in	r24, 0x3d	; 61
    11ca:	9e b7       	in	r25, 0x3e	; 62
    11cc:	84 1b       	sub	r24, r20
    11ce:	95 0b       	sbc	r25, r21
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	9e bf       	out	0x3e, r25	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	8d bf       	out	0x3d, r24	; 61
    11da:	0d b7       	in	r16, 0x3d	; 61
    11dc:	1e b7       	in	r17, 0x3e	; 62
    11de:	0f 5f       	subi	r16, 0xFF	; 255
    11e0:	1f 4f       	sbci	r17, 0xFF	; 255
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	b8 01       	movw	r22, r16
    11e8:	ce 01       	movw	r24, r28
    11ea:	0d 96       	adiw	r24, 0x0d	; 13
    11ec:	0e 94 b5 19 	call	0x336a	; 0x336a <_ZNK6String8getBytesEPhjj>
    11f0:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <_ZN4MQTT16PWM_STATUS_TOPICE>
    11f4:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <_ZN4MQTT16PWM_STATUS_TOPICE+0x1>
    11f8:	a8 01       	movw	r20, r16
    11fa:	f6 01       	movw	r30, r12
    11fc:	84 81       	ldd	r24, Z+4	; 0x04
    11fe:	95 81       	ldd	r25, Z+5	; 0x05
    1200:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN12PubSubClient7publishEPKcS1_>
    1204:	ce 01       	movw	r24, r28
    1206:	0d 96       	adiw	r24, 0x0d	; 13
    1208:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	fe be       	out	0x3e, r15	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	ed be       	out	0x3d, r14	; 61
    1216:	62 96       	adiw	r28, 0x12	; 18
    1218:	0f b6       	in	r0, 0x3f	; 63
    121a:	f8 94       	cli
    121c:	de bf       	out	0x3e, r29	; 62
    121e:	0f be       	out	0x3f, r0	; 63
    1220:	cd bf       	out	0x3d, r28	; 61
    1222:	df 91       	pop	r29
    1224:	cf 91       	pop	r28
    1226:	1f 91       	pop	r17
    1228:	0f 91       	pop	r16
    122a:	ff 90       	pop	r15
    122c:	ef 90       	pop	r14
    122e:	df 90       	pop	r13
    1230:	cf 90       	pop	r12
    1232:	08 95       	ret

00001234 <_ZN4MQTT20sendScrollTextStatusEv>:
    1234:	cf 92       	push	r12
    1236:	df 92       	push	r13
    1238:	ef 92       	push	r14
    123a:	ff 92       	push	r15
    123c:	0f 93       	push	r16
    123e:	1f 93       	push	r17
    1240:	cf 93       	push	r28
    1242:	df 93       	push	r29
    1244:	cd b7       	in	r28, 0x3d	; 61
    1246:	de b7       	in	r29, 0x3e	; 62
    1248:	62 97       	sbiw	r28, 0x12	; 18
    124a:	0f b6       	in	r0, 0x3f	; 63
    124c:	f8 94       	cli
    124e:	de bf       	out	0x3e, r29	; 62
    1250:	0f be       	out	0x3f, r0	; 63
    1252:	cd bf       	out	0x3d, r28	; 61
    1254:	7c 01       	movw	r14, r24
    1256:	0d b7       	in	r16, 0x3d	; 61
    1258:	1e b7       	in	r17, 0x3e	; 62
    125a:	64 e8       	ldi	r22, 0x84	; 132
    125c:	72 e0       	ldi	r23, 0x02	; 2
    125e:	8d e1       	ldi	r24, 0x1D	; 29
    1260:	95 e0       	ldi	r25, 0x05	; 5
    1262:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    1266:	60 91 11 05 	lds	r22, 0x0511	; 0x800511 <_ZN10ScrollText6enableE>
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	4a e0       	ldi	r20, 0x0A	; 10
    126e:	ce 01       	movw	r24, r28
    1270:	01 96       	adiw	r24, 0x01	; 1
    1272:	0e 94 d4 18 	call	0x31a8	; 0x31a8 <_ZN6StringC1Eih>
    1276:	6b e0       	ldi	r22, 0x0B	; 11
    1278:	75 e0       	ldi	r23, 0x05	; 5
    127a:	ce 01       	movw	r24, r28
    127c:	07 96       	adiw	r24, 0x07	; 7
    127e:	0e 94 b7 18 	call	0x316e	; 0x316e <_ZN6StringC1ERKS_>
    1282:	61 ee       	ldi	r22, 0xE1	; 225
    1284:	72 e0       	ldi	r23, 0x02	; 2
    1286:	ce 01       	movw	r24, r28
    1288:	07 96       	adiw	r24, 0x07	; 7
    128a:	0e 94 7f 19 	call	0x32fe	; 0x32fe <_ZplRK15StringSumHelperPKc>
    128e:	be 01       	movw	r22, r28
    1290:	6f 5f       	subi	r22, 0xFF	; 255
    1292:	7f 4f       	sbci	r23, 0xFF	; 255
    1294:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
    1298:	bc 01       	movw	r22, r24
    129a:	8d e1       	ldi	r24, 0x1D	; 29
    129c:	95 e0       	ldi	r25, 0x05	; 5
    129e:	0e 94 61 13 	call	0x26c2	; 0x26c2 <_ZN5Print7printlnERK6String>
    12a2:	ce 01       	movw	r24, r28
    12a4:	07 96       	adiw	r24, 0x07	; 7
    12a6:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    12aa:	ce 01       	movw	r24, r28
    12ac:	01 96       	adiw	r24, 0x01	; 1
    12ae:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    12b2:	80 91 11 05 	lds	r24, 0x0511	; 0x800511 <_ZN10ScrollText6enableE>
    12b6:	81 11       	cpse	r24, r1
    12b8:	03 c0       	rjmp	.+6      	; 0x12c0 <_ZN4MQTT20sendScrollTextStatusEv+0x8c>
    12ba:	6c e4       	ldi	r22, 0x4C	; 76
    12bc:	72 e0       	ldi	r23, 0x02	; 2
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <_ZN4MQTT20sendScrollTextStatusEv+0x90>
    12c0:	67 e4       	ldi	r22, 0x47	; 71
    12c2:	72 e0       	ldi	r23, 0x02	; 2
    12c4:	ce 01       	movw	r24, r28
    12c6:	01 96       	adiw	r24, 0x01	; 1
    12c8:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    12cc:	62 e9       	ldi	r22, 0x92	; 146
    12ce:	72 e0       	ldi	r23, 0x02	; 2
    12d0:	ce 01       	movw	r24, r28
    12d2:	07 96       	adiw	r24, 0x07	; 7
    12d4:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    12d8:	6b e0       	ldi	r22, 0x0B	; 11
    12da:	75 e0       	ldi	r23, 0x05	; 5
    12dc:	ce 01       	movw	r24, r28
    12de:	07 96       	adiw	r24, 0x07	; 7
    12e0:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
    12e4:	61 ee       	ldi	r22, 0xE1	; 225
    12e6:	72 e0       	ldi	r23, 0x02	; 2
    12e8:	0e 94 7f 19 	call	0x32fe	; 0x32fe <_ZplRK15StringSumHelperPKc>
    12ec:	be 01       	movw	r22, r28
    12ee:	6f 5f       	subi	r22, 0xFF	; 255
    12f0:	7f 4f       	sbci	r23, 0xFF	; 255
    12f2:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZplRK15StringSumHelperRK6String>
    12f6:	bc 01       	movw	r22, r24
    12f8:	ce 01       	movw	r24, r28
    12fa:	0d 96       	adiw	r24, 0x0d	; 13
    12fc:	0e 94 b7 18 	call	0x316e	; 0x316e <_ZN6StringC1ERKS_>
    1300:	ce 01       	movw	r24, r28
    1302:	07 96       	adiw	r24, 0x07	; 7
    1304:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1308:	ce 01       	movw	r24, r28
    130a:	01 96       	adiw	r24, 0x01	; 1
    130c:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1310:	49 89       	ldd	r20, Y+17	; 0x11
    1312:	5a 89       	ldd	r21, Y+18	; 0x12
    1314:	4f 5f       	subi	r20, 0xFF	; 255
    1316:	5f 4f       	sbci	r21, 0xFF	; 255
    1318:	8d b7       	in	r24, 0x3d	; 61
    131a:	9e b7       	in	r25, 0x3e	; 62
    131c:	84 1b       	sub	r24, r20
    131e:	95 0b       	sbc	r25, r21
    1320:	0f b6       	in	r0, 0x3f	; 63
    1322:	f8 94       	cli
    1324:	9e bf       	out	0x3e, r25	; 62
    1326:	0f be       	out	0x3f, r0	; 63
    1328:	8d bf       	out	0x3d, r24	; 61
    132a:	ed b7       	in	r30, 0x3d	; 61
    132c:	fe b7       	in	r31, 0x3e	; 62
    132e:	31 96       	adiw	r30, 0x01	; 1
    1330:	6f 01       	movw	r12, r30
    1332:	20 e0       	ldi	r18, 0x00	; 0
    1334:	30 e0       	ldi	r19, 0x00	; 0
    1336:	bf 01       	movw	r22, r30
    1338:	ce 01       	movw	r24, r28
    133a:	0d 96       	adiw	r24, 0x0d	; 13
    133c:	0e 94 b5 19 	call	0x336a	; 0x336a <_ZNK6String8getBytesEPhjj>
    1340:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <_ZN4MQTT23SCROLLTEXT_STATUS_TOPICE>
    1344:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <_ZN4MQTT23SCROLLTEXT_STATUS_TOPICE+0x1>
    1348:	a6 01       	movw	r20, r12
    134a:	f7 01       	movw	r30, r14
    134c:	84 81       	ldd	r24, Z+4	; 0x04
    134e:	95 81       	ldd	r25, Z+5	; 0x05
    1350:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN12PubSubClient7publishEPKcS1_>
    1354:	ce 01       	movw	r24, r28
    1356:	0d 96       	adiw	r24, 0x0d	; 13
    1358:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	f8 94       	cli
    1360:	1e bf       	out	0x3e, r17	; 62
    1362:	0f be       	out	0x3f, r0	; 63
    1364:	0d bf       	out	0x3d, r16	; 61
    1366:	62 96       	adiw	r28, 0x12	; 18
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	ff 90       	pop	r15
    137c:	ef 90       	pop	r14
    137e:	df 90       	pop	r13
    1380:	cf 90       	pop	r12
    1382:	08 95       	ret

00001384 <_ZN4MQTT13reconnectWifiEv>:
    1384:	cf 93       	push	r28
    1386:	df 93       	push	r29
    1388:	ec 01       	movw	r28, r24
    138a:	60 ea       	ldi	r22, 0xA0	; 160
    138c:	72 e0       	ldi	r23, 0x02	; 2
    138e:	8d e1       	ldi	r24, 0x1D	; 29
    1390:	95 e0       	ldi	r25, 0x05	; 5
    1392:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    1396:	8e 85       	ldd	r24, Y+14	; 0x0e
    1398:	9f 85       	ldd	r25, Y+15	; 0x0f
    139a:	01 97       	sbiw	r24, 0x01	; 1
    139c:	e9 f0       	breq	.+58     	; 0x13d8 <_ZN4MQTT13reconnectWifiEv+0x54>
    139e:	60 ec       	ldi	r22, 0xC0	; 192
    13a0:	72 e0       	ldi	r23, 0x02	; 2
    13a2:	8d e1       	ldi	r24, 0x1D	; 29
    13a4:	95 e0       	ldi	r25, 0x05	; 5
    13a6:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    13aa:	63 ee       	ldi	r22, 0xE3	; 227
    13ac:	72 e0       	ldi	r23, 0x02	; 2
    13ae:	8d e1       	ldi	r24, 0x1D	; 29
    13b0:	95 e0       	ldi	r25, 0x05	; 5
    13b2:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    13b6:	45 ef       	ldi	r20, 0xF5	; 245
    13b8:	52 e0       	ldi	r21, 0x02	; 2
    13ba:	63 ee       	ldi	r22, 0xE3	; 227
    13bc:	72 e0       	ldi	r23, 0x02	; 2
    13be:	86 e6       	ldi	r24, 0x66	; 102
    13c0:	96 e0       	ldi	r25, 0x06	; 6
    13c2:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN12WiFiEspClass5beginEPKcS1_>
    13c6:	9f 87       	std	Y+15, r25	; 0x0f
    13c8:	8e 87       	std	Y+14, r24	; 0x0e
    13ca:	64 ef       	ldi	r22, 0xF4	; 244
    13cc:	71 e0       	ldi	r23, 0x01	; 1
    13ce:	80 e0       	ldi	r24, 0x00	; 0
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    13d6:	df cf       	rjmp	.-66     	; 0x1396 <_ZN4MQTT13reconnectWifiEv+0x12>
    13d8:	60 e0       	ldi	r22, 0x00	; 0
    13da:	73 e0       	ldi	r23, 0x03	; 3
    13dc:	8d e1       	ldi	r24, 0x1D	; 29
    13de:	95 e0       	ldi	r25, 0x05	; 5
    13e0:	df 91       	pop	r29
    13e2:	cf 91       	pop	r28
    13e4:	0c 94 71 13 	jmp	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>

000013e8 <_ZN4MQTT8InitWiFiEv>:
    13e8:	cf 93       	push	r28
    13ea:	df 93       	push	r29
    13ec:	ec 01       	movw	r28, r24
    13ee:	26 e0       	ldi	r18, 0x06	; 6
    13f0:	40 e0       	ldi	r20, 0x00	; 0
    13f2:	5b e4       	ldi	r21, 0x4B	; 75
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	70 e0       	ldi	r23, 0x00	; 0
    13f8:	8a eb       	ldi	r24, 0xBA	; 186
    13fa:	95 e0       	ldi	r25, 0x05	; 5
    13fc:	e4 d6       	rcall	.+3528   	; 0x21c6 <_ZN14HardwareSerial5beginEmh>
    13fe:	8a eb       	ldi	r24, 0xBA	; 186
    1400:	95 e0       	ldi	r25, 0x05	; 5
    1402:	0e 94 23 23 	call	0x4646	; 0x4646 <_ZN12WiFiEspClass4initEP6Stream>
    1406:	86 e6       	ldi	r24, 0x66	; 102
    1408:	96 e0       	ldi	r25, 0x06	; 6
    140a:	0e 94 44 23 	call	0x4688	; 0x4688 <_ZN12WiFiEspClass6statusEv>
    140e:	8f 3f       	cpi	r24, 0xFF	; 255
    1410:	39 f4       	brne	.+14     	; 0x1420 <_ZN4MQTT8InitWiFiEv+0x38>
    1412:	68 e1       	ldi	r22, 0x18	; 24
    1414:	73 e0       	ldi	r23, 0x03	; 3
    1416:	8d e1       	ldi	r24, 0x1D	; 29
    1418:	95 e0       	ldi	r25, 0x05	; 5
    141a:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    141e:	ff cf       	rjmp	.-2      	; 0x141e <_ZN4MQTT8InitWiFiEv+0x36>
    1420:	ce 01       	movw	r24, r28
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	ae cf       	rjmp	.-164    	; 0x1384 <_ZN4MQTT13reconnectWifiEv>

00001428 <_ZN4MQTT15reconnectClientEv>:
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	df 93       	push	r29
    1430:	00 d0       	rcall	.+0      	; 0x1432 <_ZN4MQTT15reconnectClientEv+0xa>
    1432:	00 d0       	rcall	.+0      	; 0x1434 <_ZN4MQTT15reconnectClientEv+0xc>
    1434:	cd b7       	in	r28, 0x3d	; 61
    1436:	de b7       	in	r29, 0x3e	; 62
    1438:	8c 01       	movw	r16, r24
    143a:	f8 01       	movw	r30, r16
    143c:	84 81       	ldd	r24, Z+4	; 0x04
    143e:	95 81       	ldd	r25, Z+5	; 0x05
    1440:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    1444:	81 11       	cpse	r24, r1
    1446:	78 c0       	rjmp	.+240    	; 0x1538 <_ZN4MQTT15reconnectClientEv+0x110>
    1448:	68 e3       	ldi	r22, 0x38	; 56
    144a:	73 e0       	ldi	r23, 0x03	; 3
    144c:	8d e1       	ldi	r24, 0x1D	; 29
    144e:	95 e0       	ldi	r25, 0x05	; 5
    1450:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    1454:	f8 01       	movw	r30, r16
    1456:	60 81       	ld	r22, Z
    1458:	71 81       	ldd	r23, Z+1	; 0x01
    145a:	8d e1       	ldi	r24, 0x1D	; 29
    145c:	95 e0       	ldi	r25, 0x05	; 5
    145e:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    1462:	67 e4       	ldi	r22, 0x47	; 71
    1464:	73 e0       	ldi	r23, 0x03	; 3
    1466:	ce 01       	movw	r24, r28
    1468:	01 96       	adiw	r24, 0x01	; 1
    146a:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    146e:	69 81       	ldd	r22, Y+1	; 0x01
    1470:	7a 81       	ldd	r23, Y+2	; 0x02
    1472:	f8 01       	movw	r30, r16
    1474:	84 81       	ldd	r24, Z+4	; 0x04
    1476:	95 81       	ldd	r25, Z+5	; 0x05
    1478:	0e 94 34 20 	call	0x4068	; 0x4068 <_ZN12PubSubClient7connectEPKc>
    147c:	88 23       	and	r24, r24
    147e:	c9 f1       	breq	.+114    	; 0x14f2 <_ZN4MQTT15reconnectClientEv+0xca>
    1480:	6d e5       	ldi	r22, 0x5D	; 93
    1482:	73 e0       	ldi	r23, 0x03	; 3
    1484:	8d e1       	ldi	r24, 0x1D	; 29
    1486:	95 e0       	ldi	r25, 0x05	; 5
    1488:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    148c:	60 91 18 02 	lds	r22, 0x0218	; 0x800218 <_ZN4MQTT15ARDUINO_FAN_SUBE>
    1490:	70 91 19 02 	lds	r23, 0x0219	; 0x800219 <_ZN4MQTT15ARDUINO_FAN_SUBE+0x1>
    1494:	41 e0       	ldi	r20, 0x01	; 1
    1496:	f8 01       	movw	r30, r16
    1498:	84 81       	ldd	r24, Z+4	; 0x04
    149a:	95 81       	ldd	r25, Z+5	; 0x05
    149c:	0e 94 65 22 	call	0x44ca	; 0x44ca <_ZN12PubSubClient9subscribeEPKch>
    14a0:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <_ZN10ScrollText15SCROLL_TEXT_SUBE>
    14a4:	70 91 1d 02 	lds	r23, 0x021D	; 0x80021d <_ZN10ScrollText15SCROLL_TEXT_SUBE+0x1>
    14a8:	41 e0       	ldi	r20, 0x01	; 1
    14aa:	f8 01       	movw	r30, r16
    14ac:	84 81       	ldd	r24, Z+4	; 0x04
    14ae:	95 81       	ldd	r25, Z+5	; 0x05
    14b0:	0e 94 65 22 	call	0x44ca	; 0x44ca <_ZN12PubSubClient9subscribeEPKch>
    14b4:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <_ZN4MQTT16ARDUINO_LAMP_SUBE>
    14b8:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <_ZN4MQTT16ARDUINO_LAMP_SUBE+0x1>
    14bc:	41 e0       	ldi	r20, 0x01	; 1
    14be:	f8 01       	movw	r30, r16
    14c0:	84 81       	ldd	r24, Z+4	; 0x04
    14c2:	95 81       	ldd	r25, Z+5	; 0x05
    14c4:	0e 94 65 22 	call	0x44ca	; 0x44ca <_ZN12PubSubClient9subscribeEPKch>
    14c8:	60 91 14 02 	lds	r22, 0x0214	; 0x800214 <_ZN4MQTT19ARDUINO_COUNTER_SUBE>
    14cc:	70 91 15 02 	lds	r23, 0x0215	; 0x800215 <_ZN4MQTT19ARDUINO_COUNTER_SUBE+0x1>
    14d0:	41 e0       	ldi	r20, 0x01	; 1
    14d2:	f8 01       	movw	r30, r16
    14d4:	84 81       	ldd	r24, Z+4	; 0x04
    14d6:	95 81       	ldd	r25, Z+5	; 0x05
    14d8:	0e 94 65 22 	call	0x44ca	; 0x44ca <_ZN12PubSubClient9subscribeEPKch>
    14dc:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <_ZN4MQTT17ARDUINO_LOCK_DOORE>
    14e0:	70 91 0b 02 	lds	r23, 0x020B	; 0x80020b <_ZN4MQTT17ARDUINO_LOCK_DOORE+0x1>
    14e4:	41 e0       	ldi	r20, 0x01	; 1
    14e6:	f8 01       	movw	r30, r16
    14e8:	84 81       	ldd	r24, Z+4	; 0x04
    14ea:	95 81       	ldd	r25, Z+5	; 0x05
    14ec:	0e 94 65 22 	call	0x44ca	; 0x44ca <_ZN12PubSubClient9subscribeEPKch>
    14f0:	1e c0       	rjmp	.+60     	; 0x152e <_ZN4MQTT15reconnectClientEv+0x106>
    14f2:	64 e6       	ldi	r22, 0x64	; 100
    14f4:	73 e0       	ldi	r23, 0x03	; 3
    14f6:	8d e1       	ldi	r24, 0x1D	; 29
    14f8:	95 e0       	ldi	r25, 0x05	; 5
    14fa:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    14fe:	f8 01       	movw	r30, r16
    1500:	84 81       	ldd	r24, Z+4	; 0x04
    1502:	95 81       	ldd	r25, Z+5	; 0x05
    1504:	0e 94 c1 22 	call	0x4582	; 0x4582 <_ZN12PubSubClient5stateEv>
    1508:	4a e0       	ldi	r20, 0x0A	; 10
    150a:	50 e0       	ldi	r21, 0x00	; 0
    150c:	bc 01       	movw	r22, r24
    150e:	8d e1       	ldi	r24, 0x1D	; 29
    1510:	95 e0       	ldi	r25, 0x05	; 5
    1512:	0e 94 35 14 	call	0x286a	; 0x286a <_ZN5Print5printEii>
    1516:	65 e7       	ldi	r22, 0x75	; 117
    1518:	73 e0       	ldi	r23, 0x03	; 3
    151a:	8d e1       	ldi	r24, 0x1D	; 29
    151c:	95 e0       	ldi	r25, 0x05	; 5
    151e:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    1522:	68 ee       	ldi	r22, 0xE8	; 232
    1524:	73 e0       	ldi	r23, 0x03	; 3
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    152e:	ce 01       	movw	r24, r28
    1530:	01 96       	adiw	r24, 0x01	; 1
    1532:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1536:	81 cf       	rjmp	.-254    	; 0x143a <_ZN4MQTT15reconnectClientEv+0x12>
    1538:	26 96       	adiw	r28, 0x06	; 6
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	df 91       	pop	r29
    1546:	cf 91       	pop	r28
    1548:	1f 91       	pop	r17
    154a:	0f 91       	pop	r16
    154c:	08 95       	ret

0000154e <_ZN4MQTTC1Ev>:
    154e:	0f 93       	push	r16
    1550:	1f 93       	push	r17
    1552:	cf 93       	push	r28
    1554:	df 93       	push	r29
    1556:	ec 01       	movw	r28, r24
    1558:	8f e8       	ldi	r24, 0x8F	; 143
    155a:	93 e0       	ldi	r25, 0x03	; 3
    155c:	99 83       	std	Y+1, r25	; 0x01
    155e:	88 83       	st	Y, r24
    1560:	1e 82       	std	Y+6, r1	; 0x06
    1562:	1f 82       	std	Y+7, r1	; 0x07
    1564:	18 86       	std	Y+8, r1	; 0x08
    1566:	19 86       	std	Y+9, r1	; 0x09
    1568:	1a 86       	std	Y+10, r1	; 0x0a
    156a:	1b 86       	std	Y+11, r1	; 0x0b
    156c:	1c 86       	std	Y+12, r1	; 0x0c
    156e:	1d 86       	std	Y+13, r1	; 0x0d
    1570:	1f 86       	std	Y+15, r1	; 0x0f
    1572:	1e 86       	std	Y+14, r1	; 0x0e
    1574:	18 8a       	std	Y+16, r1	; 0x10
    1576:	83 e0       	ldi	r24, 0x03	; 3
    1578:	89 8b       	std	Y+17, r24	; 0x11
    157a:	ce 01       	movw	r24, r28
    157c:	35 df       	rcall	.-406    	; 0x13e8 <_ZN4MQTT8InitWiFiEv>
    157e:	8d e0       	ldi	r24, 0x0D	; 13
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	0e 94 d1 12 	call	0x25a2	; 0x25a2 <_Znwj>
    1586:	8c 01       	movw	r16, r24
    1588:	0e 94 aa 24 	call	0x4954	; 0x4954 <_ZN13WiFiEspClientC1Ev>
    158c:	1b 83       	std	Y+3, r17	; 0x03
    158e:	0a 83       	std	Y+2, r16	; 0x02
    1590:	89 e2       	ldi	r24, 0x29	; 41
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	0e 94 d1 12 	call	0x25a2	; 0x25a2 <_Znwj>
    1598:	8c 01       	movw	r16, r24
    159a:	6a 81       	ldd	r22, Y+2	; 0x02
    159c:	7b 81       	ldd	r23, Y+3	; 0x03
    159e:	0e 94 eb 22 	call	0x45d6	; 0x45d6 <_ZN12PubSubClientC1ER6Client>
    15a2:	1d 83       	std	Y+5, r17	; 0x05
    15a4:	0c 83       	std	Y+4, r16	; 0x04
    15a6:	63 e0       	ldi	r22, 0x03	; 3
    15a8:	70 e0       	ldi	r23, 0x00	; 0
    15aa:	c8 01       	movw	r24, r16
    15ac:	0e 94 14 23 	call	0x4628	; 0x4628 <_ZN12PubSubClient16setSocketTimeoutEj>
    15b0:	68 81       	ld	r22, Y
    15b2:	79 81       	ldd	r23, Y+1	; 0x01
    15b4:	4b e5       	ldi	r20, 0x5B	; 91
    15b6:	57 e0       	ldi	r21, 0x07	; 7
    15b8:	8c 81       	ldd	r24, Y+4	; 0x04
    15ba:	9d 81       	ldd	r25, Y+5	; 0x05
    15bc:	0e 94 b7 22 	call	0x456e	; 0x456e <_ZN12PubSubClient9setServerEPKcj>
    15c0:	86 e6       	ldi	r24, 0x66	; 102
    15c2:	96 e0       	ldi	r25, 0x06	; 6
    15c4:	0e 94 44 23 	call	0x4688	; 0x4688 <_ZN12WiFiEspClass6statusEv>
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	9f 87       	std	Y+15, r25	; 0x0f
    15cc:	8e 87       	std	Y+14, r24	; 0x0e
    15ce:	01 97       	sbiw	r24, 0x01	; 1
    15d0:	11 f0       	breq	.+4      	; 0x15d6 <_ZN4MQTTC1Ev+0x88>
    15d2:	ce 01       	movw	r24, r28
    15d4:	d7 de       	rcall	.-594    	; 0x1384 <_ZN4MQTT13reconnectWifiEv>
    15d6:	8c 81       	ldd	r24, Y+4	; 0x04
    15d8:	9d 81       	ldd	r25, Y+5	; 0x05
    15da:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    15de:	81 11       	cpse	r24, r1
    15e0:	02 c0       	rjmp	.+4      	; 0x15e6 <_ZN4MQTTC1Ev+0x98>
    15e2:	ce 01       	movw	r24, r28
    15e4:	21 df       	rcall	.-446    	; 0x1428 <_ZN4MQTT15reconnectClientEv>
    15e6:	6d e8       	ldi	r22, 0x8D	; 141
    15e8:	7b e0       	ldi	r23, 0x0B	; 11
    15ea:	8c 81       	ldd	r24, Y+4	; 0x04
    15ec:	9d 81       	ldd	r25, Y+5	; 0x05
    15ee:	0e 94 bd 22 	call	0x457a	; 0x457a <_ZN12PubSubClient11setCallbackEPFvPcPhjE>
    15f2:	1e 82       	std	Y+6, r1	; 0x06
    15f4:	1f 82       	std	Y+7, r1	; 0x07
    15f6:	18 86       	std	Y+8, r1	; 0x08
    15f8:	19 86       	std	Y+9, r1	; 0x09
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	1f 91       	pop	r17
    1600:	0f 91       	pop	r16
    1602:	08 95       	ret

00001604 <_ZN4MQTT6updateEv>:
    1604:	0f 93       	push	r16
    1606:	1f 93       	push	r17
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	ec 01       	movw	r28, r24
    160e:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    1612:	0e 81       	ldd	r16, Y+6	; 0x06
    1614:	1f 81       	ldd	r17, Y+7	; 0x07
    1616:	28 85       	ldd	r18, Y+8	; 0x08
    1618:	39 85       	ldd	r19, Y+9	; 0x09
    161a:	ab 01       	movw	r20, r22
    161c:	bc 01       	movw	r22, r24
    161e:	40 1b       	sub	r20, r16
    1620:	51 0b       	sbc	r21, r17
    1622:	62 0b       	sbc	r22, r18
    1624:	73 0b       	sbc	r23, r19
    1626:	88 89       	ldd	r24, Y+16	; 0x10
    1628:	49 38       	cpi	r20, 0x89	; 137
    162a:	53 41       	sbci	r21, 0x13	; 19
    162c:	61 05       	cpc	r22, r1
    162e:	71 05       	cpc	r23, r1
    1630:	10 f4       	brcc	.+4      	; 0x1636 <_ZN4MQTT6updateEv+0x32>
    1632:	88 23       	and	r24, r24
    1634:	39 f1       	breq	.+78     	; 0x1684 <_ZN4MQTT6updateEv+0x80>
    1636:	8f 5f       	subi	r24, 0xFF	; 255
    1638:	88 8b       	std	Y+16, r24	; 0x10
    163a:	81 30       	cpi	r24, 0x01	; 1
    163c:	11 f4       	brne	.+4      	; 0x1642 <_ZN4MQTT6updateEv+0x3e>
    163e:	ce 01       	movw	r24, r28
    1640:	f9 dd       	rcall	.-1038   	; 0x1234 <_ZN4MQTT20sendScrollTextStatusEv>
    1642:	88 89       	ldd	r24, Y+16	; 0x10
    1644:	82 30       	cpi	r24, 0x02	; 2
    1646:	11 f4       	brne	.+4      	; 0x164c <_ZN4MQTT6updateEv+0x48>
    1648:	ce 01       	movw	r24, r28
    164a:	74 dd       	rcall	.-1304   	; 0x1134 <_ZN4MQTT13sendPwmStatusEv>
    164c:	88 89       	ldd	r24, Y+16	; 0x10
    164e:	83 30       	cpi	r24, 0x03	; 3
    1650:	11 f4       	brne	.+4      	; 0x1656 <_ZN4MQTT6updateEv+0x52>
    1652:	ce 01       	movw	r24, r28
    1654:	6e dc       	rcall	.-1828   	; 0xf32 <_ZN4MQTT14sendLampStatusEv>
    1656:	88 89       	ldd	r24, Y+16	; 0x10
    1658:	84 30       	cpi	r24, 0x04	; 4
    165a:	11 f4       	brne	.+4      	; 0x1660 <_ZN4MQTT6updateEv+0x5c>
    165c:	ce 01       	movw	r24, r28
    165e:	be db       	rcall	.-2180   	; 0xddc <_ZN4MQTT15sendTemperatureEv>
    1660:	88 89       	ldd	r24, Y+16	; 0x10
    1662:	85 30       	cpi	r24, 0x05	; 5
    1664:	19 f4       	brne	.+6      	; 0x166c <_ZN4MQTT6updateEv+0x68>
    1666:	ce 01       	movw	r24, r28
    1668:	e5 dc       	rcall	.-1590   	; 0x1034 <_ZN4MQTT16sendLuminiscenseEv>
    166a:	18 8a       	std	Y+16, r1	; 0x10
    166c:	6a e0       	ldi	r22, 0x0A	; 10
    166e:	70 e0       	ldi	r23, 0x00	; 0
    1670:	80 e0       	ldi	r24, 0x00	; 0
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    1678:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    167c:	6e 83       	std	Y+6, r22	; 0x06
    167e:	7f 83       	std	Y+7, r23	; 0x07
    1680:	88 87       	std	Y+8, r24	; 0x08
    1682:	99 87       	std	Y+9, r25	; 0x09
    1684:	8a 81       	ldd	r24, Y+2	; 0x02
    1686:	9b 81       	ldd	r25, Y+3	; 0x03
    1688:	dc 01       	movw	r26, r24
    168a:	ed 91       	ld	r30, X+
    168c:	fc 91       	ld	r31, X
    168e:	00 84       	ldd	r0, Z+8	; 0x08
    1690:	f1 85       	ldd	r31, Z+9	; 0x09
    1692:	e0 2d       	mov	r30, r0
    1694:	19 95       	eicall
    1696:	89 2b       	or	r24, r25
    1698:	69 f0       	breq	.+26     	; 0x16b4 <_ZN4MQTT6updateEv+0xb0>
    169a:	8c 81       	ldd	r24, Y+4	; 0x04
    169c:	9d 81       	ldd	r25, Y+5	; 0x05
    169e:	0e 94 50 20 	call	0x40a0	; 0x40a0 <_ZN12PubSubClient4loopEv>
    16a2:	8a 81       	ldd	r24, Y+2	; 0x02
    16a4:	9b 81       	ldd	r25, Y+3	; 0x03
    16a6:	dc 01       	movw	r26, r24
    16a8:	ed 91       	ld	r30, X+
    16aa:	fc 91       	ld	r31, X
    16ac:	06 80       	ldd	r0, Z+6	; 0x06
    16ae:	f7 81       	ldd	r31, Z+7	; 0x07
    16b0:	e0 2d       	mov	r30, r0
    16b2:	19 95       	eicall
    16b4:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    16b8:	0a 85       	ldd	r16, Y+10	; 0x0a
    16ba:	1b 85       	ldd	r17, Y+11	; 0x0b
    16bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    16be:	3d 85       	ldd	r19, Y+13	; 0x0d
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	80 1b       	sub	r24, r16
    16c6:	91 0b       	sbc	r25, r17
    16c8:	a2 0b       	sbc	r26, r18
    16ca:	b3 0b       	sbc	r27, r19
    16cc:	81 3d       	cpi	r24, 0xD1	; 209
    16ce:	97 40       	sbci	r25, 0x07	; 7
    16d0:	a1 05       	cpc	r26, r1
    16d2:	b1 05       	cpc	r27, r1
    16d4:	98 f0       	brcs	.+38     	; 0x16fc <_ZN4MQTT6updateEv+0xf8>
    16d6:	86 e6       	ldi	r24, 0x66	; 102
    16d8:	96 e0       	ldi	r25, 0x06	; 6
    16da:	0e 94 44 23 	call	0x4688	; 0x4688 <_ZN12WiFiEspClass6statusEv>
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	9f 87       	std	Y+15, r25	; 0x0f
    16e2:	8e 87       	std	Y+14, r24	; 0x0e
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	11 f0       	breq	.+4      	; 0x16ec <_ZN4MQTT6updateEv+0xe8>
    16e8:	ce 01       	movw	r24, r28
    16ea:	4c de       	rcall	.-872    	; 0x1384 <_ZN4MQTT13reconnectWifiEv>
    16ec:	ce 01       	movw	r24, r28
    16ee:	9c de       	rcall	.-712    	; 0x1428 <_ZN4MQTT15reconnectClientEv>
    16f0:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    16f4:	6a 87       	std	Y+10, r22	; 0x0a
    16f6:	7b 87       	std	Y+11, r23	; 0x0b
    16f8:	8c 87       	std	Y+12, r24	; 0x0c
    16fa:	9d 87       	std	Y+13, r25	; 0x0d
    16fc:	df 91       	pop	r29
    16fe:	cf 91       	pop	r28
    1700:	1f 91       	pop	r17
    1702:	0f 91       	pop	r16
    1704:	08 95       	ret

00001706 <_GLOBAL__sub_I__ZN4MQTT9pwm_valueE>:
    1706:	0f 93       	push	r16
    1708:	00 e0       	ldi	r16, 0x00	; 0
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	40 e0       	ldi	r20, 0x00	; 0
    170e:	60 e0       	ldi	r22, 0x00	; 0
    1710:	8b ef       	ldi	r24, 0xFB	; 251
    1712:	94 e0       	ldi	r25, 0x04	; 4
    1714:	2f d7       	rcall	.+3678   	; 0x2574 <_ZN9IPAddressC1Ehhhh>
    1716:	0f 91       	pop	r16
    1718:	08 95       	ret

0000171a <_ZN4MQTT8callbackEPcPhj>:
    171a:	af 92       	push	r10
    171c:	bf 92       	push	r11
    171e:	cf 92       	push	r12
    1720:	df 92       	push	r13
    1722:	ef 92       	push	r14
    1724:	ff 92       	push	r15
    1726:	0f 93       	push	r16
    1728:	1f 93       	push	r17
    172a:	cf 93       	push	r28
    172c:	df 93       	push	r29
    172e:	cd b7       	in	r28, 0x3d	; 61
    1730:	de b7       	in	r29, 0x3e	; 62
    1732:	62 97       	sbiw	r28, 0x12	; 18
    1734:	0f b6       	in	r0, 0x3f	; 63
    1736:	f8 94       	cli
    1738:	de bf       	out	0x3e, r29	; 62
    173a:	0f be       	out	0x3f, r0	; 63
    173c:	cd bf       	out	0x3d, r28	; 61
    173e:	8c 01       	movw	r16, r24
    1740:	5b 01       	movw	r10, r22
    1742:	6a 01       	movw	r12, r20
    1744:	65 eb       	ldi	r22, 0xB5	; 181
    1746:	74 e0       	ldi	r23, 0x04	; 4
    1748:	ce 01       	movw	r24, r28
    174a:	0d 96       	adiw	r24, 0x0d	; 13
    174c:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    1750:	b6 01       	movw	r22, r12
    1752:	ce 01       	movw	r24, r28
    1754:	0d 96       	adiw	r24, 0x0d	; 13
    1756:	0e 94 54 18 	call	0x30a8	; 0x30a8 <_ZN6String7reserveEj>
    175a:	8d e1       	ldi	r24, 0x1D	; 29
    175c:	95 e0       	ldi	r25, 0x05	; 5
    175e:	5a d4       	rcall	.+2228   	; 0x2014 <_ZN14HardwareSerial17availableForWriteEv>
    1760:	89 2b       	or	r24, r25
    1762:	11 f1       	breq	.+68     	; 0x17a8 <_ZN4MQTT8callbackEPcPhj+0x8e>
    1764:	6c e9       	ldi	r22, 0x9C	; 156
    1766:	73 e0       	ldi	r23, 0x03	; 3
    1768:	8d e1       	ldi	r24, 0x1D	; 29
    176a:	95 e0       	ldi	r25, 0x05	; 5
    176c:	8f d7       	rcall	.+3870   	; 0x268c <_ZN5Print5printEPKc>
    176e:	b8 01       	movw	r22, r16
    1770:	8d e1       	ldi	r24, 0x1D	; 29
    1772:	95 e0       	ldi	r25, 0x05	; 5
    1774:	8b d7       	rcall	.+3862   	; 0x268c <_ZN5Print5printEPKc>
    1776:	65 e8       	ldi	r22, 0x85	; 133
    1778:	74 e0       	ldi	r23, 0x04	; 4
    177a:	8d e1       	ldi	r24, 0x1D	; 29
    177c:	95 e0       	ldi	r25, 0x05	; 5
    177e:	86 d7       	rcall	.+3852   	; 0x268c <_ZN5Print5printEPKc>
    1780:	75 01       	movw	r14, r10
    1782:	ca 0c       	add	r12, r10
    1784:	db 1c       	adc	r13, r11
    1786:	ce 14       	cp	r12, r14
    1788:	df 04       	cpc	r13, r15
    178a:	41 f0       	breq	.+16     	; 0x179c <_ZN4MQTT8callbackEPcPhj+0x82>
    178c:	f7 01       	movw	r30, r14
    178e:	61 91       	ld	r22, Z+
    1790:	7f 01       	movw	r14, r30
    1792:	ce 01       	movw	r24, r28
    1794:	0d 96       	adiw	r24, 0x0d	; 13
    1796:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <_ZN6String6concatEc>
    179a:	f5 cf       	rjmp	.-22     	; 0x1786 <_ZN4MQTT8callbackEPcPhj+0x6c>
    179c:	be 01       	movw	r22, r28
    179e:	63 5f       	subi	r22, 0xF3	; 243
    17a0:	7f 4f       	sbci	r23, 0xFF	; 255
    17a2:	8d e1       	ldi	r24, 0x1D	; 29
    17a4:	95 e0       	ldi	r25, 0x05	; 5
    17a6:	8d d7       	rcall	.+3866   	; 0x26c2 <_ZN5Print7printlnERK6String>
    17a8:	60 91 18 02 	lds	r22, 0x0218	; 0x800218 <_ZN4MQTT15ARDUINO_FAN_SUBE>
    17ac:	70 91 19 02 	lds	r23, 0x0219	; 0x800219 <_ZN4MQTT15ARDUINO_FAN_SUBE+0x1>
    17b0:	c8 01       	movw	r24, r16
    17b2:	0e 94 83 31 	call	0x6306	; 0x6306 <strcmp>
    17b6:	89 2b       	or	r24, r25
    17b8:	59 f4       	brne	.+22     	; 0x17d0 <_ZN4MQTT8callbackEPcPhj+0xb6>
    17ba:	ce 01       	movw	r24, r28
    17bc:	0d 96       	adiw	r24, 0x0d	; 13
    17be:	0e 94 a6 1b 	call	0x374c	; 0x374c <_ZNK6String5toIntEv>
    17c2:	70 93 fa 04 	sts	0x04FA, r23	; 0x8004fa <_ZN4MQTT9pwm_valueE+0x1>
    17c6:	60 93 f9 04 	sts	0x04F9, r22	; 0x8004f9 <_ZN4MQTT9pwm_valueE>
    17ca:	82 e0       	ldi	r24, 0x02	; 2
    17cc:	0e 94 73 16 	call	0x2ce6	; 0x2ce6 <analogWrite>
    17d0:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <_ZN10ScrollText15SCROLL_TEXT_SUBE>
    17d4:	70 91 1d 02 	lds	r23, 0x021D	; 0x80021d <_ZN10ScrollText15SCROLL_TEXT_SUBE+0x1>
    17d8:	c8 01       	movw	r24, r16
    17da:	0e 94 83 31 	call	0x6306	; 0x6306 <strcmp>
    17de:	89 2b       	or	r24, r25
    17e0:	09 f0       	breq	.+2      	; 0x17e4 <_ZN4MQTT8callbackEPcPhj+0xca>
    17e2:	6a c0       	rjmp	.+212    	; 0x18b8 <_ZN4MQTT8callbackEPcPhj+0x19e>
    17e4:	67 e4       	ldi	r22, 0x47	; 71
    17e6:	72 e0       	ldi	r23, 0x02	; 2
    17e8:	ce 01       	movw	r24, r28
    17ea:	01 96       	adiw	r24, 0x01	; 1
    17ec:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    17f0:	be 01       	movw	r22, r28
    17f2:	6f 5f       	subi	r22, 0xFF	; 255
    17f4:	7f 4f       	sbci	r23, 0xFF	; 255
    17f6:	ce 01       	movw	r24, r28
    17f8:	0d 96       	adiw	r24, 0x0d	; 13
    17fa:	0e 94 01 1a 	call	0x3402	; 0x3402 <_ZNK6String7indexOfERKS_>
    17fe:	7c 01       	movw	r14, r24
    1800:	ce 01       	movw	r24, r28
    1802:	01 96       	adiw	r24, 0x01	; 1
    1804:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1808:	65 eb       	ldi	r22, 0xB5	; 181
    180a:	74 e0       	ldi	r23, 0x04	; 4
    180c:	ce 01       	movw	r24, r28
    180e:	01 96       	adiw	r24, 0x01	; 1
    1810:	1e 14       	cp	r1, r14
    1812:	1f 04       	cpc	r1, r15
    1814:	f4 f4       	brge	.+60     	; 0x1852 <_ZN4MQTT8callbackEPcPhj+0x138>
    1816:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    181a:	67 e4       	ldi	r22, 0x47	; 71
    181c:	72 e0       	ldi	r23, 0x02	; 2
    181e:	ce 01       	movw	r24, r28
    1820:	07 96       	adiw	r24, 0x07	; 7
    1822:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    1826:	ae 01       	movw	r20, r28
    1828:	4f 5f       	subi	r20, 0xFF	; 255
    182a:	5f 4f       	sbci	r21, 0xFF	; 255
    182c:	be 01       	movw	r22, r28
    182e:	69 5f       	subi	r22, 0xF9	; 249
    1830:	7f 4f       	sbci	r23, 0xFF	; 255
    1832:	ce 01       	movw	r24, r28
    1834:	0d 96       	adiw	r24, 0x0d	; 13
    1836:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <_ZN6String7replaceERKS_S1_>
    183a:	ce 01       	movw	r24, r28
    183c:	07 96       	adiw	r24, 0x07	; 7
    183e:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1842:	ce 01       	movw	r24, r28
    1844:	01 96       	adiw	r24, 0x01	; 1
    1846:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    184a:	81 e0       	ldi	r24, 0x01	; 1
    184c:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <_ZN10ScrollText6enableE>
    1850:	1c c0       	rjmp	.+56     	; 0x188a <_ZN4MQTT8callbackEPcPhj+0x170>
    1852:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    1856:	6c e4       	ldi	r22, 0x4C	; 76
    1858:	72 e0       	ldi	r23, 0x02	; 2
    185a:	ce 01       	movw	r24, r28
    185c:	07 96       	adiw	r24, 0x07	; 7
    185e:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
    1862:	ae 01       	movw	r20, r28
    1864:	4f 5f       	subi	r20, 0xFF	; 255
    1866:	5f 4f       	sbci	r21, 0xFF	; 255
    1868:	be 01       	movw	r22, r28
    186a:	69 5f       	subi	r22, 0xF9	; 249
    186c:	7f 4f       	sbci	r23, 0xFF	; 255
    186e:	ce 01       	movw	r24, r28
    1870:	0d 96       	adiw	r24, 0x0d	; 13
    1872:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <_ZN6String7replaceERKS_S1_>
    1876:	ce 01       	movw	r24, r28
    1878:	07 96       	adiw	r24, 0x07	; 7
    187a:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    187e:	ce 01       	movw	r24, r28
    1880:	01 96       	adiw	r24, 0x01	; 1
    1882:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1886:	10 92 11 05 	sts	0x0511, r1	; 0x800511 <_ZN10ScrollText6enableE>
    188a:	ce 01       	movw	r24, r28
    188c:	0d 96       	adiw	r24, 0x0d	; 13
    188e:	0e 94 4a 1b 	call	0x3694	; 0x3694 <_ZN6String4trimEv>
    1892:	be 01       	movw	r22, r28
    1894:	63 5f       	subi	r22, 0xF3	; 243
    1896:	7f 4f       	sbci	r23, 0xFF	; 255
    1898:	8b e0       	ldi	r24, 0x0B	; 11
    189a:	95 e0       	ldi	r25, 0x05	; 5
    189c:	0e 94 a2 18 	call	0x3144	; 0x3144 <_ZN6StringaSERKS_>
    18a0:	be 01       	movw	r22, r28
    18a2:	63 5f       	subi	r22, 0xF3	; 243
    18a4:	7f 4f       	sbci	r23, 0xFF	; 255
    18a6:	85 e0       	ldi	r24, 0x05	; 5
    18a8:	95 e0       	ldi	r25, 0x05	; 5
    18aa:	0e 94 a2 18 	call	0x3144	; 0x3144 <_ZN6StringaSERKS_>
    18ae:	60 e2       	ldi	r22, 0x20	; 32
    18b0:	85 e0       	ldi	r24, 0x05	; 5
    18b2:	95 e0       	ldi	r25, 0x05	; 5
    18b4:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <_ZN6String6concatEc>
    18b8:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <_ZN4MQTT16ARDUINO_LAMP_SUBE>
    18bc:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <_ZN4MQTT16ARDUINO_LAMP_SUBE+0x1>
    18c0:	c8 01       	movw	r24, r16
    18c2:	0e 94 83 31 	call	0x6306	; 0x6306 <strcmp>
    18c6:	89 2b       	or	r24, r25
    18c8:	59 f4       	brne	.+22     	; 0x18e0 <_ZN4MQTT8callbackEPcPhj+0x1c6>
    18ca:	6c e4       	ldi	r22, 0x4C	; 76
    18cc:	72 e0       	ldi	r23, 0x02	; 2
    18ce:	ce 01       	movw	r24, r28
    18d0:	0d 96       	adiw	r24, 0x0d	; 13
    18d2:	0e 94 96 19 	call	0x332c	; 0x332c <_ZNK6String6equalsEPKc>
    18d6:	88 23       	and	r24, r24
    18d8:	11 f0       	breq	.+4      	; 0x18de <_ZN4MQTT8callbackEPcPhj+0x1c4>
    18da:	10 9a       	sbi	0x02, 0	; 2
    18dc:	01 c0       	rjmp	.+2      	; 0x18e0 <_ZN4MQTT8callbackEPcPhj+0x1c6>
    18de:	10 98       	cbi	0x02, 0	; 2
    18e0:	60 91 14 02 	lds	r22, 0x0214	; 0x800214 <_ZN4MQTT19ARDUINO_COUNTER_SUBE>
    18e4:	70 91 15 02 	lds	r23, 0x0215	; 0x800215 <_ZN4MQTT19ARDUINO_COUNTER_SUBE+0x1>
    18e8:	c8 01       	movw	r24, r16
    18ea:	0e 94 83 31 	call	0x6306	; 0x6306 <strcmp>
    18ee:	89 2b       	or	r24, r25
    18f0:	c9 f4       	brne	.+50     	; 0x1924 <_ZN4MQTT8callbackEPcPhj+0x20a>
    18f2:	67 e4       	ldi	r22, 0x47	; 71
    18f4:	72 e0       	ldi	r23, 0x02	; 2
    18f6:	ce 01       	movw	r24, r28
    18f8:	0d 96       	adiw	r24, 0x0d	; 13
    18fa:	0e 94 96 19 	call	0x332c	; 0x332c <_ZNK6String6equalsEPKc>
    18fe:	88 23       	and	r24, r24
    1900:	49 f0       	breq	.+18     	; 0x1914 <_ZN4MQTT8callbackEPcPhj+0x1fa>
    1902:	11 9a       	sbi	0x02, 1	; 2
    1904:	61 e0       	ldi	r22, 0x01	; 1
    1906:	70 e0       	ldi	r23, 0x00	; 0
    1908:	80 e0       	ldi	r24, 0x00	; 0
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    1910:	11 98       	cbi	0x02, 1	; 2
    1912:	08 c0       	rjmp	.+16     	; 0x1924 <_ZN4MQTT8callbackEPcPhj+0x20a>
    1914:	12 9a       	sbi	0x02, 2	; 2
    1916:	61 e0       	ldi	r22, 0x01	; 1
    1918:	70 e0       	ldi	r23, 0x00	; 0
    191a:	80 e0       	ldi	r24, 0x00	; 0
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    1922:	12 98       	cbi	0x02, 2	; 2
    1924:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <_ZN4MQTT17ARDUINO_LOCK_DOORE>
    1928:	70 91 0b 02 	lds	r23, 0x020B	; 0x80020b <_ZN4MQTT17ARDUINO_LOCK_DOORE+0x1>
    192c:	c8 01       	movw	r24, r16
    192e:	0e 94 83 31 	call	0x6306	; 0x6306 <strcmp>
    1932:	89 2b       	or	r24, r25
    1934:	21 f5       	brne	.+72     	; 0x197e <_ZN4MQTT8callbackEPcPhj+0x264>
    1936:	ce 01       	movw	r24, r28
    1938:	0d 96       	adiw	r24, 0x0d	; 13
    193a:	0e 94 4a 1b 	call	0x3694	; 0x3694 <_ZN6String4trimEv>
    193e:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <_ZN4MQTT21ARDUINO_LOCK_PASSWORDE>
    1942:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <_ZN4MQTT21ARDUINO_LOCK_PASSWORDE+0x1>
    1946:	ce 01       	movw	r24, r28
    1948:	0d 96       	adiw	r24, 0x0d	; 13
    194a:	0e 94 96 19 	call	0x332c	; 0x332c <_ZNK6String6equalsEPKc>
    194e:	88 23       	and	r24, r24
    1950:	a1 f0       	breq	.+40     	; 0x197a <_ZN4MQTT8callbackEPcPhj+0x260>
    1952:	90 91 f8 04 	lds	r25, 0x04F8	; 0x8004f8 <__data_end>
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	89 27       	eor	r24, r25
    195a:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <__data_end>
    195e:	13 9a       	sbi	0x02, 3	; 2
    1960:	14 98       	cbi	0x02, 4	; 2
    1962:	80 91 f8 04 	lds	r24, 0x04F8	; 0x8004f8 <__data_end>
    1966:	81 11       	cpse	r24, r1
    1968:	0a c0       	rjmp	.+20     	; 0x197e <_ZN4MQTT8callbackEPcPhj+0x264>
    196a:	16 9a       	sbi	0x02, 6	; 2
    196c:	6a e0       	ldi	r22, 0x0A	; 10
    196e:	70 e0       	ldi	r23, 0x00	; 0
    1970:	80 e0       	ldi	r24, 0x00	; 0
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    1978:	02 c0       	rjmp	.+4      	; 0x197e <_ZN4MQTT8callbackEPcPhj+0x264>
    197a:	14 9a       	sbi	0x02, 4	; 2
    197c:	13 98       	cbi	0x02, 3	; 2
    197e:	ce 01       	movw	r24, r28
    1980:	0d 96       	adiw	r24, 0x0d	; 13
    1982:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>
    1986:	62 96       	adiw	r28, 0x12	; 18
    1988:	0f b6       	in	r0, 0x3f	; 63
    198a:	f8 94       	cli
    198c:	de bf       	out	0x3e, r29	; 62
    198e:	0f be       	out	0x3f, r0	; 63
    1990:	cd bf       	out	0x3d, r28	; 61
    1992:	df 91       	pop	r29
    1994:	cf 91       	pop	r28
    1996:	1f 91       	pop	r17
    1998:	0f 91       	pop	r16
    199a:	ff 90       	pop	r15
    199c:	ef 90       	pop	r14
    199e:	df 90       	pop	r13
    19a0:	cf 90       	pop	r12
    19a2:	bf 90       	pop	r11
    19a4:	af 90       	pop	r10
    19a6:	08 95       	ret

000019a8 <_ZN10ScrollTextC1Ehhhh>:
		s++;
	}
}
ScrollText::~ScrollText(){
	
	delete m;
    19a8:	bf 92       	push	r11
    19aa:	cf 92       	push	r12
    19ac:	df 92       	push	r13
    19ae:	ef 92       	push	r14
    19b0:	ff 92       	push	r15
    19b2:	0f 93       	push	r16
    19b4:	1f 93       	push	r17
    19b6:	cf 93       	push	r28
    19b8:	df 93       	push	r29
    19ba:	ec 01       	movw	r28, r24
    19bc:	c6 2e       	mov	r12, r22
    19be:	d4 2e       	mov	r13, r20
    19c0:	b2 2e       	mov	r11, r18
    19c2:	18 8a       	std	Y+16, r1	; 0x10
    19c4:	19 8a       	std	Y+17, r1	; 0x11
    19c6:	1a 8a       	std	Y+18, r1	; 0x12
    19c8:	1b 8a       	std	Y+19, r1	; 0x13
    19ca:	84 e5       	ldi	r24, 0x54	; 84
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	e9 d5       	rcall	.+3026   	; 0x25a2 <_Znwj>
    19d0:	7c 01       	movw	r14, r24
    19d2:	2b 2d       	mov	r18, r11
    19d4:	4d 2d       	mov	r20, r13
    19d6:	6c 2d       	mov	r22, r12
    19d8:	0e 94 76 04 	call	0x8ec	; 0x8ec <_ZN9MaxMatrixC1Ehhhh>
    19dc:	f9 82       	std	Y+1, r15	; 0x01
    19de:	e8 82       	st	Y, r14
    19e0:	c7 01       	movw	r24, r14
    19e2:	71 d8       	rcall	.-3870   	; 0xac6 <_ZN9MaxMatrix4initEv>
    19e4:	bc 82       	std	Y+4, r11	; 0x04
    19e6:	ca 82       	std	Y+2, r12	; 0x02
    19e8:	db 82       	std	Y+3, r13	; 0x03
    19ea:	0d 83       	std	Y+5, r16	; 0x05
    19ec:	62 e3       	ldi	r22, 0x32	; 50
    19ee:	70 e0       	ldi	r23, 0x00	; 0
    19f0:	8b e0       	ldi	r24, 0x0B	; 11
    19f2:	95 e0       	ldi	r25, 0x05	; 5
    19f4:	0e 94 54 18 	call	0x30a8	; 0x30a8 <_ZN6String7reserveEj>
    19f8:	62 e3       	ldi	r22, 0x32	; 50
    19fa:	70 e0       	ldi	r23, 0x00	; 0
    19fc:	85 e0       	ldi	r24, 0x05	; 5
    19fe:	95 e0       	ldi	r25, 0x05	; 5
    1a00:	df 91       	pop	r29
    1a02:	cf 91       	pop	r28
    1a04:	1f 91       	pop	r17
    1a06:	0f 91       	pop	r16
    1a08:	ff 90       	pop	r15
    1a0a:	ef 90       	pop	r14
    1a0c:	df 90       	pop	r13
    1a0e:	cf 90       	pop	r12
    1a10:	bf 90       	pop	r11
    1a12:	0c 94 54 18 	jmp	0x30a8	; 0x30a8 <_ZN6String7reserveEj>

00001a16 <_ZN10ScrollText25printCharWithShiftPerTickEc>:
    1a16:	0f 93       	push	r16
    1a18:	1f 93       	push	r17
    1a1a:	cf 93       	push	r28
    1a1c:	df 93       	push	r29
    1a1e:	ec 01       	movw	r28, r24
    1a20:	80 91 02 05 	lds	r24, 0x0502	; 0x800502 <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    1a24:	81 11       	cpse	r24, r1
    1a26:	28 c0       	rjmp	.+80     	; 0x1a78 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x62>
    1a28:	60 32       	cpi	r22, 0x20	; 32
    1a2a:	08 f4       	brcc	.+2      	; 0x1a2e <_ZN10ScrollText25printCharWithShiftPerTickEc+0x18>
    1a2c:	43 c0       	rjmp	.+134    	; 0x1ab4 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x9e>
    1a2e:	60 52       	subi	r22, 0x20	; 32
    1a30:	87 e0       	ldi	r24, 0x07	; 7
    1a32:	68 9f       	mul	r22, r24
    1a34:	b0 01       	movw	r22, r0
    1a36:	11 24       	eor	r1, r1
    1a38:	6a 5d       	subi	r22, 0xDA	; 218
    1a3a:	7d 4f       	sbci	r23, 0xFD	; 253
    1a3c:	47 e0       	ldi	r20, 0x07	; 7
    1a3e:	50 e0       	ldi	r21, 0x00	; 0
    1a40:	8e 01       	movw	r16, r28
    1a42:	0a 5f       	subi	r16, 0xFA	; 250
    1a44:	1f 4f       	sbci	r17, 0xFF	; 255
    1a46:	c8 01       	movw	r24, r16
    1a48:	0e 94 49 31 	call	0x6292	; 0x6292 <memcpy_P>
    1a4c:	6d 81       	ldd	r22, Y+5	; 0x05
    1a4e:	98 e0       	ldi	r25, 0x08	; 8
    1a50:	69 9f       	mul	r22, r25
    1a52:	b0 01       	movw	r22, r0
    1a54:	11 24       	eor	r1, r1
    1a56:	98 01       	movw	r18, r16
    1a58:	40 e0       	ldi	r20, 0x00	; 0
    1a5a:	50 e0       	ldi	r21, 0x00	; 0
    1a5c:	88 81       	ld	r24, Y
    1a5e:	99 81       	ldd	r25, Y+1	; 0x01
    1a60:	c4 d8       	rcall	.-3704   	; 0xbea <_ZN9MaxMatrix11writeSpriteEiiPKh>
    1a62:	8d 81       	ldd	r24, Y+5	; 0x05
    1a64:	6e 81       	ldd	r22, Y+6	; 0x06
    1a66:	98 e0       	ldi	r25, 0x08	; 8
    1a68:	89 9f       	mul	r24, r25
    1a6a:	60 0d       	add	r22, r0
    1a6c:	11 24       	eor	r1, r1
    1a6e:	40 e0       	ldi	r20, 0x00	; 0
    1a70:	88 81       	ld	r24, Y
    1a72:	99 81       	ldd	r25, Y+1	; 0x01
    1a74:	0e 94 ba 04 	call	0x974	; 0x974 <_ZN9MaxMatrix9setColumnEhh>
    1a78:	2e 81       	ldd	r18, Y+6	; 0x06
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	28 17       	cp	r18, r24
    1a84:	39 07       	cpc	r19, r25
    1a86:	74 f0       	brlt	.+28     	; 0x1aa4 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x8e>
    1a88:	40 e0       	ldi	r20, 0x00	; 0
    1a8a:	60 e0       	ldi	r22, 0x00	; 0
    1a8c:	88 81       	ld	r24, Y
    1a8e:	99 81       	ldd	r25, Y+1	; 0x01
    1a90:	65 d9       	rcall	.-3382   	; 0xd5c <_ZN9MaxMatrix9shiftLeftEbb>
    1a92:	81 e0       	ldi	r24, 0x01	; 1
    1a94:	80 93 02 05 	sts	0x0502, r24	; 0x800502 <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    1a98:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1a9c:	8f 5f       	subi	r24, 0xFF	; 255
    1a9e:	80 93 01 05 	sts	0x0501, r24	; 0x800501 <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1aa2:	04 c0       	rjmp	.+8      	; 0x1aac <_ZN10ScrollText25printCharWithShiftPerTickEc+0x96>
    1aa4:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    1aa8:	10 92 01 05 	sts	0x0501, r1	; 0x800501 <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1aac:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    1ab0:	81 e0       	ldi	r24, 0x01	; 1
    1ab2:	89 27       	eor	r24, r25
    1ab4:	df 91       	pop	r29
    1ab6:	cf 91       	pop	r28
    1ab8:	1f 91       	pop	r17
    1aba:	0f 91       	pop	r16
    1abc:	08 95       	ret

00001abe <_ZN10ScrollText27printStringWithShiftPerTickEPKc>:
    1abe:	20 91 11 05 	lds	r18, 0x0511	; 0x800511 <_ZN10ScrollText6enableE>
    1ac2:	22 23       	and	r18, r18
    1ac4:	29 f1       	breq	.+74     	; 0x1b10 <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x52>
    1ac6:	20 91 12 05 	lds	r18, 0x0512	; 0x800512 <_ZN10ScrollText8finishedE>
    1aca:	21 11       	cpse	r18, r1
    1acc:	2a c0       	rjmp	.+84     	; 0x1b22 <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x64>
    1ace:	20 91 03 05 	lds	r18, 0x0503	; 0x800503 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1ad2:	30 91 04 05 	lds	r19, 0x0504	; 0x800504 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1ad6:	fb 01       	movw	r30, r22
    1ad8:	e2 0f       	add	r30, r18
    1ada:	f3 1f       	adc	r31, r19
    1adc:	60 81       	ld	r22, Z
    1ade:	66 23       	and	r22, r22
    1ae0:	79 f0       	breq	.+30     	; 0x1b00 <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x42>
    1ae2:	99 df       	rcall	.-206    	; 0x1a16 <_ZN10ScrollText25printCharWithShiftPerTickEc>
    1ae4:	88 23       	and	r24, r24
    1ae6:	49 f0       	breq	.+18     	; 0x1afa <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x3c>
    1ae8:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1aec:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1af0:	01 96       	adiw	r24, 0x01	; 1
    1af2:	90 93 04 05 	sts	0x0504, r25	; 0x800504 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1af6:	80 93 03 05 	sts	0x0503, r24	; 0x800503 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1afa:	10 92 12 05 	sts	0x0512, r1	; 0x800512 <_ZN10ScrollText8finishedE>
    1afe:	08 95       	ret
    1b00:	81 e0       	ldi	r24, 0x01	; 1
    1b02:	80 93 12 05 	sts	0x0512, r24	; 0x800512 <_ZN10ScrollText8finishedE>
    1b06:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1b0a:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1b0e:	08 95       	ret
    1b10:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1b14:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1b18:	fc 01       	movw	r30, r24
    1b1a:	80 81       	ld	r24, Z
    1b1c:	91 81       	ldd	r25, Z+1	; 0x01
    1b1e:	0c 94 4b 05 	jmp	0xa96	; 0xa96 <_ZN9MaxMatrix5clearEv>
    1b22:	08 95       	ret

00001b24 <_ZN10ScrollText6updateEv>:
    1b24:	0f 93       	push	r16
    1b26:	1f 93       	push	r17
    1b28:	cf 93       	push	r28
    1b2a:	df 93       	push	r29
    1b2c:	ec 01       	movw	r28, r24
    1b2e:	ec d7       	rcall	.+4056   	; 0x2b08 <millis>
    1b30:	08 89       	ldd	r16, Y+16	; 0x10
    1b32:	19 89       	ldd	r17, Y+17	; 0x11
    1b34:	2a 89       	ldd	r18, Y+18	; 0x12
    1b36:	3b 89       	ldd	r19, Y+19	; 0x13
    1b38:	ab 01       	movw	r20, r22
    1b3a:	bc 01       	movw	r22, r24
    1b3c:	40 1b       	sub	r20, r16
    1b3e:	51 0b       	sbc	r21, r17
    1b40:	62 0b       	sbc	r22, r18
    1b42:	73 0b       	sbc	r23, r19
    1b44:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <_ZN10ScrollText9msPerTickE>
    1b48:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <_ZN10ScrollText9msPerTickE+0x1>
    1b4c:	09 2e       	mov	r0, r25
    1b4e:	00 0c       	add	r0, r0
    1b50:	aa 0b       	sbc	r26, r26
    1b52:	bb 0b       	sbc	r27, r27
    1b54:	84 17       	cp	r24, r20
    1b56:	95 07       	cpc	r25, r21
    1b58:	a6 07       	cpc	r26, r22
    1b5a:	b7 07       	cpc	r27, r23
    1b5c:	80 f4       	brcc	.+32     	; 0x1b7e <_ZN10ScrollText6updateEv+0x5a>
    1b5e:	60 91 05 05 	lds	r22, 0x0505	; 0x800505 <_ZN10ScrollText7msg_auxE>
    1b62:	70 91 06 05 	lds	r23, 0x0506	; 0x800506 <_ZN10ScrollText7msg_auxE+0x1>
    1b66:	ce 01       	movw	r24, r28
    1b68:	aa df       	rcall	.-172    	; 0x1abe <_ZN10ScrollText27printStringWithShiftPerTickEPKc>
    1b6a:	ce d7       	rcall	.+3996   	; 0x2b08 <millis>
    1b6c:	68 8b       	std	Y+16, r22	; 0x10
    1b6e:	79 8b       	std	Y+17, r23	; 0x11
    1b70:	8a 8b       	std	Y+18, r24	; 0x12
    1b72:	9b 8b       	std	Y+19, r25	; 0x13
    1b74:	80 91 12 05 	lds	r24, 0x0512	; 0x800512 <_ZN10ScrollText8finishedE>
    1b78:	81 11       	cpse	r24, r1
    1b7a:	10 92 12 05 	sts	0x0512, r1	; 0x800512 <_ZN10ScrollText8finishedE>
    1b7e:	df 91       	pop	r29
    1b80:	cf 91       	pop	r28
    1b82:	1f 91       	pop	r17
    1b84:	0f 91       	pop	r16
    1b86:	08 95       	ret

00001b88 <_GLOBAL__sub_I__ZN10ScrollText15SCROLL_TEXT_SUBE>:

char* ScrollText::SCROLL_TEXT_SUB = "ScrollText";
int ScrollText::msPerTick = 50;
bool ScrollText::finished = false;
bool ScrollText::enable = false;
String ScrollText::msgToShow = "MSG";
    1b88:	6e e3       	ldi	r22, 0x3E	; 62
    1b8a:	74 e0       	ldi	r23, 0x04	; 4
    1b8c:	8b e0       	ldi	r24, 0x0B	; 11
    1b8e:	95 e0       	ldi	r25, 0x05	; 5
    1b90:	0e 94 8e 18 	call	0x311c	; 0x311c <_ZN6StringC1EPKc>
String ScrollText::msg_aux;
    1b94:	65 eb       	ldi	r22, 0xB5	; 181
    1b96:	74 e0       	ldi	r23, 0x04	; 4
    1b98:	85 e0       	ldi	r24, 0x05	; 5
    1b9a:	95 e0       	ldi	r25, 0x05	; 5
    1b9c:	0c 94 8e 18 	jmp	0x311c	; 0x311c <_ZN6StringC1EPKc>

00001ba0 <_GLOBAL__sub_D__ZN10ScrollText15SCROLL_TEXT_SUBE>:
    1ba0:	85 e0       	ldi	r24, 0x05	; 5
    1ba2:	95 e0       	ldi	r25, 0x05	; 5
    1ba4:	0e 94 20 18 	call	0x3040	; 0x3040 <_ZN6StringD1Ev>

char* ScrollText::SCROLL_TEXT_SUB = "ScrollText";
int ScrollText::msPerTick = 50;
bool ScrollText::finished = false;
bool ScrollText::enable = false;
String ScrollText::msgToShow = "MSG";
    1ba8:	8b e0       	ldi	r24, 0x0B	; 11
    1baa:	95 e0       	ldi	r25, 0x05	; 5
    1bac:	0c 94 20 18 	jmp	0x3040	; 0x3040 <_ZN6StringD1Ev>

00001bb0 <setup>:
ScrollText *scrollText;




void setup() {
    1bb0:	0f 93       	push	r16
    1bb2:	cf 93       	push	r28
    1bb4:	df 93       	push	r29
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1bb6:	26 e0       	ldi	r18, 0x06	; 6
    1bb8:	40 e0       	ldi	r20, 0x00	; 0
    1bba:	5b e4       	ldi	r21, 0x4B	; 75
    1bbc:	60 e0       	ldi	r22, 0x00	; 0
    1bbe:	70 e0       	ldi	r23, 0x00	; 0
    1bc0:	8d e1       	ldi	r24, 0x1D	; 29
    1bc2:	95 e0       	ldi	r25, 0x05	; 5
    1bc4:	00 d3       	rcall	.+1536   	; 0x21c6 <_ZN14HardwareSerial5beginEmh>
	//log para el ESP8266
	Serial.begin(19200);
	DDRA = 1 << PA0 | 1 << PA1 | 1 << PA2 | 1 << PA3 | 1 << PA4 | 1 << PA6;
    1bc6:	8f e5       	ldi	r24, 0x5F	; 95
    1bc8:	81 b9       	out	0x01, r24	; 1
	PORTA |= (1 << PA5);
    1bca:	15 9a       	sbi	0x02, 5	; 2
	mqtt = new MQTT();
    1bcc:	82 e1       	ldi	r24, 0x12	; 18
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	e8 d4       	rcall	.+2512   	; 0x25a2 <_Znwj>
    1bd2:	ec 01       	movw	r28, r24
    1bd4:	bc dc       	rcall	.-1672   	; 0x154e <_ZN4MQTTC1Ev>
    1bd6:	d0 93 16 05 	sts	0x0516, r29	; 0x800516 <mqtt+0x1>
    1bda:	c0 93 15 05 	sts	0x0515, r28	; 0x800515 <mqtt>
	scrollText = new ScrollText(51, 53, 52, 4);
    1bde:	84 e1       	ldi	r24, 0x14	; 20
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	df d4       	rcall	.+2494   	; 0x25a2 <_Znwj>
    1be4:	ec 01       	movw	r28, r24
    1be6:	04 e0       	ldi	r16, 0x04	; 4
    1be8:	24 e3       	ldi	r18, 0x34	; 52
    1bea:	45 e3       	ldi	r20, 0x35	; 53
    1bec:	63 e3       	ldi	r22, 0x33	; 51
    1bee:	dc de       	rcall	.-584    	; 0x19a8 <_ZN10ScrollTextC1Ehhhh>
    1bf0:	d0 93 14 05 	sts	0x0514, r29	; 0x800514 <scrollText+0x1>
    1bf4:	c0 93 13 05 	sts	0x0513, r28	; 0x800513 <scrollText>
    1bf8:	68 ee       	ldi	r22, 0xE8	; 232
	
	delay(1000);
    1bfa:	73 e0       	ldi	r23, 0x03	; 3
    1bfc:	80 e0       	ldi	r24, 0x00	; 0
    1bfe:	90 e0       	ldi	r25, 0x00	; 0
}
    1c00:	df 91       	pop	r29
    1c02:	cf 91       	pop	r28
    1c04:	0f 91       	pop	r16
	DDRA = 1 << PA0 | 1 << PA1 | 1 << PA2 | 1 << PA3 | 1 << PA4 | 1 << PA6;
	PORTA |= (1 << PA5);
	mqtt = new MQTT();
	scrollText = new ScrollText(51, 53, 52, 4);
	
	delay(1000);
    1c06:	b1 c7       	rjmp	.+3938   	; 0x2b6a <delay>

00001c08 <loop>:
    1c08:	80 91 15 05 	lds	r24, 0x0515	; 0x800515 <mqtt>
}
void loop() {
	mqtt->update();
    1c0c:	90 91 16 05 	lds	r25, 0x0516	; 0x800516 <mqtt+0x1>
    1c10:	f9 dc       	rcall	.-1550   	; 0x1604 <_ZN4MQTT6updateEv>
	scrollText->update();
    1c12:	80 91 13 05 	lds	r24, 0x0513	; 0x800513 <scrollText>
    1c16:	90 91 14 05 	lds	r25, 0x0514	; 0x800514 <scrollText+0x1>
    1c1a:	84 df       	rcall	.-248    	; 0x1b24 <_ZN10ScrollText6updateEv>
	
	
	if(!(PINA & (1 << PA5))){
    1c1c:	05 99       	sbic	0x00, 5	; 0
    1c1e:	03 c0       	rjmp	.+6      	; 0x1c26 <loop+0x1e>
		PORTA &= ~(1 << PA4) & ~(1 << PA3) & ~(1 << PA6);
    1c20:	82 b1       	in	r24, 0x02	; 2
    1c22:	87 7a       	andi	r24, 0xA7	; 167
    1c24:	82 b9       	out	0x02, r24	; 2
    1c26:	08 95       	ret

00001c28 <_GLOBAL__sub_I_mqtt>:
	}
	

}
    1c28:	0f 93       	push	r16
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0,0,0,0);
    1c2a:	00 e0       	ldi	r16, 0x00	; 0
    1c2c:	20 e0       	ldi	r18, 0x00	; 0
    1c2e:	40 e0       	ldi	r20, 0x00	; 0
    1c30:	60 e0       	ldi	r22, 0x00	; 0
    1c32:	87 e1       	ldi	r24, 0x17	; 23
    1c34:	95 e0       	ldi	r25, 0x05	; 5
    1c36:	9e d4       	rcall	.+2364   	; 0x2574 <_ZN9IPAddressC1Ehhhh>
    1c38:	0f 91       	pop	r16
    1c3a:	08 95       	ret

00001c3c <__subsf3>:
    1c3c:	50 58       	subi	r21, 0x80	; 128

00001c3e <__addsf3>:
    1c3e:	bb 27       	eor	r27, r27
    1c40:	aa 27       	eor	r26, r26
    1c42:	0e d0       	rcall	.+28     	; 0x1c60 <__addsf3x>
    1c44:	1c c1       	rjmp	.+568    	; 0x1e7e <__fp_round>
    1c46:	0d d1       	rcall	.+538    	; 0x1e62 <__fp_pscA>
    1c48:	30 f0       	brcs	.+12     	; 0x1c56 <__addsf3+0x18>
    1c4a:	12 d1       	rcall	.+548    	; 0x1e70 <__fp_pscB>
    1c4c:	20 f0       	brcs	.+8      	; 0x1c56 <__addsf3+0x18>
    1c4e:	31 f4       	brne	.+12     	; 0x1c5c <__addsf3+0x1e>
    1c50:	9f 3f       	cpi	r25, 0xFF	; 255
    1c52:	11 f4       	brne	.+4      	; 0x1c58 <__addsf3+0x1a>
    1c54:	1e f4       	brtc	.+6      	; 0x1c5c <__addsf3+0x1e>
    1c56:	02 c1       	rjmp	.+516    	; 0x1e5c <__fp_nan>
    1c58:	0e f4       	brtc	.+2      	; 0x1c5c <__addsf3+0x1e>
    1c5a:	e0 95       	com	r30
    1c5c:	e7 fb       	bst	r30, 7
    1c5e:	f8 c0       	rjmp	.+496    	; 0x1e50 <__fp_inf>

00001c60 <__addsf3x>:
    1c60:	e9 2f       	mov	r30, r25
    1c62:	1e d1       	rcall	.+572    	; 0x1ea0 <__fp_split3>
    1c64:	80 f3       	brcs	.-32     	; 0x1c46 <__addsf3+0x8>
    1c66:	ba 17       	cp	r27, r26
    1c68:	62 07       	cpc	r22, r18
    1c6a:	73 07       	cpc	r23, r19
    1c6c:	84 07       	cpc	r24, r20
    1c6e:	95 07       	cpc	r25, r21
    1c70:	18 f0       	brcs	.+6      	; 0x1c78 <__addsf3x+0x18>
    1c72:	71 f4       	brne	.+28     	; 0x1c90 <__addsf3x+0x30>
    1c74:	9e f5       	brtc	.+102    	; 0x1cdc <__addsf3x+0x7c>
    1c76:	36 c1       	rjmp	.+620    	; 0x1ee4 <__fp_zero>
    1c78:	0e f4       	brtc	.+2      	; 0x1c7c <__addsf3x+0x1c>
    1c7a:	e0 95       	com	r30
    1c7c:	0b 2e       	mov	r0, r27
    1c7e:	ba 2f       	mov	r27, r26
    1c80:	a0 2d       	mov	r26, r0
    1c82:	0b 01       	movw	r0, r22
    1c84:	b9 01       	movw	r22, r18
    1c86:	90 01       	movw	r18, r0
    1c88:	0c 01       	movw	r0, r24
    1c8a:	ca 01       	movw	r24, r20
    1c8c:	a0 01       	movw	r20, r0
    1c8e:	11 24       	eor	r1, r1
    1c90:	ff 27       	eor	r31, r31
    1c92:	59 1b       	sub	r21, r25
    1c94:	99 f0       	breq	.+38     	; 0x1cbc <__addsf3x+0x5c>
    1c96:	59 3f       	cpi	r21, 0xF9	; 249
    1c98:	50 f4       	brcc	.+20     	; 0x1cae <__addsf3x+0x4e>
    1c9a:	50 3e       	cpi	r21, 0xE0	; 224
    1c9c:	68 f1       	brcs	.+90     	; 0x1cf8 <__addsf3x+0x98>
    1c9e:	1a 16       	cp	r1, r26
    1ca0:	f0 40       	sbci	r31, 0x00	; 0
    1ca2:	a2 2f       	mov	r26, r18
    1ca4:	23 2f       	mov	r18, r19
    1ca6:	34 2f       	mov	r19, r20
    1ca8:	44 27       	eor	r20, r20
    1caa:	58 5f       	subi	r21, 0xF8	; 248
    1cac:	f3 cf       	rjmp	.-26     	; 0x1c94 <__addsf3x+0x34>
    1cae:	46 95       	lsr	r20
    1cb0:	37 95       	ror	r19
    1cb2:	27 95       	ror	r18
    1cb4:	a7 95       	ror	r26
    1cb6:	f0 40       	sbci	r31, 0x00	; 0
    1cb8:	53 95       	inc	r21
    1cba:	c9 f7       	brne	.-14     	; 0x1cae <__addsf3x+0x4e>
    1cbc:	7e f4       	brtc	.+30     	; 0x1cdc <__addsf3x+0x7c>
    1cbe:	1f 16       	cp	r1, r31
    1cc0:	ba 0b       	sbc	r27, r26
    1cc2:	62 0b       	sbc	r22, r18
    1cc4:	73 0b       	sbc	r23, r19
    1cc6:	84 0b       	sbc	r24, r20
    1cc8:	ba f0       	brmi	.+46     	; 0x1cf8 <__addsf3x+0x98>
    1cca:	91 50       	subi	r25, 0x01	; 1
    1ccc:	a1 f0       	breq	.+40     	; 0x1cf6 <__addsf3x+0x96>
    1cce:	ff 0f       	add	r31, r31
    1cd0:	bb 1f       	adc	r27, r27
    1cd2:	66 1f       	adc	r22, r22
    1cd4:	77 1f       	adc	r23, r23
    1cd6:	88 1f       	adc	r24, r24
    1cd8:	c2 f7       	brpl	.-16     	; 0x1cca <__addsf3x+0x6a>
    1cda:	0e c0       	rjmp	.+28     	; 0x1cf8 <__addsf3x+0x98>
    1cdc:	ba 0f       	add	r27, r26
    1cde:	62 1f       	adc	r22, r18
    1ce0:	73 1f       	adc	r23, r19
    1ce2:	84 1f       	adc	r24, r20
    1ce4:	48 f4       	brcc	.+18     	; 0x1cf8 <__addsf3x+0x98>
    1ce6:	87 95       	ror	r24
    1ce8:	77 95       	ror	r23
    1cea:	67 95       	ror	r22
    1cec:	b7 95       	ror	r27
    1cee:	f7 95       	ror	r31
    1cf0:	9e 3f       	cpi	r25, 0xFE	; 254
    1cf2:	08 f0       	brcs	.+2      	; 0x1cf6 <__addsf3x+0x96>
    1cf4:	b3 cf       	rjmp	.-154    	; 0x1c5c <__addsf3+0x1e>
    1cf6:	93 95       	inc	r25
    1cf8:	88 0f       	add	r24, r24
    1cfa:	08 f0       	brcs	.+2      	; 0x1cfe <__addsf3x+0x9e>
    1cfc:	99 27       	eor	r25, r25
    1cfe:	ee 0f       	add	r30, r30
    1d00:	97 95       	ror	r25
    1d02:	87 95       	ror	r24
    1d04:	08 95       	ret

00001d06 <__divsf3>:
    1d06:	0c d0       	rcall	.+24     	; 0x1d20 <__divsf3x>
    1d08:	ba c0       	rjmp	.+372    	; 0x1e7e <__fp_round>
    1d0a:	b2 d0       	rcall	.+356    	; 0x1e70 <__fp_pscB>
    1d0c:	40 f0       	brcs	.+16     	; 0x1d1e <__divsf3+0x18>
    1d0e:	a9 d0       	rcall	.+338    	; 0x1e62 <__fp_pscA>
    1d10:	30 f0       	brcs	.+12     	; 0x1d1e <__divsf3+0x18>
    1d12:	21 f4       	brne	.+8      	; 0x1d1c <__divsf3+0x16>
    1d14:	5f 3f       	cpi	r21, 0xFF	; 255
    1d16:	19 f0       	breq	.+6      	; 0x1d1e <__divsf3+0x18>
    1d18:	9b c0       	rjmp	.+310    	; 0x1e50 <__fp_inf>
    1d1a:	51 11       	cpse	r21, r1
    1d1c:	e4 c0       	rjmp	.+456    	; 0x1ee6 <__fp_szero>
    1d1e:	9e c0       	rjmp	.+316    	; 0x1e5c <__fp_nan>

00001d20 <__divsf3x>:
    1d20:	bf d0       	rcall	.+382    	; 0x1ea0 <__fp_split3>
    1d22:	98 f3       	brcs	.-26     	; 0x1d0a <__divsf3+0x4>

00001d24 <__divsf3_pse>:
    1d24:	99 23       	and	r25, r25
    1d26:	c9 f3       	breq	.-14     	; 0x1d1a <__divsf3+0x14>
    1d28:	55 23       	and	r21, r21
    1d2a:	b1 f3       	breq	.-20     	; 0x1d18 <__divsf3+0x12>
    1d2c:	95 1b       	sub	r25, r21
    1d2e:	55 0b       	sbc	r21, r21
    1d30:	bb 27       	eor	r27, r27
    1d32:	aa 27       	eor	r26, r26
    1d34:	62 17       	cp	r22, r18
    1d36:	73 07       	cpc	r23, r19
    1d38:	84 07       	cpc	r24, r20
    1d3a:	38 f0       	brcs	.+14     	; 0x1d4a <__divsf3_pse+0x26>
    1d3c:	9f 5f       	subi	r25, 0xFF	; 255
    1d3e:	5f 4f       	sbci	r21, 0xFF	; 255
    1d40:	22 0f       	add	r18, r18
    1d42:	33 1f       	adc	r19, r19
    1d44:	44 1f       	adc	r20, r20
    1d46:	aa 1f       	adc	r26, r26
    1d48:	a9 f3       	breq	.-22     	; 0x1d34 <__divsf3_pse+0x10>
    1d4a:	33 d0       	rcall	.+102    	; 0x1db2 <__divsf3_pse+0x8e>
    1d4c:	0e 2e       	mov	r0, r30
    1d4e:	3a f0       	brmi	.+14     	; 0x1d5e <__divsf3_pse+0x3a>
    1d50:	e0 e8       	ldi	r30, 0x80	; 128
    1d52:	30 d0       	rcall	.+96     	; 0x1db4 <__divsf3_pse+0x90>
    1d54:	91 50       	subi	r25, 0x01	; 1
    1d56:	50 40       	sbci	r21, 0x00	; 0
    1d58:	e6 95       	lsr	r30
    1d5a:	00 1c       	adc	r0, r0
    1d5c:	ca f7       	brpl	.-14     	; 0x1d50 <__divsf3_pse+0x2c>
    1d5e:	29 d0       	rcall	.+82     	; 0x1db2 <__divsf3_pse+0x8e>
    1d60:	fe 2f       	mov	r31, r30
    1d62:	27 d0       	rcall	.+78     	; 0x1db2 <__divsf3_pse+0x8e>
    1d64:	66 0f       	add	r22, r22
    1d66:	77 1f       	adc	r23, r23
    1d68:	88 1f       	adc	r24, r24
    1d6a:	bb 1f       	adc	r27, r27
    1d6c:	26 17       	cp	r18, r22
    1d6e:	37 07       	cpc	r19, r23
    1d70:	48 07       	cpc	r20, r24
    1d72:	ab 07       	cpc	r26, r27
    1d74:	b0 e8       	ldi	r27, 0x80	; 128
    1d76:	09 f0       	breq	.+2      	; 0x1d7a <__divsf3_pse+0x56>
    1d78:	bb 0b       	sbc	r27, r27
    1d7a:	80 2d       	mov	r24, r0
    1d7c:	bf 01       	movw	r22, r30
    1d7e:	ff 27       	eor	r31, r31
    1d80:	93 58       	subi	r25, 0x83	; 131
    1d82:	5f 4f       	sbci	r21, 0xFF	; 255
    1d84:	2a f0       	brmi	.+10     	; 0x1d90 <__divsf3_pse+0x6c>
    1d86:	9e 3f       	cpi	r25, 0xFE	; 254
    1d88:	51 05       	cpc	r21, r1
    1d8a:	68 f0       	brcs	.+26     	; 0x1da6 <__divsf3_pse+0x82>
    1d8c:	61 c0       	rjmp	.+194    	; 0x1e50 <__fp_inf>
    1d8e:	ab c0       	rjmp	.+342    	; 0x1ee6 <__fp_szero>
    1d90:	5f 3f       	cpi	r21, 0xFF	; 255
    1d92:	ec f3       	brlt	.-6      	; 0x1d8e <__divsf3_pse+0x6a>
    1d94:	98 3e       	cpi	r25, 0xE8	; 232
    1d96:	dc f3       	brlt	.-10     	; 0x1d8e <__divsf3_pse+0x6a>
    1d98:	86 95       	lsr	r24
    1d9a:	77 95       	ror	r23
    1d9c:	67 95       	ror	r22
    1d9e:	b7 95       	ror	r27
    1da0:	f7 95       	ror	r31
    1da2:	9f 5f       	subi	r25, 0xFF	; 255
    1da4:	c9 f7       	brne	.-14     	; 0x1d98 <__divsf3_pse+0x74>
    1da6:	88 0f       	add	r24, r24
    1da8:	91 1d       	adc	r25, r1
    1daa:	96 95       	lsr	r25
    1dac:	87 95       	ror	r24
    1dae:	97 f9       	bld	r25, 7
    1db0:	08 95       	ret
    1db2:	e1 e0       	ldi	r30, 0x01	; 1
    1db4:	66 0f       	add	r22, r22
    1db6:	77 1f       	adc	r23, r23
    1db8:	88 1f       	adc	r24, r24
    1dba:	bb 1f       	adc	r27, r27
    1dbc:	62 17       	cp	r22, r18
    1dbe:	73 07       	cpc	r23, r19
    1dc0:	84 07       	cpc	r24, r20
    1dc2:	ba 07       	cpc	r27, r26
    1dc4:	20 f0       	brcs	.+8      	; 0x1dce <__divsf3_pse+0xaa>
    1dc6:	62 1b       	sub	r22, r18
    1dc8:	73 0b       	sbc	r23, r19
    1dca:	84 0b       	sbc	r24, r20
    1dcc:	ba 0b       	sbc	r27, r26
    1dce:	ee 1f       	adc	r30, r30
    1dd0:	88 f7       	brcc	.-30     	; 0x1db4 <__divsf3_pse+0x90>
    1dd2:	e0 95       	com	r30
    1dd4:	08 95       	ret

00001dd6 <__floatunsisf>:
    1dd6:	e8 94       	clt
    1dd8:	09 c0       	rjmp	.+18     	; 0x1dec <__floatsisf+0x12>

00001dda <__floatsisf>:
    1dda:	97 fb       	bst	r25, 7
    1ddc:	3e f4       	brtc	.+14     	; 0x1dec <__floatsisf+0x12>
    1dde:	90 95       	com	r25
    1de0:	80 95       	com	r24
    1de2:	70 95       	com	r23
    1de4:	61 95       	neg	r22
    1de6:	7f 4f       	sbci	r23, 0xFF	; 255
    1de8:	8f 4f       	sbci	r24, 0xFF	; 255
    1dea:	9f 4f       	sbci	r25, 0xFF	; 255
    1dec:	99 23       	and	r25, r25
    1dee:	a9 f0       	breq	.+42     	; 0x1e1a <__floatsisf+0x40>
    1df0:	f9 2f       	mov	r31, r25
    1df2:	96 e9       	ldi	r25, 0x96	; 150
    1df4:	bb 27       	eor	r27, r27
    1df6:	93 95       	inc	r25
    1df8:	f6 95       	lsr	r31
    1dfa:	87 95       	ror	r24
    1dfc:	77 95       	ror	r23
    1dfe:	67 95       	ror	r22
    1e00:	b7 95       	ror	r27
    1e02:	f1 11       	cpse	r31, r1
    1e04:	f8 cf       	rjmp	.-16     	; 0x1df6 <__floatsisf+0x1c>
    1e06:	fa f4       	brpl	.+62     	; 0x1e46 <__floatsisf+0x6c>
    1e08:	bb 0f       	add	r27, r27
    1e0a:	11 f4       	brne	.+4      	; 0x1e10 <__floatsisf+0x36>
    1e0c:	60 ff       	sbrs	r22, 0
    1e0e:	1b c0       	rjmp	.+54     	; 0x1e46 <__floatsisf+0x6c>
    1e10:	6f 5f       	subi	r22, 0xFF	; 255
    1e12:	7f 4f       	sbci	r23, 0xFF	; 255
    1e14:	8f 4f       	sbci	r24, 0xFF	; 255
    1e16:	9f 4f       	sbci	r25, 0xFF	; 255
    1e18:	16 c0       	rjmp	.+44     	; 0x1e46 <__floatsisf+0x6c>
    1e1a:	88 23       	and	r24, r24
    1e1c:	11 f0       	breq	.+4      	; 0x1e22 <__floatsisf+0x48>
    1e1e:	96 e9       	ldi	r25, 0x96	; 150
    1e20:	11 c0       	rjmp	.+34     	; 0x1e44 <__floatsisf+0x6a>
    1e22:	77 23       	and	r23, r23
    1e24:	21 f0       	breq	.+8      	; 0x1e2e <__floatsisf+0x54>
    1e26:	9e e8       	ldi	r25, 0x8E	; 142
    1e28:	87 2f       	mov	r24, r23
    1e2a:	76 2f       	mov	r23, r22
    1e2c:	05 c0       	rjmp	.+10     	; 0x1e38 <__floatsisf+0x5e>
    1e2e:	66 23       	and	r22, r22
    1e30:	71 f0       	breq	.+28     	; 0x1e4e <__floatsisf+0x74>
    1e32:	96 e8       	ldi	r25, 0x86	; 134
    1e34:	86 2f       	mov	r24, r22
    1e36:	70 e0       	ldi	r23, 0x00	; 0
    1e38:	60 e0       	ldi	r22, 0x00	; 0
    1e3a:	2a f0       	brmi	.+10     	; 0x1e46 <__floatsisf+0x6c>
    1e3c:	9a 95       	dec	r25
    1e3e:	66 0f       	add	r22, r22
    1e40:	77 1f       	adc	r23, r23
    1e42:	88 1f       	adc	r24, r24
    1e44:	da f7       	brpl	.-10     	; 0x1e3c <__floatsisf+0x62>
    1e46:	88 0f       	add	r24, r24
    1e48:	96 95       	lsr	r25
    1e4a:	87 95       	ror	r24
    1e4c:	97 f9       	bld	r25, 7
    1e4e:	08 95       	ret

00001e50 <__fp_inf>:
    1e50:	97 f9       	bld	r25, 7
    1e52:	9f 67       	ori	r25, 0x7F	; 127
    1e54:	80 e8       	ldi	r24, 0x80	; 128
    1e56:	70 e0       	ldi	r23, 0x00	; 0
    1e58:	60 e0       	ldi	r22, 0x00	; 0
    1e5a:	08 95       	ret

00001e5c <__fp_nan>:
    1e5c:	9f ef       	ldi	r25, 0xFF	; 255
    1e5e:	80 ec       	ldi	r24, 0xC0	; 192
    1e60:	08 95       	ret

00001e62 <__fp_pscA>:
    1e62:	00 24       	eor	r0, r0
    1e64:	0a 94       	dec	r0
    1e66:	16 16       	cp	r1, r22
    1e68:	17 06       	cpc	r1, r23
    1e6a:	18 06       	cpc	r1, r24
    1e6c:	09 06       	cpc	r0, r25
    1e6e:	08 95       	ret

00001e70 <__fp_pscB>:
    1e70:	00 24       	eor	r0, r0
    1e72:	0a 94       	dec	r0
    1e74:	12 16       	cp	r1, r18
    1e76:	13 06       	cpc	r1, r19
    1e78:	14 06       	cpc	r1, r20
    1e7a:	05 06       	cpc	r0, r21
    1e7c:	08 95       	ret

00001e7e <__fp_round>:
    1e7e:	09 2e       	mov	r0, r25
    1e80:	03 94       	inc	r0
    1e82:	00 0c       	add	r0, r0
    1e84:	11 f4       	brne	.+4      	; 0x1e8a <__fp_round+0xc>
    1e86:	88 23       	and	r24, r24
    1e88:	52 f0       	brmi	.+20     	; 0x1e9e <__fp_round+0x20>
    1e8a:	bb 0f       	add	r27, r27
    1e8c:	40 f4       	brcc	.+16     	; 0x1e9e <__fp_round+0x20>
    1e8e:	bf 2b       	or	r27, r31
    1e90:	11 f4       	brne	.+4      	; 0x1e96 <__fp_round+0x18>
    1e92:	60 ff       	sbrs	r22, 0
    1e94:	04 c0       	rjmp	.+8      	; 0x1e9e <__fp_round+0x20>
    1e96:	6f 5f       	subi	r22, 0xFF	; 255
    1e98:	7f 4f       	sbci	r23, 0xFF	; 255
    1e9a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9e:	08 95       	ret

00001ea0 <__fp_split3>:
    1ea0:	57 fd       	sbrc	r21, 7
    1ea2:	90 58       	subi	r25, 0x80	; 128
    1ea4:	44 0f       	add	r20, r20
    1ea6:	55 1f       	adc	r21, r21
    1ea8:	59 f0       	breq	.+22     	; 0x1ec0 <__fp_splitA+0x10>
    1eaa:	5f 3f       	cpi	r21, 0xFF	; 255
    1eac:	71 f0       	breq	.+28     	; 0x1eca <__fp_splitA+0x1a>
    1eae:	47 95       	ror	r20

00001eb0 <__fp_splitA>:
    1eb0:	88 0f       	add	r24, r24
    1eb2:	97 fb       	bst	r25, 7
    1eb4:	99 1f       	adc	r25, r25
    1eb6:	61 f0       	breq	.+24     	; 0x1ed0 <__fp_splitA+0x20>
    1eb8:	9f 3f       	cpi	r25, 0xFF	; 255
    1eba:	79 f0       	breq	.+30     	; 0x1eda <__fp_splitA+0x2a>
    1ebc:	87 95       	ror	r24
    1ebe:	08 95       	ret
    1ec0:	12 16       	cp	r1, r18
    1ec2:	13 06       	cpc	r1, r19
    1ec4:	14 06       	cpc	r1, r20
    1ec6:	55 1f       	adc	r21, r21
    1ec8:	f2 cf       	rjmp	.-28     	; 0x1eae <__fp_split3+0xe>
    1eca:	46 95       	lsr	r20
    1ecc:	f1 df       	rcall	.-30     	; 0x1eb0 <__fp_splitA>
    1ece:	08 c0       	rjmp	.+16     	; 0x1ee0 <__fp_splitA+0x30>
    1ed0:	16 16       	cp	r1, r22
    1ed2:	17 06       	cpc	r1, r23
    1ed4:	18 06       	cpc	r1, r24
    1ed6:	99 1f       	adc	r25, r25
    1ed8:	f1 cf       	rjmp	.-30     	; 0x1ebc <__fp_splitA+0xc>
    1eda:	86 95       	lsr	r24
    1edc:	71 05       	cpc	r23, r1
    1ede:	61 05       	cpc	r22, r1
    1ee0:	08 94       	sec
    1ee2:	08 95       	ret

00001ee4 <__fp_zero>:
    1ee4:	e8 94       	clt

00001ee6 <__fp_szero>:
    1ee6:	bb 27       	eor	r27, r27
    1ee8:	66 27       	eor	r22, r22
    1eea:	77 27       	eor	r23, r23
    1eec:	cb 01       	movw	r24, r22
    1eee:	97 f9       	bld	r25, 7
    1ef0:	08 95       	ret

00001ef2 <__mulsf3>:
    1ef2:	0b d0       	rcall	.+22     	; 0x1f0a <__mulsf3x>
    1ef4:	c4 cf       	rjmp	.-120    	; 0x1e7e <__fp_round>
    1ef6:	b5 df       	rcall	.-150    	; 0x1e62 <__fp_pscA>
    1ef8:	28 f0       	brcs	.+10     	; 0x1f04 <__mulsf3+0x12>
    1efa:	ba df       	rcall	.-140    	; 0x1e70 <__fp_pscB>
    1efc:	18 f0       	brcs	.+6      	; 0x1f04 <__mulsf3+0x12>
    1efe:	95 23       	and	r25, r21
    1f00:	09 f0       	breq	.+2      	; 0x1f04 <__mulsf3+0x12>
    1f02:	a6 cf       	rjmp	.-180    	; 0x1e50 <__fp_inf>
    1f04:	ab cf       	rjmp	.-170    	; 0x1e5c <__fp_nan>
    1f06:	11 24       	eor	r1, r1
    1f08:	ee cf       	rjmp	.-36     	; 0x1ee6 <__fp_szero>

00001f0a <__mulsf3x>:
    1f0a:	ca df       	rcall	.-108    	; 0x1ea0 <__fp_split3>
    1f0c:	a0 f3       	brcs	.-24     	; 0x1ef6 <__mulsf3+0x4>

00001f0e <__mulsf3_pse>:
    1f0e:	95 9f       	mul	r25, r21
    1f10:	d1 f3       	breq	.-12     	; 0x1f06 <__mulsf3+0x14>
    1f12:	95 0f       	add	r25, r21
    1f14:	50 e0       	ldi	r21, 0x00	; 0
    1f16:	55 1f       	adc	r21, r21
    1f18:	62 9f       	mul	r22, r18
    1f1a:	f0 01       	movw	r30, r0
    1f1c:	72 9f       	mul	r23, r18
    1f1e:	bb 27       	eor	r27, r27
    1f20:	f0 0d       	add	r31, r0
    1f22:	b1 1d       	adc	r27, r1
    1f24:	63 9f       	mul	r22, r19
    1f26:	aa 27       	eor	r26, r26
    1f28:	f0 0d       	add	r31, r0
    1f2a:	b1 1d       	adc	r27, r1
    1f2c:	aa 1f       	adc	r26, r26
    1f2e:	64 9f       	mul	r22, r20
    1f30:	66 27       	eor	r22, r22
    1f32:	b0 0d       	add	r27, r0
    1f34:	a1 1d       	adc	r26, r1
    1f36:	66 1f       	adc	r22, r22
    1f38:	82 9f       	mul	r24, r18
    1f3a:	22 27       	eor	r18, r18
    1f3c:	b0 0d       	add	r27, r0
    1f3e:	a1 1d       	adc	r26, r1
    1f40:	62 1f       	adc	r22, r18
    1f42:	73 9f       	mul	r23, r19
    1f44:	b0 0d       	add	r27, r0
    1f46:	a1 1d       	adc	r26, r1
    1f48:	62 1f       	adc	r22, r18
    1f4a:	83 9f       	mul	r24, r19
    1f4c:	a0 0d       	add	r26, r0
    1f4e:	61 1d       	adc	r22, r1
    1f50:	22 1f       	adc	r18, r18
    1f52:	74 9f       	mul	r23, r20
    1f54:	33 27       	eor	r19, r19
    1f56:	a0 0d       	add	r26, r0
    1f58:	61 1d       	adc	r22, r1
    1f5a:	23 1f       	adc	r18, r19
    1f5c:	84 9f       	mul	r24, r20
    1f5e:	60 0d       	add	r22, r0
    1f60:	21 1d       	adc	r18, r1
    1f62:	82 2f       	mov	r24, r18
    1f64:	76 2f       	mov	r23, r22
    1f66:	6a 2f       	mov	r22, r26
    1f68:	11 24       	eor	r1, r1
    1f6a:	9f 57       	subi	r25, 0x7F	; 127
    1f6c:	50 40       	sbci	r21, 0x00	; 0
    1f6e:	8a f0       	brmi	.+34     	; 0x1f92 <__mulsf3_pse+0x84>
    1f70:	e1 f0       	breq	.+56     	; 0x1faa <__mulsf3_pse+0x9c>
    1f72:	88 23       	and	r24, r24
    1f74:	4a f0       	brmi	.+18     	; 0x1f88 <__mulsf3_pse+0x7a>
    1f76:	ee 0f       	add	r30, r30
    1f78:	ff 1f       	adc	r31, r31
    1f7a:	bb 1f       	adc	r27, r27
    1f7c:	66 1f       	adc	r22, r22
    1f7e:	77 1f       	adc	r23, r23
    1f80:	88 1f       	adc	r24, r24
    1f82:	91 50       	subi	r25, 0x01	; 1
    1f84:	50 40       	sbci	r21, 0x00	; 0
    1f86:	a9 f7       	brne	.-22     	; 0x1f72 <__mulsf3_pse+0x64>
    1f88:	9e 3f       	cpi	r25, 0xFE	; 254
    1f8a:	51 05       	cpc	r21, r1
    1f8c:	70 f0       	brcs	.+28     	; 0x1faa <__mulsf3_pse+0x9c>
    1f8e:	60 cf       	rjmp	.-320    	; 0x1e50 <__fp_inf>
    1f90:	aa cf       	rjmp	.-172    	; 0x1ee6 <__fp_szero>
    1f92:	5f 3f       	cpi	r21, 0xFF	; 255
    1f94:	ec f3       	brlt	.-6      	; 0x1f90 <__mulsf3_pse+0x82>
    1f96:	98 3e       	cpi	r25, 0xE8	; 232
    1f98:	dc f3       	brlt	.-10     	; 0x1f90 <__mulsf3_pse+0x82>
    1f9a:	86 95       	lsr	r24
    1f9c:	77 95       	ror	r23
    1f9e:	67 95       	ror	r22
    1fa0:	b7 95       	ror	r27
    1fa2:	f7 95       	ror	r31
    1fa4:	e7 95       	ror	r30
    1fa6:	9f 5f       	subi	r25, 0xFF	; 255
    1fa8:	c1 f7       	brne	.-16     	; 0x1f9a <__mulsf3_pse+0x8c>
    1faa:	fe 2b       	or	r31, r30
    1fac:	88 0f       	add	r24, r24
    1fae:	91 1d       	adc	r25, r1
    1fb0:	96 95       	lsr	r25
    1fb2:	87 95       	ror	r24
    1fb4:	97 f9       	bld	r25, 7
    1fb6:	08 95       	ret

00001fb8 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    1fb8:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    1fba:	91 8d       	ldd	r25, Z+25	; 0x19
    1fbc:	22 8d       	ldd	r18, Z+26	; 0x1a
    1fbe:	89 2f       	mov	r24, r25
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	80 5c       	subi	r24, 0xC0	; 192
    1fc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc6:	82 1b       	sub	r24, r18
    1fc8:	91 09       	sbc	r25, r1
}
    1fca:	8f 73       	andi	r24, 0x3F	; 63
    1fcc:	99 27       	eor	r25, r25
    1fce:	08 95       	ret

00001fd0 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    1fd0:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    1fd2:	91 8d       	ldd	r25, Z+25	; 0x19
    1fd4:	82 8d       	ldd	r24, Z+26	; 0x1a
    1fd6:	98 17       	cp	r25, r24
    1fd8:	31 f0       	breq	.+12     	; 0x1fe6 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    1fda:	82 8d       	ldd	r24, Z+26	; 0x1a
    1fdc:	e8 0f       	add	r30, r24
    1fde:	f1 1d       	adc	r31, r1
    1fe0:	85 8d       	ldd	r24, Z+29	; 0x1d
    1fe2:	90 e0       	ldi	r25, 0x00	; 0
    1fe4:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1fe6:	8f ef       	ldi	r24, 0xFF	; 255
    1fe8:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    1fea:	08 95       	ret

00001fec <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    1fec:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    1fee:	91 8d       	ldd	r25, Z+25	; 0x19
    1ff0:	82 8d       	ldd	r24, Z+26	; 0x1a
    1ff2:	98 17       	cp	r25, r24
    1ff4:	61 f0       	breq	.+24     	; 0x200e <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    1ff6:	82 8d       	ldd	r24, Z+26	; 0x1a
    1ff8:	df 01       	movw	r26, r30
    1ffa:	a8 0f       	add	r26, r24
    1ffc:	b1 1d       	adc	r27, r1
    1ffe:	5d 96       	adiw	r26, 0x1d	; 29
    2000:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    2002:	92 8d       	ldd	r25, Z+26	; 0x1a
    2004:	9f 5f       	subi	r25, 0xFF	; 255
    2006:	9f 73       	andi	r25, 0x3F	; 63
    2008:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    200e:	8f ef       	ldi	r24, 0xFF	; 255
    2010:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    2012:	08 95       	ret

00002014 <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    2014:	fc 01       	movw	r30, r24
    2016:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    2018:	44 8d       	ldd	r20, Z+28	; 0x1c
    201a:	25 2f       	mov	r18, r21
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	84 2f       	mov	r24, r20
    2020:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    2022:	82 1b       	sub	r24, r18
    2024:	93 0b       	sbc	r25, r19
    2026:	54 17       	cp	r21, r20
    2028:	10 f0       	brcs	.+4      	; 0x202e <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    202a:	cf 96       	adiw	r24, 0x3f	; 63
    202c:	08 95       	ret
  return tail - head - 1;
    202e:	01 97       	sbiw	r24, 0x01	; 1
}
    2030:	08 95       	ret

00002032 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    2032:	86 ea       	ldi	r24, 0xA6	; 166
    2034:	91 e1       	ldi	r25, 0x11	; 17
    2036:	89 2b       	or	r24, r25
    2038:	39 f0       	breq	.+14     	; 0x2048 <_Z14serialEventRunv+0x16>
    203a:	80 e0       	ldi	r24, 0x00	; 0
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	89 2b       	or	r24, r25
    2040:	19 f0       	breq	.+6      	; 0x2048 <_Z14serialEventRunv+0x16>
    2042:	84 d1       	rcall	.+776    	; 0x234c <_Z17Serial0_availablev>
    2044:	81 11       	cpse	r24, r1
    2046:	24 c0       	rjmp	.+72     	; 0x2090 <_Z14serialEventRunv+0x5e>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    2048:	8b e3       	ldi	r24, 0x3B	; 59
    204a:	92 e1       	ldi	r25, 0x12	; 18
    204c:	89 2b       	or	r24, r25
    204e:	39 f0       	breq	.+14     	; 0x205e <_Z14serialEventRunv+0x2c>
    2050:	80 e0       	ldi	r24, 0x00	; 0
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	89 2b       	or	r24, r25
    2056:	19 f0       	breq	.+6      	; 0x205e <_Z14serialEventRunv+0x2c>
    2058:	0e d2       	rcall	.+1052   	; 0x2476 <_Z17Serial1_availablev>
    205a:	81 11       	cpse	r24, r1
    205c:	1c c0       	rjmp	.+56     	; 0x2096 <_Z14serialEventRunv+0x64>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    205e:	80 e0       	ldi	r24, 0x00	; 0
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	89 2b       	or	r24, r25
    2064:	41 f0       	breq	.+16     	; 0x2076 <_Z14serialEventRunv+0x44>
    2066:	80 e0       	ldi	r24, 0x00	; 0
    2068:	90 e0       	ldi	r25, 0x00	; 0
    206a:	89 2b       	or	r24, r25
    206c:	21 f0       	breq	.+8      	; 0x2076 <_Z14serialEventRunv+0x44>
    206e:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    2072:	81 11       	cpse	r24, r1
    2074:	13 c0       	rjmp	.+38     	; 0x209c <_Z14serialEventRunv+0x6a>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    2076:	80 e0       	ldi	r24, 0x00	; 0
    2078:	90 e0       	ldi	r25, 0x00	; 0
    207a:	89 2b       	or	r24, r25
    207c:	a1 f0       	breq	.+40     	; 0x20a6 <_Z14serialEventRunv+0x74>
    207e:	80 e0       	ldi	r24, 0x00	; 0
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	89 2b       	or	r24, r25
    2084:	81 f0       	breq	.+32     	; 0x20a6 <_Z14serialEventRunv+0x74>
    2086:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    208a:	81 11       	cpse	r24, r1
    208c:	0a c0       	rjmp	.+20     	; 0x20a2 <_Z14serialEventRunv+0x70>
    208e:	08 95       	ret
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    2090:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    2094:	d9 cf       	rjmp	.-78     	; 0x2048 <_Z14serialEventRunv+0x16>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    2096:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    209a:	e1 cf       	rjmp	.-62     	; 0x205e <_Z14serialEventRunv+0x2c>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    209c:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    20a0:	ea cf       	rjmp	.-44     	; 0x2076 <_Z14serialEventRunv+0x44>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    20a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    20a6:	08 95       	ret

000020a8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    20a8:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    20aa:	84 8d       	ldd	r24, Z+28	; 0x1c
    20ac:	df 01       	movw	r26, r30
    20ae:	a8 0f       	add	r26, r24
    20b0:	b1 1d       	adc	r27, r1
    20b2:	a3 5a       	subi	r26, 0xA3	; 163
    20b4:	bf 4f       	sbci	r27, 0xFF	; 255
    20b6:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    20b8:	84 8d       	ldd	r24, Z+28	; 0x1c
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	01 96       	adiw	r24, 0x01	; 1
    20be:	8f 73       	andi	r24, 0x3F	; 63
    20c0:	99 27       	eor	r25, r25
    20c2:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    20c4:	a6 89       	ldd	r26, Z+22	; 0x16
    20c6:	b7 89       	ldd	r27, Z+23	; 0x17
    20c8:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    20ca:	a0 89       	ldd	r26, Z+16	; 0x10
    20cc:	b1 89       	ldd	r27, Z+17	; 0x11
    20ce:	8c 91       	ld	r24, X
    20d0:	83 70       	andi	r24, 0x03	; 3
    20d2:	80 64       	ori	r24, 0x40	; 64
    20d4:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    20d6:	93 8d       	ldd	r25, Z+27	; 0x1b
    20d8:	84 8d       	ldd	r24, Z+28	; 0x1c
    20da:	98 13       	cpse	r25, r24
    20dc:	06 c0       	rjmp	.+12     	; 0x20ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    20de:	02 88       	ldd	r0, Z+18	; 0x12
    20e0:	f3 89       	ldd	r31, Z+19	; 0x13
    20e2:	e0 2d       	mov	r30, r0
    20e4:	80 81       	ld	r24, Z
    20e6:	8f 7d       	andi	r24, 0xDF	; 223
    20e8:	80 83       	st	Z, r24
    20ea:	08 95       	ret

000020ec <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    20ec:	ef 92       	push	r14
    20ee:	ff 92       	push	r15
    20f0:	0f 93       	push	r16
    20f2:	1f 93       	push	r17
    20f4:	cf 93       	push	r28
    20f6:	df 93       	push	r29
    20f8:	ec 01       	movw	r28, r24
  _written = true;
    20fa:	81 e0       	ldi	r24, 0x01	; 1
    20fc:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    20fe:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2100:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2102:	98 13       	cpse	r25, r24
    2104:	05 c0       	rjmp	.+10     	; 0x2110 <_ZN14HardwareSerial5writeEh+0x24>
    2106:	e8 89       	ldd	r30, Y+16	; 0x10
    2108:	f9 89       	ldd	r31, Y+17	; 0x11
    210a:	80 81       	ld	r24, Z
    210c:	85 fd       	sbrc	r24, 5
    210e:	25 c0       	rjmp	.+74     	; 0x215a <_ZN14HardwareSerial5writeEh+0x6e>
    2110:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    2112:	0b 8d       	ldd	r16, Y+27	; 0x1b
    2114:	10 e0       	ldi	r17, 0x00	; 0
    2116:	0f 5f       	subi	r16, 0xFF	; 255
    2118:	1f 4f       	sbci	r17, 0xFF	; 255
    211a:	0f 73       	andi	r16, 0x3F	; 63
    211c:	11 27       	eor	r17, r17
    211e:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    2120:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2122:	e8 12       	cpse	r14, r24
    2124:	0b c0       	rjmp	.+22     	; 0x213c <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
    2126:	0f b6       	in	r0, 0x3f	; 63
    2128:	07 fc       	sbrc	r0, 7
    212a:	fa cf       	rjmp	.-12     	; 0x2120 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    212c:	e8 89       	ldd	r30, Y+16	; 0x10
    212e:	f9 89       	ldd	r31, Y+17	; 0x11
    2130:	80 81       	ld	r24, Z
    2132:	85 ff       	sbrs	r24, 5
    2134:	f5 cf       	rjmp	.-22     	; 0x2120 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    2136:	ce 01       	movw	r24, r28
    2138:	b7 df       	rcall	.-146    	; 0x20a8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    213a:	f2 cf       	rjmp	.-28     	; 0x2120 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    213c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    213e:	fe 01       	movw	r30, r28
    2140:	e8 0f       	add	r30, r24
    2142:	f1 1d       	adc	r31, r1
    2144:	e3 5a       	subi	r30, 0xA3	; 163
    2146:	ff 4f       	sbci	r31, 0xFF	; 255
    2148:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    214a:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    214c:	f8 94       	cli
    _tx_buffer_head = i;
    214e:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    2150:	ea 89       	ldd	r30, Y+18	; 0x12
    2152:	fb 89       	ldd	r31, Y+19	; 0x13
    2154:	80 81       	ld	r24, Z
    2156:	80 62       	ori	r24, 0x20	; 32
    2158:	0a c0       	rjmp	.+20     	; 0x216e <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    215a:	9f b7       	in	r25, 0x3f	; 63
    215c:	f8 94       	cli
      *_udr = c;
    215e:	ee 89       	ldd	r30, Y+22	; 0x16
    2160:	ff 89       	ldd	r31, Y+23	; 0x17
    2162:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2164:	e8 89       	ldd	r30, Y+16	; 0x10
    2166:	f9 89       	ldd	r31, Y+17	; 0x11
    2168:	80 81       	ld	r24, Z
    216a:	83 70       	andi	r24, 0x03	; 3
    216c:	80 64       	ori	r24, 0x40	; 64
    216e:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2170:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    2172:	81 e0       	ldi	r24, 0x01	; 1
    2174:	90 e0       	ldi	r25, 0x00	; 0
    2176:	df 91       	pop	r29
    2178:	cf 91       	pop	r28
    217a:	1f 91       	pop	r17
    217c:	0f 91       	pop	r16
    217e:	ff 90       	pop	r15
    2180:	ef 90       	pop	r14
    2182:	08 95       	ret

00002184 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    2184:	cf 93       	push	r28
    2186:	df 93       	push	r29
    2188:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    218a:	88 8d       	ldd	r24, Y+24	; 0x18
    218c:	88 23       	and	r24, r24
    218e:	c1 f0       	breq	.+48     	; 0x21c0 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    2190:	ea 89       	ldd	r30, Y+18	; 0x12
    2192:	fb 89       	ldd	r31, Y+19	; 0x13
    2194:	80 81       	ld	r24, Z
    2196:	85 fd       	sbrc	r24, 5
    2198:	05 c0       	rjmp	.+10     	; 0x21a4 <_ZN14HardwareSerial5flushEv+0x20>
    219a:	a8 89       	ldd	r26, Y+16	; 0x10
    219c:	b9 89       	ldd	r27, Y+17	; 0x11
    219e:	8c 91       	ld	r24, X
    21a0:	86 fd       	sbrc	r24, 6
    21a2:	0e c0       	rjmp	.+28     	; 0x21c0 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    21a4:	0f b6       	in	r0, 0x3f	; 63
    21a6:	07 fc       	sbrc	r0, 7
    21a8:	f5 cf       	rjmp	.-22     	; 0x2194 <_ZN14HardwareSerial5flushEv+0x10>
    21aa:	80 81       	ld	r24, Z
    21ac:	85 ff       	sbrs	r24, 5
    21ae:	f2 cf       	rjmp	.-28     	; 0x2194 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    21b0:	a8 89       	ldd	r26, Y+16	; 0x10
    21b2:	b9 89       	ldd	r27, Y+17	; 0x11
    21b4:	8c 91       	ld	r24, X
    21b6:	85 ff       	sbrs	r24, 5
    21b8:	ed cf       	rjmp	.-38     	; 0x2194 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    21ba:	ce 01       	movw	r24, r28
    21bc:	75 df       	rcall	.-278    	; 0x20a8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    21be:	e8 cf       	rjmp	.-48     	; 0x2190 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    21c0:	df 91       	pop	r29
    21c2:	cf 91       	pop	r28
    21c4:	08 95       	ret

000021c6 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    21c6:	cf 92       	push	r12
    21c8:	df 92       	push	r13
    21ca:	ef 92       	push	r14
    21cc:	ff 92       	push	r15
    21ce:	1f 93       	push	r17
    21d0:	cf 93       	push	r28
    21d2:	df 93       	push	r29
    21d4:	ec 01       	movw	r28, r24
    21d6:	6a 01       	movw	r12, r20
    21d8:	7b 01       	movw	r14, r22
    21da:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    21dc:	60 e2       	ldi	r22, 0x20	; 32
    21de:	71 ea       	ldi	r23, 0xA1	; 161
    21e0:	87 e0       	ldi	r24, 0x07	; 7
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	a7 01       	movw	r20, r14
    21e6:	96 01       	movw	r18, r12
    21e8:	0e 94 9b 2e 	call	0x5d36	; 0x5d36 <__udivmodsi4>
    21ec:	da 01       	movw	r26, r20
    21ee:	c9 01       	movw	r24, r18
    21f0:	01 97       	sbiw	r24, 0x01	; 1
    21f2:	a1 09       	sbc	r26, r1
    21f4:	b1 09       	sbc	r27, r1
    21f6:	b6 95       	lsr	r27
    21f8:	a7 95       	ror	r26
    21fa:	97 95       	ror	r25
    21fc:	87 95       	ror	r24
    21fe:	9c 01       	movw	r18, r24
  *_ucsra = 1 << U2X0;
    2200:	e8 89       	ldd	r30, Y+16	; 0x10
    2202:	f9 89       	ldd	r31, Y+17	; 0x11
    2204:	82 e0       	ldi	r24, 0x02	; 2
    2206:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2208:	21 15       	cp	r18, r1
    220a:	80 e1       	ldi	r24, 0x10	; 16
    220c:	38 07       	cpc	r19, r24
    220e:	a8 f0       	brcs	.+42     	; 0x223a <__stack+0x3b>
  {
    *_ucsra = 0;
    2210:	e8 89       	ldd	r30, Y+16	; 0x10
    2212:	f9 89       	ldd	r31, Y+17	; 0x11
    2214:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    2216:	60 e9       	ldi	r22, 0x90	; 144
    2218:	70 ed       	ldi	r23, 0xD0	; 208
    221a:	83 e0       	ldi	r24, 0x03	; 3
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	a7 01       	movw	r20, r14
    2220:	96 01       	movw	r18, r12
    2222:	0e 94 9b 2e 	call	0x5d36	; 0x5d36 <__udivmodsi4>
    2226:	da 01       	movw	r26, r20
    2228:	c9 01       	movw	r24, r18
    222a:	01 97       	sbiw	r24, 0x01	; 1
    222c:	a1 09       	sbc	r26, r1
    222e:	b1 09       	sbc	r27, r1
    2230:	b6 95       	lsr	r27
    2232:	a7 95       	ror	r26
    2234:	97 95       	ror	r25
    2236:	87 95       	ror	r24
    2238:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    223a:	ec 85       	ldd	r30, Y+12	; 0x0c
    223c:	fd 85       	ldd	r31, Y+13	; 0x0d
    223e:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    2240:	ee 85       	ldd	r30, Y+14	; 0x0e
    2242:	ff 85       	ldd	r31, Y+15	; 0x0f
    2244:	20 83       	st	Z, r18

  _written = false;
    2246:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    2248:	ec 89       	ldd	r30, Y+20	; 0x14
    224a:	fd 89       	ldd	r31, Y+21	; 0x15
    224c:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    224e:	ea 89       	ldd	r30, Y+18	; 0x12
    2250:	fb 89       	ldd	r31, Y+19	; 0x13
    2252:	80 81       	ld	r24, Z
    2254:	80 61       	ori	r24, 0x10	; 16
    2256:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    2258:	ea 89       	ldd	r30, Y+18	; 0x12
    225a:	fb 89       	ldd	r31, Y+19	; 0x13
    225c:	80 81       	ld	r24, Z
    225e:	88 60       	ori	r24, 0x08	; 8
    2260:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    2262:	ea 89       	ldd	r30, Y+18	; 0x12
    2264:	fb 89       	ldd	r31, Y+19	; 0x13
    2266:	80 81       	ld	r24, Z
    2268:	80 68       	ori	r24, 0x80	; 128
    226a:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    226c:	ea 89       	ldd	r30, Y+18	; 0x12
    226e:	fb 89       	ldd	r31, Y+19	; 0x13
    2270:	80 81       	ld	r24, Z
    2272:	8f 7d       	andi	r24, 0xDF	; 223
    2274:	80 83       	st	Z, r24
}
    2276:	df 91       	pop	r29
    2278:	cf 91       	pop	r28
    227a:	1f 91       	pop	r17
    227c:	ff 90       	pop	r15
    227e:	ef 90       	pop	r14
    2280:	df 90       	pop	r13
    2282:	cf 90       	pop	r12
    2284:	08 95       	ret

00002286 <_ZN5Print17availableForWriteEv>:
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
    2286:	80 e0       	ldi	r24, 0x00	; 0
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	08 95       	ret

0000228c <_ZN5Print5flushEv>:
    size_t println(unsigned long, int = DEC);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    228c:	08 95       	ret

0000228e <__vector_25>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    228e:	1f 92       	push	r1
    2290:	0f 92       	push	r0
    2292:	0f b6       	in	r0, 0x3f	; 63
    2294:	0f 92       	push	r0
    2296:	11 24       	eor	r1, r1
    2298:	0b b6       	in	r0, 0x3b	; 59
    229a:	0f 92       	push	r0
    229c:	2f 93       	push	r18
    229e:	8f 93       	push	r24
    22a0:	9f 93       	push	r25
    22a2:	ef 93       	push	r30
    22a4:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    22a6:	e0 91 2d 05 	lds	r30, 0x052D	; 0x80052d <Serial+0x10>
    22aa:	f0 91 2e 05 	lds	r31, 0x052E	; 0x80052e <Serial+0x11>
    22ae:	80 81       	ld	r24, Z
    22b0:	e0 91 33 05 	lds	r30, 0x0533	; 0x800533 <Serial+0x16>
    22b4:	f0 91 34 05 	lds	r31, 0x0534	; 0x800534 <Serial+0x17>
    22b8:	82 fd       	sbrc	r24, 2
    22ba:	12 c0       	rjmp	.+36     	; 0x22e0 <__vector_25+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    22bc:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    22be:	80 91 36 05 	lds	r24, 0x0536	; 0x800536 <Serial+0x19>
    22c2:	8f 5f       	subi	r24, 0xFF	; 255
    22c4:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    22c6:	20 91 37 05 	lds	r18, 0x0537	; 0x800537 <Serial+0x1a>
    22ca:	82 17       	cp	r24, r18
    22cc:	51 f0       	breq	.+20     	; 0x22e2 <__vector_25+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    22ce:	e0 91 36 05 	lds	r30, 0x0536	; 0x800536 <Serial+0x19>
    22d2:	f0 e0       	ldi	r31, 0x00	; 0
    22d4:	e3 5e       	subi	r30, 0xE3	; 227
    22d6:	fa 4f       	sbci	r31, 0xFA	; 250
    22d8:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    22da:	80 93 36 05 	sts	0x0536, r24	; 0x800536 <Serial+0x19>
    22de:	01 c0       	rjmp	.+2      	; 0x22e2 <__vector_25+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    22e0:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    22e2:	ff 91       	pop	r31
    22e4:	ef 91       	pop	r30
    22e6:	9f 91       	pop	r25
    22e8:	8f 91       	pop	r24
    22ea:	2f 91       	pop	r18
    22ec:	0f 90       	pop	r0
    22ee:	0b be       	out	0x3b, r0	; 59
    22f0:	0f 90       	pop	r0
    22f2:	0f be       	out	0x3f, r0	; 63
    22f4:	0f 90       	pop	r0
    22f6:	1f 90       	pop	r1
    22f8:	18 95       	reti

000022fa <__vector_26>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    22fa:	1f 92       	push	r1
    22fc:	0f 92       	push	r0
    22fe:	0f b6       	in	r0, 0x3f	; 63
    2300:	0f 92       	push	r0
    2302:	11 24       	eor	r1, r1
    2304:	0b b6       	in	r0, 0x3b	; 59
    2306:	0f 92       	push	r0
    2308:	2f 93       	push	r18
    230a:	3f 93       	push	r19
    230c:	4f 93       	push	r20
    230e:	5f 93       	push	r21
    2310:	6f 93       	push	r22
    2312:	7f 93       	push	r23
    2314:	8f 93       	push	r24
    2316:	9f 93       	push	r25
    2318:	af 93       	push	r26
    231a:	bf 93       	push	r27
    231c:	ef 93       	push	r30
    231e:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    2320:	8d e1       	ldi	r24, 0x1D	; 29
    2322:	95 e0       	ldi	r25, 0x05	; 5
    2324:	c1 de       	rcall	.-638    	; 0x20a8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    2326:	ff 91       	pop	r31
    2328:	ef 91       	pop	r30
    232a:	bf 91       	pop	r27
    232c:	af 91       	pop	r26
    232e:	9f 91       	pop	r25
    2330:	8f 91       	pop	r24
    2332:	7f 91       	pop	r23
    2334:	6f 91       	pop	r22
    2336:	5f 91       	pop	r21
    2338:	4f 91       	pop	r20
    233a:	3f 91       	pop	r19
    233c:	2f 91       	pop	r18
    233e:	0f 90       	pop	r0
    2340:	0b be       	out	0x3b, r0	; 59
    2342:	0f 90       	pop	r0
    2344:	0f be       	out	0x3f, r0	; 63
    2346:	0f 90       	pop	r0
    2348:	1f 90       	pop	r1
    234a:	18 95       	reti

0000234c <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    234c:	8d e1       	ldi	r24, 0x1D	; 29
    234e:	95 e0       	ldi	r25, 0x05	; 5
    2350:	33 de       	rcall	.-922    	; 0x1fb8 <_ZN14HardwareSerial9availableEv>
    2352:	21 e0       	ldi	r18, 0x01	; 1
    2354:	89 2b       	or	r24, r25
    2356:	09 f4       	brne	.+2      	; 0x235a <_Z17Serial0_availablev+0xe>
    2358:	20 e0       	ldi	r18, 0x00	; 0
}
    235a:	82 2f       	mov	r24, r18
    235c:	08 95       	ret

0000235e <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    235e:	ed e1       	ldi	r30, 0x1D	; 29
    2360:	f5 e0       	ldi	r31, 0x05	; 5
    2362:	13 82       	std	Z+3, r1	; 0x03
    2364:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    2366:	88 ee       	ldi	r24, 0xE8	; 232
    2368:	93 e0       	ldi	r25, 0x03	; 3
    236a:	a0 e0       	ldi	r26, 0x00	; 0
    236c:	b0 e0       	ldi	r27, 0x00	; 0
    236e:	84 83       	std	Z+4, r24	; 0x04
    2370:	95 83       	std	Z+5, r25	; 0x05
    2372:	a6 83       	std	Z+6, r26	; 0x06
    2374:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    2376:	81 e5       	ldi	r24, 0x51	; 81
    2378:	94 e0       	ldi	r25, 0x04	; 4
    237a:	91 83       	std	Z+1, r25	; 0x01
    237c:	80 83       	st	Z, r24
    237e:	85 ec       	ldi	r24, 0xC5	; 197
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	95 87       	std	Z+13, r25	; 0x0d
    2384:	84 87       	std	Z+12, r24	; 0x0c
    2386:	84 ec       	ldi	r24, 0xC4	; 196
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	97 87       	std	Z+15, r25	; 0x0f
    238c:	86 87       	std	Z+14, r24	; 0x0e
    238e:	80 ec       	ldi	r24, 0xC0	; 192
    2390:	90 e0       	ldi	r25, 0x00	; 0
    2392:	91 8b       	std	Z+17, r25	; 0x11
    2394:	80 8b       	std	Z+16, r24	; 0x10
    2396:	81 ec       	ldi	r24, 0xC1	; 193
    2398:	90 e0       	ldi	r25, 0x00	; 0
    239a:	93 8b       	std	Z+19, r25	; 0x13
    239c:	82 8b       	std	Z+18, r24	; 0x12
    239e:	82 ec       	ldi	r24, 0xC2	; 194
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	95 8b       	std	Z+21, r25	; 0x15
    23a4:	84 8b       	std	Z+20, r24	; 0x14
    23a6:	86 ec       	ldi	r24, 0xC6	; 198
    23a8:	90 e0       	ldi	r25, 0x00	; 0
    23aa:	97 8b       	std	Z+23, r25	; 0x17
    23ac:	86 8b       	std	Z+22, r24	; 0x16
    23ae:	11 8e       	std	Z+25, r1	; 0x19
    23b0:	12 8e       	std	Z+26, r1	; 0x1a
    23b2:	13 8e       	std	Z+27, r1	; 0x1b
    23b4:	14 8e       	std	Z+28, r1	; 0x1c
    23b6:	08 95       	ret

000023b8 <__vector_36>:
#elif defined(USART1_RX_vect)
ISR(USART1_RX_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    23b8:	1f 92       	push	r1
    23ba:	0f 92       	push	r0
    23bc:	0f b6       	in	r0, 0x3f	; 63
    23be:	0f 92       	push	r0
    23c0:	11 24       	eor	r1, r1
    23c2:	0b b6       	in	r0, 0x3b	; 59
    23c4:	0f 92       	push	r0
    23c6:	2f 93       	push	r18
    23c8:	8f 93       	push	r24
    23ca:	9f 93       	push	r25
    23cc:	ef 93       	push	r30
    23ce:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    23d0:	e0 91 ca 05 	lds	r30, 0x05CA	; 0x8005ca <Serial1+0x10>
    23d4:	f0 91 cb 05 	lds	r31, 0x05CB	; 0x8005cb <Serial1+0x11>
    23d8:	80 81       	ld	r24, Z
    23da:	e0 91 d0 05 	lds	r30, 0x05D0	; 0x8005d0 <Serial1+0x16>
    23de:	f0 91 d1 05 	lds	r31, 0x05D1	; 0x8005d1 <Serial1+0x17>
    23e2:	82 fd       	sbrc	r24, 2
    23e4:	12 c0       	rjmp	.+36     	; 0x240a <__vector_36+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    23e6:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    23e8:	80 91 d3 05 	lds	r24, 0x05D3	; 0x8005d3 <Serial1+0x19>
    23ec:	8f 5f       	subi	r24, 0xFF	; 255
    23ee:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    23f0:	20 91 d4 05 	lds	r18, 0x05D4	; 0x8005d4 <Serial1+0x1a>
    23f4:	82 17       	cp	r24, r18
    23f6:	51 f0       	breq	.+20     	; 0x240c <__vector_36+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    23f8:	e0 91 d3 05 	lds	r30, 0x05D3	; 0x8005d3 <Serial1+0x19>
    23fc:	f0 e0       	ldi	r31, 0x00	; 0
    23fe:	e6 54       	subi	r30, 0x46	; 70
    2400:	fa 4f       	sbci	r31, 0xFA	; 250
    2402:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    2404:	80 93 d3 05 	sts	0x05D3, r24	; 0x8005d3 <Serial1+0x19>
    2408:	01 c0       	rjmp	.+2      	; 0x240c <__vector_36+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    240a:	80 81       	ld	r24, Z
  Serial1._rx_complete_irq();
}
    240c:	ff 91       	pop	r31
    240e:	ef 91       	pop	r30
    2410:	9f 91       	pop	r25
    2412:	8f 91       	pop	r24
    2414:	2f 91       	pop	r18
    2416:	0f 90       	pop	r0
    2418:	0b be       	out	0x3b, r0	; 59
    241a:	0f 90       	pop	r0
    241c:	0f be       	out	0x3f, r0	; 63
    241e:	0f 90       	pop	r0
    2420:	1f 90       	pop	r1
    2422:	18 95       	reti

00002424 <__vector_37>:
#elif defined(USART1_UDRE_vect)
ISR(USART1_UDRE_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    2424:	1f 92       	push	r1
    2426:	0f 92       	push	r0
    2428:	0f b6       	in	r0, 0x3f	; 63
    242a:	0f 92       	push	r0
    242c:	11 24       	eor	r1, r1
    242e:	0b b6       	in	r0, 0x3b	; 59
    2430:	0f 92       	push	r0
    2432:	2f 93       	push	r18
    2434:	3f 93       	push	r19
    2436:	4f 93       	push	r20
    2438:	5f 93       	push	r21
    243a:	6f 93       	push	r22
    243c:	7f 93       	push	r23
    243e:	8f 93       	push	r24
    2440:	9f 93       	push	r25
    2442:	af 93       	push	r26
    2444:	bf 93       	push	r27
    2446:	ef 93       	push	r30
    2448:	ff 93       	push	r31
  Serial1._tx_udr_empty_irq();
    244a:	8a eb       	ldi	r24, 0xBA	; 186
    244c:	95 e0       	ldi	r25, 0x05	; 5
    244e:	2c de       	rcall	.-936    	; 0x20a8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    2450:	ff 91       	pop	r31
    2452:	ef 91       	pop	r30
    2454:	bf 91       	pop	r27
    2456:	af 91       	pop	r26
    2458:	9f 91       	pop	r25
    245a:	8f 91       	pop	r24
    245c:	7f 91       	pop	r23
    245e:	6f 91       	pop	r22
    2460:	5f 91       	pop	r21
    2462:	4f 91       	pop	r20
    2464:	3f 91       	pop	r19
    2466:	2f 91       	pop	r18
    2468:	0f 90       	pop	r0
    246a:	0b be       	out	0x3b, r0	; 59
    246c:	0f 90       	pop	r0
    246e:	0f be       	out	0x3f, r0	; 63
    2470:	0f 90       	pop	r0
    2472:	1f 90       	pop	r1
    2474:	18 95       	reti

00002476 <_Z17Serial1_availablev>:
HardwareSerial Serial1(&UBRR1H, &UBRR1L, &UCSR1A, &UCSR1B, &UCSR1C, &UDR1);

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
    2476:	8a eb       	ldi	r24, 0xBA	; 186
    2478:	95 e0       	ldi	r25, 0x05	; 5
    247a:	9e dd       	rcall	.-1220   	; 0x1fb8 <_ZN14HardwareSerial9availableEv>
    247c:	21 e0       	ldi	r18, 0x01	; 1
    247e:	89 2b       	or	r24, r25
    2480:	09 f4       	brne	.+2      	; 0x2484 <_Z17Serial1_availablev+0xe>
    2482:	20 e0       	ldi	r18, 0x00	; 0
}
    2484:	82 2f       	mov	r24, r18
    2486:	08 95       	ret

00002488 <_GLOBAL__sub_I___vector_36>:
    2488:	ea eb       	ldi	r30, 0xBA	; 186
    248a:	f5 e0       	ldi	r31, 0x05	; 5
    248c:	13 82       	std	Z+3, r1	; 0x03
    248e:	12 82       	std	Z+2, r1	; 0x02
    2490:	88 ee       	ldi	r24, 0xE8	; 232
    2492:	93 e0       	ldi	r25, 0x03	; 3
    2494:	a0 e0       	ldi	r26, 0x00	; 0
    2496:	b0 e0       	ldi	r27, 0x00	; 0
    2498:	84 83       	std	Z+4, r24	; 0x04
    249a:	95 83       	std	Z+5, r25	; 0x05
    249c:	a6 83       	std	Z+6, r26	; 0x06
    249e:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    24a0:	81 e5       	ldi	r24, 0x51	; 81
    24a2:	94 e0       	ldi	r25, 0x04	; 4
    24a4:	91 83       	std	Z+1, r25	; 0x01
    24a6:	80 83       	st	Z, r24
    24a8:	8d ec       	ldi	r24, 0xCD	; 205
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	95 87       	std	Z+13, r25	; 0x0d
    24ae:	84 87       	std	Z+12, r24	; 0x0c
    24b0:	8c ec       	ldi	r24, 0xCC	; 204
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	97 87       	std	Z+15, r25	; 0x0f
    24b6:	86 87       	std	Z+14, r24	; 0x0e
    24b8:	88 ec       	ldi	r24, 0xC8	; 200
    24ba:	90 e0       	ldi	r25, 0x00	; 0
    24bc:	91 8b       	std	Z+17, r25	; 0x11
    24be:	80 8b       	std	Z+16, r24	; 0x10
    24c0:	89 ec       	ldi	r24, 0xC9	; 201
    24c2:	90 e0       	ldi	r25, 0x00	; 0
    24c4:	93 8b       	std	Z+19, r25	; 0x13
    24c6:	82 8b       	std	Z+18, r24	; 0x12
    24c8:	8a ec       	ldi	r24, 0xCA	; 202
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	95 8b       	std	Z+21, r25	; 0x15
    24ce:	84 8b       	std	Z+20, r24	; 0x14
    24d0:	8e ec       	ldi	r24, 0xCE	; 206
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	97 8b       	std	Z+23, r25	; 0x17
    24d6:	86 8b       	std	Z+22, r24	; 0x16
    24d8:	11 8e       	std	Z+25, r1	; 0x19
    24da:	12 8e       	std	Z+26, r1	; 0x1a
    24dc:	13 8e       	std	Z+27, r1	; 0x1b
    24de:	14 8e       	std	Z+28, r1	; 0x1c
    24e0:	08 95       	ret

000024e2 <_ZNK9IPAddress7printToER5Print>:
{
    return memcmp(addr, _address.bytes, sizeof(_address.bytes)) == 0;
}

size_t IPAddress::printTo(Print& p) const
{
    24e2:	8f 92       	push	r8
    24e4:	9f 92       	push	r9
    24e6:	af 92       	push	r10
    24e8:	bf 92       	push	r11
    24ea:	cf 92       	push	r12
    24ec:	df 92       	push	r13
    24ee:	ef 92       	push	r14
    24f0:	ff 92       	push	r15
    24f2:	0f 93       	push	r16
    24f4:	1f 93       	push	r17
    24f6:	cf 93       	push	r28
    24f8:	df 93       	push	r29
    24fa:	7c 01       	movw	r14, r24
    24fc:	8b 01       	movw	r16, r22
    24fe:	4c 01       	movw	r8, r24
    2500:	82 e0       	ldi	r24, 0x02	; 2
    2502:	88 0e       	add	r8, r24
    2504:	91 1c       	adc	r9, r1
    2506:	57 01       	movw	r10, r14
    2508:	e5 e0       	ldi	r30, 0x05	; 5
    250a:	ae 0e       	add	r10, r30
    250c:	b1 1c       	adc	r11, r1
    size_t n = 0;
    250e:	c0 e0       	ldi	r28, 0x00	; 0
    2510:	d0 e0       	ldi	r29, 0x00	; 0
    for (int i =0; i < 3; i++)
    {
        n += p.print(_address.bytes[i], DEC);
    2512:	f4 01       	movw	r30, r8
    2514:	61 91       	ld	r22, Z+
    2516:	4f 01       	movw	r8, r30
    2518:	4a e0       	ldi	r20, 0x0A	; 10
    251a:	50 e0       	ldi	r21, 0x00	; 0
    251c:	c8 01       	movw	r24, r16
    251e:	45 d1       	rcall	.+650    	; 0x27aa <_ZN5Print5printEhi>
    2520:	6c 01       	movw	r12, r24
        n += p.print('.');
    2522:	6e e2       	ldi	r22, 0x2E	; 46
    2524:	c8 01       	movw	r24, r16
    2526:	b3 d0       	rcall	.+358    	; 0x268e <_ZN5Print5printEc>
    2528:	8c 0d       	add	r24, r12
    252a:	9d 1d       	adc	r25, r13
    252c:	c8 0f       	add	r28, r24
    252e:	d9 1f       	adc	r29, r25
}

size_t IPAddress::printTo(Print& p) const
{
    size_t n = 0;
    for (int i =0; i < 3; i++)
    2530:	8a 14       	cp	r8, r10
    2532:	9b 04       	cpc	r9, r11
    2534:	71 f7       	brne	.-36     	; 0x2512 <_ZNK9IPAddress7printToER5Print+0x30>
    {
        n += p.print(_address.bytes[i], DEC);
        n += p.print('.');
    }
    n += p.print(_address.bytes[3], DEC);
    2536:	4a e0       	ldi	r20, 0x0A	; 10
    2538:	50 e0       	ldi	r21, 0x00	; 0
    253a:	f7 01       	movw	r30, r14
    253c:	65 81       	ldd	r22, Z+5	; 0x05
    253e:	c8 01       	movw	r24, r16
    2540:	34 d1       	rcall	.+616    	; 0x27aa <_ZN5Print5printEhi>
    return n;
}
    2542:	8c 0f       	add	r24, r28
    2544:	9d 1f       	adc	r25, r29
    2546:	df 91       	pop	r29
    2548:	cf 91       	pop	r28
    254a:	1f 91       	pop	r17
    254c:	0f 91       	pop	r16
    254e:	ff 90       	pop	r15
    2550:	ef 90       	pop	r14
    2552:	df 90       	pop	r13
    2554:	cf 90       	pop	r12
    2556:	bf 90       	pop	r11
    2558:	af 90       	pop	r10
    255a:	9f 90       	pop	r9
    255c:	8f 90       	pop	r8
    255e:	08 95       	ret

00002560 <_ZN9IPAddressC1Ev>:
*/

#include <Arduino.h>
#include <IPAddress.h>

IPAddress::IPAddress()
    2560:	23 e6       	ldi	r18, 0x63	; 99
    2562:	34 e0       	ldi	r19, 0x04	; 4
    2564:	fc 01       	movw	r30, r24
    2566:	31 83       	std	Z+1, r19	; 0x01
    2568:	20 83       	st	Z, r18
{
    _address.dword = 0;
    256a:	12 82       	std	Z+2, r1	; 0x02
    256c:	13 82       	std	Z+3, r1	; 0x03
    256e:	14 82       	std	Z+4, r1	; 0x04
    2570:	15 82       	std	Z+5, r1	; 0x05
    2572:	08 95       	ret

00002574 <_ZN9IPAddressC1Ehhhh>:
}

IPAddress::IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet)
    2574:	0f 93       	push	r16
    2576:	fc 01       	movw	r30, r24
    2578:	83 e6       	ldi	r24, 0x63	; 99
    257a:	94 e0       	ldi	r25, 0x04	; 4
    257c:	91 83       	std	Z+1, r25	; 0x01
    257e:	80 83       	st	Z, r24
{
    _address.bytes[0] = first_octet;
    2580:	62 83       	std	Z+2, r22	; 0x02
    _address.bytes[1] = second_octet;
    2582:	43 83       	std	Z+3, r20	; 0x03
    _address.bytes[2] = third_octet;
    2584:	24 83       	std	Z+4, r18	; 0x04
    _address.bytes[3] = fourth_octet;
    2586:	05 83       	std	Z+5, r16	; 0x05
}
    2588:	0f 91       	pop	r16
    258a:	08 95       	ret

0000258c <initVariant>:
    258c:	08 95       	ret

0000258e <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    258e:	27 d3       	rcall	.+1614   	; 0x2bde <init>

	initVariant();
    2590:	fd df       	rcall	.-6      	; 0x258c <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    2592:	0e db       	rcall	.-2532   	; 0x1bb0 <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    2594:	c9 e1       	ldi	r28, 0x19	; 25
    2596:	d0 e1       	ldi	r29, 0x10	; 16
#endif
	
	setup();
    
	for (;;) {
		loop();
    2598:	37 db       	rcall	.-2450   	; 0x1c08 <loop>
		if (serialEventRun) serialEventRun();
    259a:	20 97       	sbiw	r28, 0x00	; 0
    259c:	e9 f3       	breq	.-6      	; 0x2598 <main+0xa>
    259e:	49 dd       	rcall	.-1390   	; 0x2032 <_Z14serialEventRunv>
    25a0:	fb cf       	rjmp	.-10     	; 0x2598 <main+0xa>

000025a2 <_Znwj>:
    25a2:	0c 94 fd 2e 	jmp	0x5dfa	; 0x5dfa <malloc>

000025a6 <_Znaj>:
void *operator new(size_t size) {
  return malloc(size);
}

void *operator new[](size_t size) {
  return malloc(size);
    25a6:	0c 94 fd 2e 	jmp	0x5dfa	; 0x5dfa <malloc>

000025aa <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    25aa:	cf 92       	push	r12
    25ac:	df 92       	push	r13
    25ae:	ef 92       	push	r14
    25b0:	ff 92       	push	r15
    25b2:	0f 93       	push	r16
    25b4:	1f 93       	push	r17
    25b6:	cf 93       	push	r28
    25b8:	df 93       	push	r29
    25ba:	6c 01       	movw	r12, r24
    25bc:	7a 01       	movw	r14, r20
    25be:	8b 01       	movw	r16, r22
    25c0:	c0 e0       	ldi	r28, 0x00	; 0
    25c2:	d0 e0       	ldi	r29, 0x00	; 0
    25c4:	ce 15       	cp	r28, r14
    25c6:	df 05       	cpc	r29, r15
    25c8:	81 f0       	breq	.+32     	; 0x25ea <_ZN5Print5writeEPKhj+0x40>
    25ca:	d8 01       	movw	r26, r16
    25cc:	6d 91       	ld	r22, X+
    25ce:	8d 01       	movw	r16, r26
    25d0:	d6 01       	movw	r26, r12
    25d2:	ed 91       	ld	r30, X+
    25d4:	fc 91       	ld	r31, X
    25d6:	01 90       	ld	r0, Z+
    25d8:	f0 81       	ld	r31, Z
    25da:	e0 2d       	mov	r30, r0
    25dc:	c6 01       	movw	r24, r12
    25de:	19 95       	eicall
    25e0:	89 2b       	or	r24, r25
    25e2:	11 f0       	breq	.+4      	; 0x25e8 <_ZN5Print5writeEPKhj+0x3e>
    25e4:	21 96       	adiw	r28, 0x01	; 1
    25e6:	ee cf       	rjmp	.-36     	; 0x25c4 <_ZN5Print5writeEPKhj+0x1a>
    25e8:	7e 01       	movw	r14, r28
    25ea:	c7 01       	movw	r24, r14
    25ec:	df 91       	pop	r29
    25ee:	cf 91       	pop	r28
    25f0:	1f 91       	pop	r17
    25f2:	0f 91       	pop	r16
    25f4:	ff 90       	pop	r15
    25f6:	ef 90       	pop	r14
    25f8:	df 90       	pop	r13
    25fa:	cf 90       	pop	r12
    25fc:	08 95       	ret

000025fe <_ZN5Print5writeEPKc>:
    25fe:	61 15       	cp	r22, r1
    2600:	71 05       	cpc	r23, r1
    2602:	79 f0       	breq	.+30     	; 0x2622 <_ZN5Print5writeEPKc+0x24>
    2604:	fb 01       	movw	r30, r22
    2606:	01 90       	ld	r0, Z+
    2608:	00 20       	and	r0, r0
    260a:	e9 f7       	brne	.-6      	; 0x2606 <_ZN5Print5writeEPKc+0x8>
    260c:	31 97       	sbiw	r30, 0x01	; 1
    260e:	af 01       	movw	r20, r30
    2610:	46 1b       	sub	r20, r22
    2612:	57 0b       	sbc	r21, r23
    2614:	dc 01       	movw	r26, r24
    2616:	ed 91       	ld	r30, X+
    2618:	fc 91       	ld	r31, X
    261a:	02 80       	ldd	r0, Z+2	; 0x02
    261c:	f3 81       	ldd	r31, Z+3	; 0x03
    261e:	e0 2d       	mov	r30, r0
    2620:	19 94       	eijmp
    2622:	80 e0       	ldi	r24, 0x00	; 0
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	08 95       	ret

00002628 <_ZN5Print5printEPK19__FlashStringHelper>:
    2628:	ef 92       	push	r14
    262a:	ff 92       	push	r15
    262c:	0f 93       	push	r16
    262e:	1f 93       	push	r17
    2630:	cf 93       	push	r28
    2632:	df 93       	push	r29
    2634:	8c 01       	movw	r16, r24
    2636:	7b 01       	movw	r14, r22
    2638:	c0 e0       	ldi	r28, 0x00	; 0
    263a:	d0 e0       	ldi	r29, 0x00	; 0
    263c:	f7 01       	movw	r30, r14
    263e:	ec 0f       	add	r30, r28
    2640:	fd 1f       	adc	r31, r29
    2642:	64 91       	lpm	r22, Z
    2644:	66 23       	and	r22, r22
    2646:	61 f0       	breq	.+24     	; 0x2660 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    2648:	d8 01       	movw	r26, r16
    264a:	ed 91       	ld	r30, X+
    264c:	fc 91       	ld	r31, X
    264e:	01 90       	ld	r0, Z+
    2650:	f0 81       	ld	r31, Z
    2652:	e0 2d       	mov	r30, r0
    2654:	c8 01       	movw	r24, r16
    2656:	19 95       	eicall
    2658:	89 2b       	or	r24, r25
    265a:	11 f0       	breq	.+4      	; 0x2660 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    265c:	21 96       	adiw	r28, 0x01	; 1
    265e:	ee cf       	rjmp	.-36     	; 0x263c <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    2660:	ce 01       	movw	r24, r28
    2662:	df 91       	pop	r29
    2664:	cf 91       	pop	r28
    2666:	1f 91       	pop	r17
    2668:	0f 91       	pop	r16
    266a:	ff 90       	pop	r15
    266c:	ef 90       	pop	r14
    266e:	08 95       	ret

00002670 <_ZN5Print5printERK6String>:
    2670:	db 01       	movw	r26, r22
    2672:	14 96       	adiw	r26, 0x04	; 4
    2674:	4d 91       	ld	r20, X+
    2676:	5c 91       	ld	r21, X
    2678:	15 97       	sbiw	r26, 0x05	; 5
    267a:	6d 91       	ld	r22, X+
    267c:	7c 91       	ld	r23, X
    267e:	dc 01       	movw	r26, r24
    2680:	ed 91       	ld	r30, X+
    2682:	fc 91       	ld	r31, X
    2684:	02 80       	ldd	r0, Z+2	; 0x02
    2686:	f3 81       	ldd	r31, Z+3	; 0x03
    2688:	e0 2d       	mov	r30, r0
    268a:	19 94       	eijmp

0000268c <_ZN5Print5printEPKc>:
    268c:	b8 cf       	rjmp	.-144    	; 0x25fe <_ZN5Print5writeEPKc>

0000268e <_ZN5Print5printEc>:
    268e:	dc 01       	movw	r26, r24
    2690:	ed 91       	ld	r30, X+
    2692:	fc 91       	ld	r31, X
    2694:	01 90       	ld	r0, Z+
    2696:	f0 81       	ld	r31, Z
    2698:	e0 2d       	mov	r30, r0
    269a:	19 94       	eijmp

0000269c <_ZN5Print7printlnEv>:
    269c:	63 eb       	ldi	r22, 0xB3	; 179
    269e:	74 e0       	ldi	r23, 0x04	; 4
    26a0:	ae cf       	rjmp	.-164    	; 0x25fe <_ZN5Print5writeEPKc>

000026a2 <_ZN5Print7printlnEPK19__FlashStringHelper>:
    26a2:	0f 93       	push	r16
    26a4:	1f 93       	push	r17
    26a6:	cf 93       	push	r28
    26a8:	df 93       	push	r29
    26aa:	ec 01       	movw	r28, r24
    26ac:	bd df       	rcall	.-134    	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    26ae:	8c 01       	movw	r16, r24
    26b0:	ce 01       	movw	r24, r28
    26b2:	f4 df       	rcall	.-24     	; 0x269c <_ZN5Print7printlnEv>
    26b4:	80 0f       	add	r24, r16
    26b6:	91 1f       	adc	r25, r17
    26b8:	df 91       	pop	r29
    26ba:	cf 91       	pop	r28
    26bc:	1f 91       	pop	r17
    26be:	0f 91       	pop	r16
    26c0:	08 95       	ret

000026c2 <_ZN5Print7printlnERK6String>:
    26c2:	0f 93       	push	r16
    26c4:	1f 93       	push	r17
    26c6:	cf 93       	push	r28
    26c8:	df 93       	push	r29
    26ca:	ec 01       	movw	r28, r24
    26cc:	d1 df       	rcall	.-94     	; 0x2670 <_ZN5Print5printERK6String>
    26ce:	8c 01       	movw	r16, r24
    26d0:	ce 01       	movw	r24, r28
    26d2:	e4 df       	rcall	.-56     	; 0x269c <_ZN5Print7printlnEv>
    26d4:	80 0f       	add	r24, r16
    26d6:	91 1f       	adc	r25, r17
    26d8:	df 91       	pop	r29
    26da:	cf 91       	pop	r28
    26dc:	1f 91       	pop	r17
    26de:	0f 91       	pop	r16
    26e0:	08 95       	ret

000026e2 <_ZN5Print7printlnEPKc>:
    26e2:	0f 93       	push	r16
    26e4:	1f 93       	push	r17
    26e6:	cf 93       	push	r28
    26e8:	df 93       	push	r29
    26ea:	ec 01       	movw	r28, r24
    26ec:	88 df       	rcall	.-240    	; 0x25fe <_ZN5Print5writeEPKc>
    26ee:	8c 01       	movw	r16, r24
    26f0:	ce 01       	movw	r24, r28
    26f2:	d4 df       	rcall	.-88     	; 0x269c <_ZN5Print7printlnEv>
    26f4:	80 0f       	add	r24, r16
    26f6:	91 1f       	adc	r25, r17
    26f8:	df 91       	pop	r29
    26fa:	cf 91       	pop	r28
    26fc:	1f 91       	pop	r17
    26fe:	0f 91       	pop	r16
    2700:	08 95       	ret

00002702 <_ZN5Print11printNumberEmh>:
    2702:	8f 92       	push	r8
    2704:	9f 92       	push	r9
    2706:	af 92       	push	r10
    2708:	bf 92       	push	r11
    270a:	ef 92       	push	r14
    270c:	ff 92       	push	r15
    270e:	0f 93       	push	r16
    2710:	1f 93       	push	r17
    2712:	cf 93       	push	r28
    2714:	df 93       	push	r29
    2716:	cd b7       	in	r28, 0x3d	; 61
    2718:	de b7       	in	r29, 0x3e	; 62
    271a:	a1 97       	sbiw	r28, 0x21	; 33
    271c:	0f b6       	in	r0, 0x3f	; 63
    271e:	f8 94       	cli
    2720:	de bf       	out	0x3e, r29	; 62
    2722:	0f be       	out	0x3f, r0	; 63
    2724:	cd bf       	out	0x3d, r28	; 61
    2726:	7c 01       	movw	r14, r24
    2728:	fa 01       	movw	r30, r20
    272a:	cb 01       	movw	r24, r22
    272c:	19 a2       	std	Y+33, r1	; 0x21
    272e:	22 30       	cpi	r18, 0x02	; 2
    2730:	08 f4       	brcc	.+2      	; 0x2734 <_ZN5Print11printNumberEmh+0x32>
    2732:	2a e0       	ldi	r18, 0x0A	; 10
    2734:	8e 01       	movw	r16, r28
    2736:	0f 5d       	subi	r16, 0xDF	; 223
    2738:	1f 4f       	sbci	r17, 0xFF	; 255
    273a:	82 2e       	mov	r8, r18
    273c:	91 2c       	mov	r9, r1
    273e:	a1 2c       	mov	r10, r1
    2740:	b1 2c       	mov	r11, r1
    2742:	bf 01       	movw	r22, r30
    2744:	a5 01       	movw	r20, r10
    2746:	94 01       	movw	r18, r8
    2748:	0e 94 9b 2e 	call	0x5d36	; 0x5d36 <__udivmodsi4>
    274c:	f9 01       	movw	r30, r18
    274e:	ca 01       	movw	r24, r20
    2750:	01 50       	subi	r16, 0x01	; 1
    2752:	11 09       	sbc	r17, r1
    2754:	6a 30       	cpi	r22, 0x0A	; 10
    2756:	10 f4       	brcc	.+4      	; 0x275c <_ZN5Print11printNumberEmh+0x5a>
    2758:	60 5d       	subi	r22, 0xD0	; 208
    275a:	01 c0       	rjmp	.+2      	; 0x275e <_ZN5Print11printNumberEmh+0x5c>
    275c:	69 5c       	subi	r22, 0xC9	; 201
    275e:	d8 01       	movw	r26, r16
    2760:	6c 93       	st	X, r22
    2762:	23 2b       	or	r18, r19
    2764:	24 2b       	or	r18, r20
    2766:	25 2b       	or	r18, r21
    2768:	61 f7       	brne	.-40     	; 0x2742 <_ZN5Print11printNumberEmh+0x40>
    276a:	b8 01       	movw	r22, r16
    276c:	c7 01       	movw	r24, r14
    276e:	47 df       	rcall	.-370    	; 0x25fe <_ZN5Print5writeEPKc>
    2770:	a1 96       	adiw	r28, 0x21	; 33
    2772:	0f b6       	in	r0, 0x3f	; 63
    2774:	f8 94       	cli
    2776:	de bf       	out	0x3e, r29	; 62
    2778:	0f be       	out	0x3f, r0	; 63
    277a:	cd bf       	out	0x3d, r28	; 61
    277c:	df 91       	pop	r29
    277e:	cf 91       	pop	r28
    2780:	1f 91       	pop	r17
    2782:	0f 91       	pop	r16
    2784:	ff 90       	pop	r15
    2786:	ef 90       	pop	r14
    2788:	bf 90       	pop	r11
    278a:	af 90       	pop	r10
    278c:	9f 90       	pop	r9
    278e:	8f 90       	pop	r8
    2790:	08 95       	ret

00002792 <_ZN5Print5printEmi>:
    2792:	21 15       	cp	r18, r1
    2794:	31 05       	cpc	r19, r1
    2796:	41 f4       	brne	.+16     	; 0x27a8 <_ZN5Print5printEmi+0x16>
    2798:	dc 01       	movw	r26, r24
    279a:	ed 91       	ld	r30, X+
    279c:	fc 91       	ld	r31, X
    279e:	01 90       	ld	r0, Z+
    27a0:	f0 81       	ld	r31, Z
    27a2:	e0 2d       	mov	r30, r0
    27a4:	64 2f       	mov	r22, r20
    27a6:	19 94       	eijmp
    27a8:	ac cf       	rjmp	.-168    	; 0x2702 <_ZN5Print11printNumberEmh>

000027aa <_ZN5Print5printEhi>:
    27aa:	9a 01       	movw	r18, r20
    27ac:	46 2f       	mov	r20, r22
    27ae:	50 e0       	ldi	r21, 0x00	; 0
    27b0:	60 e0       	ldi	r22, 0x00	; 0
    27b2:	70 e0       	ldi	r23, 0x00	; 0
    27b4:	ee cf       	rjmp	.-36     	; 0x2792 <_ZN5Print5printEmi>

000027b6 <_ZN5Print7printlnEhi>:
    27b6:	0f 93       	push	r16
    27b8:	1f 93       	push	r17
    27ba:	cf 93       	push	r28
    27bc:	df 93       	push	r29
    27be:	ec 01       	movw	r28, r24
    27c0:	f4 df       	rcall	.-24     	; 0x27aa <_ZN5Print5printEhi>
    27c2:	8c 01       	movw	r16, r24
    27c4:	ce 01       	movw	r24, r28
    27c6:	6a df       	rcall	.-300    	; 0x269c <_ZN5Print7printlnEv>
    27c8:	80 0f       	add	r24, r16
    27ca:	91 1f       	adc	r25, r17
    27cc:	df 91       	pop	r29
    27ce:	cf 91       	pop	r28
    27d0:	1f 91       	pop	r17
    27d2:	0f 91       	pop	r16
    27d4:	08 95       	ret

000027d6 <_ZN5Print5printEji>:
    27d6:	9a 01       	movw	r18, r20
    27d8:	ab 01       	movw	r20, r22
    27da:	60 e0       	ldi	r22, 0x00	; 0
    27dc:	70 e0       	ldi	r23, 0x00	; 0
    27de:	d9 cf       	rjmp	.-78     	; 0x2792 <_ZN5Print5printEmi>

000027e0 <_ZN5Print5printEli>:
    27e0:	cf 92       	push	r12
    27e2:	df 92       	push	r13
    27e4:	ef 92       	push	r14
    27e6:	ff 92       	push	r15
    27e8:	0f 93       	push	r16
    27ea:	1f 93       	push	r17
    27ec:	cf 93       	push	r28
    27ee:	df 93       	push	r29
    27f0:	21 15       	cp	r18, r1
    27f2:	31 05       	cpc	r19, r1
    27f4:	81 f4       	brne	.+32     	; 0x2816 <_ZN5Print5printEli+0x36>
    27f6:	dc 01       	movw	r26, r24
    27f8:	ed 91       	ld	r30, X+
    27fa:	fc 91       	ld	r31, X
    27fc:	01 90       	ld	r0, Z+
    27fe:	f0 81       	ld	r31, Z
    2800:	e0 2d       	mov	r30, r0
    2802:	64 2f       	mov	r22, r20
    2804:	df 91       	pop	r29
    2806:	cf 91       	pop	r28
    2808:	1f 91       	pop	r17
    280a:	0f 91       	pop	r16
    280c:	ff 90       	pop	r15
    280e:	ef 90       	pop	r14
    2810:	df 90       	pop	r13
    2812:	cf 90       	pop	r12
    2814:	19 94       	eijmp
    2816:	2a 30       	cpi	r18, 0x0A	; 10
    2818:	31 05       	cpc	r19, r1
    281a:	f1 f4       	brne	.+60     	; 0x2858 <_ZN5Print5printEli+0x78>
    281c:	77 ff       	sbrs	r23, 7
    281e:	1b c0       	rjmp	.+54     	; 0x2856 <_ZN5Print5printEli+0x76>
    2820:	6a 01       	movw	r12, r20
    2822:	7b 01       	movw	r14, r22
    2824:	ec 01       	movw	r28, r24
    2826:	6d e2       	ldi	r22, 0x2D	; 45
    2828:	32 df       	rcall	.-412    	; 0x268e <_ZN5Print5printEc>
    282a:	8c 01       	movw	r16, r24
    282c:	44 27       	eor	r20, r20
    282e:	55 27       	eor	r21, r21
    2830:	ba 01       	movw	r22, r20
    2832:	4c 19       	sub	r20, r12
    2834:	5d 09       	sbc	r21, r13
    2836:	6e 09       	sbc	r22, r14
    2838:	7f 09       	sbc	r23, r15
    283a:	2a e0       	ldi	r18, 0x0A	; 10
    283c:	ce 01       	movw	r24, r28
    283e:	61 df       	rcall	.-318    	; 0x2702 <_ZN5Print11printNumberEmh>
    2840:	80 0f       	add	r24, r16
    2842:	91 1f       	adc	r25, r17
    2844:	df 91       	pop	r29
    2846:	cf 91       	pop	r28
    2848:	1f 91       	pop	r17
    284a:	0f 91       	pop	r16
    284c:	ff 90       	pop	r15
    284e:	ef 90       	pop	r14
    2850:	df 90       	pop	r13
    2852:	cf 90       	pop	r12
    2854:	08 95       	ret
    2856:	2a e0       	ldi	r18, 0x0A	; 10
    2858:	df 91       	pop	r29
    285a:	cf 91       	pop	r28
    285c:	1f 91       	pop	r17
    285e:	0f 91       	pop	r16
    2860:	ff 90       	pop	r15
    2862:	ef 90       	pop	r14
    2864:	df 90       	pop	r13
    2866:	cf 90       	pop	r12
    2868:	4c cf       	rjmp	.-360    	; 0x2702 <_ZN5Print11printNumberEmh>

0000286a <_ZN5Print5printEii>:
    286a:	9a 01       	movw	r18, r20
    286c:	ab 01       	movw	r20, r22
    286e:	77 0f       	add	r23, r23
    2870:	66 0b       	sbc	r22, r22
    2872:	77 0b       	sbc	r23, r23
    2874:	b5 cf       	rjmp	.-150    	; 0x27e0 <_ZN5Print5printEli>

00002876 <_ZN5Print7printlnEii>:
    2876:	0f 93       	push	r16
    2878:	1f 93       	push	r17
    287a:	cf 93       	push	r28
    287c:	df 93       	push	r29
    287e:	ec 01       	movw	r28, r24
    2880:	f4 df       	rcall	.-24     	; 0x286a <_ZN5Print5printEii>
    2882:	8c 01       	movw	r16, r24
    2884:	ce 01       	movw	r24, r28
    2886:	0a df       	rcall	.-492    	; 0x269c <_ZN5Print7printlnEv>
    2888:	80 0f       	add	r24, r16
    288a:	91 1f       	adc	r25, r17
    288c:	df 91       	pop	r29
    288e:	cf 91       	pop	r28
    2890:	1f 91       	pop	r17
    2892:	0f 91       	pop	r16
    2894:	08 95       	ret

00002896 <_ZN5Print7printlnEli>:
    2896:	0f 93       	push	r16
    2898:	1f 93       	push	r17
    289a:	cf 93       	push	r28
    289c:	df 93       	push	r29
    289e:	ec 01       	movw	r28, r24
    28a0:	9f df       	rcall	.-194    	; 0x27e0 <_ZN5Print5printEli>
    28a2:	8c 01       	movw	r16, r24
    28a4:	ce 01       	movw	r24, r28
    28a6:	fa de       	rcall	.-524    	; 0x269c <_ZN5Print7printlnEv>
    28a8:	80 0f       	add	r24, r16
    28aa:	91 1f       	adc	r25, r17
    28ac:	df 91       	pop	r29
    28ae:	cf 91       	pop	r28
    28b0:	1f 91       	pop	r17
    28b2:	0f 91       	pop	r16
    28b4:	08 95       	ret

000028b6 <_ZN5Print10printFloatEdh>:
    28b6:	7f 92       	push	r7
    28b8:	8f 92       	push	r8
    28ba:	9f 92       	push	r9
    28bc:	af 92       	push	r10
    28be:	bf 92       	push	r11
    28c0:	cf 92       	push	r12
    28c2:	df 92       	push	r13
    28c4:	ef 92       	push	r14
    28c6:	ff 92       	push	r15
    28c8:	0f 93       	push	r16
    28ca:	1f 93       	push	r17
    28cc:	cf 93       	push	r28
    28ce:	df 93       	push	r29
    28d0:	8c 01       	movw	r16, r24
    28d2:	6a 01       	movw	r12, r20
    28d4:	7b 01       	movw	r14, r22
    28d6:	72 2e       	mov	r7, r18
    28d8:	9a 01       	movw	r18, r20
    28da:	ab 01       	movw	r20, r22
    28dc:	c7 01       	movw	r24, r14
    28de:	b6 01       	movw	r22, r12
    28e0:	0e 94 97 2e 	call	0x5d2e	; 0x5d2e <__unordsf2>
    28e4:	88 23       	and	r24, r24
    28e6:	19 f0       	breq	.+6      	; 0x28ee <_ZN5Print10printFloatEdh+0x38>
    28e8:	65 e6       	ldi	r22, 0x65	; 101
    28ea:	74 e0       	ldi	r23, 0x04	; 4
    28ec:	27 c0       	rjmp	.+78     	; 0x293c <_ZN5Print10printFloatEdh+0x86>
    28ee:	46 01       	movw	r8, r12
    28f0:	57 01       	movw	r10, r14
    28f2:	e8 94       	clt
    28f4:	b7 f8       	bld	r11, 7
    28f6:	2f ef       	ldi	r18, 0xFF	; 255
    28f8:	3f ef       	ldi	r19, 0xFF	; 255
    28fa:	4f e7       	ldi	r20, 0x7F	; 127
    28fc:	5f e7       	ldi	r21, 0x7F	; 127
    28fe:	c5 01       	movw	r24, r10
    2900:	b4 01       	movw	r22, r8
    2902:	0e 94 97 2e 	call	0x5d2e	; 0x5d2e <__unordsf2>
    2906:	81 11       	cpse	r24, r1
    2908:	0d c0       	rjmp	.+26     	; 0x2924 <_ZN5Print10printFloatEdh+0x6e>
    290a:	2f ef       	ldi	r18, 0xFF	; 255
    290c:	3f ef       	ldi	r19, 0xFF	; 255
    290e:	4f e7       	ldi	r20, 0x7F	; 127
    2910:	5f e7       	ldi	r21, 0x7F	; 127
    2912:	c5 01       	movw	r24, r10
    2914:	b4 01       	movw	r22, r8
    2916:	0e 94 3c 2e 	call	0x5c78	; 0x5c78 <__cmpsf2>
    291a:	18 16       	cp	r1, r24
    291c:	1c f4       	brge	.+6      	; 0x2924 <_ZN5Print10printFloatEdh+0x6e>
    291e:	69 e6       	ldi	r22, 0x69	; 105
    2920:	74 e0       	ldi	r23, 0x04	; 4
    2922:	0c c0       	rjmp	.+24     	; 0x293c <_ZN5Print10printFloatEdh+0x86>
    2924:	2f ef       	ldi	r18, 0xFF	; 255
    2926:	3f ef       	ldi	r19, 0xFF	; 255
    2928:	4f e7       	ldi	r20, 0x7F	; 127
    292a:	5f e4       	ldi	r21, 0x4F	; 79
    292c:	c7 01       	movw	r24, r14
    292e:	b6 01       	movw	r22, r12
    2930:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <__gesf2>
    2934:	18 16       	cp	r1, r24
    2936:	8c f4       	brge	.+34     	; 0x295a <_ZN5Print10printFloatEdh+0xa4>
    2938:	6d e6       	ldi	r22, 0x6D	; 109
    293a:	74 e0       	ldi	r23, 0x04	; 4
    293c:	c8 01       	movw	r24, r16
    293e:	df 91       	pop	r29
    2940:	cf 91       	pop	r28
    2942:	1f 91       	pop	r17
    2944:	0f 91       	pop	r16
    2946:	ff 90       	pop	r15
    2948:	ef 90       	pop	r14
    294a:	df 90       	pop	r13
    294c:	cf 90       	pop	r12
    294e:	bf 90       	pop	r11
    2950:	af 90       	pop	r10
    2952:	9f 90       	pop	r9
    2954:	8f 90       	pop	r8
    2956:	7f 90       	pop	r7
    2958:	52 ce       	rjmp	.-860    	; 0x25fe <_ZN5Print5writeEPKc>
    295a:	2f ef       	ldi	r18, 0xFF	; 255
    295c:	3f ef       	ldi	r19, 0xFF	; 255
    295e:	4f e7       	ldi	r20, 0x7F	; 127
    2960:	5f ec       	ldi	r21, 0xCF	; 207
    2962:	c7 01       	movw	r24, r14
    2964:	b6 01       	movw	r22, r12
    2966:	0e 94 3c 2e 	call	0x5c78	; 0x5c78 <__cmpsf2>
    296a:	87 fd       	sbrc	r24, 7
    296c:	e5 cf       	rjmp	.-54     	; 0x2938 <_ZN5Print10printFloatEdh+0x82>
    296e:	20 e0       	ldi	r18, 0x00	; 0
    2970:	30 e0       	ldi	r19, 0x00	; 0
    2972:	a9 01       	movw	r20, r18
    2974:	c7 01       	movw	r24, r14
    2976:	b6 01       	movw	r22, r12
    2978:	0e 94 3c 2e 	call	0x5c78	; 0x5c78 <__cmpsf2>
    297c:	87 ff       	sbrs	r24, 7
    297e:	09 c0       	rjmp	.+18     	; 0x2992 <_ZN5Print10printFloatEdh+0xdc>
    2980:	6d e2       	ldi	r22, 0x2D	; 45
    2982:	c8 01       	movw	r24, r16
    2984:	84 de       	rcall	.-760    	; 0x268e <_ZN5Print5printEc>
    2986:	ec 01       	movw	r28, r24
    2988:	f7 fa       	bst	r15, 7
    298a:	f0 94       	com	r15
    298c:	f7 f8       	bld	r15, 7
    298e:	f0 94       	com	r15
    2990:	02 c0       	rjmp	.+4      	; 0x2996 <_ZN5Print10printFloatEdh+0xe0>
    2992:	c0 e0       	ldi	r28, 0x00	; 0
    2994:	d0 e0       	ldi	r29, 0x00	; 0
    2996:	b1 2c       	mov	r11, r1
    2998:	60 e0       	ldi	r22, 0x00	; 0
    299a:	70 e0       	ldi	r23, 0x00	; 0
    299c:	80 e0       	ldi	r24, 0x00	; 0
    299e:	9f e3       	ldi	r25, 0x3F	; 63
    29a0:	7b 14       	cp	r7, r11
    29a2:	39 f0       	breq	.+14     	; 0x29b2 <_ZN5Print10printFloatEdh+0xfc>
    29a4:	20 e0       	ldi	r18, 0x00	; 0
    29a6:	30 e0       	ldi	r19, 0x00	; 0
    29a8:	40 e2       	ldi	r20, 0x20	; 32
    29aa:	51 e4       	ldi	r21, 0x41	; 65
    29ac:	ac d9       	rcall	.-3240   	; 0x1d06 <__divsf3>
    29ae:	b3 94       	inc	r11
    29b0:	f7 cf       	rjmp	.-18     	; 0x29a0 <_ZN5Print10printFloatEdh+0xea>
    29b2:	a7 01       	movw	r20, r14
    29b4:	96 01       	movw	r18, r12
    29b6:	43 d9       	rcall	.-3450   	; 0x1c3e <__addsf3>
    29b8:	6b 01       	movw	r12, r22
    29ba:	7c 01       	movw	r14, r24
    29bc:	0e 94 40 2e 	call	0x5c80	; 0x5c80 <__fixunssfsi>
    29c0:	4b 01       	movw	r8, r22
    29c2:	5c 01       	movw	r10, r24
    29c4:	2a e0       	ldi	r18, 0x0A	; 10
    29c6:	ab 01       	movw	r20, r22
    29c8:	bc 01       	movw	r22, r24
    29ca:	c8 01       	movw	r24, r16
    29cc:	9a de       	rcall	.-716    	; 0x2702 <_ZN5Print11printNumberEmh>
    29ce:	c8 0f       	add	r28, r24
    29d0:	d9 1f       	adc	r29, r25
    29d2:	77 20       	and	r7, r7
    29d4:	81 f1       	breq	.+96     	; 0x2a36 <_ZN5Print10printFloatEdh+0x180>
    29d6:	c5 01       	movw	r24, r10
    29d8:	b4 01       	movw	r22, r8
    29da:	fd d9       	rcall	.-3078   	; 0x1dd6 <__floatunsisf>
    29dc:	9b 01       	movw	r18, r22
    29de:	ac 01       	movw	r20, r24
    29e0:	c7 01       	movw	r24, r14
    29e2:	b6 01       	movw	r22, r12
    29e4:	2b d9       	rcall	.-3498   	; 0x1c3c <__subsf3>
    29e6:	6b 01       	movw	r12, r22
    29e8:	7c 01       	movw	r14, r24
    29ea:	6e e2       	ldi	r22, 0x2E	; 46
    29ec:	c8 01       	movw	r24, r16
    29ee:	4f de       	rcall	.-866    	; 0x268e <_ZN5Print5printEc>
    29f0:	c8 0f       	add	r28, r24
    29f2:	d9 1f       	adc	r29, r25
    29f4:	20 e0       	ldi	r18, 0x00	; 0
    29f6:	30 e0       	ldi	r19, 0x00	; 0
    29f8:	40 e2       	ldi	r20, 0x20	; 32
    29fa:	51 e4       	ldi	r21, 0x41	; 65
    29fc:	c7 01       	movw	r24, r14
    29fe:	b6 01       	movw	r22, r12
    2a00:	78 da       	rcall	.-2832   	; 0x1ef2 <__mulsf3>
    2a02:	4b 01       	movw	r8, r22
    2a04:	5c 01       	movw	r10, r24
    2a06:	0e 94 40 2e 	call	0x5c80	; 0x5c80 <__fixunssfsi>
    2a0a:	6b 01       	movw	r12, r22
    2a0c:	7c 01       	movw	r14, r24
    2a0e:	4a e0       	ldi	r20, 0x0A	; 10
    2a10:	50 e0       	ldi	r21, 0x00	; 0
    2a12:	c8 01       	movw	r24, r16
    2a14:	e0 de       	rcall	.-576    	; 0x27d6 <_ZN5Print5printEji>
    2a16:	c8 0f       	add	r28, r24
    2a18:	d9 1f       	adc	r29, r25
    2a1a:	b6 01       	movw	r22, r12
    2a1c:	80 e0       	ldi	r24, 0x00	; 0
    2a1e:	90 e0       	ldi	r25, 0x00	; 0
    2a20:	da d9       	rcall	.-3148   	; 0x1dd6 <__floatunsisf>
    2a22:	9b 01       	movw	r18, r22
    2a24:	ac 01       	movw	r20, r24
    2a26:	c5 01       	movw	r24, r10
    2a28:	b4 01       	movw	r22, r8
    2a2a:	08 d9       	rcall	.-3568   	; 0x1c3c <__subsf3>
    2a2c:	6b 01       	movw	r12, r22
    2a2e:	7c 01       	movw	r14, r24
    2a30:	7a 94       	dec	r7
    2a32:	71 10       	cpse	r7, r1
    2a34:	df cf       	rjmp	.-66     	; 0x29f4 <_ZN5Print10printFloatEdh+0x13e>
    2a36:	ce 01       	movw	r24, r28
    2a38:	df 91       	pop	r29
    2a3a:	cf 91       	pop	r28
    2a3c:	1f 91       	pop	r17
    2a3e:	0f 91       	pop	r16
    2a40:	ff 90       	pop	r15
    2a42:	ef 90       	pop	r14
    2a44:	df 90       	pop	r13
    2a46:	cf 90       	pop	r12
    2a48:	bf 90       	pop	r11
    2a4a:	af 90       	pop	r10
    2a4c:	9f 90       	pop	r9
    2a4e:	8f 90       	pop	r8
    2a50:	7f 90       	pop	r7
    2a52:	08 95       	ret

00002a54 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
    2a54:	0f 93       	push	r16
    2a56:	1f 93       	push	r17
    2a58:	cf 93       	push	r28
    2a5a:	df 93       	push	r29
    2a5c:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    2a5e:	2b df       	rcall	.-426    	; 0x28b6 <_ZN5Print10printFloatEdh>
    2a60:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
    2a62:	ce 01       	movw	r24, r28
    2a64:	1b de       	rcall	.-970    	; 0x269c <_ZN5Print7printlnEv>
  return n;
}
    2a66:	80 0f       	add	r24, r16
    2a68:	91 1f       	adc	r25, r17
    2a6a:	df 91       	pop	r29
    2a6c:	cf 91       	pop	r28
    2a6e:	1f 91       	pop	r17
    2a70:	0f 91       	pop	r16
    2a72:	08 95       	ret

00002a74 <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    2a74:	1f 92       	push	r1
    2a76:	0f 92       	push	r0
    2a78:	0f b6       	in	r0, 0x3f	; 63
    2a7a:	0f 92       	push	r0
    2a7c:	11 24       	eor	r1, r1
    2a7e:	2f 93       	push	r18
    2a80:	3f 93       	push	r19
    2a82:	8f 93       	push	r24
    2a84:	9f 93       	push	r25
    2a86:	af 93       	push	r26
    2a88:	bf 93       	push	r27
    2a8a:	80 91 58 06 	lds	r24, 0x0658	; 0x800658 <timer0_millis>
    2a8e:	90 91 59 06 	lds	r25, 0x0659	; 0x800659 <timer0_millis+0x1>
    2a92:	a0 91 5a 06 	lds	r26, 0x065A	; 0x80065a <timer0_millis+0x2>
    2a96:	b0 91 5b 06 	lds	r27, 0x065B	; 0x80065b <timer0_millis+0x3>
    2a9a:	30 91 57 06 	lds	r19, 0x0657	; 0x800657 <timer0_fract>
    2a9e:	28 e1       	ldi	r18, 0x18	; 24
    2aa0:	23 0f       	add	r18, r19
    2aa2:	2d 37       	cpi	r18, 0x7D	; 125
    2aa4:	20 f4       	brcc	.+8      	; 0x2aae <__vector_23+0x3a>
    2aa6:	08 96       	adiw	r24, 0x08	; 8
    2aa8:	a1 1d       	adc	r26, r1
    2aaa:	b1 1d       	adc	r27, r1
    2aac:	05 c0       	rjmp	.+10     	; 0x2ab8 <__vector_23+0x44>
    2aae:	2b e9       	ldi	r18, 0x9B	; 155
    2ab0:	23 0f       	add	r18, r19
    2ab2:	09 96       	adiw	r24, 0x09	; 9
    2ab4:	a1 1d       	adc	r26, r1
    2ab6:	b1 1d       	adc	r27, r1
    2ab8:	20 93 57 06 	sts	0x0657, r18	; 0x800657 <timer0_fract>
    2abc:	80 93 58 06 	sts	0x0658, r24	; 0x800658 <timer0_millis>
    2ac0:	90 93 59 06 	sts	0x0659, r25	; 0x800659 <timer0_millis+0x1>
    2ac4:	a0 93 5a 06 	sts	0x065A, r26	; 0x80065a <timer0_millis+0x2>
    2ac8:	b0 93 5b 06 	sts	0x065B, r27	; 0x80065b <timer0_millis+0x3>
    2acc:	80 91 5c 06 	lds	r24, 0x065C	; 0x80065c <timer0_overflow_count>
    2ad0:	90 91 5d 06 	lds	r25, 0x065D	; 0x80065d <timer0_overflow_count+0x1>
    2ad4:	a0 91 5e 06 	lds	r26, 0x065E	; 0x80065e <timer0_overflow_count+0x2>
    2ad8:	b0 91 5f 06 	lds	r27, 0x065F	; 0x80065f <timer0_overflow_count+0x3>
    2adc:	01 96       	adiw	r24, 0x01	; 1
    2ade:	a1 1d       	adc	r26, r1
    2ae0:	b1 1d       	adc	r27, r1
    2ae2:	80 93 5c 06 	sts	0x065C, r24	; 0x80065c <timer0_overflow_count>
    2ae6:	90 93 5d 06 	sts	0x065D, r25	; 0x80065d <timer0_overflow_count+0x1>
    2aea:	a0 93 5e 06 	sts	0x065E, r26	; 0x80065e <timer0_overflow_count+0x2>
    2aee:	b0 93 5f 06 	sts	0x065F, r27	; 0x80065f <timer0_overflow_count+0x3>
    2af2:	bf 91       	pop	r27
    2af4:	af 91       	pop	r26
    2af6:	9f 91       	pop	r25
    2af8:	8f 91       	pop	r24
    2afa:	3f 91       	pop	r19
    2afc:	2f 91       	pop	r18
    2afe:	0f 90       	pop	r0
    2b00:	0f be       	out	0x3f, r0	; 63
    2b02:	0f 90       	pop	r0
    2b04:	1f 90       	pop	r1
    2b06:	18 95       	reti

00002b08 <millis>:
    2b08:	2f b7       	in	r18, 0x3f	; 63
    2b0a:	f8 94       	cli
    2b0c:	60 91 58 06 	lds	r22, 0x0658	; 0x800658 <timer0_millis>
    2b10:	70 91 59 06 	lds	r23, 0x0659	; 0x800659 <timer0_millis+0x1>
    2b14:	80 91 5a 06 	lds	r24, 0x065A	; 0x80065a <timer0_millis+0x2>
    2b18:	90 91 5b 06 	lds	r25, 0x065B	; 0x80065b <timer0_millis+0x3>
    2b1c:	2f bf       	out	0x3f, r18	; 63
    2b1e:	08 95       	ret

00002b20 <micros>:
    2b20:	3f b7       	in	r19, 0x3f	; 63
    2b22:	f8 94       	cli
    2b24:	80 91 5c 06 	lds	r24, 0x065C	; 0x80065c <timer0_overflow_count>
    2b28:	90 91 5d 06 	lds	r25, 0x065D	; 0x80065d <timer0_overflow_count+0x1>
    2b2c:	a0 91 5e 06 	lds	r26, 0x065E	; 0x80065e <timer0_overflow_count+0x2>
    2b30:	b0 91 5f 06 	lds	r27, 0x065F	; 0x80065f <timer0_overflow_count+0x3>
    2b34:	26 b5       	in	r18, 0x26	; 38
    2b36:	a8 9b       	sbis	0x15, 0	; 21
    2b38:	05 c0       	rjmp	.+10     	; 0x2b44 <micros+0x24>
    2b3a:	2f 3f       	cpi	r18, 0xFF	; 255
    2b3c:	19 f0       	breq	.+6      	; 0x2b44 <micros+0x24>
    2b3e:	01 96       	adiw	r24, 0x01	; 1
    2b40:	a1 1d       	adc	r26, r1
    2b42:	b1 1d       	adc	r27, r1
    2b44:	3f bf       	out	0x3f, r19	; 63
    2b46:	ba 2f       	mov	r27, r26
    2b48:	a9 2f       	mov	r26, r25
    2b4a:	98 2f       	mov	r25, r24
    2b4c:	88 27       	eor	r24, r24
    2b4e:	82 0f       	add	r24, r18
    2b50:	91 1d       	adc	r25, r1
    2b52:	a1 1d       	adc	r26, r1
    2b54:	b1 1d       	adc	r27, r1
    2b56:	bc 01       	movw	r22, r24
    2b58:	cd 01       	movw	r24, r26
    2b5a:	45 e0       	ldi	r20, 0x05	; 5
    2b5c:	66 0f       	add	r22, r22
    2b5e:	77 1f       	adc	r23, r23
    2b60:	88 1f       	adc	r24, r24
    2b62:	99 1f       	adc	r25, r25
    2b64:	4a 95       	dec	r20
    2b66:	d1 f7       	brne	.-12     	; 0x2b5c <micros+0x3c>
    2b68:	08 95       	ret

00002b6a <delay>:
    2b6a:	8f 92       	push	r8
    2b6c:	9f 92       	push	r9
    2b6e:	af 92       	push	r10
    2b70:	bf 92       	push	r11
    2b72:	cf 92       	push	r12
    2b74:	df 92       	push	r13
    2b76:	ef 92       	push	r14
    2b78:	ff 92       	push	r15
    2b7a:	6b 01       	movw	r12, r22
    2b7c:	7c 01       	movw	r14, r24
    2b7e:	d0 df       	rcall	.-96     	; 0x2b20 <micros>
    2b80:	4b 01       	movw	r8, r22
    2b82:	5c 01       	movw	r10, r24
    2b84:	c1 14       	cp	r12, r1
    2b86:	d1 04       	cpc	r13, r1
    2b88:	e1 04       	cpc	r14, r1
    2b8a:	f1 04       	cpc	r15, r1
    2b8c:	f9 f0       	breq	.+62     	; 0x2bcc <delay+0x62>
    2b8e:	0e 94 77 25 	call	0x4aee	; 0x4aee <yield>
    2b92:	c6 df       	rcall	.-116    	; 0x2b20 <micros>
    2b94:	dc 01       	movw	r26, r24
    2b96:	cb 01       	movw	r24, r22
    2b98:	88 19       	sub	r24, r8
    2b9a:	99 09       	sbc	r25, r9
    2b9c:	aa 09       	sbc	r26, r10
    2b9e:	bb 09       	sbc	r27, r11
    2ba0:	88 3e       	cpi	r24, 0xE8	; 232
    2ba2:	93 40       	sbci	r25, 0x03	; 3
    2ba4:	a1 05       	cpc	r26, r1
    2ba6:	b1 05       	cpc	r27, r1
    2ba8:	68 f3       	brcs	.-38     	; 0x2b84 <delay+0x1a>
    2baa:	21 e0       	ldi	r18, 0x01	; 1
    2bac:	c2 1a       	sub	r12, r18
    2bae:	d1 08       	sbc	r13, r1
    2bb0:	e1 08       	sbc	r14, r1
    2bb2:	f1 08       	sbc	r15, r1
    2bb4:	88 ee       	ldi	r24, 0xE8	; 232
    2bb6:	88 0e       	add	r8, r24
    2bb8:	83 e0       	ldi	r24, 0x03	; 3
    2bba:	98 1e       	adc	r9, r24
    2bbc:	a1 1c       	adc	r10, r1
    2bbe:	b1 1c       	adc	r11, r1
    2bc0:	c1 14       	cp	r12, r1
    2bc2:	d1 04       	cpc	r13, r1
    2bc4:	e1 04       	cpc	r14, r1
    2bc6:	f1 04       	cpc	r15, r1
    2bc8:	21 f7       	brne	.-56     	; 0x2b92 <delay+0x28>
    2bca:	dc cf       	rjmp	.-72     	; 0x2b84 <delay+0x1a>
    2bcc:	ff 90       	pop	r15
    2bce:	ef 90       	pop	r14
    2bd0:	df 90       	pop	r13
    2bd2:	cf 90       	pop	r12
    2bd4:	bf 90       	pop	r11
    2bd6:	af 90       	pop	r10
    2bd8:	9f 90       	pop	r9
    2bda:	8f 90       	pop	r8
    2bdc:	08 95       	ret

00002bde <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    2bde:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    2be0:	84 b5       	in	r24, 0x24	; 36
    2be2:	82 60       	ori	r24, 0x02	; 2
    2be4:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    2be6:	84 b5       	in	r24, 0x24	; 36
    2be8:	81 60       	ori	r24, 0x01	; 1
    2bea:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    2bec:	85 b5       	in	r24, 0x25	; 37
    2bee:	82 60       	ori	r24, 0x02	; 2
    2bf0:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    2bf2:	85 b5       	in	r24, 0x25	; 37
    2bf4:	81 60       	ori	r24, 0x01	; 1
    2bf6:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    2bf8:	ee e6       	ldi	r30, 0x6E	; 110
    2bfa:	f0 e0       	ldi	r31, 0x00	; 0
    2bfc:	80 81       	ld	r24, Z
    2bfe:	81 60       	ori	r24, 0x01	; 1
    2c00:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    2c02:	e1 e8       	ldi	r30, 0x81	; 129
    2c04:	f0 e0       	ldi	r31, 0x00	; 0
    2c06:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    2c08:	80 81       	ld	r24, Z
    2c0a:	82 60       	ori	r24, 0x02	; 2
    2c0c:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    2c0e:	e0 e8       	ldi	r30, 0x80	; 128
    2c10:	f0 e0       	ldi	r31, 0x00	; 0
    2c12:	80 81       	ld	r24, Z
    2c14:	81 60       	ori	r24, 0x01	; 1
    2c16:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    2c18:	e1 eb       	ldi	r30, 0xB1	; 177
    2c1a:	f0 e0       	ldi	r31, 0x00	; 0
    2c1c:	80 81       	ld	r24, Z
    2c1e:	84 60       	ori	r24, 0x04	; 4
    2c20:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    2c22:	e0 eb       	ldi	r30, 0xB0	; 176
    2c24:	f0 e0       	ldi	r31, 0x00	; 0
    2c26:	80 81       	ld	r24, Z
    2c28:	81 60       	ori	r24, 0x01	; 1
    2c2a:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    2c2c:	e1 e9       	ldi	r30, 0x91	; 145
    2c2e:	f0 e0       	ldi	r31, 0x00	; 0
    2c30:	80 81       	ld	r24, Z
    2c32:	82 60       	ori	r24, 0x02	; 2
    2c34:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    2c36:	80 81       	ld	r24, Z
    2c38:	81 60       	ori	r24, 0x01	; 1
    2c3a:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    2c3c:	e0 e9       	ldi	r30, 0x90	; 144
    2c3e:	f0 e0       	ldi	r31, 0x00	; 0
    2c40:	80 81       	ld	r24, Z
    2c42:	81 60       	ori	r24, 0x01	; 1
    2c44:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    2c46:	e1 ea       	ldi	r30, 0xA1	; 161
    2c48:	f0 e0       	ldi	r31, 0x00	; 0
    2c4a:	80 81       	ld	r24, Z
    2c4c:	82 60       	ori	r24, 0x02	; 2
    2c4e:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    2c50:	80 81       	ld	r24, Z
    2c52:	81 60       	ori	r24, 0x01	; 1
    2c54:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    2c56:	e0 ea       	ldi	r30, 0xA0	; 160
    2c58:	f0 e0       	ldi	r31, 0x00	; 0
    2c5a:	80 81       	ld	r24, Z
    2c5c:	81 60       	ori	r24, 0x01	; 1
    2c5e:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    2c60:	e1 e2       	ldi	r30, 0x21	; 33
    2c62:	f1 e0       	ldi	r31, 0x01	; 1
    2c64:	80 81       	ld	r24, Z
    2c66:	82 60       	ori	r24, 0x02	; 2
    2c68:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    2c6a:	80 81       	ld	r24, Z
    2c6c:	81 60       	ori	r24, 0x01	; 1
    2c6e:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    2c70:	e0 e2       	ldi	r30, 0x20	; 32
    2c72:	f1 e0       	ldi	r31, 0x01	; 1
    2c74:	80 81       	ld	r24, Z
    2c76:	81 60       	ori	r24, 0x01	; 1
    2c78:	80 83       	st	Z, r24
	#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz
		sbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz
		sbi(ADCSRA, ADPS2);
    2c7a:	ea e7       	ldi	r30, 0x7A	; 122
    2c7c:	f0 e0       	ldi	r31, 0x00	; 0
    2c7e:	80 81       	ld	r24, Z
    2c80:	84 60       	ori	r24, 0x04	; 4
    2c82:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS1);
    2c84:	80 81       	ld	r24, Z
    2c86:	8d 7f       	andi	r24, 0xFD	; 253
    2c88:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS0);
    2c8a:	80 81       	ld	r24, Z
    2c8c:	8e 7f       	andi	r24, 0xFE	; 254
    2c8e:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    2c90:	80 81       	ld	r24, Z
    2c92:	80 68       	ori	r24, 0x80	; 128
    2c94:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    2c96:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    2c9a:	08 95       	ret

00002c9c <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
    2c9c:	86 33       	cpi	r24, 0x36	; 54
    2c9e:	08 f0       	brcs	.+2      	; 0x2ca2 <analogRead+0x6>
    2ca0:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
    2ca2:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
    2ca6:	28 2f       	mov	r18, r24
    2ca8:	28 70       	andi	r18, 0x08	; 8
    2caa:	97 7f       	andi	r25, 0xF7	; 247
    2cac:	92 2b       	or	r25, r18
    2cae:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
    2cb2:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <analog_reference>
    2cb6:	90 e4       	ldi	r25, 0x40	; 64
    2cb8:	29 9f       	mul	r18, r25
    2cba:	90 01       	movw	r18, r0
    2cbc:	11 24       	eor	r1, r1
    2cbe:	87 70       	andi	r24, 0x07	; 7
    2cc0:	82 2b       	or	r24, r18
    2cc2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
    2cc6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
    2cca:	80 64       	ori	r24, 0x40	; 64
    2ccc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
    2cd0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
    2cd4:	86 fd       	sbrc	r24, 6
    2cd6:	fc cf       	rjmp	.-8      	; 0x2cd0 <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
    2cd8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
	high = ADCH;
    2cdc:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
    2ce0:	90 e0       	ldi	r25, 0x00	; 0
}
    2ce2:	92 2b       	or	r25, r18
    2ce4:	08 95       	ret

00002ce6 <analogWrite>:
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
    2ce6:	1f 93       	push	r17
    2ce8:	cf 93       	push	r28
    2cea:	df 93       	push	r29
    2cec:	18 2f       	mov	r17, r24
    2cee:	eb 01       	movw	r28, r22
	// We need to make sure the PWM output is enabled for those pins
	// that support it, as we turn it off when digitally reading or
	// writing with them.  Also, make sure the pin is in output mode
	// for consistenty with Wiring, which doesn't require a pinMode
	// call for the analog output pins.
	pinMode(pin, OUTPUT);
    2cf0:	61 e0       	ldi	r22, 0x01	; 1
    2cf2:	16 d1       	rcall	.+556    	; 0x2f20 <pinMode>
	if (val == 0)
    2cf4:	20 97       	sbiw	r28, 0x00	; 0
    2cf6:	11 f4       	brne	.+4      	; 0x2cfc <analogWrite+0x16>
	{
		digitalWrite(pin, LOW);
    2cf8:	60 e0       	ldi	r22, 0x00	; 0
    2cfa:	04 c0       	rjmp	.+8      	; 0x2d04 <analogWrite+0x1e>
	}
	else if (val == 255)
    2cfc:	cf 3f       	cpi	r28, 0xFF	; 255
    2cfe:	d1 05       	cpc	r29, r1
    2d00:	31 f4       	brne	.+12     	; 0x2d0e <analogWrite+0x28>
	{
		digitalWrite(pin, HIGH);
    2d02:	61 e0       	ldi	r22, 0x01	; 1
    2d04:	81 2f       	mov	r24, r17
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    2d06:	df 91       	pop	r29
    2d08:	cf 91       	pop	r28
	{
		digitalWrite(pin, LOW);
	}
	else if (val == 255)
	{
		digitalWrite(pin, HIGH);
    2d0a:	1f 91       	pop	r17
    2d0c:	45 c1       	rjmp	.+650    	; 0x2f98 <digitalWrite>
	}
	else
	{
		switch(digitalPinToTimer(pin))
    2d0e:	e1 2f       	mov	r30, r17
    2d10:	f0 e0       	ldi	r31, 0x00	; 0
    2d12:	e1 54       	subi	r30, 0x41	; 65
    2d14:	fb 4f       	sbci	r31, 0xFB	; 251
    2d16:	e4 91       	lpm	r30, Z
    2d18:	8e 2f       	mov	r24, r30
    2d1a:	90 e0       	ldi	r25, 0x00	; 0
    2d1c:	fc 01       	movw	r30, r24
    2d1e:	31 97       	sbiw	r30, 0x01	; 1
    2d20:	e2 31       	cpi	r30, 0x12	; 18
    2d22:	f1 05       	cpc	r31, r1
    2d24:	08 f0       	brcs	.+2      	; 0x2d28 <analogWrite+0x42>
    2d26:	9d c0       	rjmp	.+314    	; 0x2e62 <analogWrite+0x17c>
    2d28:	88 27       	eor	r24, r24
    2d2a:	ee 58       	subi	r30, 0x8E	; 142
    2d2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d2e:	8f 4f       	sbci	r24, 0xFF	; 255
    2d30:	0c 94 bd 2e 	jmp	0x5d7a	; 0x5d7a <__tablejump2__>
			#endif

			#if defined(TCCR0A) && defined(COM0A1)
			case TIMER0A:
				// connect pwm to pin on timer 0, channel A
				sbi(TCCR0A, COM0A1);
    2d34:	84 b5       	in	r24, 0x24	; 36
    2d36:	80 68       	ori	r24, 0x80	; 128
    2d38:	84 bd       	out	0x24, r24	; 36
				OCR0A = val; // set pwm duty
    2d3a:	c7 bd       	out	0x27, r28	; 39
				break;
    2d3c:	97 c0       	rjmp	.+302    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR0A) && defined(COM0B1)
			case TIMER0B:
				// connect pwm to pin on timer 0, channel B
				sbi(TCCR0A, COM0B1);
    2d3e:	84 b5       	in	r24, 0x24	; 36
    2d40:	80 62       	ori	r24, 0x20	; 32
    2d42:	84 bd       	out	0x24, r24	; 36
				OCR0B = val; // set pwm duty
    2d44:	c8 bd       	out	0x28, r28	; 40
				break;
    2d46:	92 c0       	rjmp	.+292    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR1A) && defined(COM1A1)
			case TIMER1A:
				// connect pwm to pin on timer 1, channel A
				sbi(TCCR1A, COM1A1);
    2d48:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d4c:	80 68       	ori	r24, 0x80	; 128
    2d4e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
				OCR1A = val; // set pwm duty
    2d52:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    2d56:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
				break;
    2d5a:	88 c0       	rjmp	.+272    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR1A) && defined(COM1B1)
			case TIMER1B:
				// connect pwm to pin on timer 1, channel B
				sbi(TCCR1A, COM1B1);
    2d5c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d60:	80 62       	ori	r24, 0x20	; 32
    2d62:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
				OCR1B = val; // set pwm duty
    2d66:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
    2d6a:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
				break;
    2d6e:	7e c0       	rjmp	.+252    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR1A) && defined(COM1C1)
			case TIMER1C:
				// connect pwm to pin on timer 1, channel C
				sbi(TCCR1A, COM1C1);
    2d70:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d74:	88 60       	ori	r24, 0x08	; 8
    2d76:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
				OCR1C = val; // set pwm duty
    2d7a:	d0 93 8d 00 	sts	0x008D, r29	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
    2d7e:	c0 93 8c 00 	sts	0x008C, r28	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
				break;
    2d82:	74 c0       	rjmp	.+232    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR2A) && defined(COM2A1)
			case TIMER2A:
				// connect pwm to pin on timer 2, channel A
				sbi(TCCR2A, COM2A1);
    2d84:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2d88:	80 68       	ori	r24, 0x80	; 128
    2d8a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
				OCR2A = val; // set pwm duty
    2d8e:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
				break;
    2d92:	6c c0       	rjmp	.+216    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR2A) && defined(COM2B1)
			case TIMER2B:
				// connect pwm to pin on timer 2, channel B
				sbi(TCCR2A, COM2B1);
    2d94:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2d98:	80 62       	ori	r24, 0x20	; 32
    2d9a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
				OCR2B = val; // set pwm duty
    2d9e:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
				break;
    2da2:	64 c0       	rjmp	.+200    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR3A) && defined(COM3A1)
			case TIMER3A:
				// connect pwm to pin on timer 3, channel A
				sbi(TCCR3A, COM3A1);
    2da4:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2da8:	80 68       	ori	r24, 0x80	; 128
    2daa:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
				OCR3A = val; // set pwm duty
    2dae:	d0 93 99 00 	sts	0x0099, r29	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    2db2:	c0 93 98 00 	sts	0x0098, r28	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
				break;
    2db6:	5a c0       	rjmp	.+180    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR3A) && defined(COM3B1)
			case TIMER3B:
				// connect pwm to pin on timer 3, channel B
				sbi(TCCR3A, COM3B1);
    2db8:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2dbc:	80 62       	ori	r24, 0x20	; 32
    2dbe:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
				OCR3B = val; // set pwm duty
    2dc2:	d0 93 9b 00 	sts	0x009B, r29	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
    2dc6:	c0 93 9a 00 	sts	0x009A, r28	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
				break;
    2dca:	50 c0       	rjmp	.+160    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR3A) && defined(COM3C1)
			case TIMER3C:
				// connect pwm to pin on timer 3, channel C
				sbi(TCCR3A, COM3C1);
    2dcc:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2dd0:	88 60       	ori	r24, 0x08	; 8
    2dd2:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
				OCR3C = val; // set pwm duty
    2dd6:	d0 93 9d 00 	sts	0x009D, r29	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
    2dda:	c0 93 9c 00 	sts	0x009C, r28	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
				break;
    2dde:	46 c0       	rjmp	.+140    	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR4A)
			case TIMER4A:
				//connect pwm to pin on timer 4, channel A
				sbi(TCCR4A, COM4A1);
    2de0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2de4:	80 68       	ori	r24, 0x80	; 128
    2de6:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				#if defined(COM4A0)		// only used on 32U4
				cbi(TCCR4A, COM4A0);
    2dea:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2dee:	8f 7b       	andi	r24, 0xBF	; 191
    2df0:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				#endif
				OCR4A = val;	// set pwm duty
    2df4:	d0 93 a9 00 	sts	0x00A9, r29	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
    2df8:	c0 93 a8 00 	sts	0x00A8, r28	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
				break;
    2dfc:	37 c0       	rjmp	.+110    	; 0x2e6c <analogWrite+0x186>
			#endif
			
			#if defined(TCCR4A) && defined(COM4B1)
			case TIMER4B:
				// connect pwm to pin on timer 4, channel B
				sbi(TCCR4A, COM4B1);
    2dfe:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2e02:	80 62       	ori	r24, 0x20	; 32
    2e04:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				OCR4B = val; // set pwm duty
    2e08:	d0 93 ab 00 	sts	0x00AB, r29	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
    2e0c:	c0 93 aa 00 	sts	0x00AA, r28	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
				break;
    2e10:	2d c0       	rjmp	.+90     	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR4A) && defined(COM4C1)
			case TIMER4C:
				// connect pwm to pin on timer 4, channel C
				sbi(TCCR4A, COM4C1);
    2e12:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2e16:	88 60       	ori	r24, 0x08	; 8
    2e18:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				OCR4C = val; // set pwm duty
    2e1c:	d0 93 ad 00 	sts	0x00AD, r29	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
    2e20:	c0 93 ac 00 	sts	0x00AC, r28	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
				break;
    2e24:	23 c0       	rjmp	.+70     	; 0x2e6c <analogWrite+0x186>

							
			#if defined(TCCR5A) && defined(COM5A1)
			case TIMER5A:
				// connect pwm to pin on timer 5, channel A
				sbi(TCCR5A, COM5A1);
    2e26:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2e2a:	80 68       	ori	r24, 0x80	; 128
    2e2c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
				OCR5A = val; // set pwm duty
    2e30:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
    2e34:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
				break;
    2e38:	19 c0       	rjmp	.+50     	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR5A) && defined(COM5B1)
			case TIMER5B:
				// connect pwm to pin on timer 5, channel B
				sbi(TCCR5A, COM5B1);
    2e3a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2e3e:	80 62       	ori	r24, 0x20	; 32
    2e40:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
				OCR5B = val; // set pwm duty
    2e44:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
    2e48:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
				break;
    2e4c:	0f c0       	rjmp	.+30     	; 0x2e6c <analogWrite+0x186>
			#endif

			#if defined(TCCR5A) && defined(COM5C1)
			case TIMER5C:
				// connect pwm to pin on timer 5, channel C
				sbi(TCCR5A, COM5C1);
    2e4e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2e52:	88 60       	ori	r24, 0x08	; 8
    2e54:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
				OCR5C = val; // set pwm duty
    2e58:	d0 93 2d 01 	sts	0x012D, r29	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
    2e5c:	c0 93 2c 01 	sts	0x012C, r28	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
				break;
    2e60:	05 c0       	rjmp	.+10     	; 0x2e6c <analogWrite+0x186>
			#endif

			case NOT_ON_TIMER:
			default:
				if (val < 128) {
    2e62:	c0 38       	cpi	r28, 0x80	; 128
    2e64:	d1 05       	cpc	r29, r1
    2e66:	0c f0       	brlt	.+2      	; 0x2e6a <analogWrite+0x184>
    2e68:	4c cf       	rjmp	.-360    	; 0x2d02 <analogWrite+0x1c>
    2e6a:	46 cf       	rjmp	.-372    	; 0x2cf8 <analogWrite+0x12>
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    2e6c:	df 91       	pop	r29
    2e6e:	cf 91       	pop	r28
    2e70:	1f 91       	pop	r17
    2e72:	08 95       	ret

00002e74 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    2e74:	90 e0       	ldi	r25, 0x00	; 0
    2e76:	fc 01       	movw	r30, r24
    2e78:	31 97       	sbiw	r30, 0x01	; 1
    2e7a:	e2 31       	cpi	r30, 0x12	; 18
    2e7c:	f1 05       	cpc	r31, r1
    2e7e:	08 f0       	brcs	.+2      	; 0x2e82 <turnOffPWM+0xe>
    2e80:	4e c0       	rjmp	.+156    	; 0x2f1e <turnOffPWM+0xaa>
    2e82:	88 27       	eor	r24, r24
    2e84:	ec 57       	subi	r30, 0x7C	; 124
    2e86:	ff 4f       	sbci	r31, 0xFF	; 255
    2e88:	8f 4f       	sbci	r24, 0xFF	; 255
    2e8a:	0c 94 bd 2e 	jmp	0x5d7a	; 0x5d7a <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    2e8e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2e92:	8f 77       	andi	r24, 0x7F	; 127
    2e94:	03 c0       	rjmp	.+6      	; 0x2e9c <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    2e96:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2e9a:	8f 7d       	andi	r24, 0xDF	; 223
    2e9c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2ea0:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    2ea2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2ea6:	87 7f       	andi	r24, 0xF7	; 247
    2ea8:	f9 cf       	rjmp	.-14     	; 0x2e9c <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    2eaa:	84 b5       	in	r24, 0x24	; 36
    2eac:	8f 77       	andi	r24, 0x7F	; 127
    2eae:	02 c0       	rjmp	.+4      	; 0x2eb4 <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    2eb0:	84 b5       	in	r24, 0x24	; 36
    2eb2:	8f 7d       	andi	r24, 0xDF	; 223
    2eb4:	84 bd       	out	0x24, r24	; 36
    2eb6:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    2eb8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2ebc:	8f 77       	andi	r24, 0x7F	; 127
    2ebe:	03 c0       	rjmp	.+6      	; 0x2ec6 <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    2ec0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2ec4:	8f 7d       	andi	r24, 0xDF	; 223
    2ec6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2eca:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    2ecc:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2ed0:	8f 77       	andi	r24, 0x7F	; 127
    2ed2:	07 c0       	rjmp	.+14     	; 0x2ee2 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    2ed4:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2ed8:	8f 7d       	andi	r24, 0xDF	; 223
    2eda:	03 c0       	rjmp	.+6      	; 0x2ee2 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    2edc:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2ee0:	87 7f       	andi	r24, 0xF7	; 247
    2ee2:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2ee6:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    2ee8:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2eec:	8f 77       	andi	r24, 0x7F	; 127
    2eee:	07 c0       	rjmp	.+14     	; 0x2efe <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    2ef0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2ef4:	8f 7d       	andi	r24, 0xDF	; 223
    2ef6:	03 c0       	rjmp	.+6      	; 0x2efe <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    2ef8:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2efc:	87 7f       	andi	r24, 0xF7	; 247
    2efe:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2f02:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    2f04:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2f08:	8f 77       	andi	r24, 0x7F	; 127
    2f0a:	07 c0       	rjmp	.+14     	; 0x2f1a <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    2f0c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2f10:	8f 7d       	andi	r24, 0xDF	; 223
    2f12:	03 c0       	rjmp	.+6      	; 0x2f1a <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    2f14:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2f18:	87 7f       	andi	r24, 0xF7	; 247
    2f1a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2f1e:	08 95       	ret

00002f20 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    2f20:	cf 93       	push	r28
    2f22:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    2f24:	90 e0       	ldi	r25, 0x00	; 0
    2f26:	fc 01       	movw	r30, r24
    2f28:	eb 5f       	subi	r30, 0xFB	; 251
    2f2a:	fa 4f       	sbci	r31, 0xFA	; 250
    2f2c:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    2f2e:	fc 01       	movw	r30, r24
    2f30:	e5 5b       	subi	r30, 0xB5	; 181
    2f32:	fa 4f       	sbci	r31, 0xFA	; 250
    2f34:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    2f36:	88 23       	and	r24, r24
    2f38:	61 f1       	breq	.+88     	; 0x2f92 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    2f3a:	90 e0       	ldi	r25, 0x00	; 0
    2f3c:	88 0f       	add	r24, r24
    2f3e:	99 1f       	adc	r25, r25
    2f40:	fc 01       	movw	r30, r24
    2f42:	e5 55       	subi	r30, 0x55	; 85
    2f44:	fa 4f       	sbci	r31, 0xFA	; 250
    2f46:	c5 91       	lpm	r28, Z+
    2f48:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    2f4a:	fc 01       	movw	r30, r24
    2f4c:	ef 56       	subi	r30, 0x6F	; 111
    2f4e:	fa 4f       	sbci	r31, 0xFA	; 250
    2f50:	a5 91       	lpm	r26, Z+
    2f52:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    2f54:	61 11       	cpse	r22, r1
    2f56:	09 c0       	rjmp	.+18     	; 0x2f6a <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    2f58:	9f b7       	in	r25, 0x3f	; 63
                cli();
    2f5a:	f8 94       	cli
		*reg &= ~bit;
    2f5c:	88 81       	ld	r24, Y
    2f5e:	20 95       	com	r18
    2f60:	82 23       	and	r24, r18
    2f62:	88 83       	st	Y, r24
		*out &= ~bit;
    2f64:	ec 91       	ld	r30, X
    2f66:	2e 23       	and	r18, r30
    2f68:	0b c0       	rjmp	.+22     	; 0x2f80 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    2f6a:	62 30       	cpi	r22, 0x02	; 2
    2f6c:	61 f4       	brne	.+24     	; 0x2f86 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    2f6e:	9f b7       	in	r25, 0x3f	; 63
                cli();
    2f70:	f8 94       	cli
		*reg &= ~bit;
    2f72:	88 81       	ld	r24, Y
    2f74:	32 2f       	mov	r19, r18
    2f76:	30 95       	com	r19
    2f78:	83 23       	and	r24, r19
    2f7a:	88 83       	st	Y, r24
		*out |= bit;
    2f7c:	ec 91       	ld	r30, X
    2f7e:	2e 2b       	or	r18, r30
    2f80:	2c 93       	st	X, r18
		SREG = oldSREG;
    2f82:	9f bf       	out	0x3f, r25	; 63
    2f84:	06 c0       	rjmp	.+12     	; 0x2f92 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    2f86:	8f b7       	in	r24, 0x3f	; 63
                cli();
    2f88:	f8 94       	cli
		*reg |= bit;
    2f8a:	e8 81       	ld	r30, Y
    2f8c:	2e 2b       	or	r18, r30
    2f8e:	28 83       	st	Y, r18
		SREG = oldSREG;
    2f90:	8f bf       	out	0x3f, r24	; 63
	}
}
    2f92:	df 91       	pop	r29
    2f94:	cf 91       	pop	r28
    2f96:	08 95       	ret

00002f98 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    2f98:	1f 93       	push	r17
    2f9a:	cf 93       	push	r28
    2f9c:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    2f9e:	28 2f       	mov	r18, r24
    2fa0:	30 e0       	ldi	r19, 0x00	; 0
    2fa2:	f9 01       	movw	r30, r18
    2fa4:	e1 54       	subi	r30, 0x41	; 65
    2fa6:	fb 4f       	sbci	r31, 0xFB	; 251
    2fa8:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    2faa:	f9 01       	movw	r30, r18
    2fac:	eb 5f       	subi	r30, 0xFB	; 251
    2fae:	fa 4f       	sbci	r31, 0xFA	; 250
    2fb0:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    2fb2:	f9 01       	movw	r30, r18
    2fb4:	e5 5b       	subi	r30, 0xB5	; 181
    2fb6:	fa 4f       	sbci	r31, 0xFA	; 250
    2fb8:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    2fba:	cc 23       	and	r28, r28
    2fbc:	b9 f0       	breq	.+46     	; 0x2fec <digitalWrite+0x54>
    2fbe:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    2fc0:	81 11       	cpse	r24, r1
    2fc2:	58 df       	rcall	.-336    	; 0x2e74 <turnOffPWM>

	out = portOutputRegister(port);
    2fc4:	ec 2f       	mov	r30, r28
    2fc6:	f0 e0       	ldi	r31, 0x00	; 0
    2fc8:	ee 0f       	add	r30, r30
    2fca:	ff 1f       	adc	r31, r31
    2fcc:	ef 56       	subi	r30, 0x6F	; 111
    2fce:	fa 4f       	sbci	r31, 0xFA	; 250
    2fd0:	a5 91       	lpm	r26, Z+
    2fd2:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    2fd4:	9f b7       	in	r25, 0x3f	; 63
	cli();
    2fd6:	f8 94       	cli

	if (val == LOW) {
    2fd8:	11 11       	cpse	r17, r1
    2fda:	04 c0       	rjmp	.+8      	; 0x2fe4 <digitalWrite+0x4c>
		*out &= ~bit;
    2fdc:	8c 91       	ld	r24, X
    2fde:	d0 95       	com	r29
    2fe0:	d8 23       	and	r29, r24
    2fe2:	02 c0       	rjmp	.+4      	; 0x2fe8 <digitalWrite+0x50>
	} else {
		*out |= bit;
    2fe4:	ec 91       	ld	r30, X
    2fe6:	de 2b       	or	r29, r30
    2fe8:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    2fea:	9f bf       	out	0x3f, r25	; 63
}
    2fec:	df 91       	pop	r29
    2fee:	cf 91       	pop	r28
    2ff0:	1f 91       	pop	r17
    2ff2:	08 95       	ret

00002ff4 <shiftOut>:
	}
	return value;
}

void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)
{
    2ff4:	ff 92       	push	r15
    2ff6:	0f 93       	push	r16
    2ff8:	1f 93       	push	r17
    2ffa:	cf 93       	push	r28
    2ffc:	df 93       	push	r29
    2ffe:	08 2f       	mov	r16, r24
    3000:	16 2f       	mov	r17, r22
    3002:	f4 2e       	mov	r15, r20
    3004:	c2 2f       	mov	r28, r18
    3006:	d8 e0       	ldi	r29, 0x08	; 8
	uint8_t i;

	for (i = 0; i < 8; i++)  {
		if (bitOrder == LSBFIRST) {
			digitalWrite(dataPin, val & 1);
    3008:	6c 2f       	mov	r22, r28
void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)
{
	uint8_t i;

	for (i = 0; i < 8; i++)  {
		if (bitOrder == LSBFIRST) {
    300a:	f1 10       	cpse	r15, r1
    300c:	05 c0       	rjmp	.+10     	; 0x3018 <shiftOut+0x24>
			digitalWrite(dataPin, val & 1);
    300e:	61 70       	andi	r22, 0x01	; 1
    3010:	80 2f       	mov	r24, r16
    3012:	c2 df       	rcall	.-124    	; 0x2f98 <digitalWrite>
			val >>= 1;
    3014:	c6 95       	lsr	r28
    3016:	06 c0       	rjmp	.+12     	; 0x3024 <shiftOut+0x30>
		} else {	
			digitalWrite(dataPin, (val & 128) != 0);
    3018:	66 1f       	adc	r22, r22
    301a:	66 27       	eor	r22, r22
    301c:	66 1f       	adc	r22, r22
    301e:	80 2f       	mov	r24, r16
    3020:	bb df       	rcall	.-138    	; 0x2f98 <digitalWrite>
			val <<= 1;
    3022:	cc 0f       	add	r28, r28
		}
			
		digitalWrite(clockPin, HIGH);
    3024:	61 e0       	ldi	r22, 0x01	; 1
    3026:	81 2f       	mov	r24, r17
    3028:	b7 df       	rcall	.-146    	; 0x2f98 <digitalWrite>
		digitalWrite(clockPin, LOW);		
    302a:	60 e0       	ldi	r22, 0x00	; 0
    302c:	81 2f       	mov	r24, r17
    302e:	b4 df       	rcall	.-152    	; 0x2f98 <digitalWrite>
    3030:	d1 50       	subi	r29, 0x01	; 1
    3032:	51 f7       	brne	.-44     	; 0x3008 <shiftOut+0x14>

void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)
{
	uint8_t i;

	for (i = 0; i < 8; i++)  {
    3034:	df 91       	pop	r29
		}
			
		digitalWrite(clockPin, HIGH);
		digitalWrite(clockPin, LOW);		
	}
}
    3036:	cf 91       	pop	r28
    3038:	1f 91       	pop	r17
    303a:	0f 91       	pop	r16
    303c:	ff 90       	pop	r15
    303e:	08 95       	ret

00003040 <_ZN6StringD1Ev>:
    3040:	fc 01       	movw	r30, r24
{
	if (!buffer) return;
	for (char *p = buffer; *p; p++) {
		*p = toupper(*p);
	}
}
    3042:	80 81       	ld	r24, Z
    3044:	91 81       	ldd	r25, Z+1	; 0x01
    3046:	00 97       	sbiw	r24, 0x00	; 0
    3048:	11 f0       	breq	.+4      	; 0x304e <_ZN6StringD1Ev+0xe>
    304a:	0c 94 95 2f 	jmp	0x5f2a	; 0x5f2a <free>
    304e:	08 95       	ret

00003050 <_ZN6String10invalidateEv>:
    3050:	cf 93       	push	r28
    3052:	df 93       	push	r29
    3054:	ec 01       	movw	r28, r24
    3056:	88 81       	ld	r24, Y
    3058:	99 81       	ldd	r25, Y+1	; 0x01
    305a:	00 97       	sbiw	r24, 0x00	; 0
    305c:	11 f0       	breq	.+4      	; 0x3062 <_ZN6String10invalidateEv+0x12>
    305e:	0e 94 95 2f 	call	0x5f2a	; 0x5f2a <free>
    3062:	19 82       	std	Y+1, r1	; 0x01
    3064:	18 82       	st	Y, r1
    3066:	1d 82       	std	Y+5, r1	; 0x05
    3068:	1c 82       	std	Y+4, r1	; 0x04
    306a:	1b 82       	std	Y+3, r1	; 0x03
    306c:	1a 82       	std	Y+2, r1	; 0x02
    306e:	df 91       	pop	r29
    3070:	cf 91       	pop	r28
    3072:	08 95       	ret

00003074 <_ZN6String12changeBufferEj>:
    3074:	0f 93       	push	r16
    3076:	1f 93       	push	r17
    3078:	cf 93       	push	r28
    307a:	df 93       	push	r29
    307c:	ec 01       	movw	r28, r24
    307e:	8b 01       	movw	r16, r22
    3080:	6f 5f       	subi	r22, 0xFF	; 255
    3082:	7f 4f       	sbci	r23, 0xFF	; 255
    3084:	88 81       	ld	r24, Y
    3086:	99 81       	ldd	r25, Y+1	; 0x01
    3088:	0e 94 1e 30 	call	0x603c	; 0x603c <realloc>
    308c:	00 97       	sbiw	r24, 0x00	; 0
    308e:	31 f0       	breq	.+12     	; 0x309c <_ZN6String12changeBufferEj+0x28>
    3090:	99 83       	std	Y+1, r25	; 0x01
    3092:	88 83       	st	Y, r24
    3094:	1b 83       	std	Y+3, r17	; 0x03
    3096:	0a 83       	std	Y+2, r16	; 0x02
    3098:	81 e0       	ldi	r24, 0x01	; 1
    309a:	01 c0       	rjmp	.+2      	; 0x309e <_ZN6String12changeBufferEj+0x2a>
    309c:	80 e0       	ldi	r24, 0x00	; 0
    309e:	df 91       	pop	r29
    30a0:	cf 91       	pop	r28
    30a2:	1f 91       	pop	r17
    30a4:	0f 91       	pop	r16
    30a6:	08 95       	ret

000030a8 <_ZN6String7reserveEj>:
    30a8:	cf 93       	push	r28
    30aa:	df 93       	push	r29
    30ac:	ec 01       	movw	r28, r24
    30ae:	88 81       	ld	r24, Y
    30b0:	99 81       	ldd	r25, Y+1	; 0x01
    30b2:	89 2b       	or	r24, r25
    30b4:	29 f0       	breq	.+10     	; 0x30c0 <_ZN6String7reserveEj+0x18>
    30b6:	8a 81       	ldd	r24, Y+2	; 0x02
    30b8:	9b 81       	ldd	r25, Y+3	; 0x03
    30ba:	86 17       	cp	r24, r22
    30bc:	97 07       	cpc	r25, r23
    30be:	58 f4       	brcc	.+22     	; 0x30d6 <_ZN6String7reserveEj+0x2e>
    30c0:	ce 01       	movw	r24, r28
    30c2:	d8 df       	rcall	.-80     	; 0x3074 <_ZN6String12changeBufferEj>
    30c4:	88 23       	and	r24, r24
    30c6:	41 f0       	breq	.+16     	; 0x30d8 <_ZN6String7reserveEj+0x30>
    30c8:	8c 81       	ldd	r24, Y+4	; 0x04
    30ca:	9d 81       	ldd	r25, Y+5	; 0x05
    30cc:	89 2b       	or	r24, r25
    30ce:	19 f4       	brne	.+6      	; 0x30d6 <_ZN6String7reserveEj+0x2e>
    30d0:	e8 81       	ld	r30, Y
    30d2:	f9 81       	ldd	r31, Y+1	; 0x01
    30d4:	10 82       	st	Z, r1
    30d6:	81 e0       	ldi	r24, 0x01	; 1
    30d8:	df 91       	pop	r29
    30da:	cf 91       	pop	r28
    30dc:	08 95       	ret

000030de <_ZN6String4copyEPKcj>:
    30de:	ef 92       	push	r14
    30e0:	ff 92       	push	r15
    30e2:	0f 93       	push	r16
    30e4:	1f 93       	push	r17
    30e6:	cf 93       	push	r28
    30e8:	df 93       	push	r29
    30ea:	ec 01       	movw	r28, r24
    30ec:	7b 01       	movw	r14, r22
    30ee:	8a 01       	movw	r16, r20
    30f0:	ba 01       	movw	r22, r20
    30f2:	da df       	rcall	.-76     	; 0x30a8 <_ZN6String7reserveEj>
    30f4:	81 11       	cpse	r24, r1
    30f6:	03 c0       	rjmp	.+6      	; 0x30fe <_ZN6String4copyEPKcj+0x20>
    30f8:	ce 01       	movw	r24, r28
    30fa:	aa df       	rcall	.-172    	; 0x3050 <_ZN6String10invalidateEv>
    30fc:	07 c0       	rjmp	.+14     	; 0x310c <_ZN6String4copyEPKcj+0x2e>
    30fe:	1d 83       	std	Y+5, r17	; 0x05
    3100:	0c 83       	std	Y+4, r16	; 0x04
    3102:	b7 01       	movw	r22, r14
    3104:	88 81       	ld	r24, Y
    3106:	99 81       	ldd	r25, Y+1	; 0x01
    3108:	0e 94 8c 31 	call	0x6318	; 0x6318 <strcpy>
    310c:	ce 01       	movw	r24, r28
    310e:	df 91       	pop	r29
    3110:	cf 91       	pop	r28
    3112:	1f 91       	pop	r17
    3114:	0f 91       	pop	r16
    3116:	ff 90       	pop	r15
    3118:	ef 90       	pop	r14
    311a:	08 95       	ret

0000311c <_ZN6StringC1EPKc>:
    311c:	fc 01       	movw	r30, r24
    311e:	11 82       	std	Z+1, r1	; 0x01
    3120:	10 82       	st	Z, r1
    3122:	13 82       	std	Z+3, r1	; 0x03
    3124:	12 82       	std	Z+2, r1	; 0x02
    3126:	15 82       	std	Z+5, r1	; 0x05
    3128:	14 82       	std	Z+4, r1	; 0x04
    312a:	61 15       	cp	r22, r1
    312c:	71 05       	cpc	r23, r1
    312e:	49 f0       	breq	.+18     	; 0x3142 <_ZN6StringC1EPKc+0x26>
    3130:	fb 01       	movw	r30, r22
    3132:	01 90       	ld	r0, Z+
    3134:	00 20       	and	r0, r0
    3136:	e9 f7       	brne	.-6      	; 0x3132 <_ZN6StringC1EPKc+0x16>
    3138:	31 97       	sbiw	r30, 0x01	; 1
    313a:	af 01       	movw	r20, r30
    313c:	46 1b       	sub	r20, r22
    313e:	57 0b       	sbc	r21, r23
    3140:	ce cf       	rjmp	.-100    	; 0x30de <_ZN6String4copyEPKcj>
    3142:	08 95       	ret

00003144 <_ZN6StringaSERKS_>:
    3144:	cf 93       	push	r28
    3146:	df 93       	push	r29
    3148:	ec 01       	movw	r28, r24
    314a:	fb 01       	movw	r30, r22
    314c:	86 17       	cp	r24, r22
    314e:	97 07       	cpc	r25, r23
    3150:	51 f0       	breq	.+20     	; 0x3166 <_ZN6StringaSERKS_+0x22>
    3152:	60 81       	ld	r22, Z
    3154:	71 81       	ldd	r23, Z+1	; 0x01
    3156:	61 15       	cp	r22, r1
    3158:	71 05       	cpc	r23, r1
    315a:	21 f0       	breq	.+8      	; 0x3164 <_ZN6StringaSERKS_+0x20>
    315c:	44 81       	ldd	r20, Z+4	; 0x04
    315e:	55 81       	ldd	r21, Z+5	; 0x05
    3160:	be df       	rcall	.-132    	; 0x30de <_ZN6String4copyEPKcj>
    3162:	01 c0       	rjmp	.+2      	; 0x3166 <_ZN6StringaSERKS_+0x22>
    3164:	75 df       	rcall	.-278    	; 0x3050 <_ZN6String10invalidateEv>
    3166:	ce 01       	movw	r24, r28
    3168:	df 91       	pop	r29
    316a:	cf 91       	pop	r28
    316c:	08 95       	ret

0000316e <_ZN6StringC1ERKS_>:
    316e:	fc 01       	movw	r30, r24
    3170:	11 82       	std	Z+1, r1	; 0x01
    3172:	10 82       	st	Z, r1
    3174:	13 82       	std	Z+3, r1	; 0x03
    3176:	12 82       	std	Z+2, r1	; 0x02
    3178:	15 82       	std	Z+5, r1	; 0x05
    317a:	14 82       	std	Z+4, r1	; 0x04
    317c:	e3 cf       	rjmp	.-58     	; 0x3144 <_ZN6StringaSERKS_>

0000317e <_ZN6StringaSEPKc>:
    317e:	cf 93       	push	r28
    3180:	df 93       	push	r29
    3182:	ec 01       	movw	r28, r24
    3184:	61 15       	cp	r22, r1
    3186:	71 05       	cpc	r23, r1
    3188:	51 f0       	breq	.+20     	; 0x319e <_ZN6StringaSEPKc+0x20>
    318a:	fb 01       	movw	r30, r22
    318c:	01 90       	ld	r0, Z+
    318e:	00 20       	and	r0, r0
    3190:	e9 f7       	brne	.-6      	; 0x318c <_ZN6StringaSEPKc+0xe>
    3192:	31 97       	sbiw	r30, 0x01	; 1
    3194:	af 01       	movw	r20, r30
    3196:	46 1b       	sub	r20, r22
    3198:	57 0b       	sbc	r21, r23
    319a:	a1 df       	rcall	.-190    	; 0x30de <_ZN6String4copyEPKcj>
    319c:	01 c0       	rjmp	.+2      	; 0x31a0 <_ZN6StringaSEPKc+0x22>
    319e:	58 df       	rcall	.-336    	; 0x3050 <_ZN6String10invalidateEv>
    31a0:	ce 01       	movw	r24, r28
    31a2:	df 91       	pop	r29
    31a4:	cf 91       	pop	r28
    31a6:	08 95       	ret

000031a8 <_ZN6StringC1Eih>:
    31a8:	0f 93       	push	r16
    31aa:	1f 93       	push	r17
    31ac:	cf 93       	push	r28
    31ae:	df 93       	push	r29
    31b0:	cd b7       	in	r28, 0x3d	; 61
    31b2:	de b7       	in	r29, 0x3e	; 62
    31b4:	62 97       	sbiw	r28, 0x12	; 18
    31b6:	0f b6       	in	r0, 0x3f	; 63
    31b8:	f8 94       	cli
    31ba:	de bf       	out	0x3e, r29	; 62
    31bc:	0f be       	out	0x3f, r0	; 63
    31be:	cd bf       	out	0x3d, r28	; 61
    31c0:	8c 01       	movw	r16, r24
    31c2:	cb 01       	movw	r24, r22
    31c4:	f8 01       	movw	r30, r16
    31c6:	11 82       	std	Z+1, r1	; 0x01
    31c8:	10 82       	st	Z, r1
    31ca:	13 82       	std	Z+3, r1	; 0x03
    31cc:	12 82       	std	Z+2, r1	; 0x02
    31ce:	15 82       	std	Z+5, r1	; 0x05
    31d0:	14 82       	std	Z+4, r1	; 0x04
    31d2:	50 e0       	ldi	r21, 0x00	; 0
    31d4:	be 01       	movw	r22, r28
    31d6:	6f 5f       	subi	r22, 0xFF	; 255
    31d8:	7f 4f       	sbci	r23, 0xFF	; 255
    31da:	0e 94 c7 31 	call	0x638e	; 0x638e <itoa>
    31de:	be 01       	movw	r22, r28
    31e0:	6f 5f       	subi	r22, 0xFF	; 255
    31e2:	7f 4f       	sbci	r23, 0xFF	; 255
    31e4:	c8 01       	movw	r24, r16
    31e6:	cb df       	rcall	.-106    	; 0x317e <_ZN6StringaSEPKc>
    31e8:	62 96       	adiw	r28, 0x12	; 18
    31ea:	0f b6       	in	r0, 0x3f	; 63
    31ec:	f8 94       	cli
    31ee:	de bf       	out	0x3e, r29	; 62
    31f0:	0f be       	out	0x3f, r0	; 63
    31f2:	cd bf       	out	0x3d, r28	; 61
    31f4:	df 91       	pop	r29
    31f6:	cf 91       	pop	r28
    31f8:	1f 91       	pop	r17
    31fa:	0f 91       	pop	r16
    31fc:	08 95       	ret

000031fe <_ZN6StringC1Efh>:
    31fe:	ef 92       	push	r14
    3200:	ff 92       	push	r15
    3202:	0f 93       	push	r16
    3204:	1f 93       	push	r17
    3206:	cf 93       	push	r28
    3208:	df 93       	push	r29
    320a:	cd b7       	in	r28, 0x3d	; 61
    320c:	de b7       	in	r29, 0x3e	; 62
    320e:	a1 97       	sbiw	r28, 0x21	; 33
    3210:	0f b6       	in	r0, 0x3f	; 63
    3212:	f8 94       	cli
    3214:	de bf       	out	0x3e, r29	; 62
    3216:	0f be       	out	0x3f, r0	; 63
    3218:	cd bf       	out	0x3d, r28	; 61
    321a:	7c 01       	movw	r14, r24
    321c:	cb 01       	movw	r24, r22
    321e:	ba 01       	movw	r22, r20
    3220:	f7 01       	movw	r30, r14
    3222:	11 82       	std	Z+1, r1	; 0x01
    3224:	10 82       	st	Z, r1
    3226:	13 82       	std	Z+3, r1	; 0x03
    3228:	12 82       	std	Z+2, r1	; 0x02
    322a:	15 82       	std	Z+5, r1	; 0x05
    322c:	14 82       	std	Z+4, r1	; 0x04
    322e:	42 e0       	ldi	r20, 0x02	; 2
    3230:	42 0f       	add	r20, r18
    3232:	8e 01       	movw	r16, r28
    3234:	0f 5f       	subi	r16, 0xFF	; 255
    3236:	1f 4f       	sbci	r17, 0xFF	; 255
    3238:	0e 94 de 2e 	call	0x5dbc	; 0x5dbc <dtostrf>
    323c:	bc 01       	movw	r22, r24
    323e:	c7 01       	movw	r24, r14
    3240:	9e df       	rcall	.-196    	; 0x317e <_ZN6StringaSEPKc>
    3242:	a1 96       	adiw	r28, 0x21	; 33
    3244:	0f b6       	in	r0, 0x3f	; 63
    3246:	f8 94       	cli
    3248:	de bf       	out	0x3e, r29	; 62
    324a:	0f be       	out	0x3f, r0	; 63
    324c:	cd bf       	out	0x3d, r28	; 61
    324e:	df 91       	pop	r29
    3250:	cf 91       	pop	r28
    3252:	1f 91       	pop	r17
    3254:	0f 91       	pop	r16
    3256:	ff 90       	pop	r15
    3258:	ef 90       	pop	r14
    325a:	08 95       	ret

0000325c <_ZN6String6concatEPKcj>:
    325c:	ef 92       	push	r14
    325e:	ff 92       	push	r15
    3260:	0f 93       	push	r16
    3262:	1f 93       	push	r17
    3264:	cf 93       	push	r28
    3266:	df 93       	push	r29
    3268:	61 15       	cp	r22, r1
    326a:	71 05       	cpc	r23, r1
    326c:	11 f4       	brne	.+4      	; 0x3272 <_ZN6String6concatEPKcj+0x16>
    326e:	80 e0       	ldi	r24, 0x00	; 0
    3270:	1b c0       	rjmp	.+54     	; 0x32a8 <_ZN6String6concatEPKcj+0x4c>
    3272:	41 15       	cp	r20, r1
    3274:	51 05       	cpc	r21, r1
    3276:	b9 f0       	breq	.+46     	; 0x32a6 <_ZN6String6concatEPKcj+0x4a>
    3278:	7b 01       	movw	r14, r22
    327a:	ec 01       	movw	r28, r24
    327c:	8c 81       	ldd	r24, Y+4	; 0x04
    327e:	9d 81       	ldd	r25, Y+5	; 0x05
    3280:	8a 01       	movw	r16, r20
    3282:	08 0f       	add	r16, r24
    3284:	19 1f       	adc	r17, r25
    3286:	b8 01       	movw	r22, r16
    3288:	ce 01       	movw	r24, r28
    328a:	0e df       	rcall	.-484    	; 0x30a8 <_ZN6String7reserveEj>
    328c:	88 23       	and	r24, r24
    328e:	79 f3       	breq	.-34     	; 0x326e <_ZN6String6concatEPKcj+0x12>
    3290:	28 81       	ld	r18, Y
    3292:	39 81       	ldd	r19, Y+1	; 0x01
    3294:	8c 81       	ldd	r24, Y+4	; 0x04
    3296:	9d 81       	ldd	r25, Y+5	; 0x05
    3298:	b7 01       	movw	r22, r14
    329a:	82 0f       	add	r24, r18
    329c:	93 1f       	adc	r25, r19
    329e:	0e 94 8c 31 	call	0x6318	; 0x6318 <strcpy>
    32a2:	1d 83       	std	Y+5, r17	; 0x05
    32a4:	0c 83       	std	Y+4, r16	; 0x04
    32a6:	81 e0       	ldi	r24, 0x01	; 1
    32a8:	df 91       	pop	r29
    32aa:	cf 91       	pop	r28
    32ac:	1f 91       	pop	r17
    32ae:	0f 91       	pop	r16
    32b0:	ff 90       	pop	r15
    32b2:	ef 90       	pop	r14
    32b4:	08 95       	ret

000032b6 <_ZN6String6concatEc>:
    32b6:	cf 93       	push	r28
    32b8:	df 93       	push	r29
    32ba:	1f 92       	push	r1
    32bc:	1f 92       	push	r1
    32be:	cd b7       	in	r28, 0x3d	; 61
    32c0:	de b7       	in	r29, 0x3e	; 62
    32c2:	69 83       	std	Y+1, r22	; 0x01
    32c4:	1a 82       	std	Y+2, r1	; 0x02
    32c6:	41 e0       	ldi	r20, 0x01	; 1
    32c8:	50 e0       	ldi	r21, 0x00	; 0
    32ca:	be 01       	movw	r22, r28
    32cc:	6f 5f       	subi	r22, 0xFF	; 255
    32ce:	7f 4f       	sbci	r23, 0xFF	; 255
    32d0:	c5 df       	rcall	.-118    	; 0x325c <_ZN6String6concatEPKcj>
    32d2:	0f 90       	pop	r0
    32d4:	0f 90       	pop	r0
    32d6:	df 91       	pop	r29
    32d8:	cf 91       	pop	r28
    32da:	08 95       	ret

000032dc <_ZplRK15StringSumHelperRK6String>:
    32dc:	cf 93       	push	r28
    32de:	df 93       	push	r29
    32e0:	ec 01       	movw	r28, r24
    32e2:	fb 01       	movw	r30, r22
    32e4:	44 81       	ldd	r20, Z+4	; 0x04
    32e6:	55 81       	ldd	r21, Z+5	; 0x05
    32e8:	60 81       	ld	r22, Z
    32ea:	71 81       	ldd	r23, Z+1	; 0x01
    32ec:	b7 df       	rcall	.-146    	; 0x325c <_ZN6String6concatEPKcj>
    32ee:	81 11       	cpse	r24, r1
    32f0:	02 c0       	rjmp	.+4      	; 0x32f6 <_ZplRK15StringSumHelperRK6String+0x1a>
    32f2:	ce 01       	movw	r24, r28
    32f4:	ad de       	rcall	.-678    	; 0x3050 <_ZN6String10invalidateEv>
    32f6:	ce 01       	movw	r24, r28
    32f8:	df 91       	pop	r29
    32fa:	cf 91       	pop	r28
    32fc:	08 95       	ret

000032fe <_ZplRK15StringSumHelperPKc>:
    32fe:	cf 93       	push	r28
    3300:	df 93       	push	r29
    3302:	ec 01       	movw	r28, r24
    3304:	61 15       	cp	r22, r1
    3306:	71 05       	cpc	r23, r1
    3308:	59 f0       	breq	.+22     	; 0x3320 <_ZplRK15StringSumHelperPKc+0x22>
    330a:	fb 01       	movw	r30, r22
    330c:	01 90       	ld	r0, Z+
    330e:	00 20       	and	r0, r0
    3310:	e9 f7       	brne	.-6      	; 0x330c <_ZplRK15StringSumHelperPKc+0xe>
    3312:	31 97       	sbiw	r30, 0x01	; 1
    3314:	af 01       	movw	r20, r30
    3316:	46 1b       	sub	r20, r22
    3318:	57 0b       	sbc	r21, r23
    331a:	a0 df       	rcall	.-192    	; 0x325c <_ZN6String6concatEPKcj>
    331c:	81 11       	cpse	r24, r1
    331e:	02 c0       	rjmp	.+4      	; 0x3324 <_ZplRK15StringSumHelperPKc+0x26>
    3320:	ce 01       	movw	r24, r28
    3322:	96 de       	rcall	.-724    	; 0x3050 <_ZN6String10invalidateEv>
    3324:	ce 01       	movw	r24, r28
    3326:	df 91       	pop	r29
    3328:	cf 91       	pop	r28
    332a:	08 95       	ret

0000332c <_ZNK6String6equalsEPKc>:
    332c:	fc 01       	movw	r30, r24
    332e:	24 81       	ldd	r18, Z+4	; 0x04
    3330:	35 81       	ldd	r19, Z+5	; 0x05
    3332:	23 2b       	or	r18, r19
    3334:	31 f4       	brne	.+12     	; 0x3342 <_ZNK6String6equalsEPKc+0x16>
    3336:	21 e0       	ldi	r18, 0x01	; 1
    3338:	61 15       	cp	r22, r1
    333a:	71 05       	cpc	r23, r1
    333c:	a1 f0       	breq	.+40     	; 0x3366 <_ZNK6String6equalsEPKc+0x3a>
    333e:	fb 01       	movw	r30, r22
    3340:	08 c0       	rjmp	.+16     	; 0x3352 <_ZNK6String6equalsEPKc+0x26>
    3342:	fc 01       	movw	r30, r24
    3344:	80 81       	ld	r24, Z
    3346:	91 81       	ldd	r25, Z+1	; 0x01
    3348:	61 15       	cp	r22, r1
    334a:	71 05       	cpc	r23, r1
    334c:	31 f4       	brne	.+12     	; 0x335a <_ZNK6String6equalsEPKc+0x2e>
    334e:	21 e0       	ldi	r18, 0x01	; 1
    3350:	fc 01       	movw	r30, r24
    3352:	80 81       	ld	r24, Z
    3354:	88 23       	and	r24, r24
    3356:	39 f0       	breq	.+14     	; 0x3366 <_ZNK6String6equalsEPKc+0x3a>
    3358:	05 c0       	rjmp	.+10     	; 0x3364 <_ZNK6String6equalsEPKc+0x38>
    335a:	0e 94 83 31 	call	0x6306	; 0x6306 <strcmp>
    335e:	21 e0       	ldi	r18, 0x01	; 1
    3360:	89 2b       	or	r24, r25
    3362:	09 f0       	breq	.+2      	; 0x3366 <_ZNK6String6equalsEPKc+0x3a>
    3364:	20 e0       	ldi	r18, 0x00	; 0
    3366:	82 2f       	mov	r24, r18
    3368:	08 95       	ret

0000336a <_ZNK6String8getBytesEPhjj>:
    336a:	0f 93       	push	r16
    336c:	1f 93       	push	r17
    336e:	cf 93       	push	r28
    3370:	df 93       	push	r29
    3372:	41 15       	cp	r20, r1
    3374:	51 05       	cpc	r21, r1
    3376:	19 f1       	breq	.+70     	; 0x33be <_ZNK6String8getBytesEPhjj+0x54>
    3378:	61 15       	cp	r22, r1
    337a:	71 05       	cpc	r23, r1
    337c:	01 f1       	breq	.+64     	; 0x33be <_ZNK6String8getBytesEPhjj+0x54>
    337e:	dc 01       	movw	r26, r24
    3380:	14 96       	adiw	r26, 0x04	; 4
    3382:	ed 91       	ld	r30, X+
    3384:	fc 91       	ld	r31, X
    3386:	15 97       	sbiw	r26, 0x05	; 5
    3388:	2e 17       	cp	r18, r30
    338a:	3f 07       	cpc	r19, r31
    338c:	18 f0       	brcs	.+6      	; 0x3394 <_ZNK6String8getBytesEPhjj+0x2a>
    338e:	fb 01       	movw	r30, r22
    3390:	10 82       	st	Z, r1
    3392:	15 c0       	rjmp	.+42     	; 0x33be <_ZNK6String8getBytesEPhjj+0x54>
    3394:	e2 1b       	sub	r30, r18
    3396:	f3 0b       	sbc	r31, r19
    3398:	ea 01       	movw	r28, r20
    339a:	21 97       	sbiw	r28, 0x01	; 1
    339c:	ec 17       	cp	r30, r28
    339e:	fd 07       	cpc	r31, r29
    33a0:	08 f4       	brcc	.+2      	; 0x33a4 <_ZNK6String8getBytesEPhjj+0x3a>
    33a2:	ef 01       	movw	r28, r30
    33a4:	8b 01       	movw	r16, r22
    33a6:	fc 01       	movw	r30, r24
    33a8:	60 81       	ld	r22, Z
    33aa:	71 81       	ldd	r23, Z+1	; 0x01
    33ac:	62 0f       	add	r22, r18
    33ae:	73 1f       	adc	r23, r19
    33b0:	ae 01       	movw	r20, r28
    33b2:	c8 01       	movw	r24, r16
    33b4:	0e 94 93 31 	call	0x6326	; 0x6326 <strncpy>
    33b8:	c0 0f       	add	r28, r16
    33ba:	d1 1f       	adc	r29, r17
    33bc:	18 82       	st	Y, r1
    33be:	df 91       	pop	r29
    33c0:	cf 91       	pop	r28
    33c2:	1f 91       	pop	r17
    33c4:	0f 91       	pop	r16
    33c6:	08 95       	ret

000033c8 <_ZNK6String7indexOfERKS_j>:
    33c8:	cf 93       	push	r28
    33ca:	df 93       	push	r29
    33cc:	fc 01       	movw	r30, r24
    33ce:	24 81       	ldd	r18, Z+4	; 0x04
    33d0:	35 81       	ldd	r19, Z+5	; 0x05
    33d2:	42 17       	cp	r20, r18
    33d4:	53 07       	cpc	r21, r19
    33d6:	80 f4       	brcc	.+32     	; 0x33f8 <_ZNK6String7indexOfERKS_j+0x30>
    33d8:	fb 01       	movw	r30, r22
    33da:	dc 01       	movw	r26, r24
    33dc:	cd 91       	ld	r28, X+
    33de:	dc 91       	ld	r29, X
    33e0:	60 81       	ld	r22, Z
    33e2:	71 81       	ldd	r23, Z+1	; 0x01
    33e4:	ce 01       	movw	r24, r28
    33e6:	84 0f       	add	r24, r20
    33e8:	95 1f       	adc	r25, r21
    33ea:	0e 94 ad 31 	call	0x635a	; 0x635a <strstr>
    33ee:	00 97       	sbiw	r24, 0x00	; 0
    33f0:	19 f0       	breq	.+6      	; 0x33f8 <_ZNK6String7indexOfERKS_j+0x30>
    33f2:	8c 1b       	sub	r24, r28
    33f4:	9d 0b       	sbc	r25, r29
    33f6:	02 c0       	rjmp	.+4      	; 0x33fc <_ZNK6String7indexOfERKS_j+0x34>
    33f8:	8f ef       	ldi	r24, 0xFF	; 255
    33fa:	9f ef       	ldi	r25, 0xFF	; 255
    33fc:	df 91       	pop	r29
    33fe:	cf 91       	pop	r28
    3400:	08 95       	ret

00003402 <_ZNK6String7indexOfERKS_>:
    3402:	40 e0       	ldi	r20, 0x00	; 0
    3404:	50 e0       	ldi	r21, 0x00	; 0
    3406:	e0 cf       	rjmp	.-64     	; 0x33c8 <_ZNK6String7indexOfERKS_j>

00003408 <_ZNK6String11lastIndexOfERKS_j>:
    3408:	af 92       	push	r10
    340a:	bf 92       	push	r11
    340c:	cf 92       	push	r12
    340e:	df 92       	push	r13
    3410:	ef 92       	push	r14
    3412:	ff 92       	push	r15
    3414:	0f 93       	push	r16
    3416:	1f 93       	push	r17
    3418:	cf 93       	push	r28
    341a:	df 93       	push	r29
    341c:	7b 01       	movw	r14, r22
    341e:	8a 01       	movw	r16, r20
    3420:	fb 01       	movw	r30, r22
    3422:	44 81       	ldd	r20, Z+4	; 0x04
    3424:	55 81       	ldd	r21, Z+5	; 0x05
    3426:	41 15       	cp	r20, r1
    3428:	51 05       	cpc	r21, r1
    342a:	61 f1       	breq	.+88     	; 0x3484 <_ZNK6String11lastIndexOfERKS_j+0x7c>
    342c:	fc 01       	movw	r30, r24
    342e:	24 81       	ldd	r18, Z+4	; 0x04
    3430:	35 81       	ldd	r19, Z+5	; 0x05
    3432:	21 15       	cp	r18, r1
    3434:	31 05       	cpc	r19, r1
    3436:	31 f1       	breq	.+76     	; 0x3484 <_ZNK6String11lastIndexOfERKS_j+0x7c>
    3438:	24 17       	cp	r18, r20
    343a:	35 07       	cpc	r19, r21
    343c:	18 f1       	brcs	.+70     	; 0x3484 <_ZNK6String11lastIndexOfERKS_j+0x7c>
    343e:	02 17       	cp	r16, r18
    3440:	13 07       	cpc	r17, r19
    3442:	18 f0       	brcs	.+6      	; 0x344a <_ZNK6String11lastIndexOfERKS_j+0x42>
    3444:	89 01       	movw	r16, r18
    3446:	01 50       	subi	r16, 0x01	; 1
    3448:	11 09       	sbc	r17, r1
    344a:	fc 01       	movw	r30, r24
    344c:	a0 80       	ld	r10, Z
    344e:	b1 80       	ldd	r11, Z+1	; 0x01
    3450:	c5 01       	movw	r24, r10
    3452:	df ef       	ldi	r29, 0xFF	; 255
    3454:	cf ef       	ldi	r28, 0xFF	; 255
    3456:	65 01       	movw	r12, r10
    3458:	c0 0e       	add	r12, r16
    345a:	d1 1e       	adc	r13, r17
    345c:	c8 16       	cp	r12, r24
    345e:	d9 06       	cpc	r13, r25
    3460:	a0 f0       	brcs	.+40     	; 0x348a <_ZNK6String11lastIndexOfERKS_j+0x82>
    3462:	f7 01       	movw	r30, r14
    3464:	60 81       	ld	r22, Z
    3466:	71 81       	ldd	r23, Z+1	; 0x01
    3468:	0e 94 ad 31 	call	0x635a	; 0x635a <strstr>
    346c:	00 97       	sbiw	r24, 0x00	; 0
    346e:	69 f0       	breq	.+26     	; 0x348a <_ZNK6String11lastIndexOfERKS_j+0x82>
    3470:	9c 01       	movw	r18, r24
    3472:	2a 19       	sub	r18, r10
    3474:	3b 09       	sbc	r19, r11
    3476:	02 17       	cp	r16, r18
    3478:	13 07       	cpc	r17, r19
    347a:	10 f0       	brcs	.+4      	; 0x3480 <_ZNK6String11lastIndexOfERKS_j+0x78>
    347c:	d2 2f       	mov	r29, r18
    347e:	c3 2f       	mov	r28, r19
    3480:	01 96       	adiw	r24, 0x01	; 1
    3482:	ec cf       	rjmp	.-40     	; 0x345c <_ZNK6String11lastIndexOfERKS_j+0x54>
    3484:	8f ef       	ldi	r24, 0xFF	; 255
    3486:	9f ef       	ldi	r25, 0xFF	; 255
    3488:	02 c0       	rjmp	.+4      	; 0x348e <_ZNK6String11lastIndexOfERKS_j+0x86>
    348a:	8d 2f       	mov	r24, r29
    348c:	9c 2f       	mov	r25, r28
    348e:	df 91       	pop	r29
    3490:	cf 91       	pop	r28
    3492:	1f 91       	pop	r17
    3494:	0f 91       	pop	r16
    3496:	ff 90       	pop	r15
    3498:	ef 90       	pop	r14
    349a:	df 90       	pop	r13
    349c:	cf 90       	pop	r12
    349e:	bf 90       	pop	r11
    34a0:	af 90       	pop	r10
    34a2:	08 95       	ret

000034a4 <_ZN6String7replaceERKS_S1_>:
    34a4:	2f 92       	push	r2
    34a6:	3f 92       	push	r3
    34a8:	4f 92       	push	r4
    34aa:	5f 92       	push	r5
    34ac:	6f 92       	push	r6
    34ae:	7f 92       	push	r7
    34b0:	8f 92       	push	r8
    34b2:	9f 92       	push	r9
    34b4:	af 92       	push	r10
    34b6:	bf 92       	push	r11
    34b8:	cf 92       	push	r12
    34ba:	df 92       	push	r13
    34bc:	ef 92       	push	r14
    34be:	ff 92       	push	r15
    34c0:	0f 93       	push	r16
    34c2:	1f 93       	push	r17
    34c4:	cf 93       	push	r28
    34c6:	df 93       	push	r29
    34c8:	fc 01       	movw	r30, r24
    34ca:	44 80       	ldd	r4, Z+4	; 0x04
    34cc:	55 80       	ldd	r5, Z+5	; 0x05
    34ce:	41 14       	cp	r4, r1
    34d0:	51 04       	cpc	r5, r1
    34d2:	09 f4       	brne	.+2      	; 0x34d6 <_ZN6String7replaceERKS_S1_+0x32>
    34d4:	cc c0       	rjmp	.+408    	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    34d6:	fb 01       	movw	r30, r22
    34d8:	84 80       	ldd	r8, Z+4	; 0x04
    34da:	95 80       	ldd	r9, Z+5	; 0x05
    34dc:	81 14       	cp	r8, r1
    34de:	91 04       	cpc	r9, r1
    34e0:	09 f4       	brne	.+2      	; 0x34e4 <_ZN6String7replaceERKS_S1_+0x40>
    34e2:	c5 c0       	rjmp	.+394    	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    34e4:	7a 01       	movw	r14, r20
    34e6:	6b 01       	movw	r12, r22
    34e8:	8c 01       	movw	r16, r24
    34ea:	fa 01       	movw	r30, r20
    34ec:	64 80       	ldd	r6, Z+4	; 0x04
    34ee:	75 80       	ldd	r7, Z+5	; 0x05
    34f0:	68 18       	sub	r6, r8
    34f2:	79 08       	sbc	r7, r9
    34f4:	fc 01       	movw	r30, r24
    34f6:	c0 81       	ld	r28, Z
    34f8:	d1 81       	ldd	r29, Z+1	; 0x01
    34fa:	61 14       	cp	r6, r1
    34fc:	71 04       	cpc	r7, r1
    34fe:	b9 f4       	brne	.+46     	; 0x352e <_ZN6String7replaceERKS_S1_+0x8a>
    3500:	f6 01       	movw	r30, r12
    3502:	60 81       	ld	r22, Z
    3504:	71 81       	ldd	r23, Z+1	; 0x01
    3506:	ce 01       	movw	r24, r28
    3508:	0e 94 ad 31 	call	0x635a	; 0x635a <strstr>
    350c:	ec 01       	movw	r28, r24
    350e:	00 97       	sbiw	r24, 0x00	; 0
    3510:	09 f4       	brne	.+2      	; 0x3514 <_ZN6String7replaceERKS_S1_+0x70>
    3512:	ad c0       	rjmp	.+346    	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    3514:	f7 01       	movw	r30, r14
    3516:	60 81       	ld	r22, Z
    3518:	71 81       	ldd	r23, Z+1	; 0x01
    351a:	44 81       	ldd	r20, Z+4	; 0x04
    351c:	55 81       	ldd	r21, Z+5	; 0x05
    351e:	0e 94 62 31 	call	0x62c4	; 0x62c4 <memcpy>
    3522:	f7 01       	movw	r30, r14
    3524:	84 81       	ldd	r24, Z+4	; 0x04
    3526:	95 81       	ldd	r25, Z+5	; 0x05
    3528:	c8 0f       	add	r28, r24
    352a:	d9 1f       	adc	r29, r25
    352c:	e9 cf       	rjmp	.-46     	; 0x3500 <_ZN6String7replaceERKS_S1_+0x5c>
    352e:	77 fe       	sbrs	r7, 7
    3530:	44 c0       	rjmp	.+136    	; 0x35ba <_ZN6String7replaceERKS_S1_+0x116>
    3532:	5e 01       	movw	r10, r28
    3534:	f6 01       	movw	r30, r12
    3536:	60 81       	ld	r22, Z
    3538:	71 81       	ldd	r23, Z+1	; 0x01
    353a:	c5 01       	movw	r24, r10
    353c:	0e 94 ad 31 	call	0x635a	; 0x635a <strstr>
    3540:	2c 01       	movw	r4, r24
    3542:	00 97       	sbiw	r24, 0x00	; 0
    3544:	21 f1       	breq	.+72     	; 0x358e <_ZN6String7replaceERKS_S1_+0xea>
    3546:	4c 01       	movw	r8, r24
    3548:	8a 18       	sub	r8, r10
    354a:	9b 08       	sbc	r9, r11
    354c:	a4 01       	movw	r20, r8
    354e:	b5 01       	movw	r22, r10
    3550:	ce 01       	movw	r24, r28
    3552:	0e 94 62 31 	call	0x62c4	; 0x62c4 <memcpy>
    3556:	c8 0d       	add	r28, r8
    3558:	d9 1d       	adc	r29, r9
    355a:	f7 01       	movw	r30, r14
    355c:	60 81       	ld	r22, Z
    355e:	71 81       	ldd	r23, Z+1	; 0x01
    3560:	44 81       	ldd	r20, Z+4	; 0x04
    3562:	55 81       	ldd	r21, Z+5	; 0x05
    3564:	ce 01       	movw	r24, r28
    3566:	0e 94 62 31 	call	0x62c4	; 0x62c4 <memcpy>
    356a:	f7 01       	movw	r30, r14
    356c:	84 81       	ldd	r24, Z+4	; 0x04
    356e:	95 81       	ldd	r25, Z+5	; 0x05
    3570:	c8 0f       	add	r28, r24
    3572:	d9 1f       	adc	r29, r25
    3574:	f6 01       	movw	r30, r12
    3576:	a4 80       	ldd	r10, Z+4	; 0x04
    3578:	b5 80       	ldd	r11, Z+5	; 0x05
    357a:	a4 0c       	add	r10, r4
    357c:	b5 1c       	adc	r11, r5
    357e:	f8 01       	movw	r30, r16
    3580:	84 81       	ldd	r24, Z+4	; 0x04
    3582:	95 81       	ldd	r25, Z+5	; 0x05
    3584:	86 0d       	add	r24, r6
    3586:	97 1d       	adc	r25, r7
    3588:	95 83       	std	Z+5, r25	; 0x05
    358a:	84 83       	std	Z+4, r24	; 0x04
    358c:	d3 cf       	rjmp	.-90     	; 0x3534 <_ZN6String7replaceERKS_S1_+0x90>
    358e:	b5 01       	movw	r22, r10
    3590:	ce 01       	movw	r24, r28
    3592:	df 91       	pop	r29
    3594:	cf 91       	pop	r28
    3596:	1f 91       	pop	r17
    3598:	0f 91       	pop	r16
    359a:	ff 90       	pop	r15
    359c:	ef 90       	pop	r14
    359e:	df 90       	pop	r13
    35a0:	cf 90       	pop	r12
    35a2:	bf 90       	pop	r11
    35a4:	af 90       	pop	r10
    35a6:	9f 90       	pop	r9
    35a8:	8f 90       	pop	r8
    35aa:	7f 90       	pop	r7
    35ac:	6f 90       	pop	r6
    35ae:	5f 90       	pop	r5
    35b0:	4f 90       	pop	r4
    35b2:	3f 90       	pop	r3
    35b4:	2f 90       	pop	r2
    35b6:	0c 94 8c 31 	jmp	0x6318	; 0x6318 <strcpy>
    35ba:	fb 01       	movw	r30, r22
    35bc:	20 80       	ld	r2, Z
    35be:	31 80       	ldd	r3, Z+1	; 0x01
    35c0:	52 01       	movw	r10, r4
    35c2:	b1 01       	movw	r22, r2
    35c4:	ce 01       	movw	r24, r28
    35c6:	0e 94 ad 31 	call	0x635a	; 0x635a <strstr>
    35ca:	00 97       	sbiw	r24, 0x00	; 0
    35cc:	31 f0       	breq	.+12     	; 0x35da <_ZN6String7replaceERKS_S1_+0x136>
    35ce:	ec 01       	movw	r28, r24
    35d0:	c8 0d       	add	r28, r8
    35d2:	d9 1d       	adc	r29, r9
    35d4:	a6 0c       	add	r10, r6
    35d6:	b7 1c       	adc	r11, r7
    35d8:	f4 cf       	rjmp	.-24     	; 0x35c2 <_ZN6String7replaceERKS_S1_+0x11e>
    35da:	a4 14       	cp	r10, r4
    35dc:	b5 04       	cpc	r11, r5
    35de:	09 f4       	brne	.+2      	; 0x35e2 <_ZN6String7replaceERKS_S1_+0x13e>
    35e0:	46 c0       	rjmp	.+140    	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    35e2:	f8 01       	movw	r30, r16
    35e4:	82 81       	ldd	r24, Z+2	; 0x02
    35e6:	93 81       	ldd	r25, Z+3	; 0x03
    35e8:	8a 15       	cp	r24, r10
    35ea:	9b 05       	cpc	r25, r11
    35ec:	28 f4       	brcc	.+10     	; 0x35f8 <_ZN6String7replaceERKS_S1_+0x154>
    35ee:	b5 01       	movw	r22, r10
    35f0:	c8 01       	movw	r24, r16
    35f2:	40 dd       	rcall	.-1408   	; 0x3074 <_ZN6String12changeBufferEj>
    35f4:	88 23       	and	r24, r24
    35f6:	d9 f1       	breq	.+118    	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    35f8:	f8 01       	movw	r30, r16
    35fa:	44 81       	ldd	r20, Z+4	; 0x04
    35fc:	55 81       	ldd	r21, Z+5	; 0x05
    35fe:	41 50       	subi	r20, 0x01	; 1
    3600:	51 09       	sbc	r21, r1
    3602:	57 fd       	sbrc	r21, 7
    3604:	34 c0       	rjmp	.+104    	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    3606:	b6 01       	movw	r22, r12
    3608:	c8 01       	movw	r24, r16
    360a:	fe de       	rcall	.-516    	; 0x3408 <_ZNK6String11lastIndexOfERKS_j>
    360c:	ec 01       	movw	r28, r24
    360e:	97 fd       	sbrc	r25, 7
    3610:	2e c0       	rjmp	.+92     	; 0x366e <_ZN6String7replaceERKS_S1_+0x1ca>
    3612:	f6 01       	movw	r30, r12
    3614:	24 81       	ldd	r18, Z+4	; 0x04
    3616:	35 81       	ldd	r19, Z+5	; 0x05
    3618:	28 0f       	add	r18, r24
    361a:	39 1f       	adc	r19, r25
    361c:	f8 01       	movw	r30, r16
    361e:	80 81       	ld	r24, Z
    3620:	91 81       	ldd	r25, Z+1	; 0x01
    3622:	82 0f       	add	r24, r18
    3624:	93 1f       	adc	r25, r19
    3626:	44 81       	ldd	r20, Z+4	; 0x04
    3628:	55 81       	ldd	r21, Z+5	; 0x05
    362a:	42 1b       	sub	r20, r18
    362c:	53 0b       	sbc	r21, r19
    362e:	bc 01       	movw	r22, r24
    3630:	86 0d       	add	r24, r6
    3632:	97 1d       	adc	r25, r7
    3634:	0e 94 6b 31 	call	0x62d6	; 0x62d6 <memmove>
    3638:	f8 01       	movw	r30, r16
    363a:	84 81       	ldd	r24, Z+4	; 0x04
    363c:	95 81       	ldd	r25, Z+5	; 0x05
    363e:	86 0d       	add	r24, r6
    3640:	97 1d       	adc	r25, r7
    3642:	95 83       	std	Z+5, r25	; 0x05
    3644:	84 83       	std	Z+4, r24	; 0x04
    3646:	20 81       	ld	r18, Z
    3648:	31 81       	ldd	r19, Z+1	; 0x01
    364a:	f9 01       	movw	r30, r18
    364c:	e8 0f       	add	r30, r24
    364e:	f9 1f       	adc	r31, r25
    3650:	10 82       	st	Z, r1
    3652:	f8 01       	movw	r30, r16
    3654:	80 81       	ld	r24, Z
    3656:	91 81       	ldd	r25, Z+1	; 0x01
    3658:	f7 01       	movw	r30, r14
    365a:	60 81       	ld	r22, Z
    365c:	71 81       	ldd	r23, Z+1	; 0x01
    365e:	44 81       	ldd	r20, Z+4	; 0x04
    3660:	55 81       	ldd	r21, Z+5	; 0x05
    3662:	8c 0f       	add	r24, r28
    3664:	9d 1f       	adc	r25, r29
    3666:	0e 94 62 31 	call	0x62c4	; 0x62c4 <memcpy>
    366a:	ae 01       	movw	r20, r28
    366c:	c8 cf       	rjmp	.-112    	; 0x35fe <_ZN6String7replaceERKS_S1_+0x15a>
    366e:	df 91       	pop	r29
    3670:	cf 91       	pop	r28
    3672:	1f 91       	pop	r17
    3674:	0f 91       	pop	r16
    3676:	ff 90       	pop	r15
    3678:	ef 90       	pop	r14
    367a:	df 90       	pop	r13
    367c:	cf 90       	pop	r12
    367e:	bf 90       	pop	r11
    3680:	af 90       	pop	r10
    3682:	9f 90       	pop	r9
    3684:	8f 90       	pop	r8
    3686:	7f 90       	pop	r7
    3688:	6f 90       	pop	r6
    368a:	5f 90       	pop	r5
    368c:	4f 90       	pop	r4
    368e:	3f 90       	pop	r3
    3690:	2f 90       	pop	r2
    3692:	08 95       	ret

00003694 <_ZN6String4trimEv>:

void String::trim(void)
{
    3694:	af 92       	push	r10
    3696:	bf 92       	push	r11
    3698:	cf 92       	push	r12
    369a:	df 92       	push	r13
    369c:	ef 92       	push	r14
    369e:	ff 92       	push	r15
    36a0:	0f 93       	push	r16
    36a2:	1f 93       	push	r17
    36a4:	cf 93       	push	r28
    36a6:	df 93       	push	r29
	if (!buffer || len == 0) return;
    36a8:	dc 01       	movw	r26, r24
    36aa:	cd 90       	ld	r12, X+
    36ac:	dc 90       	ld	r13, X
    36ae:	11 97       	sbiw	r26, 0x01	; 1
    36b0:	c1 14       	cp	r12, r1
    36b2:	d1 04       	cpc	r13, r1
    36b4:	09 f4       	brne	.+2      	; 0x36b8 <_ZN6String4trimEv+0x24>
    36b6:	3f c0       	rjmp	.+126    	; 0x3736 <_ZN6String4trimEv+0xa2>
    36b8:	14 96       	adiw	r26, 0x04	; 4
    36ba:	cd 91       	ld	r28, X+
    36bc:	dc 91       	ld	r29, X
    36be:	15 97       	sbiw	r26, 0x05	; 5
    36c0:	20 97       	sbiw	r28, 0x00	; 0
    36c2:	c9 f1       	breq	.+114    	; 0x3736 <_ZN6String4trimEv+0xa2>
    36c4:	8c 01       	movw	r16, r24
    36c6:	76 01       	movw	r14, r12
    36c8:	57 01       	movw	r10, r14
    36ca:	bf ef       	ldi	r27, 0xFF	; 255
    36cc:	ab 1a       	sub	r10, r27
    36ce:	bb 0a       	sbc	r11, r27
	char *begin = buffer;
	while (isspace(*begin)) begin++;
    36d0:	f7 01       	movw	r30, r14
    36d2:	80 81       	ld	r24, Z
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	0e 94 41 31 	call	0x6282	; 0x6282 <isspace>
    36da:	89 2b       	or	r24, r25
    36dc:	11 f0       	breq	.+4      	; 0x36e2 <_ZN6String4trimEv+0x4e>
    36de:	75 01       	movw	r14, r10
    36e0:	f3 cf       	rjmp	.-26     	; 0x36c8 <_ZN6String4trimEv+0x34>
	char *end = buffer + len - 1;
    36e2:	21 97       	sbiw	r28, 0x01	; 1
    36e4:	cc 0d       	add	r28, r12
    36e6:	dd 1d       	adc	r29, r13
	while (isspace(*end) && end >= begin) end--;
    36e8:	88 81       	ld	r24, Y
    36ea:	90 e0       	ldi	r25, 0x00	; 0
    36ec:	0e 94 41 31 	call	0x6282	; 0x6282 <isspace>
    36f0:	89 2b       	or	r24, r25
    36f2:	29 f0       	breq	.+10     	; 0x36fe <_ZN6String4trimEv+0x6a>
    36f4:	ce 15       	cp	r28, r14
    36f6:	df 05       	cpc	r29, r15
    36f8:	10 f0       	brcs	.+4      	; 0x36fe <_ZN6String4trimEv+0x6a>
    36fa:	21 97       	sbiw	r28, 0x01	; 1
    36fc:	f5 cf       	rjmp	.-22     	; 0x36e8 <_ZN6String4trimEv+0x54>
	len = end + 1 - begin;
    36fe:	ae 01       	movw	r20, r28
    3700:	4f 5f       	subi	r20, 0xFF	; 255
    3702:	5f 4f       	sbci	r21, 0xFF	; 255
    3704:	4e 19       	sub	r20, r14
    3706:	5f 09       	sbc	r21, r15
    3708:	d8 01       	movw	r26, r16
    370a:	15 96       	adiw	r26, 0x05	; 5
    370c:	5c 93       	st	X, r21
    370e:	4e 93       	st	-X, r20
    3710:	14 97       	sbiw	r26, 0x04	; 4
	if (begin > buffer) memcpy(buffer, begin, len);
    3712:	ce 14       	cp	r12, r14
    3714:	df 04       	cpc	r13, r15
    3716:	20 f4       	brcc	.+8      	; 0x3720 <_ZN6String4trimEv+0x8c>
    3718:	b7 01       	movw	r22, r14
    371a:	c6 01       	movw	r24, r12
    371c:	0e 94 62 31 	call	0x62c4	; 0x62c4 <memcpy>
	buffer[len] = 0;
    3720:	d8 01       	movw	r26, r16
    3722:	ed 91       	ld	r30, X+
    3724:	fc 91       	ld	r31, X
    3726:	11 97       	sbiw	r26, 0x01	; 1
    3728:	14 96       	adiw	r26, 0x04	; 4
    372a:	8d 91       	ld	r24, X+
    372c:	9c 91       	ld	r25, X
    372e:	15 97       	sbiw	r26, 0x05	; 5
    3730:	e8 0f       	add	r30, r24
    3732:	f9 1f       	adc	r31, r25
    3734:	10 82       	st	Z, r1
}
    3736:	df 91       	pop	r29
    3738:	cf 91       	pop	r28
    373a:	1f 91       	pop	r17
    373c:	0f 91       	pop	r16
    373e:	ff 90       	pop	r15
    3740:	ef 90       	pop	r14
    3742:	df 90       	pop	r13
    3744:	cf 90       	pop	r12
    3746:	bf 90       	pop	r11
    3748:	af 90       	pop	r10
    374a:	08 95       	ret

0000374c <_ZNK6String5toIntEv>:
/*  Parsing / Conversion                     */
/*********************************************/

long String::toInt(void) const
{
	if (buffer) return atol(buffer);
    374c:	fc 01       	movw	r30, r24
    374e:	80 81       	ld	r24, Z
    3750:	91 81       	ldd	r25, Z+1	; 0x01
    3752:	00 97       	sbiw	r24, 0x00	; 0
    3754:	11 f0       	breq	.+4      	; 0x375a <_ZNK6String5toIntEv+0xe>
    3756:	0c 94 1b 31 	jmp	0x6236	; 0x6236 <atol>
	return 0;
}
    375a:	60 e0       	ldi	r22, 0x00	; 0
    375c:	70 e0       	ldi	r23, 0x00	; 0
    375e:	cb 01       	movw	r24, r22
    3760:	08 95       	ret

00003762 <_ZN12PubSubClient5writeEh>:
    return this->bufferSize;
}
PubSubClient& PubSubClient::setKeepAlive(uint16_t keepAlive) {
    this->keepAlive = keepAlive;
    return *this;
}
    3762:	1f 93       	push	r17
    3764:	cf 93       	push	r28
    3766:	df 93       	push	r29
    3768:	ec 01       	movw	r28, r24
    376a:	16 2f       	mov	r17, r22
    376c:	cd d9       	rcall	.-3174   	; 0x2b08 <millis>
    376e:	68 8b       	std	Y+16, r22	; 0x10
    3770:	79 8b       	std	Y+17, r23	; 0x11
    3772:	8a 8b       	std	Y+18, r24	; 0x12
    3774:	9b 8b       	std	Y+19, r25	; 0x13
    3776:	8c 81       	ldd	r24, Y+4	; 0x04
    3778:	9d 81       	ldd	r25, Y+5	; 0x05
    377a:	dc 01       	movw	r26, r24
    377c:	ed 91       	ld	r30, X+
    377e:	fc 91       	ld	r31, X
    3780:	01 90       	ld	r0, Z+
    3782:	f0 81       	ld	r31, Z
    3784:	e0 2d       	mov	r30, r0
    3786:	61 2f       	mov	r22, r17
    3788:	df 91       	pop	r29
    378a:	cf 91       	pop	r28
    378c:	1f 91       	pop	r17
    378e:	19 94       	eijmp

00003790 <_ZN12PubSubClient5writeEPKhj>:
    3790:	ef 92       	push	r14
    3792:	ff 92       	push	r15
    3794:	0f 93       	push	r16
    3796:	1f 93       	push	r17
    3798:	cf 93       	push	r28
    379a:	df 93       	push	r29
    379c:	ec 01       	movw	r28, r24
    379e:	8b 01       	movw	r16, r22
    37a0:	7a 01       	movw	r14, r20
    37a2:	b2 d9       	rcall	.-3228   	; 0x2b08 <millis>
    37a4:	68 8b       	std	Y+16, r22	; 0x10
    37a6:	79 8b       	std	Y+17, r23	; 0x11
    37a8:	8a 8b       	std	Y+18, r24	; 0x12
    37aa:	9b 8b       	std	Y+19, r25	; 0x13
    37ac:	8c 81       	ldd	r24, Y+4	; 0x04
    37ae:	9d 81       	ldd	r25, Y+5	; 0x05
    37b0:	dc 01       	movw	r26, r24
    37b2:	ed 91       	ld	r30, X+
    37b4:	fc 91       	ld	r31, X
    37b6:	02 80       	ldd	r0, Z+2	; 0x02
    37b8:	f3 81       	ldd	r31, Z+3	; 0x03
    37ba:	e0 2d       	mov	r30, r0
    37bc:	a7 01       	movw	r20, r14
    37be:	b8 01       	movw	r22, r16
    37c0:	df 91       	pop	r29
    37c2:	cf 91       	pop	r28
    37c4:	1f 91       	pop	r17
    37c6:	0f 91       	pop	r16
    37c8:	ff 90       	pop	r15
    37ca:	ef 90       	pop	r14
    37cc:	19 94       	eijmp

000037ce <_ZN12PubSubClient8readByteEPh>:
    37ce:	8f 92       	push	r8
    37d0:	9f 92       	push	r9
    37d2:	af 92       	push	r10
    37d4:	bf 92       	push	r11
    37d6:	cf 92       	push	r12
    37d8:	df 92       	push	r13
    37da:	ef 92       	push	r14
    37dc:	ff 92       	push	r15
    37de:	0f 93       	push	r16
    37e0:	1f 93       	push	r17
    37e2:	cf 93       	push	r28
    37e4:	df 93       	push	r29
    37e6:	ec 01       	movw	r28, r24
    37e8:	8b 01       	movw	r16, r22
    37ea:	8e d9       	rcall	.-3300   	; 0x2b08 <millis>
    37ec:	4b 01       	movw	r8, r22
    37ee:	5c 01       	movw	r10, r24
    37f0:	8c 81       	ldd	r24, Y+4	; 0x04
    37f2:	9d 81       	ldd	r25, Y+5	; 0x05
    37f4:	dc 01       	movw	r26, r24
    37f6:	ed 91       	ld	r30, X+
    37f8:	fc 91       	ld	r31, X
    37fa:	00 84       	ldd	r0, Z+8	; 0x08
    37fc:	f1 85       	ldd	r31, Z+9	; 0x09
    37fe:	e0 2d       	mov	r30, r0
    3800:	19 95       	eicall
    3802:	89 2b       	or	r24, r25
    3804:	b1 f4       	brne	.+44     	; 0x3832 <_ZN12PubSubClient8readByteEPh+0x64>
    3806:	0e 94 77 25 	call	0x4aee	; 0x4aee <yield>
    380a:	7e d9       	rcall	.-3332   	; 0x2b08 <millis>
    380c:	2c 85       	ldd	r18, Y+12	; 0x0c
    380e:	3d 85       	ldd	r19, Y+13	; 0x0d
    3810:	6b 01       	movw	r12, r22
    3812:	7c 01       	movw	r14, r24
    3814:	c8 18       	sub	r12, r8
    3816:	d9 08       	sbc	r13, r9
    3818:	ea 08       	sbc	r14, r10
    381a:	fb 08       	sbc	r15, r11
    381c:	a8 ee       	ldi	r26, 0xE8	; 232
    381e:	b3 e0       	ldi	r27, 0x03	; 3
    3820:	0e 94 c5 2e 	call	0x5d8a	; 0x5d8a <__umulhisi3>
    3824:	c6 16       	cp	r12, r22
    3826:	d7 06       	cpc	r13, r23
    3828:	e8 06       	cpc	r14, r24
    382a:	f9 06       	cpc	r15, r25
    382c:	08 f3       	brcs	.-62     	; 0x37f0 <_ZN12PubSubClient8readByteEPh+0x22>
    382e:	80 e0       	ldi	r24, 0x00	; 0
    3830:	0c c0       	rjmp	.+24     	; 0x384a <_ZN12PubSubClient8readByteEPh+0x7c>
    3832:	8c 81       	ldd	r24, Y+4	; 0x04
    3834:	9d 81       	ldd	r25, Y+5	; 0x05
    3836:	dc 01       	movw	r26, r24
    3838:	ed 91       	ld	r30, X+
    383a:	fc 91       	ld	r31, X
    383c:	02 84       	ldd	r0, Z+10	; 0x0a
    383e:	f3 85       	ldd	r31, Z+11	; 0x0b
    3840:	e0 2d       	mov	r30, r0
    3842:	19 95       	eicall
    3844:	f8 01       	movw	r30, r16
    3846:	80 83       	st	Z, r24
    3848:	81 e0       	ldi	r24, 0x01	; 1
    384a:	df 91       	pop	r29
    384c:	cf 91       	pop	r28
    384e:	1f 91       	pop	r17
    3850:	0f 91       	pop	r16
    3852:	ff 90       	pop	r15
    3854:	ef 90       	pop	r14
    3856:	df 90       	pop	r13
    3858:	cf 90       	pop	r12
    385a:	bf 90       	pop	r11
    385c:	af 90       	pop	r10
    385e:	9f 90       	pop	r9
    3860:	8f 90       	pop	r8
    3862:	08 95       	ret

00003864 <_ZN12PubSubClient8readByteEPhPj>:
    3864:	0f 93       	push	r16
    3866:	1f 93       	push	r17
    3868:	cf 93       	push	r28
    386a:	df 93       	push	r29
    386c:	8a 01       	movw	r16, r20
    386e:	fa 01       	movw	r30, r20
    3870:	c0 81       	ld	r28, Z
    3872:	d1 81       	ldd	r29, Z+1	; 0x01
    3874:	6c 0f       	add	r22, r28
    3876:	7d 1f       	adc	r23, r29
    3878:	aa df       	rcall	.-172    	; 0x37ce <_ZN12PubSubClient8readByteEPh>
    387a:	88 23       	and	r24, r24
    387c:	21 f0       	breq	.+8      	; 0x3886 <_ZN12PubSubClient8readByteEPhPj+0x22>
    387e:	21 96       	adiw	r28, 0x01	; 1
    3880:	f8 01       	movw	r30, r16
    3882:	d1 83       	std	Z+1, r29	; 0x01
    3884:	c0 83       	st	Z, r28
    3886:	df 91       	pop	r29
    3888:	cf 91       	pop	r28
    388a:	1f 91       	pop	r17
    388c:	0f 91       	pop	r16
    388e:	08 95       	ret

00003890 <_ZN12PubSubClient10readPacketEPh>:
    3890:	2f 92       	push	r2
    3892:	3f 92       	push	r3
    3894:	4f 92       	push	r4
    3896:	5f 92       	push	r5
    3898:	6f 92       	push	r6
    389a:	7f 92       	push	r7
    389c:	8f 92       	push	r8
    389e:	9f 92       	push	r9
    38a0:	af 92       	push	r10
    38a2:	bf 92       	push	r11
    38a4:	cf 92       	push	r12
    38a6:	df 92       	push	r13
    38a8:	ef 92       	push	r14
    38aa:	ff 92       	push	r15
    38ac:	0f 93       	push	r16
    38ae:	1f 93       	push	r17
    38b0:	cf 93       	push	r28
    38b2:	df 93       	push	r29
    38b4:	cd b7       	in	r28, 0x3d	; 61
    38b6:	de b7       	in	r29, 0x3e	; 62
    38b8:	2c 97       	sbiw	r28, 0x0c	; 12
    38ba:	0f b6       	in	r0, 0x3f	; 63
    38bc:	f8 94       	cli
    38be:	de bf       	out	0x3e, r29	; 62
    38c0:	0f be       	out	0x3f, r0	; 63
    38c2:	cd bf       	out	0x3d, r28	; 61
    38c4:	8c 01       	movw	r16, r24
    38c6:	1b 01       	movw	r2, r22
    38c8:	1a 82       	std	Y+2, r1	; 0x02
    38ca:	19 82       	std	Y+1, r1	; 0x01
    38cc:	dc 01       	movw	r26, r24
    38ce:	16 96       	adiw	r26, 0x06	; 6
    38d0:	6d 91       	ld	r22, X+
    38d2:	7c 91       	ld	r23, X
    38d4:	17 97       	sbiw	r26, 0x07	; 7
    38d6:	ae 01       	movw	r20, r28
    38d8:	4f 5f       	subi	r20, 0xFF	; 255
    38da:	5f 4f       	sbci	r21, 0xFF	; 255
    38dc:	c3 df       	rcall	.-122    	; 0x3864 <_ZN12PubSubClient8readByteEPhPj>
    38de:	88 23       	and	r24, r24
    38e0:	01 f1       	breq	.+64     	; 0x3922 <_ZN12PubSubClient10readPacketEPh+0x92>
    38e2:	d8 01       	movw	r26, r16
    38e4:	16 96       	adiw	r26, 0x06	; 6
    38e6:	ed 91       	ld	r30, X+
    38e8:	fc 91       	ld	r31, X
    38ea:	17 97       	sbiw	r26, 0x07	; 7
    38ec:	70 80       	ld	r7, Z
    38ee:	1b 82       	std	Y+3, r1	; 0x03
    38f0:	81 2c       	mov	r8, r1
    38f2:	91 2c       	mov	r9, r1
    38f4:	54 01       	movw	r10, r8
    38f6:	c1 2c       	mov	r12, r1
    38f8:	d1 2c       	mov	r13, r1
    38fa:	76 01       	movw	r14, r12
    38fc:	c3 94       	inc	r12
    38fe:	89 81       	ldd	r24, Y+1	; 0x01
    3900:	9a 81       	ldd	r25, Y+2	; 0x02
    3902:	05 97       	sbiw	r24, 0x05	; 5
    3904:	91 f4       	brne	.+36     	; 0x392a <_ZN12PubSubClient10readPacketEPh+0x9a>
    3906:	8f ef       	ldi	r24, 0xFF	; 255
    3908:	9f ef       	ldi	r25, 0xFF	; 255
    390a:	f8 01       	movw	r30, r16
    390c:	90 a7       	std	Z+40, r25	; 0x28
    390e:	87 a3       	std	Z+39, r24	; 0x27
    3910:	84 81       	ldd	r24, Z+4	; 0x04
    3912:	95 81       	ldd	r25, Z+5	; 0x05
    3914:	dc 01       	movw	r26, r24
    3916:	ed 91       	ld	r30, X+
    3918:	fc 91       	ld	r31, X
    391a:	04 88       	ldd	r0, Z+20	; 0x14
    391c:	f5 89       	ldd	r31, Z+21	; 0x15
    391e:	e0 2d       	mov	r30, r0
    3920:	19 95       	eicall
    3922:	60 e0       	ldi	r22, 0x00	; 0
    3924:	70 e0       	ldi	r23, 0x00	; 0
    3926:	cb 01       	movw	r24, r22
    3928:	fa c0       	rjmp	.+500    	; 0x3b1e <_ZN12PubSubClient10readPacketEPh+0x28e>
    392a:	be 01       	movw	r22, r28
    392c:	6d 5f       	subi	r22, 0xFD	; 253
    392e:	7f 4f       	sbci	r23, 0xFF	; 255
    3930:	c8 01       	movw	r24, r16
    3932:	4d df       	rcall	.-358    	; 0x37ce <_ZN12PubSubClient8readByteEPh>
    3934:	88 23       	and	r24, r24
    3936:	a9 f3       	breq	.-22     	; 0x3922 <_ZN12PubSubClient10readPacketEPh+0x92>
    3938:	f8 01       	movw	r30, r16
    393a:	46 81       	ldd	r20, Z+6	; 0x06
    393c:	57 81       	ldd	r21, Z+7	; 0x07
    393e:	89 81       	ldd	r24, Y+1	; 0x01
    3940:	9a 81       	ldd	r25, Y+2	; 0x02
    3942:	9c 01       	movw	r18, r24
    3944:	2f 5f       	subi	r18, 0xFF	; 255
    3946:	3f 4f       	sbci	r19, 0xFF	; 255
    3948:	3a 83       	std	Y+2, r19	; 0x02
    394a:	29 83       	std	Y+1, r18	; 0x01
    394c:	2b 81       	ldd	r18, Y+3	; 0x03
    394e:	fa 01       	movw	r30, r20
    3950:	e8 0f       	add	r30, r24
    3952:	f9 1f       	adc	r31, r25
    3954:	20 83       	st	Z, r18
    3956:	eb 81       	ldd	r30, Y+3	; 0x03
    3958:	ae 2f       	mov	r26, r30
    395a:	af 77       	andi	r26, 0x7F	; 127
    395c:	b0 e0       	ldi	r27, 0x00	; 0
    395e:	a7 01       	movw	r20, r14
    3960:	96 01       	movw	r18, r12
    3962:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <__muluhisi3>
    3966:	86 0e       	add	r8, r22
    3968:	97 1e       	adc	r9, r23
    396a:	a8 1e       	adc	r10, r24
    396c:	b9 1e       	adc	r11, r25
    396e:	37 e0       	ldi	r19, 0x07	; 7
    3970:	cc 0c       	add	r12, r12
    3972:	dd 1c       	adc	r13, r13
    3974:	ee 1c       	adc	r14, r14
    3976:	ff 1c       	adc	r15, r15
    3978:	3a 95       	dec	r19
    397a:	d1 f7       	brne	.-12     	; 0x3970 <_ZN12PubSubClient10readPacketEPh+0xe0>
    397c:	e7 fd       	sbrc	r30, 7
    397e:	bf cf       	rjmp	.-130    	; 0x38fe <_ZN12PubSubClient10readPacketEPh+0x6e>
    3980:	f7 2d       	mov	r31, r7
    3982:	f0 7f       	andi	r31, 0xF0	; 240
    3984:	fc 83       	std	Y+4, r31	; 0x04
    3986:	89 81       	ldd	r24, Y+1	; 0x01
    3988:	81 50       	subi	r24, 0x01	; 1
    398a:	d1 01       	movw	r26, r2
    398c:	8c 93       	st	X, r24
    398e:	f0 33       	cpi	r31, 0x30	; 48
    3990:	89 f5       	brne	.+98     	; 0x39f4 <_ZN12PubSubClient10readPacketEPh+0x164>
    3992:	f8 01       	movw	r30, r16
    3994:	66 81       	ldd	r22, Z+6	; 0x06
    3996:	77 81       	ldd	r23, Z+7	; 0x07
    3998:	ae 01       	movw	r20, r28
    399a:	4f 5f       	subi	r20, 0xFF	; 255
    399c:	5f 4f       	sbci	r21, 0xFF	; 255
    399e:	c8 01       	movw	r24, r16
    39a0:	61 df       	rcall	.-318    	; 0x3864 <_ZN12PubSubClient8readByteEPhPj>
    39a2:	88 23       	and	r24, r24
    39a4:	09 f4       	brne	.+2      	; 0x39a8 <_ZN12PubSubClient10readPacketEPh+0x118>
    39a6:	bd cf       	rjmp	.-134    	; 0x3922 <_ZN12PubSubClient10readPacketEPh+0x92>
    39a8:	d8 01       	movw	r26, r16
    39aa:	16 96       	adiw	r26, 0x06	; 6
    39ac:	6d 91       	ld	r22, X+
    39ae:	7c 91       	ld	r23, X
    39b0:	17 97       	sbiw	r26, 0x07	; 7
    39b2:	ae 01       	movw	r20, r28
    39b4:	4f 5f       	subi	r20, 0xFF	; 255
    39b6:	5f 4f       	sbci	r21, 0xFF	; 255
    39b8:	c8 01       	movw	r24, r16
    39ba:	54 df       	rcall	.-344    	; 0x3864 <_ZN12PubSubClient8readByteEPhPj>
    39bc:	88 23       	and	r24, r24
    39be:	09 f4       	brne	.+2      	; 0x39c2 <_ZN12PubSubClient10readPacketEPh+0x132>
    39c0:	b0 cf       	rjmp	.-160    	; 0x3922 <_ZN12PubSubClient10readPacketEPh+0x92>
    39c2:	d8 01       	movw	r26, r16
    39c4:	16 96       	adiw	r26, 0x06	; 6
    39c6:	ed 91       	ld	r30, X+
    39c8:	fc 91       	ld	r31, X
    39ca:	17 97       	sbiw	r26, 0x07	; 7
    39cc:	d1 01       	movw	r26, r2
    39ce:	8c 91       	ld	r24, X
    39d0:	df 01       	movw	r26, r30
    39d2:	a8 0f       	add	r26, r24
    39d4:	b1 1d       	adc	r27, r1
    39d6:	11 96       	adiw	r26, 0x01	; 1
    39d8:	8c 91       	ld	r24, X
    39da:	11 97       	sbiw	r26, 0x01	; 1
    39dc:	90 e0       	ldi	r25, 0x00	; 0
    39de:	98 2f       	mov	r25, r24
    39e0:	88 27       	eor	r24, r24
    39e2:	12 96       	adiw	r26, 0x02	; 2
    39e4:	2c 91       	ld	r18, X
    39e6:	82 0f       	add	r24, r18
    39e8:	91 1d       	adc	r25, r1
    39ea:	20 81       	ld	r18, Z
    39ec:	21 ff       	sbrs	r18, 1
    39ee:	09 c0       	rjmp	.+18     	; 0x3a02 <_ZN12PubSubClient10readPacketEPh+0x172>
    39f0:	02 96       	adiw	r24, 0x02	; 2
    39f2:	07 c0       	rjmp	.+14     	; 0x3a02 <_ZN12PubSubClient10readPacketEPh+0x172>
    39f4:	f0 e0       	ldi	r31, 0x00	; 0
    39f6:	e0 e0       	ldi	r30, 0x00	; 0
    39f8:	30 e0       	ldi	r19, 0x00	; 0
    39fa:	20 e0       	ldi	r18, 0x00	; 0
    39fc:	80 e0       	ldi	r24, 0x00	; 0
    39fe:	90 e0       	ldi	r25, 0x00	; 0
    3a00:	04 c0       	rjmp	.+8      	; 0x3a0a <_ZN12PubSubClient10readPacketEPh+0x17a>
    3a02:	f2 e0       	ldi	r31, 0x02	; 2
    3a04:	e0 e0       	ldi	r30, 0x00	; 0
    3a06:	30 e0       	ldi	r19, 0x00	; 0
    3a08:	20 e0       	ldi	r18, 0x00	; 0
    3a0a:	49 81       	ldd	r20, Y+1	; 0x01
    3a0c:	5a 81       	ldd	r21, Y+2	; 0x02
    3a0e:	60 e0       	ldi	r22, 0x00	; 0
    3a10:	70 e0       	ldi	r23, 0x00	; 0
    3a12:	cf 2e       	mov	r12, r31
    3a14:	de 2e       	mov	r13, r30
    3a16:	e3 2e       	mov	r14, r19
    3a18:	f2 2e       	mov	r15, r18
    3a1a:	2a 01       	movw	r4, r20
    3a1c:	3b 01       	movw	r6, r22
    3a1e:	4c 18       	sub	r4, r12
    3a20:	5d 08       	sbc	r5, r13
    3a22:	6e 08       	sbc	r6, r14
    3a24:	7f 08       	sbc	r7, r15
    3a26:	4d 82       	std	Y+5, r4	; 0x05
    3a28:	5e 82       	std	Y+6, r5	; 0x06
    3a2a:	6f 82       	std	Y+7, r6	; 0x07
    3a2c:	78 86       	std	Y+8, r7	; 0x08
    3a2e:	2c 01       	movw	r4, r24
    3a30:	61 2c       	mov	r6, r1
    3a32:	71 2c       	mov	r7, r1
    3a34:	49 86       	std	Y+9, r4	; 0x09
    3a36:	5a 86       	std	Y+10, r5	; 0x0a
    3a38:	6b 86       	std	Y+11, r6	; 0x0b
    3a3a:	7c 86       	std	Y+12, r7	; 0x0c
    3a3c:	4d 80       	ldd	r4, Y+5	; 0x05
    3a3e:	5e 80       	ldd	r5, Y+6	; 0x06
    3a40:	6f 80       	ldd	r6, Y+7	; 0x07
    3a42:	78 84       	ldd	r7, Y+8	; 0x08
    3a44:	4c 0c       	add	r4, r12
    3a46:	5d 1c       	adc	r5, r13
    3a48:	6e 1c       	adc	r6, r14
    3a4a:	7f 1c       	adc	r7, r15
    3a4c:	c8 14       	cp	r12, r8
    3a4e:	d9 04       	cpc	r13, r9
    3a50:	ea 04       	cpc	r14, r10
    3a52:	fb 04       	cpc	r15, r11
    3a54:	08 f0       	brcs	.+2      	; 0x3a58 <_ZN12PubSubClient10readPacketEPh+0x1c8>
    3a56:	4b c0       	rjmp	.+150    	; 0x3aee <_ZN12PubSubClient10readPacketEPh+0x25e>
    3a58:	be 01       	movw	r22, r28
    3a5a:	6d 5f       	subi	r22, 0xFD	; 253
    3a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    3a5e:	c8 01       	movw	r24, r16
    3a60:	b6 de       	rcall	.-660    	; 0x37ce <_ZN12PubSubClient8readByteEPh>
    3a62:	88 23       	and	r24, r24
    3a64:	09 f4       	brne	.+2      	; 0x3a68 <_ZN12PubSubClient10readPacketEPh+0x1d8>
    3a66:	5d cf       	rjmp	.-326    	; 0x3922 <_ZN12PubSubClient10readPacketEPh+0x92>
    3a68:	d8 01       	movw	r26, r16
    3a6a:	95 96       	adiw	r26, 0x25	; 37
    3a6c:	8d 91       	ld	r24, X+
    3a6e:	9c 91       	ld	r25, X
    3a70:	96 97       	sbiw	r26, 0x26	; 38
    3a72:	00 97       	sbiw	r24, 0x00	; 0
    3a74:	11 f1       	breq	.+68     	; 0x3aba <_ZN12PubSubClient10readPacketEPh+0x22a>
    3a76:	bc 81       	ldd	r27, Y+4	; 0x04
    3a78:	b0 33       	cpi	r27, 0x30	; 48
    3a7a:	f9 f4       	brne	.+62     	; 0x3aba <_ZN12PubSubClient10readPacketEPh+0x22a>
    3a7c:	f1 01       	movw	r30, r2
    3a7e:	20 81       	ld	r18, Z
    3a80:	4e ef       	ldi	r20, 0xFE	; 254
    3a82:	5f ef       	ldi	r21, 0xFF	; 255
    3a84:	6f ef       	ldi	r22, 0xFF	; 255
    3a86:	7f ef       	ldi	r23, 0xFF	; 255
    3a88:	42 1b       	sub	r20, r18
    3a8a:	51 09       	sbc	r21, r1
    3a8c:	61 09       	sbc	r22, r1
    3a8e:	71 09       	sbc	r23, r1
    3a90:	44 0e       	add	r4, r20
    3a92:	55 1e       	adc	r5, r21
    3a94:	66 1e       	adc	r6, r22
    3a96:	77 1e       	adc	r7, r23
    3a98:	29 85       	ldd	r18, Y+9	; 0x09
    3a9a:	3a 85       	ldd	r19, Y+10	; 0x0a
    3a9c:	4b 85       	ldd	r20, Y+11	; 0x0b
    3a9e:	5c 85       	ldd	r21, Y+12	; 0x0c
    3aa0:	24 15       	cp	r18, r4
    3aa2:	35 05       	cpc	r19, r5
    3aa4:	46 05       	cpc	r20, r6
    3aa6:	57 05       	cpc	r21, r7
    3aa8:	40 f4       	brcc	.+16     	; 0x3aba <_ZN12PubSubClient10readPacketEPh+0x22a>
    3aaa:	dc 01       	movw	r26, r24
    3aac:	ed 91       	ld	r30, X+
    3aae:	fc 91       	ld	r31, X
    3ab0:	01 90       	ld	r0, Z+
    3ab2:	f0 81       	ld	r31, Z
    3ab4:	e0 2d       	mov	r30, r0
    3ab6:	6b 81       	ldd	r22, Y+3	; 0x03
    3ab8:	19 95       	eicall
    3aba:	89 81       	ldd	r24, Y+1	; 0x01
    3abc:	9a 81       	ldd	r25, Y+2	; 0x02
    3abe:	f8 01       	movw	r30, r16
    3ac0:	20 85       	ldd	r18, Z+8	; 0x08
    3ac2:	31 85       	ldd	r19, Z+9	; 0x09
    3ac4:	82 17       	cp	r24, r18
    3ac6:	93 07       	cpc	r25, r19
    3ac8:	60 f4       	brcc	.+24     	; 0x3ae2 <_ZN12PubSubClient10readPacketEPh+0x252>
    3aca:	2b 81       	ldd	r18, Y+3	; 0x03
    3acc:	46 81       	ldd	r20, Z+6	; 0x06
    3ace:	57 81       	ldd	r21, Z+7	; 0x07
    3ad0:	fa 01       	movw	r30, r20
    3ad2:	e8 0f       	add	r30, r24
    3ad4:	f9 1f       	adc	r31, r25
    3ad6:	20 83       	st	Z, r18
    3ad8:	89 81       	ldd	r24, Y+1	; 0x01
    3ada:	9a 81       	ldd	r25, Y+2	; 0x02
    3adc:	01 96       	adiw	r24, 0x01	; 1
    3ade:	9a 83       	std	Y+2, r25	; 0x02
    3ae0:	89 83       	std	Y+1, r24	; 0x01
    3ae2:	ff ef       	ldi	r31, 0xFF	; 255
    3ae4:	cf 1a       	sub	r12, r31
    3ae6:	df 0a       	sbc	r13, r31
    3ae8:	ef 0a       	sbc	r14, r31
    3aea:	ff 0a       	sbc	r15, r31
    3aec:	a7 cf       	rjmp	.-178    	; 0x3a3c <_ZN12PubSubClient10readPacketEPh+0x1ac>
    3aee:	d8 01       	movw	r26, r16
    3af0:	95 96       	adiw	r26, 0x25	; 37
    3af2:	8d 91       	ld	r24, X+
    3af4:	9c 91       	ld	r25, X
    3af6:	96 97       	sbiw	r26, 0x26	; 38
    3af8:	89 2b       	or	r24, r25
    3afa:	69 f4       	brne	.+26     	; 0x3b16 <_ZN12PubSubClient10readPacketEPh+0x286>
    3afc:	18 96       	adiw	r26, 0x08	; 8
    3afe:	8d 91       	ld	r24, X+
    3b00:	9c 91       	ld	r25, X
    3b02:	19 97       	sbiw	r26, 0x09	; 9
    3b04:	a0 e0       	ldi	r26, 0x00	; 0
    3b06:	b0 e0       	ldi	r27, 0x00	; 0
    3b08:	84 15       	cp	r24, r4
    3b0a:	95 05       	cpc	r25, r5
    3b0c:	a6 05       	cpc	r26, r6
    3b0e:	b7 05       	cpc	r27, r7
    3b10:	10 f4       	brcc	.+4      	; 0x3b16 <_ZN12PubSubClient10readPacketEPh+0x286>
    3b12:	1a 82       	std	Y+2, r1	; 0x02
    3b14:	19 82       	std	Y+1, r1	; 0x01
    3b16:	69 81       	ldd	r22, Y+1	; 0x01
    3b18:	7a 81       	ldd	r23, Y+2	; 0x02
    3b1a:	80 e0       	ldi	r24, 0x00	; 0
    3b1c:	90 e0       	ldi	r25, 0x00	; 0
    3b1e:	2c 96       	adiw	r28, 0x0c	; 12
    3b20:	0f b6       	in	r0, 0x3f	; 63
    3b22:	f8 94       	cli
    3b24:	de bf       	out	0x3e, r29	; 62
    3b26:	0f be       	out	0x3f, r0	; 63
    3b28:	cd bf       	out	0x3d, r28	; 61
    3b2a:	df 91       	pop	r29
    3b2c:	cf 91       	pop	r28
    3b2e:	1f 91       	pop	r17
    3b30:	0f 91       	pop	r16
    3b32:	ff 90       	pop	r15
    3b34:	ef 90       	pop	r14
    3b36:	df 90       	pop	r13
    3b38:	cf 90       	pop	r12
    3b3a:	bf 90       	pop	r11
    3b3c:	af 90       	pop	r10
    3b3e:	9f 90       	pop	r9
    3b40:	8f 90       	pop	r8
    3b42:	7f 90       	pop	r7
    3b44:	6f 90       	pop	r6
    3b46:	5f 90       	pop	r5
    3b48:	4f 90       	pop	r4
    3b4a:	3f 90       	pop	r3
    3b4c:	2f 90       	pop	r2
    3b4e:	08 95       	ret

00003b50 <_ZN12PubSubClient11buildHeaderEhPhj>:
    3b50:	cf 93       	push	r28
    3b52:	df 93       	push	r29
    3b54:	00 d0       	rcall	.+0      	; 0x3b56 <_ZN12PubSubClient11buildHeaderEhPhj+0x6>
    3b56:	1f 92       	push	r1
    3b58:	cd b7       	in	r28, 0x3d	; 61
    3b5a:	de b7       	in	r29, 0x3e	; 62
    3b5c:	80 e0       	ldi	r24, 0x00	; 0
    3b5e:	92 2f       	mov	r25, r18
    3b60:	9f 77       	andi	r25, 0x7F	; 127
    3b62:	22 0f       	add	r18, r18
    3b64:	23 2f       	mov	r18, r19
    3b66:	22 1f       	adc	r18, r18
    3b68:	33 0b       	sbc	r19, r19
    3b6a:	31 95       	neg	r19
    3b6c:	21 15       	cp	r18, r1
    3b6e:	31 05       	cpc	r19, r1
    3b70:	09 f0       	breq	.+2      	; 0x3b74 <_ZN12PubSubClient11buildHeaderEhPhj+0x24>
    3b72:	90 68       	ori	r25, 0x80	; 128
    3b74:	e1 e0       	ldi	r30, 0x01	; 1
    3b76:	f0 e0       	ldi	r31, 0x00	; 0
    3b78:	ec 0f       	add	r30, r28
    3b7a:	fd 1f       	adc	r31, r29
    3b7c:	e8 0f       	add	r30, r24
    3b7e:	f1 1d       	adc	r31, r1
    3b80:	90 83       	st	Z, r25
    3b82:	8f 5f       	subi	r24, 0xFF	; 255
    3b84:	21 15       	cp	r18, r1
    3b86:	31 05       	cpc	r19, r1
    3b88:	51 f7       	brne	.-44     	; 0x3b5e <_ZN12PubSubClient11buildHeaderEhPhj+0xe>
    3b8a:	90 e0       	ldi	r25, 0x00	; 0
    3b8c:	fa 01       	movw	r30, r20
    3b8e:	e8 1b       	sub	r30, r24
    3b90:	f9 0b       	sbc	r31, r25
    3b92:	64 83       	std	Z+4, r22	; 0x04
    3b94:	de 01       	movw	r26, r28
    3b96:	11 96       	adiw	r26, 0x01	; 1
    3b98:	fa 01       	movw	r30, r20
    3b9a:	e8 1b       	sub	r30, r24
    3b9c:	f9 0b       	sbc	r31, r25
    3b9e:	35 96       	adiw	r30, 0x05	; 5
    3ba0:	4b 5f       	subi	r20, 0xFB	; 251
    3ba2:	5f 4f       	sbci	r21, 0xFF	; 255
    3ba4:	e4 17       	cp	r30, r20
    3ba6:	f5 07       	cpc	r31, r21
    3ba8:	19 f0       	breq	.+6      	; 0x3bb0 <_ZN12PubSubClient11buildHeaderEhPhj+0x60>
    3baa:	2d 91       	ld	r18, X+
    3bac:	21 93       	st	Z+, r18
    3bae:	fa cf       	rjmp	.-12     	; 0x3ba4 <_ZN12PubSubClient11buildHeaderEhPhj+0x54>
    3bb0:	01 96       	adiw	r24, 0x01	; 1
    3bb2:	0f 90       	pop	r0
    3bb4:	0f 90       	pop	r0
    3bb6:	0f 90       	pop	r0
    3bb8:	0f 90       	pop	r0
    3bba:	df 91       	pop	r29
    3bbc:	cf 91       	pop	r28
    3bbe:	08 95       	ret

00003bc0 <_ZN12PubSubClient5writeEhPhj>:
    3bc0:	ef 92       	push	r14
    3bc2:	ff 92       	push	r15
    3bc4:	0f 93       	push	r16
    3bc6:	1f 93       	push	r17
    3bc8:	cf 93       	push	r28
    3bca:	df 93       	push	r29
    3bcc:	7c 01       	movw	r14, r24
    3bce:	ea 01       	movw	r28, r20
    3bd0:	89 01       	movw	r16, r18
    3bd2:	be df       	rcall	.-132    	; 0x3b50 <_ZN12PubSubClient11buildHeaderEhPhj>
    3bd4:	9c 01       	movw	r18, r24
    3bd6:	d7 01       	movw	r26, r14
    3bd8:	14 96       	adiw	r26, 0x04	; 4
    3bda:	8d 91       	ld	r24, X+
    3bdc:	9c 91       	ld	r25, X
    3bde:	15 97       	sbiw	r26, 0x05	; 5
    3be0:	33 27       	eor	r19, r19
    3be2:	02 0f       	add	r16, r18
    3be4:	13 1f       	adc	r17, r19
    3be6:	be 01       	movw	r22, r28
    3be8:	62 1b       	sub	r22, r18
    3bea:	73 0b       	sbc	r23, r19
    3bec:	6b 5f       	subi	r22, 0xFB	; 251
    3bee:	7f 4f       	sbci	r23, 0xFF	; 255
    3bf0:	dc 01       	movw	r26, r24
    3bf2:	ed 91       	ld	r30, X+
    3bf4:	fc 91       	ld	r31, X
    3bf6:	02 80       	ldd	r0, Z+2	; 0x02
    3bf8:	f3 81       	ldd	r31, Z+3	; 0x03
    3bfa:	e0 2d       	mov	r30, r0
    3bfc:	a8 01       	movw	r20, r16
    3bfe:	19 95       	eicall
    3c00:	ec 01       	movw	r28, r24
    3c02:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    3c06:	f7 01       	movw	r30, r14
    3c08:	60 8b       	std	Z+16, r22	; 0x10
    3c0a:	71 8b       	std	Z+17, r23	; 0x11
    3c0c:	82 8b       	std	Z+18, r24	; 0x12
    3c0e:	93 8b       	std	Z+19, r25	; 0x13
    3c10:	81 e0       	ldi	r24, 0x01	; 1
    3c12:	0c 17       	cp	r16, r28
    3c14:	1d 07       	cpc	r17, r29
    3c16:	09 f0       	breq	.+2      	; 0x3c1a <_ZN12PubSubClient5writeEhPhj+0x5a>
    3c18:	80 e0       	ldi	r24, 0x00	; 0
    3c1a:	df 91       	pop	r29
    3c1c:	cf 91       	pop	r28
    3c1e:	1f 91       	pop	r17
    3c20:	0f 91       	pop	r16
    3c22:	ff 90       	pop	r15
    3c24:	ef 90       	pop	r14
    3c26:	08 95       	ret

00003c28 <_ZN12PubSubClient11writeStringEPKcPhj>:
    3c28:	cf 93       	push	r28
    3c2a:	df 93       	push	r29
    3c2c:	f9 01       	movw	r30, r18
    3c2e:	32 96       	adiw	r30, 0x02	; 2
    3c30:	e4 0f       	add	r30, r20
    3c32:	f5 1f       	adc	r31, r21
    3c34:	eb 01       	movw	r28, r22
    3c36:	de 01       	movw	r26, r28
    3c38:	a6 1b       	sub	r26, r22
    3c3a:	b7 0b       	sbc	r27, r23
    3c3c:	cf 01       	movw	r24, r30
    3c3e:	84 1b       	sub	r24, r20
    3c40:	95 0b       	sbc	r25, r21
    3c42:	29 91       	ld	r18, Y+
    3c44:	22 23       	and	r18, r18
    3c46:	11 f0       	breq	.+4      	; 0x3c4c <_ZN12PubSubClient11writeStringEPKcPhj+0x24>
    3c48:	21 93       	st	Z+, r18
    3c4a:	f5 cf       	rjmp	.-22     	; 0x3c36 <_ZN12PubSubClient11writeStringEPKcPhj+0xe>
    3c4c:	9c 01       	movw	r18, r24
    3c4e:	2a 1b       	sub	r18, r26
    3c50:	3b 0b       	sbc	r19, r27
    3c52:	42 0f       	add	r20, r18
    3c54:	53 1f       	adc	r21, r19
    3c56:	fa 01       	movw	r30, r20
    3c58:	32 97       	sbiw	r30, 0x02	; 2
    3c5a:	b0 83       	st	Z, r27
    3c5c:	31 96       	adiw	r30, 0x01	; 1
    3c5e:	a0 83       	st	Z, r26
    3c60:	df 91       	pop	r29
    3c62:	cf 91       	pop	r28
    3c64:	08 95       	ret

00003c66 <_ZN12PubSubClient9connectedEv>:
    3c66:	cf 93       	push	r28
    3c68:	df 93       	push	r29
    3c6a:	fc 01       	movw	r30, r24
    3c6c:	a4 81       	ldd	r26, Z+4	; 0x04
    3c6e:	b5 81       	ldd	r27, Z+5	; 0x05
    3c70:	10 97       	sbiw	r26, 0x00	; 0
    3c72:	49 f1       	breq	.+82     	; 0x3cc6 <_ZN12PubSubClient9connectedEv+0x60>
    3c74:	ec 01       	movw	r28, r24
    3c76:	ed 91       	ld	r30, X+
    3c78:	fc 91       	ld	r31, X
    3c7a:	11 97       	sbiw	r26, 0x01	; 1
    3c7c:	06 88       	ldd	r0, Z+22	; 0x16
    3c7e:	f7 89       	ldd	r31, Z+23	; 0x17
    3c80:	e0 2d       	mov	r30, r0
    3c82:	cd 01       	movw	r24, r26
    3c84:	19 95       	eicall
    3c86:	2f a1       	ldd	r18, Y+39	; 0x27
    3c88:	38 a5       	ldd	r19, Y+40	; 0x28
    3c8a:	81 11       	cpse	r24, r1
    3c8c:	19 c0       	rjmp	.+50     	; 0x3cc0 <_ZN12PubSubClient9connectedEv+0x5a>
    3c8e:	23 2b       	or	r18, r19
    3c90:	d1 f4       	brne	.+52     	; 0x3cc6 <_ZN12PubSubClient9connectedEv+0x60>
    3c92:	8d ef       	ldi	r24, 0xFD	; 253
    3c94:	9f ef       	ldi	r25, 0xFF	; 255
    3c96:	98 a7       	std	Y+40, r25	; 0x28
    3c98:	8f a3       	std	Y+39, r24	; 0x27
    3c9a:	8c 81       	ldd	r24, Y+4	; 0x04
    3c9c:	9d 81       	ldd	r25, Y+5	; 0x05
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	ed 91       	ld	r30, X+
    3ca2:	fc 91       	ld	r31, X
    3ca4:	06 80       	ldd	r0, Z+6	; 0x06
    3ca6:	f7 81       	ldd	r31, Z+7	; 0x07
    3ca8:	e0 2d       	mov	r30, r0
    3caa:	19 95       	eicall
    3cac:	8c 81       	ldd	r24, Y+4	; 0x04
    3cae:	9d 81       	ldd	r25, Y+5	; 0x05
    3cb0:	dc 01       	movw	r26, r24
    3cb2:	ed 91       	ld	r30, X+
    3cb4:	fc 91       	ld	r31, X
    3cb6:	04 88       	ldd	r0, Z+20	; 0x14
    3cb8:	f5 89       	ldd	r31, Z+21	; 0x15
    3cba:	e0 2d       	mov	r30, r0
    3cbc:	19 95       	eicall
    3cbe:	03 c0       	rjmp	.+6      	; 0x3cc6 <_ZN12PubSubClient9connectedEv+0x60>
    3cc0:	81 e0       	ldi	r24, 0x01	; 1
    3cc2:	23 2b       	or	r18, r19
    3cc4:	09 f0       	breq	.+2      	; 0x3cc8 <_ZN12PubSubClient9connectedEv+0x62>
    3cc6:	80 e0       	ldi	r24, 0x00	; 0
    3cc8:	df 91       	pop	r29
    3cca:	cf 91       	pop	r28
    3ccc:	08 95       	ret

00003cce <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b>:
    3cce:	2f 92       	push	r2
    3cd0:	3f 92       	push	r3
    3cd2:	4f 92       	push	r4
    3cd4:	5f 92       	push	r5
    3cd6:	6f 92       	push	r6
    3cd8:	7f 92       	push	r7
    3cda:	8f 92       	push	r8
    3cdc:	9f 92       	push	r9
    3cde:	af 92       	push	r10
    3ce0:	bf 92       	push	r11
    3ce2:	cf 92       	push	r12
    3ce4:	df 92       	push	r13
    3ce6:	ef 92       	push	r14
    3ce8:	ff 92       	push	r15
    3cea:	0f 93       	push	r16
    3cec:	1f 93       	push	r17
    3cee:	cf 93       	push	r28
    3cf0:	df 93       	push	r29
    3cf2:	cd b7       	in	r28, 0x3d	; 61
    3cf4:	de b7       	in	r29, 0x3e	; 62
    3cf6:	60 97       	sbiw	r28, 0x10	; 16
    3cf8:	0f b6       	in	r0, 0x3f	; 63
    3cfa:	f8 94       	cli
    3cfc:	de bf       	out	0x3e, r29	; 62
    3cfe:	0f be       	out	0x3f, r0	; 63
    3d00:	cd bf       	out	0x3d, r28	; 61
    3d02:	3c 01       	movw	r6, r24
    3d04:	7a 87       	std	Y+10, r23	; 0x0a
    3d06:	69 87       	std	Y+9, r22	; 0x09
    3d08:	1a 01       	movw	r2, r20
    3d0a:	29 01       	movw	r4, r18
    3d0c:	ac df       	rcall	.-168    	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    3d0e:	d8 2e       	mov	r13, r24
    3d10:	81 11       	cpse	r24, r1
    3d12:	90 c1       	rjmp	.+800    	; 0x4034 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x366>
    3d14:	d3 01       	movw	r26, r6
    3d16:	14 96       	adiw	r26, 0x04	; 4
    3d18:	8d 91       	ld	r24, X+
    3d1a:	9c 91       	ld	r25, X
    3d1c:	15 97       	sbiw	r26, 0x05	; 5
    3d1e:	dc 01       	movw	r26, r24
    3d20:	ed 91       	ld	r30, X+
    3d22:	fc 91       	ld	r31, X
    3d24:	06 88       	ldd	r0, Z+22	; 0x16
    3d26:	f7 89       	ldd	r31, Z+23	; 0x17
    3d28:	e0 2d       	mov	r30, r0
    3d2a:	19 95       	eicall
    3d2c:	88 23       	and	r24, r24
    3d2e:	99 f0       	breq	.+38     	; 0x3d56 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x88>
    3d30:	81 e0       	ldi	r24, 0x01	; 1
    3d32:	90 e0       	ldi	r25, 0x00	; 0
    3d34:	f3 01       	movw	r30, r6
    3d36:	97 87       	std	Z+15, r25	; 0x0f
    3d38:	86 87       	std	Z+14, r24	; 0x0e
    3d3a:	87 e0       	ldi	r24, 0x07	; 7
    3d3c:	e1 e3       	ldi	r30, 0x31	; 49
    3d3e:	f2 e0       	ldi	r31, 0x02	; 2
    3d40:	de 01       	movw	r26, r28
    3d42:	11 96       	adiw	r26, 0x01	; 1
    3d44:	01 90       	ld	r0, Z+
    3d46:	0d 92       	st	X+, r0
    3d48:	8a 95       	dec	r24
    3d4a:	e1 f7       	brne	.-8      	; 0x3d44 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x76>
    3d4c:	fe 01       	movw	r30, r28
    3d4e:	31 96       	adiw	r30, 0x01	; 1
    3d50:	85 e0       	ldi	r24, 0x05	; 5
    3d52:	90 e0       	ldi	r25, 0x00	; 0
    3d54:	3c c0       	rjmp	.+120    	; 0x3dce <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x100>
    3d56:	d3 01       	movw	r26, r6
    3d58:	91 96       	adiw	r26, 0x21	; 33
    3d5a:	6d 91       	ld	r22, X+
    3d5c:	7c 91       	ld	r23, X
    3d5e:	92 97       	sbiw	r26, 0x22	; 34
    3d60:	14 96       	adiw	r26, 0x04	; 4
    3d62:	8d 91       	ld	r24, X+
    3d64:	9c 91       	ld	r25, X
    3d66:	15 97       	sbiw	r26, 0x05	; 5
    3d68:	93 96       	adiw	r26, 0x23	; 35
    3d6a:	ed 91       	ld	r30, X+
    3d6c:	fc 91       	ld	r31, X
    3d6e:	94 97       	sbiw	r26, 0x24	; 36
    3d70:	f8 8b       	std	Y+16, r31	; 0x10
    3d72:	ef 87       	std	Y+15, r30	; 0x0f
    3d74:	dc 01       	movw	r26, r24
    3d76:	ed 91       	ld	r30, X+
    3d78:	fc 91       	ld	r31, X
    3d7a:	61 15       	cp	r22, r1
    3d7c:	71 05       	cpc	r23, r1
    3d7e:	31 f0       	breq	.+12     	; 0x3d8c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0xbe>
    3d80:	00 88       	ldd	r0, Z+16	; 0x10
    3d82:	f1 89       	ldd	r31, Z+17	; 0x11
    3d84:	e0 2d       	mov	r30, r0
    3d86:	4f 85       	ldd	r20, Y+15	; 0x0f
    3d88:	58 89       	ldd	r21, Y+16	; 0x10
    3d8a:	17 c0       	rjmp	.+46     	; 0x3dba <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0xec>
    3d8c:	06 84       	ldd	r0, Z+14	; 0x0e
    3d8e:	f7 85       	ldd	r31, Z+15	; 0x0f
    3d90:	e0 2d       	mov	r30, r0
    3d92:	23 e6       	ldi	r18, 0x63	; 99
    3d94:	34 e0       	ldi	r19, 0x04	; 4
    3d96:	3a 83       	std	Y+2, r19	; 0x02
    3d98:	29 83       	std	Y+1, r18	; 0x01
    3d9a:	d3 01       	movw	r26, r6
    3d9c:	5d 96       	adiw	r26, 0x1d	; 29
    3d9e:	2d 91       	ld	r18, X+
    3da0:	3d 91       	ld	r19, X+
    3da2:	4d 91       	ld	r20, X+
    3da4:	5c 91       	ld	r21, X
    3da6:	90 97       	sbiw	r26, 0x20	; 32
    3da8:	2b 83       	std	Y+3, r18	; 0x03
    3daa:	3c 83       	std	Y+4, r19	; 0x04
    3dac:	4d 83       	std	Y+5, r20	; 0x05
    3dae:	5e 83       	std	Y+6, r21	; 0x06
    3db0:	4f 85       	ldd	r20, Y+15	; 0x0f
    3db2:	58 89       	ldd	r21, Y+16	; 0x10
    3db4:	be 01       	movw	r22, r28
    3db6:	6f 5f       	subi	r22, 0xFF	; 255
    3db8:	7f 4f       	sbci	r23, 0xFF	; 255
    3dba:	19 95       	eicall
    3dbc:	01 97       	sbiw	r24, 0x01	; 1
    3dbe:	09 f4       	brne	.+2      	; 0x3dc2 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0xf4>
    3dc0:	b7 cf       	rjmp	.-146    	; 0x3d30 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x62>
    3dc2:	8e ef       	ldi	r24, 0xFE	; 254
    3dc4:	9f ef       	ldi	r25, 0xFF	; 255
    3dc6:	f3 01       	movw	r30, r6
    3dc8:	90 a7       	std	Z+40, r25	; 0x28
    3dca:	87 a3       	std	Z+39, r24	; 0x27
    3dcc:	33 c1       	rjmp	.+614    	; 0x4034 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x366>
    3dce:	21 91       	ld	r18, Z+
    3dd0:	d3 01       	movw	r26, r6
    3dd2:	16 96       	adiw	r26, 0x06	; 6
    3dd4:	4d 91       	ld	r20, X+
    3dd6:	5c 91       	ld	r21, X
    3dd8:	17 97       	sbiw	r26, 0x07	; 7
    3dda:	da 01       	movw	r26, r20
    3ddc:	a8 0f       	add	r26, r24
    3dde:	b9 1f       	adc	r27, r25
    3de0:	2c 93       	st	X, r18
    3de2:	01 96       	adiw	r24, 0x01	; 1
    3de4:	8c 30       	cpi	r24, 0x0C	; 12
    3de6:	91 05       	cpc	r25, r1
    3de8:	91 f7       	brne	.-28     	; 0x3dce <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x100>
    3dea:	01 15       	cp	r16, r1
    3dec:	11 05       	cpc	r17, r1
    3dee:	59 f0       	breq	.+22     	; 0x3e06 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x138>
    3df0:	b0 e2       	ldi	r27, 0x20	; 32
    3df2:	cb 9e       	mul	r12, r27
    3df4:	c0 01       	movw	r24, r0
    3df6:	11 24       	eor	r1, r1
    3df8:	84 60       	ori	r24, 0x04	; 4
    3dfa:	e8 e0       	ldi	r30, 0x08	; 8
    3dfc:	ee 9e       	mul	r14, r30
    3dfe:	70 01       	movw	r14, r0
    3e00:	11 24       	eor	r1, r1
    3e02:	8e 29       	or	r24, r14
    3e04:	01 c0       	rjmp	.+2      	; 0x3e08 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x13a>
    3e06:	80 e0       	ldi	r24, 0x00	; 0
    3e08:	81 10       	cpse	r8, r1
    3e0a:	82 60       	ori	r24, 0x02	; 2
    3e0c:	21 14       	cp	r2, r1
    3e0e:	31 04       	cpc	r3, r1
    3e10:	31 f0       	breq	.+12     	; 0x3e1e <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x150>
    3e12:	41 14       	cp	r4, r1
    3e14:	51 04       	cpc	r5, r1
    3e16:	11 f4       	brne	.+4      	; 0x3e1c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x14e>
    3e18:	80 68       	ori	r24, 0x80	; 128
    3e1a:	01 c0       	rjmp	.+2      	; 0x3e1e <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x150>
    3e1c:	80 6c       	ori	r24, 0xC0	; 192
    3e1e:	d3 01       	movw	r26, r6
    3e20:	16 96       	adiw	r26, 0x06	; 6
    3e22:	ed 91       	ld	r30, X+
    3e24:	fc 91       	ld	r31, X
    3e26:	17 97       	sbiw	r26, 0x07	; 7
    3e28:	84 87       	std	Z+12, r24	; 0x0c
    3e2a:	16 96       	adiw	r26, 0x06	; 6
    3e2c:	ed 91       	ld	r30, X+
    3e2e:	fc 91       	ld	r31, X
    3e30:	17 97       	sbiw	r26, 0x07	; 7
    3e32:	1b 96       	adiw	r26, 0x0b	; 11
    3e34:	8c 91       	ld	r24, X
    3e36:	1b 97       	sbiw	r26, 0x0b	; 11
    3e38:	85 87       	std	Z+13, r24	; 0x0d
    3e3a:	16 96       	adiw	r26, 0x06	; 6
    3e3c:	ed 91       	ld	r30, X+
    3e3e:	fc 91       	ld	r31, X
    3e40:	17 97       	sbiw	r26, 0x07	; 7
    3e42:	1a 96       	adiw	r26, 0x0a	; 10
    3e44:	8c 91       	ld	r24, X
    3e46:	1a 97       	sbiw	r26, 0x0a	; 10
    3e48:	86 87       	std	Z+14, r24	; 0x0e
    3e4a:	18 96       	adiw	r26, 0x08	; 8
    3e4c:	ed 90       	ld	r14, X+
    3e4e:	fc 90       	ld	r15, X
    3e50:	19 97       	sbiw	r26, 0x09	; 9
    3e52:	b7 01       	movw	r22, r14
    3e54:	89 85       	ldd	r24, Y+9	; 0x09
    3e56:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e58:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    3e5c:	41 96       	adiw	r24, 0x11	; 17
    3e5e:	f3 01       	movw	r30, r6
    3e60:	e8 16       	cp	r14, r24
    3e62:	f9 06       	cpc	r15, r25
    3e64:	08 f4       	brcc	.+2      	; 0x3e68 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x19a>
    3e66:	dd c0       	rjmp	.+442    	; 0x4022 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3e68:	46 81       	ldd	r20, Z+6	; 0x06
    3e6a:	57 81       	ldd	r21, Z+7	; 0x07
    3e6c:	2f e0       	ldi	r18, 0x0F	; 15
    3e6e:	30 e0       	ldi	r19, 0x00	; 0
    3e70:	69 85       	ldd	r22, Y+9	; 0x09
    3e72:	7a 85       	ldd	r23, Y+10	; 0x0a
    3e74:	c3 01       	movw	r24, r6
    3e76:	d8 de       	rcall	.-592    	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    3e78:	7c 01       	movw	r14, r24
    3e7a:	01 15       	cp	r16, r1
    3e7c:	11 05       	cpc	r17, r1
    3e7e:	91 f1       	breq	.+100    	; 0x3ee4 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x216>
    3e80:	d3 01       	movw	r26, r6
    3e82:	18 96       	adiw	r26, 0x08	; 8
    3e84:	8d 90       	ld	r8, X+
    3e86:	9c 90       	ld	r9, X
    3e88:	19 97       	sbiw	r26, 0x09	; 9
    3e8a:	b4 01       	movw	r22, r8
    3e8c:	c8 01       	movw	r24, r16
    3e8e:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    3e92:	97 01       	movw	r18, r14
    3e94:	2e 5f       	subi	r18, 0xFE	; 254
    3e96:	3f 4f       	sbci	r19, 0xFF	; 255
    3e98:	82 0f       	add	r24, r18
    3e9a:	93 1f       	adc	r25, r19
    3e9c:	f3 01       	movw	r30, r6
    3e9e:	88 16       	cp	r8, r24
    3ea0:	99 06       	cpc	r9, r25
    3ea2:	08 f4       	brcc	.+2      	; 0x3ea6 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x1d8>
    3ea4:	be c0       	rjmp	.+380    	; 0x4022 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3ea6:	46 81       	ldd	r20, Z+6	; 0x06
    3ea8:	57 81       	ldd	r21, Z+7	; 0x07
    3eaa:	97 01       	movw	r18, r14
    3eac:	b8 01       	movw	r22, r16
    3eae:	c3 01       	movw	r24, r6
    3eb0:	bb de       	rcall	.-650    	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    3eb2:	8c 01       	movw	r16, r24
    3eb4:	d3 01       	movw	r26, r6
    3eb6:	18 96       	adiw	r26, 0x08	; 8
    3eb8:	ed 90       	ld	r14, X+
    3eba:	fc 90       	ld	r15, X
    3ebc:	19 97       	sbiw	r26, 0x09	; 9
    3ebe:	b7 01       	movw	r22, r14
    3ec0:	c5 01       	movw	r24, r10
    3ec2:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    3ec6:	80 0f       	add	r24, r16
    3ec8:	91 1f       	adc	r25, r17
    3eca:	02 96       	adiw	r24, 0x02	; 2
    3ecc:	f3 01       	movw	r30, r6
    3ece:	e8 16       	cp	r14, r24
    3ed0:	f9 06       	cpc	r15, r25
    3ed2:	08 f4       	brcc	.+2      	; 0x3ed6 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x208>
    3ed4:	a6 c0       	rjmp	.+332    	; 0x4022 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3ed6:	46 81       	ldd	r20, Z+6	; 0x06
    3ed8:	57 81       	ldd	r21, Z+7	; 0x07
    3eda:	98 01       	movw	r18, r16
    3edc:	b5 01       	movw	r22, r10
    3ede:	c3 01       	movw	r24, r6
    3ee0:	a3 de       	rcall	.-698    	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    3ee2:	7c 01       	movw	r14, r24
    3ee4:	21 14       	cp	r2, r1
    3ee6:	31 04       	cpc	r3, r1
    3ee8:	b9 f1       	breq	.+110    	; 0x3f58 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x28a>
    3eea:	d3 01       	movw	r26, r6
    3eec:	18 96       	adiw	r26, 0x08	; 8
    3eee:	0d 91       	ld	r16, X+
    3ef0:	1c 91       	ld	r17, X
    3ef2:	19 97       	sbiw	r26, 0x09	; 9
    3ef4:	b8 01       	movw	r22, r16
    3ef6:	c1 01       	movw	r24, r2
    3ef8:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    3efc:	97 01       	movw	r18, r14
    3efe:	2e 5f       	subi	r18, 0xFE	; 254
    3f00:	3f 4f       	sbci	r19, 0xFF	; 255
    3f02:	82 0f       	add	r24, r18
    3f04:	93 1f       	adc	r25, r19
    3f06:	f3 01       	movw	r30, r6
    3f08:	08 17       	cp	r16, r24
    3f0a:	19 07       	cpc	r17, r25
    3f0c:	08 f4       	brcc	.+2      	; 0x3f10 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x242>
    3f0e:	89 c0       	rjmp	.+274    	; 0x4022 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3f10:	46 81       	ldd	r20, Z+6	; 0x06
    3f12:	57 81       	ldd	r21, Z+7	; 0x07
    3f14:	97 01       	movw	r18, r14
    3f16:	b1 01       	movw	r22, r2
    3f18:	c3 01       	movw	r24, r6
    3f1a:	86 de       	rcall	.-756    	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    3f1c:	7c 01       	movw	r14, r24
    3f1e:	41 14       	cp	r4, r1
    3f20:	51 04       	cpc	r5, r1
    3f22:	d1 f0       	breq	.+52     	; 0x3f58 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x28a>
    3f24:	d3 01       	movw	r26, r6
    3f26:	18 96       	adiw	r26, 0x08	; 8
    3f28:	0d 91       	ld	r16, X+
    3f2a:	1c 91       	ld	r17, X
    3f2c:	19 97       	sbiw	r26, 0x09	; 9
    3f2e:	b8 01       	movw	r22, r16
    3f30:	c2 01       	movw	r24, r4
    3f32:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    3f36:	97 01       	movw	r18, r14
    3f38:	2e 5f       	subi	r18, 0xFE	; 254
    3f3a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f3c:	82 0f       	add	r24, r18
    3f3e:	93 1f       	adc	r25, r19
    3f40:	f3 01       	movw	r30, r6
    3f42:	08 17       	cp	r16, r24
    3f44:	19 07       	cpc	r17, r25
    3f46:	08 f4       	brcc	.+2      	; 0x3f4a <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x27c>
    3f48:	6c c0       	rjmp	.+216    	; 0x4022 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3f4a:	46 81       	ldd	r20, Z+6	; 0x06
    3f4c:	57 81       	ldd	r21, Z+7	; 0x07
    3f4e:	97 01       	movw	r18, r14
    3f50:	b2 01       	movw	r22, r4
    3f52:	c3 01       	movw	r24, r6
    3f54:	69 de       	rcall	.-814    	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    3f56:	7c 01       	movw	r14, r24
    3f58:	97 01       	movw	r18, r14
    3f5a:	25 50       	subi	r18, 0x05	; 5
    3f5c:	31 09       	sbc	r19, r1
    3f5e:	d3 01       	movw	r26, r6
    3f60:	16 96       	adiw	r26, 0x06	; 6
    3f62:	4d 91       	ld	r20, X+
    3f64:	5c 91       	ld	r21, X
    3f66:	17 97       	sbiw	r26, 0x07	; 7
    3f68:	60 e1       	ldi	r22, 0x10	; 16
    3f6a:	c3 01       	movw	r24, r6
    3f6c:	29 de       	rcall	.-942    	; 0x3bc0 <_ZN12PubSubClient5writeEhPhj>
    3f6e:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    3f72:	f3 01       	movw	r30, r6
    3f74:	60 8b       	std	Z+16, r22	; 0x10
    3f76:	71 8b       	std	Z+17, r23	; 0x11
    3f78:	82 8b       	std	Z+18, r24	; 0x12
    3f7a:	93 8b       	std	Z+19, r25	; 0x13
    3f7c:	64 8b       	std	Z+20, r22	; 0x14
    3f7e:	75 8b       	std	Z+21, r23	; 0x15
    3f80:	86 8b       	std	Z+22, r24	; 0x16
    3f82:	97 8b       	std	Z+23, r25	; 0x17
    3f84:	f3 01       	movw	r30, r6
    3f86:	84 81       	ldd	r24, Z+4	; 0x04
    3f88:	95 81       	ldd	r25, Z+5	; 0x05
    3f8a:	dc 01       	movw	r26, r24
    3f8c:	ed 91       	ld	r30, X+
    3f8e:	fc 91       	ld	r31, X
    3f90:	00 84       	ldd	r0, Z+8	; 0x08
    3f92:	f1 85       	ldd	r31, Z+9	; 0x09
    3f94:	e0 2d       	mov	r30, r0
    3f96:	19 95       	eicall
    3f98:	89 2b       	or	r24, r25
    3f9a:	e9 f4       	brne	.+58     	; 0x3fd6 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x308>
    3f9c:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    3fa0:	f3 01       	movw	r30, r6
    3fa2:	24 85       	ldd	r18, Z+12	; 0x0c
    3fa4:	35 85       	ldd	r19, Z+13	; 0x0d
    3fa6:	84 88       	ldd	r8, Z+20	; 0x14
    3fa8:	95 88       	ldd	r9, Z+21	; 0x15
    3faa:	a6 88       	ldd	r10, Z+22	; 0x16
    3fac:	b7 88       	ldd	r11, Z+23	; 0x17
    3fae:	7b 01       	movw	r14, r22
    3fb0:	8c 01       	movw	r16, r24
    3fb2:	e8 18       	sub	r14, r8
    3fb4:	f9 08       	sbc	r15, r9
    3fb6:	0a 09       	sbc	r16, r10
    3fb8:	1b 09       	sbc	r17, r11
    3fba:	a8 ee       	ldi	r26, 0xE8	; 232
    3fbc:	b3 e0       	ldi	r27, 0x03	; 3
    3fbe:	0e 94 c5 2e 	call	0x5d8a	; 0x5d8a <__umulhisi3>
    3fc2:	e6 16       	cp	r14, r22
    3fc4:	f7 06       	cpc	r15, r23
    3fc6:	08 07       	cpc	r16, r24
    3fc8:	19 07       	cpc	r17, r25
    3fca:	e0 f2       	brcs	.-72     	; 0x3f84 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x2b6>
    3fcc:	8c ef       	ldi	r24, 0xFC	; 252
    3fce:	9f ef       	ldi	r25, 0xFF	; 255
    3fd0:	90 a7       	std	Z+40, r25	; 0x28
    3fd2:	87 a3       	std	Z+39, r24	; 0x27
    3fd4:	26 c0       	rjmp	.+76     	; 0x4022 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3fd6:	be 01       	movw	r22, r28
    3fd8:	68 5f       	subi	r22, 0xF8	; 248
    3fda:	7f 4f       	sbci	r23, 0xFF	; 255
    3fdc:	c3 01       	movw	r24, r6
    3fde:	58 dc       	rcall	.-1872   	; 0x3890 <_ZN12PubSubClient10readPacketEPh>
    3fe0:	64 30       	cpi	r22, 0x04	; 4
    3fe2:	71 05       	cpc	r23, r1
    3fe4:	81 05       	cpc	r24, r1
    3fe6:	91 05       	cpc	r25, r1
    3fe8:	d9 f4       	brne	.+54     	; 0x4020 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x352>
    3fea:	d3 01       	movw	r26, r6
    3fec:	16 96       	adiw	r26, 0x06	; 6
    3fee:	ed 91       	ld	r30, X+
    3ff0:	fc 91       	ld	r31, X
    3ff2:	17 97       	sbiw	r26, 0x07	; 7
    3ff4:	83 81       	ldd	r24, Z+3	; 0x03
    3ff6:	81 11       	cpse	r24, r1
    3ff8:	0d c0       	rjmp	.+26     	; 0x4014 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x346>
    3ffa:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    3ffe:	f3 01       	movw	r30, r6
    4000:	64 8b       	std	Z+20, r22	; 0x14
    4002:	75 8b       	std	Z+21, r23	; 0x15
    4004:	86 8b       	std	Z+22, r24	; 0x16
    4006:	97 8b       	std	Z+23, r25	; 0x17
    4008:	10 8e       	std	Z+24, r1	; 0x18
    400a:	10 a6       	std	Z+40, r1	; 0x28
    400c:	17 a2       	std	Z+39, r1	; 0x27
    400e:	dd 24       	eor	r13, r13
    4010:	d3 94       	inc	r13
    4012:	10 c0       	rjmp	.+32     	; 0x4034 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x366>
    4014:	90 e0       	ldi	r25, 0x00	; 0
    4016:	d3 01       	movw	r26, r6
    4018:	98 96       	adiw	r26, 0x28	; 40
    401a:	9c 93       	st	X, r25
    401c:	8e 93       	st	-X, r24
    401e:	97 97       	sbiw	r26, 0x27	; 39
    4020:	f3 01       	movw	r30, r6
    4022:	84 81       	ldd	r24, Z+4	; 0x04
    4024:	95 81       	ldd	r25, Z+5	; 0x05
    4026:	dc 01       	movw	r26, r24
    4028:	ed 91       	ld	r30, X+
    402a:	fc 91       	ld	r31, X
    402c:	04 88       	ldd	r0, Z+20	; 0x14
    402e:	f5 89       	ldd	r31, Z+21	; 0x15
    4030:	e0 2d       	mov	r30, r0
    4032:	19 95       	eicall
    4034:	8d 2d       	mov	r24, r13
    4036:	60 96       	adiw	r28, 0x10	; 16
    4038:	0f b6       	in	r0, 0x3f	; 63
    403a:	f8 94       	cli
    403c:	de bf       	out	0x3e, r29	; 62
    403e:	0f be       	out	0x3f, r0	; 63
    4040:	cd bf       	out	0x3d, r28	; 61
    4042:	df 91       	pop	r29
    4044:	cf 91       	pop	r28
    4046:	1f 91       	pop	r17
    4048:	0f 91       	pop	r16
    404a:	ff 90       	pop	r15
    404c:	ef 90       	pop	r14
    404e:	df 90       	pop	r13
    4050:	cf 90       	pop	r12
    4052:	bf 90       	pop	r11
    4054:	af 90       	pop	r10
    4056:	9f 90       	pop	r9
    4058:	8f 90       	pop	r8
    405a:	7f 90       	pop	r7
    405c:	6f 90       	pop	r6
    405e:	5f 90       	pop	r5
    4060:	4f 90       	pop	r4
    4062:	3f 90       	pop	r3
    4064:	2f 90       	pop	r2
    4066:	08 95       	ret

00004068 <_ZN12PubSubClient7connectEPKc>:
    4068:	8f 92       	push	r8
    406a:	af 92       	push	r10
    406c:	bf 92       	push	r11
    406e:	cf 92       	push	r12
    4070:	ef 92       	push	r14
    4072:	0f 93       	push	r16
    4074:	1f 93       	push	r17
    4076:	88 24       	eor	r8, r8
    4078:	83 94       	inc	r8
    407a:	a1 2c       	mov	r10, r1
    407c:	b1 2c       	mov	r11, r1
    407e:	c1 2c       	mov	r12, r1
    4080:	e1 2c       	mov	r14, r1
    4082:	00 e0       	ldi	r16, 0x00	; 0
    4084:	10 e0       	ldi	r17, 0x00	; 0
    4086:	20 e0       	ldi	r18, 0x00	; 0
    4088:	30 e0       	ldi	r19, 0x00	; 0
    408a:	40 e0       	ldi	r20, 0x00	; 0
    408c:	50 e0       	ldi	r21, 0x00	; 0
    408e:	1f de       	rcall	.-962    	; 0x3cce <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b>
    4090:	1f 91       	pop	r17
    4092:	0f 91       	pop	r16
    4094:	ef 90       	pop	r14
    4096:	cf 90       	pop	r12
    4098:	bf 90       	pop	r11
    409a:	af 90       	pop	r10
    409c:	8f 90       	pop	r8
    409e:	08 95       	ret

000040a0 <_ZN12PubSubClient4loopEv>:
    40a0:	2f 92       	push	r2
    40a2:	3f 92       	push	r3
    40a4:	4f 92       	push	r4
    40a6:	5f 92       	push	r5
    40a8:	6f 92       	push	r6
    40aa:	7f 92       	push	r7
    40ac:	8f 92       	push	r8
    40ae:	9f 92       	push	r9
    40b0:	af 92       	push	r10
    40b2:	bf 92       	push	r11
    40b4:	cf 92       	push	r12
    40b6:	df 92       	push	r13
    40b8:	ef 92       	push	r14
    40ba:	ff 92       	push	r15
    40bc:	0f 93       	push	r16
    40be:	1f 93       	push	r17
    40c0:	cf 93       	push	r28
    40c2:	df 93       	push	r29
    40c4:	00 d0       	rcall	.+0      	; 0x40c6 <_ZN12PubSubClient4loopEv+0x26>
    40c6:	cd b7       	in	r28, 0x3d	; 61
    40c8:	de b7       	in	r29, 0x3e	; 62
    40ca:	8c 01       	movw	r16, r24
    40cc:	cc dd       	rcall	.-1128   	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    40ce:	d8 2e       	mov	r13, r24
    40d0:	88 23       	and	r24, r24
    40d2:	09 f4       	brne	.+2      	; 0x40d6 <_ZN12PubSubClient4loopEv+0x36>
    40d4:	57 c1       	rjmp	.+686    	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    40d6:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    40da:	4b 01       	movw	r8, r22
    40dc:	5c 01       	movw	r10, r24
    40de:	d8 01       	movw	r26, r16
    40e0:	1a 96       	adiw	r26, 0x0a	; 10
    40e2:	2d 91       	ld	r18, X+
    40e4:	3c 91       	ld	r19, X
    40e6:	1b 97       	sbiw	r26, 0x0b	; 11
    40e8:	a8 ee       	ldi	r26, 0xE8	; 232
    40ea:	b3 e0       	ldi	r27, 0x03	; 3
    40ec:	0e 94 c5 2e 	call	0x5d8a	; 0x5d8a <__umulhisi3>
    40f0:	f8 01       	movw	r30, r16
    40f2:	44 88       	ldd	r4, Z+20	; 0x14
    40f4:	55 88       	ldd	r5, Z+21	; 0x15
    40f6:	66 88       	ldd	r6, Z+22	; 0x16
    40f8:	77 88       	ldd	r7, Z+23	; 0x17
    40fa:	a5 01       	movw	r20, r10
    40fc:	94 01       	movw	r18, r8
    40fe:	24 19       	sub	r18, r4
    4100:	35 09       	sbc	r19, r5
    4102:	46 09       	sbc	r20, r6
    4104:	57 09       	sbc	r21, r7
    4106:	62 17       	cp	r22, r18
    4108:	73 07       	cpc	r23, r19
    410a:	84 07       	cpc	r24, r20
    410c:	95 07       	cpc	r25, r21
    410e:	80 f0       	brcs	.+32     	; 0x4130 <_ZN12PubSubClient4loopEv+0x90>
    4110:	40 88       	ldd	r4, Z+16	; 0x10
    4112:	51 88       	ldd	r5, Z+17	; 0x11
    4114:	62 88       	ldd	r6, Z+18	; 0x12
    4116:	73 88       	ldd	r7, Z+19	; 0x13
    4118:	a5 01       	movw	r20, r10
    411a:	94 01       	movw	r18, r8
    411c:	24 19       	sub	r18, r4
    411e:	35 09       	sbc	r19, r5
    4120:	46 09       	sbc	r20, r6
    4122:	57 09       	sbc	r21, r7
    4124:	62 17       	cp	r22, r18
    4126:	73 07       	cpc	r23, r19
    4128:	84 07       	cpc	r24, r20
    412a:	95 07       	cpc	r25, r21
    412c:	08 f0       	brcs	.+2      	; 0x4130 <_ZN12PubSubClient4loopEv+0x90>
    412e:	40 c0       	rjmp	.+128    	; 0x41b0 <_ZN12PubSubClient4loopEv+0x110>
    4130:	d8 01       	movw	r26, r16
    4132:	58 96       	adiw	r26, 0x18	; 24
    4134:	8c 91       	ld	r24, X
    4136:	58 97       	sbiw	r26, 0x18	; 24
    4138:	88 23       	and	r24, r24
    413a:	91 f0       	breq	.+36     	; 0x4160 <_ZN12PubSubClient4loopEv+0xc0>
    413c:	8c ef       	ldi	r24, 0xFC	; 252
    413e:	9f ef       	ldi	r25, 0xFF	; 255
    4140:	98 96       	adiw	r26, 0x28	; 40
    4142:	9c 93       	st	X, r25
    4144:	8e 93       	st	-X, r24
    4146:	97 97       	sbiw	r26, 0x27	; 39
    4148:	14 96       	adiw	r26, 0x04	; 4
    414a:	8d 91       	ld	r24, X+
    414c:	9c 91       	ld	r25, X
    414e:	15 97       	sbiw	r26, 0x05	; 5
    4150:	dc 01       	movw	r26, r24
    4152:	ed 91       	ld	r30, X+
    4154:	fc 91       	ld	r31, X
    4156:	04 88       	ldd	r0, Z+20	; 0x14
    4158:	f5 89       	ldd	r31, Z+21	; 0x15
    415a:	e0 2d       	mov	r30, r0
    415c:	19 95       	eicall
    415e:	11 c1       	rjmp	.+546    	; 0x4382 <_ZN12PubSubClient4loopEv+0x2e2>
    4160:	d8 01       	movw	r26, r16
    4162:	16 96       	adiw	r26, 0x06	; 6
    4164:	ed 91       	ld	r30, X+
    4166:	fc 91       	ld	r31, X
    4168:	17 97       	sbiw	r26, 0x07	; 7
    416a:	80 ec       	ldi	r24, 0xC0	; 192
    416c:	80 83       	st	Z, r24
    416e:	16 96       	adiw	r26, 0x06	; 6
    4170:	ed 91       	ld	r30, X+
    4172:	fc 91       	ld	r31, X
    4174:	17 97       	sbiw	r26, 0x07	; 7
    4176:	11 82       	std	Z+1, r1	; 0x01
    4178:	14 96       	adiw	r26, 0x04	; 4
    417a:	8d 91       	ld	r24, X+
    417c:	9c 91       	ld	r25, X
    417e:	15 97       	sbiw	r26, 0x05	; 5
    4180:	16 96       	adiw	r26, 0x06	; 6
    4182:	6d 91       	ld	r22, X+
    4184:	7c 91       	ld	r23, X
    4186:	17 97       	sbiw	r26, 0x07	; 7
    4188:	dc 01       	movw	r26, r24
    418a:	ed 91       	ld	r30, X+
    418c:	fc 91       	ld	r31, X
    418e:	02 80       	ldd	r0, Z+2	; 0x02
    4190:	f3 81       	ldd	r31, Z+3	; 0x03
    4192:	e0 2d       	mov	r30, r0
    4194:	42 e0       	ldi	r20, 0x02	; 2
    4196:	50 e0       	ldi	r21, 0x00	; 0
    4198:	19 95       	eicall
    419a:	f8 01       	movw	r30, r16
    419c:	80 8a       	std	Z+16, r8	; 0x10
    419e:	91 8a       	std	Z+17, r9	; 0x11
    41a0:	a2 8a       	std	Z+18, r10	; 0x12
    41a2:	b3 8a       	std	Z+19, r11	; 0x13
    41a4:	84 8a       	std	Z+20, r8	; 0x14
    41a6:	95 8a       	std	Z+21, r9	; 0x15
    41a8:	a6 8a       	std	Z+22, r10	; 0x16
    41aa:	b7 8a       	std	Z+23, r11	; 0x17
    41ac:	81 e0       	ldi	r24, 0x01	; 1
    41ae:	80 8f       	std	Z+24, r24	; 0x18
    41b0:	f8 01       	movw	r30, r16
    41b2:	84 81       	ldd	r24, Z+4	; 0x04
    41b4:	95 81       	ldd	r25, Z+5	; 0x05
    41b6:	dc 01       	movw	r26, r24
    41b8:	ed 91       	ld	r30, X+
    41ba:	fc 91       	ld	r31, X
    41bc:	00 84       	ldd	r0, Z+8	; 0x08
    41be:	f1 85       	ldd	r31, Z+9	; 0x09
    41c0:	e0 2d       	mov	r30, r0
    41c2:	19 95       	eicall
    41c4:	89 2b       	or	r24, r25
    41c6:	09 f4       	brne	.+2      	; 0x41ca <_ZN12PubSubClient4loopEv+0x12a>
    41c8:	dd c0       	rjmp	.+442    	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    41ca:	be 01       	movw	r22, r28
    41cc:	6f 5f       	subi	r22, 0xFF	; 255
    41ce:	7f 4f       	sbci	r23, 0xFF	; 255
    41d0:	c8 01       	movw	r24, r16
    41d2:	5e db       	rcall	.-2372   	; 0x3890 <_ZN12PubSubClient10readPacketEPh>
    41d4:	2b 01       	movw	r4, r22
    41d6:	3c 01       	movw	r6, r24
    41d8:	67 2b       	or	r22, r23
    41da:	09 f4       	brne	.+2      	; 0x41de <_ZN12PubSubClient4loopEv+0x13e>
    41dc:	ce c0       	rjmp	.+412    	; 0x437a <_ZN12PubSubClient4loopEv+0x2da>
    41de:	f8 01       	movw	r30, r16
    41e0:	84 8a       	std	Z+20, r8	; 0x14
    41e2:	95 8a       	std	Z+21, r9	; 0x15
    41e4:	a6 8a       	std	Z+22, r10	; 0x16
    41e6:	b7 8a       	std	Z+23, r11	; 0x17
    41e8:	06 80       	ldd	r0, Z+6	; 0x06
    41ea:	f7 81       	ldd	r31, Z+7	; 0x07
    41ec:	e0 2d       	mov	r30, r0
    41ee:	80 81       	ld	r24, Z
    41f0:	80 7f       	andi	r24, 0xF0	; 240
    41f2:	80 33       	cpi	r24, 0x30	; 48
    41f4:	09 f0       	breq	.+2      	; 0x41f8 <_ZN12PubSubClient4loopEv+0x158>
    41f6:	a0 c0       	rjmp	.+320    	; 0x4338 <_ZN12PubSubClient4loopEv+0x298>
    41f8:	d8 01       	movw	r26, r16
    41fa:	59 96       	adiw	r26, 0x19	; 25
    41fc:	8d 91       	ld	r24, X+
    41fe:	9c 91       	ld	r25, X
    4200:	5a 97       	sbiw	r26, 0x1a	; 26
    4202:	89 2b       	or	r24, r25
    4204:	09 f4       	brne	.+2      	; 0x4208 <_ZN12PubSubClient4loopEv+0x168>
    4206:	be c0       	rjmp	.+380    	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    4208:	29 81       	ldd	r18, Y+1	; 0x01
    420a:	30 e0       	ldi	r19, 0x00	; 0
    420c:	c9 01       	movw	r24, r18
    420e:	02 96       	adiw	r24, 0x02	; 2
    4210:	8e 0f       	add	r24, r30
    4212:	9f 1f       	adc	r25, r31
    4214:	df 01       	movw	r26, r30
    4216:	a2 0f       	add	r26, r18
    4218:	b3 1f       	adc	r27, r19
    421a:	11 96       	adiw	r26, 0x01	; 1
    421c:	ec 90       	ld	r14, X
    421e:	f1 2c       	mov	r15, r1
    4220:	fe 2c       	mov	r15, r14
    4222:	ee 24       	eor	r14, r14
    4224:	dc 01       	movw	r26, r24
    4226:	4c 91       	ld	r20, X
    4228:	e4 0e       	add	r14, r20
    422a:	f1 1c       	adc	r15, r1
    422c:	2d 5f       	subi	r18, 0xFD	; 253
    422e:	3f 4f       	sbci	r19, 0xFF	; 255
    4230:	bf 01       	movw	r22, r30
    4232:	62 0f       	add	r22, r18
    4234:	73 1f       	adc	r23, r19
    4236:	a7 01       	movw	r20, r14
    4238:	0e 94 6b 31 	call	0x62d6	; 0x62d6 <memmove>
    423c:	89 81       	ldd	r24, Y+1	; 0x01
    423e:	d8 01       	movw	r26, r16
    4240:	16 96       	adiw	r26, 0x06	; 6
    4242:	ed 91       	ld	r30, X+
    4244:	fc 91       	ld	r31, X
    4246:	17 97       	sbiw	r26, 0x07	; 7
    4248:	ee 0d       	add	r30, r14
    424a:	ff 1d       	adc	r31, r15
    424c:	e8 0f       	add	r30, r24
    424e:	f1 1d       	adc	r31, r1
    4250:	12 82       	std	Z+2, r1	; 0x02
    4252:	16 96       	adiw	r26, 0x06	; 6
    4254:	ed 91       	ld	r30, X+
    4256:	fc 91       	ld	r31, X
    4258:	17 97       	sbiw	r26, 0x07	; 7
    425a:	29 81       	ldd	r18, Y+1	; 0x01
    425c:	30 e0       	ldi	r19, 0x00	; 0
    425e:	c9 01       	movw	r24, r18
    4260:	02 96       	adiw	r24, 0x02	; 2
    4262:	8e 0f       	add	r24, r30
    4264:	9f 1f       	adc	r25, r31
    4266:	40 81       	ld	r20, Z
    4268:	46 70       	andi	r20, 0x06	; 6
    426a:	c4 2e       	mov	r12, r20
    426c:	59 96       	adiw	r26, 0x19	; 25
    426e:	2d 90       	ld	r2, X+
    4270:	3c 90       	ld	r3, X
    4272:	5a 97       	sbiw	r26, 0x1a	; 26
    4274:	b2 e0       	ldi	r27, 0x02	; 2
    4276:	4b 13       	cpse	r20, r27
    4278:	4d c0       	rjmp	.+154    	; 0x4314 <_ZN12PubSubClient4loopEv+0x274>
    427a:	b7 01       	movw	r22, r14
    427c:	62 0f       	add	r22, r18
    427e:	73 1f       	adc	r23, r19
    4280:	df 01       	movw	r26, r30
    4282:	a6 0f       	add	r26, r22
    4284:	b7 1f       	adc	r27, r23
    4286:	13 96       	adiw	r26, 0x03	; 3
    4288:	4c 91       	ld	r20, X
    428a:	13 97       	sbiw	r26, 0x03	; 3
    428c:	50 e0       	ldi	r21, 0x00	; 0
    428e:	54 2f       	mov	r21, r20
    4290:	44 27       	eor	r20, r20
    4292:	14 96       	adiw	r26, 0x04	; 4
    4294:	ac 91       	ld	r26, X
    4296:	4a 0f       	add	r20, r26
    4298:	51 1d       	adc	r21, r1
    429a:	5b 83       	std	Y+3, r21	; 0x03
    429c:	4a 83       	std	Y+2, r20	; 0x02
    429e:	4b ef       	ldi	r20, 0xFB	; 251
    42a0:	5f ef       	ldi	r21, 0xFF	; 255
    42a2:	42 1b       	sub	r20, r18
    42a4:	53 0b       	sbc	r21, r19
    42a6:	4e 19       	sub	r20, r14
    42a8:	5f 09       	sbc	r21, r15
    42aa:	44 0d       	add	r20, r4
    42ac:	55 1d       	adc	r21, r5
    42ae:	6b 5f       	subi	r22, 0xFB	; 251
    42b0:	7f 4f       	sbci	r23, 0xFF	; 255
    42b2:	6e 0f       	add	r22, r30
    42b4:	7f 1f       	adc	r23, r31
    42b6:	f1 01       	movw	r30, r2
    42b8:	19 95       	eicall
    42ba:	d8 01       	movw	r26, r16
    42bc:	16 96       	adiw	r26, 0x06	; 6
    42be:	ed 91       	ld	r30, X+
    42c0:	fc 91       	ld	r31, X
    42c2:	17 97       	sbiw	r26, 0x07	; 7
    42c4:	80 e4       	ldi	r24, 0x40	; 64
    42c6:	80 83       	st	Z, r24
    42c8:	16 96       	adiw	r26, 0x06	; 6
    42ca:	ed 91       	ld	r30, X+
    42cc:	fc 91       	ld	r31, X
    42ce:	17 97       	sbiw	r26, 0x07	; 7
    42d0:	c1 82       	std	Z+1, r12	; 0x01
    42d2:	16 96       	adiw	r26, 0x06	; 6
    42d4:	ed 91       	ld	r30, X+
    42d6:	fc 91       	ld	r31, X
    42d8:	17 97       	sbiw	r26, 0x07	; 7
    42da:	bb 81       	ldd	r27, Y+3	; 0x03
    42dc:	b2 83       	std	Z+2, r27	; 0x02
    42de:	d8 01       	movw	r26, r16
    42e0:	16 96       	adiw	r26, 0x06	; 6
    42e2:	ed 91       	ld	r30, X+
    42e4:	fc 91       	ld	r31, X
    42e6:	17 97       	sbiw	r26, 0x07	; 7
    42e8:	ba 81       	ldd	r27, Y+2	; 0x02
    42ea:	b3 83       	std	Z+3, r27	; 0x03
    42ec:	f8 01       	movw	r30, r16
    42ee:	84 81       	ldd	r24, Z+4	; 0x04
    42f0:	95 81       	ldd	r25, Z+5	; 0x05
    42f2:	66 81       	ldd	r22, Z+6	; 0x06
    42f4:	77 81       	ldd	r23, Z+7	; 0x07
    42f6:	dc 01       	movw	r26, r24
    42f8:	ed 91       	ld	r30, X+
    42fa:	fc 91       	ld	r31, X
    42fc:	02 80       	ldd	r0, Z+2	; 0x02
    42fe:	f3 81       	ldd	r31, Z+3	; 0x03
    4300:	e0 2d       	mov	r30, r0
    4302:	44 e0       	ldi	r20, 0x04	; 4
    4304:	50 e0       	ldi	r21, 0x00	; 0
    4306:	19 95       	eicall
    4308:	f8 01       	movw	r30, r16
    430a:	80 8a       	std	Z+16, r8	; 0x10
    430c:	91 8a       	std	Z+17, r9	; 0x11
    430e:	a2 8a       	std	Z+18, r10	; 0x12
    4310:	b3 8a       	std	Z+19, r11	; 0x13
    4312:	38 c0       	rjmp	.+112    	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    4314:	4d ef       	ldi	r20, 0xFD	; 253
    4316:	5f ef       	ldi	r21, 0xFF	; 255
    4318:	42 1b       	sub	r20, r18
    431a:	53 0b       	sbc	r21, r19
    431c:	4e 19       	sub	r20, r14
    431e:	5f 09       	sbc	r21, r15
    4320:	44 0d       	add	r20, r4
    4322:	55 1d       	adc	r21, r5
    4324:	b9 01       	movw	r22, r18
    4326:	6d 5f       	subi	r22, 0xFD	; 253
    4328:	7f 4f       	sbci	r23, 0xFF	; 255
    432a:	6e 0d       	add	r22, r14
    432c:	7f 1d       	adc	r23, r15
    432e:	6e 0f       	add	r22, r30
    4330:	7f 1f       	adc	r23, r31
    4332:	f1 01       	movw	r30, r2
    4334:	19 95       	eicall
    4336:	26 c0       	rjmp	.+76     	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    4338:	80 3c       	cpi	r24, 0xC0	; 192
    433a:	d1 f4       	brne	.+52     	; 0x4370 <_ZN12PubSubClient4loopEv+0x2d0>
    433c:	80 ed       	ldi	r24, 0xD0	; 208
    433e:	80 83       	st	Z, r24
    4340:	d8 01       	movw	r26, r16
    4342:	16 96       	adiw	r26, 0x06	; 6
    4344:	ed 91       	ld	r30, X+
    4346:	fc 91       	ld	r31, X
    4348:	17 97       	sbiw	r26, 0x07	; 7
    434a:	11 82       	std	Z+1, r1	; 0x01
    434c:	14 96       	adiw	r26, 0x04	; 4
    434e:	8d 91       	ld	r24, X+
    4350:	9c 91       	ld	r25, X
    4352:	15 97       	sbiw	r26, 0x05	; 5
    4354:	16 96       	adiw	r26, 0x06	; 6
    4356:	6d 91       	ld	r22, X+
    4358:	7c 91       	ld	r23, X
    435a:	17 97       	sbiw	r26, 0x07	; 7
    435c:	dc 01       	movw	r26, r24
    435e:	ed 91       	ld	r30, X+
    4360:	fc 91       	ld	r31, X
    4362:	02 80       	ldd	r0, Z+2	; 0x02
    4364:	f3 81       	ldd	r31, Z+3	; 0x03
    4366:	e0 2d       	mov	r30, r0
    4368:	42 e0       	ldi	r20, 0x02	; 2
    436a:	50 e0       	ldi	r21, 0x00	; 0
    436c:	19 95       	eicall
    436e:	0a c0       	rjmp	.+20     	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    4370:	80 3d       	cpi	r24, 0xD0	; 208
    4372:	41 f4       	brne	.+16     	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    4374:	f8 01       	movw	r30, r16
    4376:	10 8e       	std	Z+24, r1	; 0x18
    4378:	05 c0       	rjmp	.+10     	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    437a:	c8 01       	movw	r24, r16
    437c:	74 dc       	rcall	.-1816   	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    437e:	81 11       	cpse	r24, r1
    4380:	01 c0       	rjmp	.+2      	; 0x4384 <_ZN12PubSubClient4loopEv+0x2e4>
    4382:	d1 2c       	mov	r13, r1
    4384:	8d 2d       	mov	r24, r13
    4386:	0f 90       	pop	r0
    4388:	0f 90       	pop	r0
    438a:	0f 90       	pop	r0
    438c:	df 91       	pop	r29
    438e:	cf 91       	pop	r28
    4390:	1f 91       	pop	r17
    4392:	0f 91       	pop	r16
    4394:	ff 90       	pop	r15
    4396:	ef 90       	pop	r14
    4398:	df 90       	pop	r13
    439a:	cf 90       	pop	r12
    439c:	bf 90       	pop	r11
    439e:	af 90       	pop	r10
    43a0:	9f 90       	pop	r9
    43a2:	8f 90       	pop	r8
    43a4:	7f 90       	pop	r7
    43a6:	6f 90       	pop	r6
    43a8:	5f 90       	pop	r5
    43aa:	4f 90       	pop	r4
    43ac:	3f 90       	pop	r3
    43ae:	2f 90       	pop	r2
    43b0:	08 95       	ret

000043b2 <_ZN12PubSubClient7publishEPKcPKhjb>:
    43b2:	8f 92       	push	r8
    43b4:	9f 92       	push	r9
    43b6:	af 92       	push	r10
    43b8:	bf 92       	push	r11
    43ba:	cf 92       	push	r12
    43bc:	df 92       	push	r13
    43be:	ef 92       	push	r14
    43c0:	ff 92       	push	r15
    43c2:	0f 93       	push	r16
    43c4:	cf 93       	push	r28
    43c6:	df 93       	push	r29
    43c8:	6c 01       	movw	r12, r24
    43ca:	5b 01       	movw	r10, r22
    43cc:	ea 01       	movw	r28, r20
    43ce:	79 01       	movw	r14, r18
    43d0:	4a dc       	rcall	.-1900   	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    43d2:	88 23       	and	r24, r24
    43d4:	09 f4       	brne	.+2      	; 0x43d8 <_ZN12PubSubClient7publishEPKcPKhjb+0x26>
    43d6:	49 c0       	rjmp	.+146    	; 0x446a <_ZN12PubSubClient7publishEPKcPKhjb+0xb8>
    43d8:	d6 01       	movw	r26, r12
    43da:	18 96       	adiw	r26, 0x08	; 8
    43dc:	8d 90       	ld	r8, X+
    43de:	9c 90       	ld	r9, X
    43e0:	19 97       	sbiw	r26, 0x09	; 9
    43e2:	b4 01       	movw	r22, r8
    43e4:	c5 01       	movw	r24, r10
    43e6:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    43ea:	97 01       	movw	r18, r14
    43ec:	29 5f       	subi	r18, 0xF9	; 249
    43ee:	3f 4f       	sbci	r19, 0xFF	; 255
    43f0:	82 0f       	add	r24, r18
    43f2:	93 1f       	adc	r25, r19
    43f4:	88 16       	cp	r8, r24
    43f6:	99 06       	cpc	r9, r25
    43f8:	c0 f1       	brcs	.+112    	; 0x446a <_ZN12PubSubClient7publishEPKcPKhjb+0xb8>
    43fa:	f6 01       	movw	r30, r12
    43fc:	46 81       	ldd	r20, Z+6	; 0x06
    43fe:	57 81       	ldd	r21, Z+7	; 0x07
    4400:	25 e0       	ldi	r18, 0x05	; 5
    4402:	30 e0       	ldi	r19, 0x00	; 0
    4404:	b5 01       	movw	r22, r10
    4406:	c6 01       	movw	r24, r12
    4408:	0f dc       	rcall	.-2018   	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    440a:	5e 01       	movw	r10, r28
    440c:	ae 0c       	add	r10, r14
    440e:	bf 1c       	adc	r11, r15
    4410:	fe 01       	movw	r30, r28
    4412:	ec 01       	movw	r28, r24
    4414:	ce 1b       	sub	r28, r30
    4416:	df 0b       	sbc	r29, r31
    4418:	be 01       	movw	r22, r28
    441a:	6e 0f       	add	r22, r30
    441c:	7f 1f       	adc	r23, r31
    441e:	d6 01       	movw	r26, r12
    4420:	16 96       	adiw	r26, 0x06	; 6
    4422:	4d 91       	ld	r20, X+
    4424:	5c 91       	ld	r21, X
    4426:	17 97       	sbiw	r26, 0x07	; 7
    4428:	ea 15       	cp	r30, r10
    442a:	fb 05       	cpc	r31, r11
    442c:	31 f0       	breq	.+12     	; 0x443a <_ZN12PubSubClient7publishEPKcPKhjb+0x88>
    442e:	21 91       	ld	r18, Z+
    4430:	da 01       	movw	r26, r20
    4432:	a6 0f       	add	r26, r22
    4434:	b7 1f       	adc	r27, r23
    4436:	2c 93       	st	X, r18
    4438:	ef cf       	rjmp	.-34     	; 0x4418 <_ZN12PubSubClient7publishEPKcPKhjb+0x66>
    443a:	b5 e0       	ldi	r27, 0x05	; 5
    443c:	eb 1a       	sub	r14, r27
    443e:	f1 08       	sbc	r15, r1
    4440:	00 23       	and	r16, r16
    4442:	11 f0       	breq	.+4      	; 0x4448 <_ZN12PubSubClient7publishEPKcPKhjb+0x96>
    4444:	61 e3       	ldi	r22, 0x31	; 49
    4446:	01 c0       	rjmp	.+2      	; 0x444a <_ZN12PubSubClient7publishEPKcPKhjb+0x98>
    4448:	60 e3       	ldi	r22, 0x30	; 48
    444a:	9c 01       	movw	r18, r24
    444c:	2e 0d       	add	r18, r14
    444e:	3f 1d       	adc	r19, r15
    4450:	c6 01       	movw	r24, r12
    4452:	df 91       	pop	r29
    4454:	cf 91       	pop	r28
    4456:	0f 91       	pop	r16
    4458:	ff 90       	pop	r15
    445a:	ef 90       	pop	r14
    445c:	df 90       	pop	r13
    445e:	cf 90       	pop	r12
    4460:	bf 90       	pop	r11
    4462:	af 90       	pop	r10
    4464:	9f 90       	pop	r9
    4466:	8f 90       	pop	r8
    4468:	ab cb       	rjmp	.-2218   	; 0x3bc0 <_ZN12PubSubClient5writeEhPhj>
    446a:	80 e0       	ldi	r24, 0x00	; 0
    446c:	df 91       	pop	r29
    446e:	cf 91       	pop	r28
    4470:	0f 91       	pop	r16
    4472:	ff 90       	pop	r15
    4474:	ef 90       	pop	r14
    4476:	df 90       	pop	r13
    4478:	cf 90       	pop	r12
    447a:	bf 90       	pop	r11
    447c:	af 90       	pop	r10
    447e:	9f 90       	pop	r9
    4480:	8f 90       	pop	r8
    4482:	08 95       	ret

00004484 <_ZN12PubSubClient7publishEPKcS1_>:
    4484:	cf 92       	push	r12
    4486:	df 92       	push	r13
    4488:	ef 92       	push	r14
    448a:	ff 92       	push	r15
    448c:	0f 93       	push	r16
    448e:	cf 93       	push	r28
    4490:	df 93       	push	r29
    4492:	7c 01       	movw	r14, r24
    4494:	6b 01       	movw	r12, r22
    4496:	ea 01       	movw	r28, r20
    4498:	20 97       	sbiw	r28, 0x00	; 0
    449a:	39 f0       	breq	.+14     	; 0x44aa <_ZN12PubSubClient7publishEPKcS1_+0x26>
    449c:	fc 01       	movw	r30, r24
    449e:	60 85       	ldd	r22, Z+8	; 0x08
    44a0:	71 85       	ldd	r23, Z+9	; 0x09
    44a2:	ca 01       	movw	r24, r20
    44a4:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    44a8:	02 c0       	rjmp	.+4      	; 0x44ae <_ZN12PubSubClient7publishEPKcS1_+0x2a>
    44aa:	80 e0       	ldi	r24, 0x00	; 0
    44ac:	90 e0       	ldi	r25, 0x00	; 0
    44ae:	00 e0       	ldi	r16, 0x00	; 0
    44b0:	9c 01       	movw	r18, r24
    44b2:	ae 01       	movw	r20, r28
    44b4:	b6 01       	movw	r22, r12
    44b6:	c7 01       	movw	r24, r14
    44b8:	7c df       	rcall	.-264    	; 0x43b2 <_ZN12PubSubClient7publishEPKcPKhjb>
    44ba:	df 91       	pop	r29
    44bc:	cf 91       	pop	r28
    44be:	0f 91       	pop	r16
    44c0:	ff 90       	pop	r15
    44c2:	ef 90       	pop	r14
    44c4:	df 90       	pop	r13
    44c6:	cf 90       	pop	r12
    44c8:	08 95       	ret

000044ca <_ZN12PubSubClient9subscribeEPKch>:
    44ca:	cf 92       	push	r12
    44cc:	df 92       	push	r13
    44ce:	ff 92       	push	r15
    44d0:	0f 93       	push	r16
    44d2:	1f 93       	push	r17
    44d4:	cf 93       	push	r28
    44d6:	df 93       	push	r29
    44d8:	ec 01       	movw	r28, r24
    44da:	8b 01       	movw	r16, r22
    44dc:	f4 2e       	mov	r15, r20
    44de:	c8 84       	ldd	r12, Y+8	; 0x08
    44e0:	d9 84       	ldd	r13, Y+9	; 0x09
    44e2:	b6 01       	movw	r22, r12
    44e4:	c8 01       	movw	r24, r16
    44e6:	0e 94 a2 31 	call	0x6344	; 0x6344 <strnlen>
    44ea:	01 15       	cp	r16, r1
    44ec:	11 05       	cpc	r17, r1
    44ee:	b1 f1       	breq	.+108    	; 0x455c <_ZN12PubSubClient9subscribeEPKch+0x92>
    44f0:	21 e0       	ldi	r18, 0x01	; 1
    44f2:	2f 15       	cp	r18, r15
    44f4:	98 f1       	brcs	.+102    	; 0x455c <_ZN12PubSubClient9subscribeEPKch+0x92>
    44f6:	09 96       	adiw	r24, 0x09	; 9
    44f8:	c8 16       	cp	r12, r24
    44fa:	d9 06       	cpc	r13, r25
    44fc:	78 f1       	brcs	.+94     	; 0x455c <_ZN12PubSubClient9subscribeEPKch+0x92>
    44fe:	ce 01       	movw	r24, r28
    4500:	b2 db       	rcall	.-2204   	; 0x3c66 <_ZN12PubSubClient9connectedEv>
    4502:	88 23       	and	r24, r24
    4504:	59 f1       	breq	.+86     	; 0x455c <_ZN12PubSubClient9subscribeEPKch+0x92>
    4506:	8e 85       	ldd	r24, Y+14	; 0x0e
    4508:	9f 85       	ldd	r25, Y+15	; 0x0f
    450a:	01 96       	adiw	r24, 0x01	; 1
    450c:	11 f4       	brne	.+4      	; 0x4512 <_ZN12PubSubClient9subscribeEPKch+0x48>
    450e:	81 e0       	ldi	r24, 0x01	; 1
    4510:	90 e0       	ldi	r25, 0x00	; 0
    4512:	9f 87       	std	Y+15, r25	; 0x0f
    4514:	8e 87       	std	Y+14, r24	; 0x0e
    4516:	ee 81       	ldd	r30, Y+6	; 0x06
    4518:	ff 81       	ldd	r31, Y+7	; 0x07
    451a:	8f 85       	ldd	r24, Y+15	; 0x0f
    451c:	85 83       	std	Z+5, r24	; 0x05
    451e:	ee 81       	ldd	r30, Y+6	; 0x06
    4520:	ff 81       	ldd	r31, Y+7	; 0x07
    4522:	8e 85       	ldd	r24, Y+14	; 0x0e
    4524:	86 83       	std	Z+6, r24	; 0x06
    4526:	4e 81       	ldd	r20, Y+6	; 0x06
    4528:	5f 81       	ldd	r21, Y+7	; 0x07
    452a:	27 e0       	ldi	r18, 0x07	; 7
    452c:	30 e0       	ldi	r19, 0x00	; 0
    452e:	b8 01       	movw	r22, r16
    4530:	ce 01       	movw	r24, r28
    4532:	7a db       	rcall	.-2316   	; 0x3c28 <_ZN12PubSubClient11writeStringEPKcPhj>
    4534:	ee 81       	ldd	r30, Y+6	; 0x06
    4536:	ff 81       	ldd	r31, Y+7	; 0x07
    4538:	e8 0f       	add	r30, r24
    453a:	f9 1f       	adc	r31, r25
    453c:	f0 82       	st	Z, r15
    453e:	9c 01       	movw	r18, r24
    4540:	24 50       	subi	r18, 0x04	; 4
    4542:	31 09       	sbc	r19, r1
    4544:	4e 81       	ldd	r20, Y+6	; 0x06
    4546:	5f 81       	ldd	r21, Y+7	; 0x07
    4548:	62 e8       	ldi	r22, 0x82	; 130
    454a:	ce 01       	movw	r24, r28
    454c:	df 91       	pop	r29
    454e:	cf 91       	pop	r28
    4550:	1f 91       	pop	r17
    4552:	0f 91       	pop	r16
    4554:	ff 90       	pop	r15
    4556:	df 90       	pop	r13
    4558:	cf 90       	pop	r12
    455a:	32 cb       	rjmp	.-2460   	; 0x3bc0 <_ZN12PubSubClient5writeEhPhj>
    455c:	80 e0       	ldi	r24, 0x00	; 0
    455e:	df 91       	pop	r29
    4560:	cf 91       	pop	r28
    4562:	1f 91       	pop	r17
    4564:	0f 91       	pop	r16
    4566:	ff 90       	pop	r15
    4568:	df 90       	pop	r13
    456a:	cf 90       	pop	r12
    456c:	08 95       	ret

0000456e <_ZN12PubSubClient9setServerEPKcj>:
    456e:	fc 01       	movw	r30, r24
    4570:	72 a3       	std	Z+34, r23	; 0x22
    4572:	61 a3       	std	Z+33, r22	; 0x21
    4574:	54 a3       	std	Z+36, r21	; 0x24
    4576:	43 a3       	std	Z+35, r20	; 0x23
    4578:	08 95       	ret

0000457a <_ZN12PubSubClient11setCallbackEPFvPcPhjE>:
    457a:	fc 01       	movw	r30, r24
    457c:	72 8f       	std	Z+26, r23	; 0x1a
    457e:	61 8f       	std	Z+25, r22	; 0x19
    4580:	08 95       	ret

00004582 <_ZN12PubSubClient5stateEv>:
    4582:	fc 01       	movw	r30, r24
    4584:	87 a1       	ldd	r24, Z+39	; 0x27
    4586:	90 a5       	ldd	r25, Z+40	; 0x28
    4588:	08 95       	ret

0000458a <_ZN12PubSubClient13setBufferSizeEj>:
    458a:	0f 93       	push	r16
    458c:	1f 93       	push	r17
    458e:	cf 93       	push	r28
    4590:	df 93       	push	r29
    4592:	61 15       	cp	r22, r1
    4594:	71 05       	cpc	r23, r1
    4596:	c9 f0       	breq	.+50     	; 0x45ca <_ZN12PubSubClient13setBufferSizeEj+0x40>
    4598:	8b 01       	movw	r16, r22
    459a:	ec 01       	movw	r28, r24
    459c:	88 85       	ldd	r24, Y+8	; 0x08
    459e:	99 85       	ldd	r25, Y+9	; 0x09
    45a0:	89 2b       	or	r24, r25
    45a2:	21 f4       	brne	.+8      	; 0x45ac <_ZN12PubSubClient13setBufferSizeEj+0x22>
    45a4:	cb 01       	movw	r24, r22
    45a6:	0e 94 fd 2e 	call	0x5dfa	; 0x5dfa <malloc>
    45aa:	06 c0       	rjmp	.+12     	; 0x45b8 <_ZN12PubSubClient13setBufferSizeEj+0x2e>
    45ac:	8e 81       	ldd	r24, Y+6	; 0x06
    45ae:	9f 81       	ldd	r25, Y+7	; 0x07
    45b0:	0e 94 1e 30 	call	0x603c	; 0x603c <realloc>
    45b4:	00 97       	sbiw	r24, 0x00	; 0
    45b6:	49 f0       	breq	.+18     	; 0x45ca <_ZN12PubSubClient13setBufferSizeEj+0x40>
    45b8:	9f 83       	std	Y+7, r25	; 0x07
    45ba:	8e 83       	std	Y+6, r24	; 0x06
    45bc:	19 87       	std	Y+9, r17	; 0x09
    45be:	08 87       	std	Y+8, r16	; 0x08
    45c0:	81 e0       	ldi	r24, 0x01	; 1
    45c2:	2e 81       	ldd	r18, Y+6	; 0x06
    45c4:	3f 81       	ldd	r19, Y+7	; 0x07
    45c6:	23 2b       	or	r18, r19
    45c8:	09 f4       	brne	.+2      	; 0x45cc <_ZN12PubSubClient13setBufferSizeEj+0x42>
    45ca:	80 e0       	ldi	r24, 0x00	; 0
    45cc:	df 91       	pop	r29
    45ce:	cf 91       	pop	r28
    45d0:	1f 91       	pop	r17
    45d2:	0f 91       	pop	r16
    45d4:	08 95       	ret

000045d6 <_ZN12PubSubClientC1ER6Client>:
    45d6:	0f 93       	push	r16
    45d8:	1f 93       	push	r17
    45da:	cf 93       	push	r28
    45dc:	df 93       	push	r29
    45de:	ec 01       	movw	r28, r24
    45e0:	8b 01       	movw	r16, r22
    45e2:	1b 82       	std	Y+3, r1	; 0x03
    45e4:	1a 82       	std	Y+2, r1	; 0x02
    45e6:	85 e7       	ldi	r24, 0x75	; 117
    45e8:	94 e0       	ldi	r25, 0x04	; 4
    45ea:	99 83       	std	Y+1, r25	; 0x01
    45ec:	88 83       	st	Y, r24
    45ee:	ce 01       	movw	r24, r28
    45f0:	4b 96       	adiw	r24, 0x1b	; 27
    45f2:	0e 94 b0 12 	call	0x2560	; 0x2560 <_ZN9IPAddressC1Ev>
    45f6:	8f ef       	ldi	r24, 0xFF	; 255
    45f8:	9f ef       	ldi	r25, 0xFF	; 255
    45fa:	98 a7       	std	Y+40, r25	; 0x28
    45fc:	8f a3       	std	Y+39, r24	; 0x27
    45fe:	1d 83       	std	Y+5, r17	; 0x05
    4600:	0c 83       	std	Y+4, r16	; 0x04
    4602:	1e a2       	std	Y+38, r1	; 0x26
    4604:	1d a2       	std	Y+37, r1	; 0x25
    4606:	19 86       	std	Y+9, r1	; 0x09
    4608:	18 86       	std	Y+8, r1	; 0x08
    460a:	60 e0       	ldi	r22, 0x00	; 0
    460c:	71 e0       	ldi	r23, 0x01	; 1
    460e:	ce 01       	movw	r24, r28
    4610:	bc df       	rcall	.-136    	; 0x458a <_ZN12PubSubClient13setBufferSizeEj>
    4612:	8f e0       	ldi	r24, 0x0F	; 15
    4614:	90 e0       	ldi	r25, 0x00	; 0
    4616:	9b 87       	std	Y+11, r25	; 0x0b
    4618:	8a 87       	std	Y+10, r24	; 0x0a
    461a:	9d 87       	std	Y+13, r25	; 0x0d
    461c:	8c 87       	std	Y+12, r24	; 0x0c
    461e:	df 91       	pop	r29
    4620:	cf 91       	pop	r28
    4622:	1f 91       	pop	r17
    4624:	0f 91       	pop	r16
    4626:	08 95       	ret

00004628 <_ZN12PubSubClient16setSocketTimeoutEj>:
PubSubClient& PubSubClient::setSocketTimeout(uint16_t timeout) {
    this->socketTimeout = timeout;
    4628:	fc 01       	movw	r30, r24
    462a:	75 87       	std	Z+13, r23	; 0x0d
    462c:	64 87       	std	Z+12, r22	; 0x0c
    return *this;
}
    462e:	08 95       	ret

00004630 <_GLOBAL__sub_I__ZN12PubSubClientC2Ev>:
    4630:	0f 93       	push	r16
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0,0,0,0);
    4632:	00 e0       	ldi	r16, 0x00	; 0
    4634:	20 e0       	ldi	r18, 0x00	; 0
    4636:	40 e0       	ldi	r20, 0x00	; 0
    4638:	60 e0       	ldi	r22, 0x00	; 0
    463a:	80 e6       	ldi	r24, 0x60	; 96
    463c:	96 e0       	ldi	r25, 0x06	; 6
    463e:	0e 94 ba 12 	call	0x2574	; 0x2574 <_ZN9IPAddressC1Ehhhh>
    4642:	0f 91       	pop	r16
    4644:	08 95       	ret

00004646 <_ZN12WiFiEspClass4initEP6Stream>:
*/


bool WiFiEspClass::ping(const char *host)
{
	return EspDrv::ping(host);
    4646:	cf 93       	push	r28
    4648:	df 93       	push	r29
    464a:	ec 01       	movw	r28, r24
    464c:	6d e7       	ldi	r22, 0x7D	; 125
    464e:	74 e0       	ldi	r23, 0x04	; 4
    4650:	8d e1       	ldi	r24, 0x1D	; 29
    4652:	95 e0       	ldi	r25, 0x05	; 5
    4654:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    4658:	65 ec       	ldi	r22, 0xC5	; 197
    465a:	75 e0       	ldi	r23, 0x05	; 5
    465c:	8d e1       	ldi	r24, 0x1D	; 29
    465e:	95 e0       	ldi	r25, 0x05	; 5
    4660:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    4664:	ce 01       	movw	r24, r28
    4666:	df 91       	pop	r29
    4668:	cf 91       	pop	r28
    466a:	b7 c6       	rjmp	.+3438   	; 0x53da <_ZN6EspDrv14wifiDriverInitEP6Stream>

0000466c <_ZN12WiFiEspClass5beginEPKcS1_>:
    466c:	cb 01       	movw	r24, r22
    466e:	21 e0       	ldi	r18, 0x01	; 1
    4670:	20 93 67 06 	sts	0x0667, r18	; 0x800667 <_ZN12WiFiEspClass7espModeE>
    4674:	ba 01       	movw	r22, r20
    4676:	d1 d7       	rcall	.+4002   	; 0x561a <_ZN6EspDrv11wifiConnectEPKcS1_>
    4678:	81 11       	cpse	r24, r1
    467a:	03 c0       	rjmp	.+6      	; 0x4682 <_ZN12WiFiEspClass5beginEPKcS1_+0x16>
    467c:	82 e0       	ldi	r24, 0x02	; 2
    467e:	90 e0       	ldi	r25, 0x00	; 0
    4680:	08 95       	ret
    4682:	81 e0       	ldi	r24, 0x01	; 1
    4684:	90 e0       	ldi	r25, 0x00	; 0
    4686:	08 95       	ret

00004688 <_ZN12WiFiEspClass6statusEv>:
    4688:	0e c6       	rjmp	.+3100   	; 0x52a6 <_ZN6EspDrv19getConnectionStatusEv>

0000468a <_ZN12WiFiEspClass13getFreeSocketEv>:
}

uint8_t WiFiEspClass::getFreeSocket()
{
    468a:	e7 e2       	ldi	r30, 0x27	; 39
    468c:	f2 e0       	ldi	r31, 0x02	; 2
  // ESP Module assigns socket numbers in ascending order, so we will assign them in descending order
    for (int i = MAX_SOCK_NUM - 1; i >= 0; i--)
    468e:	83 e0       	ldi	r24, 0x03	; 3
    4690:	90 e0       	ldi	r25, 0x00	; 0
	{
      if (_state[i] == NA_STATE)
    4692:	32 91       	ld	r19, -Z
    4694:	22 91       	ld	r18, -Z
    4696:	2f 3f       	cpi	r18, 0xFF	; 255
    4698:	3f 4f       	sbci	r19, 0xFF	; 255
    469a:	19 f0       	breq	.+6      	; 0x46a2 <_ZN12WiFiEspClass13getFreeSocketEv+0x18>
}

uint8_t WiFiEspClass::getFreeSocket()
{
  // ESP Module assigns socket numbers in ascending order, so we will assign them in descending order
    for (int i = MAX_SOCK_NUM - 1; i >= 0; i--)
    469c:	01 97       	sbiw	r24, 0x01	; 1
    469e:	c8 f7       	brcc	.-14     	; 0x4692 <_ZN12WiFiEspClass13getFreeSocketEv+0x8>
      if (_state[i] == NA_STATE)
      {
          return i;
      }
    }
    return SOCK_NOT_AVAIL;
    46a0:	8f ef       	ldi	r24, 0xFF	; 255
}
    46a2:	08 95       	ret

000046a4 <_ZN12WiFiEspClass14allocateSocketEh>:

void WiFiEspClass::allocateSocket(uint8_t sock)
{
  _state[sock] = sock;
    46a4:	90 e0       	ldi	r25, 0x00	; 0
    46a6:	fc 01       	movw	r30, r24
    46a8:	ee 0f       	add	r30, r30
    46aa:	ff 1f       	adc	r31, r31
    46ac:	e1 5e       	subi	r30, 0xE1	; 225
    46ae:	fd 4f       	sbci	r31, 0xFD	; 253
    46b0:	91 83       	std	Z+1, r25	; 0x01
    46b2:	80 83       	st	Z, r24
    46b4:	08 95       	ret

000046b6 <_ZN12WiFiEspClass13releaseSocketEh>:
}

void WiFiEspClass::releaseSocket(uint8_t sock)
{
  _state[sock] = NA_STATE;
    46b6:	e8 2f       	mov	r30, r24
    46b8:	f0 e0       	ldi	r31, 0x00	; 0
    46ba:	ee 0f       	add	r30, r30
    46bc:	ff 1f       	adc	r31, r31
    46be:	e1 5e       	subi	r30, 0xE1	; 225
    46c0:	fd 4f       	sbci	r31, 0xFD	; 253
    46c2:	8f ef       	ldi	r24, 0xFF	; 255
    46c4:	9f ef       	ldi	r25, 0xFF	; 255
    46c6:	91 83       	std	Z+1, r25	; 0x01
    46c8:	80 83       	st	Z, r24
    46ca:	08 95       	ret

000046cc <_GLOBAL__sub_I__ZN12WiFiEspClass6_stateE>:
}


WiFiEspClass WiFi;
    46cc:	0f 93       	push	r16
    46ce:	00 e0       	ldi	r16, 0x00	; 0
    46d0:	20 e0       	ldi	r18, 0x00	; 0
    46d2:	40 e0       	ldi	r20, 0x00	; 0
    46d4:	60 e0       	ldi	r22, 0x00	; 0
    46d6:	88 e6       	ldi	r24, 0x68	; 104
    46d8:	96 e0       	ldi	r25, 0x06	; 6
    46da:	0e 94 ba 12 	call	0x2574	; 0x2574 <_ZN9IPAddressC1Ehhhh>
    46de:	0f 91       	pop	r16
    46e0:	08 95       	ret

000046e2 <_ZN13WiFiEspClient5writeEh>:

// if we do override this, the standard println will call the print
// method twice
size_t WiFiEspClient::println(const __FlashStringHelper *ifsh)
{
	printFSH(ifsh, true);
    46e2:	cf 93       	push	r28
    46e4:	df 93       	push	r29
    46e6:	1f 92       	push	r1
    46e8:	cd b7       	in	r28, 0x3d	; 61
    46ea:	de b7       	in	r29, 0x3e	; 62
    46ec:	69 83       	std	Y+1, r22	; 0x01
    46ee:	dc 01       	movw	r26, r24
    46f0:	ed 91       	ld	r30, X+
    46f2:	fc 91       	ld	r31, X
    46f4:	02 80       	ldd	r0, Z+2	; 0x02
    46f6:	f3 81       	ldd	r31, Z+3	; 0x03
    46f8:	e0 2d       	mov	r30, r0
    46fa:	41 e0       	ldi	r20, 0x01	; 1
    46fc:	50 e0       	ldi	r21, 0x00	; 0
    46fe:	be 01       	movw	r22, r28
    4700:	6f 5f       	subi	r22, 0xFF	; 255
    4702:	7f 4f       	sbci	r23, 0xFF	; 255
    4704:	19 95       	eicall
    4706:	0f 90       	pop	r0
    4708:	df 91       	pop	r29
    470a:	cf 91       	pop	r28
    470c:	08 95       	ret

0000470e <_ZN13WiFiEspClient5flushEv>:
    470e:	cf 93       	push	r28
    4710:	df 93       	push	r29
    4712:	ec 01       	movw	r28, r24
    4714:	e8 81       	ld	r30, Y
    4716:	f9 81       	ldd	r31, Y+1	; 0x01
    4718:	00 84       	ldd	r0, Z+8	; 0x08
    471a:	f1 85       	ldd	r31, Z+9	; 0x09
    471c:	e0 2d       	mov	r30, r0
    471e:	ce 01       	movw	r24, r28
    4720:	19 95       	eicall
    4722:	89 2b       	or	r24, r25
    4724:	41 f0       	breq	.+16     	; 0x4736 <_ZN13WiFiEspClient5flushEv+0x28>
    4726:	e8 81       	ld	r30, Y
    4728:	f9 81       	ldd	r31, Y+1	; 0x01
    472a:	02 84       	ldd	r0, Z+10	; 0x0a
    472c:	f3 85       	ldd	r31, Z+11	; 0x0b
    472e:	e0 2d       	mov	r30, r0
    4730:	ce 01       	movw	r24, r28
    4732:	19 95       	eicall
    4734:	ef cf       	rjmp	.-34     	; 0x4714 <_ZN13WiFiEspClient5flushEv+0x6>
    4736:	df 91       	pop	r29
    4738:	cf 91       	pop	r28
    473a:	08 95       	ret

0000473c <_ZN13WiFiEspClientcvbEv>:
    473c:	21 e0       	ldi	r18, 0x01	; 1
    473e:	fc 01       	movw	r30, r24
    4740:	84 85       	ldd	r24, Z+12	; 0x0c
    4742:	8f 3f       	cpi	r24, 0xFF	; 255
    4744:	09 f4       	brne	.+2      	; 0x4748 <_ZN13WiFiEspClientcvbEv+0xc>
    4746:	20 e0       	ldi	r18, 0x00	; 0
    4748:	82 2f       	mov	r24, r18
    474a:	08 95       	ret

0000474c <_ZN13WiFiEspClient9availableEv>:
    474c:	fc 01       	movw	r30, r24
    474e:	84 85       	ldd	r24, Z+12	; 0x0c
    4750:	8f 3f       	cpi	r24, 0xFF	; 255
    4752:	19 f0       	breq	.+6      	; 0x475a <_ZN13WiFiEspClient9availableEv+0xe>
    4754:	cd d1       	rcall	.+922    	; 0x4af0 <_ZN6EspDrv9availDataEh>
    4756:	97 ff       	sbrs	r25, 7
    4758:	02 c0       	rjmp	.+4      	; 0x475e <_ZN13WiFiEspClient9availableEv+0x12>
    475a:	80 e0       	ldi	r24, 0x00	; 0
    475c:	90 e0       	ldi	r25, 0x00	; 0
    475e:	08 95       	ret

00004760 <_ZN13WiFiEspClient4readEv>:
    4760:	0f 93       	push	r16
    4762:	1f 93       	push	r17
    4764:	cf 93       	push	r28
    4766:	df 93       	push	r29
    4768:	1f 92       	push	r1
    476a:	1f 92       	push	r1
    476c:	cd b7       	in	r28, 0x3d	; 61
    476e:	de b7       	in	r29, 0x3e	; 62
    4770:	8c 01       	movw	r16, r24
    4772:	dc 01       	movw	r26, r24
    4774:	ed 91       	ld	r30, X+
    4776:	fc 91       	ld	r31, X
    4778:	00 84       	ldd	r0, Z+8	; 0x08
    477a:	f1 85       	ldd	r31, Z+9	; 0x09
    477c:	e0 2d       	mov	r30, r0
    477e:	19 95       	eicall
    4780:	89 2b       	or	r24, r25
    4782:	c1 f0       	breq	.+48     	; 0x47b4 <_ZN13WiFiEspClient4readEv+0x54>
    4784:	19 82       	std	Y+1, r1	; 0x01
    4786:	9e 01       	movw	r18, r28
    4788:	2f 5f       	subi	r18, 0xFF	; 255
    478a:	3f 4f       	sbci	r19, 0xFF	; 255
    478c:	40 e0       	ldi	r20, 0x00	; 0
    478e:	be 01       	movw	r22, r28
    4790:	6e 5f       	subi	r22, 0xFE	; 254
    4792:	7f 4f       	sbci	r23, 0xFF	; 255
    4794:	f8 01       	movw	r30, r16
    4796:	84 85       	ldd	r24, Z+12	; 0x0c
    4798:	26 d3       	rcall	.+1612   	; 0x4de6 <_ZN6EspDrv7getDataEhPhbPb>
    479a:	89 81       	ldd	r24, Y+1	; 0x01
    479c:	88 23       	and	r24, r24
    479e:	39 f0       	breq	.+14     	; 0x47ae <_ZN13WiFiEspClient4readEv+0x4e>
    47a0:	d8 01       	movw	r26, r16
    47a2:	1c 96       	adiw	r26, 0x0c	; 12
    47a4:	8c 91       	ld	r24, X
    47a6:	87 df       	rcall	.-242    	; 0x46b6 <_ZN12WiFiEspClass13releaseSocketEh>
    47a8:	8f ef       	ldi	r24, 0xFF	; 255
    47aa:	f8 01       	movw	r30, r16
    47ac:	84 87       	std	Z+12, r24	; 0x0c
    47ae:	8a 81       	ldd	r24, Y+2	; 0x02
    47b0:	90 e0       	ldi	r25, 0x00	; 0
    47b2:	02 c0       	rjmp	.+4      	; 0x47b8 <_ZN13WiFiEspClient4readEv+0x58>
    47b4:	8f ef       	ldi	r24, 0xFF	; 255
    47b6:	9f ef       	ldi	r25, 0xFF	; 255
    47b8:	0f 90       	pop	r0
    47ba:	0f 90       	pop	r0
    47bc:	df 91       	pop	r29
    47be:	cf 91       	pop	r28
    47c0:	1f 91       	pop	r17
    47c2:	0f 91       	pop	r16
    47c4:	08 95       	ret

000047c6 <_ZN13WiFiEspClient4peekEv>:
    47c6:	0f 93       	push	r16
    47c8:	1f 93       	push	r17
    47ca:	cf 93       	push	r28
    47cc:	df 93       	push	r29
    47ce:	1f 92       	push	r1
    47d0:	1f 92       	push	r1
    47d2:	cd b7       	in	r28, 0x3d	; 61
    47d4:	de b7       	in	r29, 0x3e	; 62
    47d6:	8c 01       	movw	r16, r24
    47d8:	dc 01       	movw	r26, r24
    47da:	ed 91       	ld	r30, X+
    47dc:	fc 91       	ld	r31, X
    47de:	00 84       	ldd	r0, Z+8	; 0x08
    47e0:	f1 85       	ldd	r31, Z+9	; 0x09
    47e2:	e0 2d       	mov	r30, r0
    47e4:	19 95       	eicall
    47e6:	89 2b       	or	r24, r25
    47e8:	c1 f0       	breq	.+48     	; 0x481a <_ZN13WiFiEspClient4peekEv+0x54>
    47ea:	19 82       	std	Y+1, r1	; 0x01
    47ec:	9e 01       	movw	r18, r28
    47ee:	2f 5f       	subi	r18, 0xFF	; 255
    47f0:	3f 4f       	sbci	r19, 0xFF	; 255
    47f2:	41 e0       	ldi	r20, 0x01	; 1
    47f4:	be 01       	movw	r22, r28
    47f6:	6e 5f       	subi	r22, 0xFE	; 254
    47f8:	7f 4f       	sbci	r23, 0xFF	; 255
    47fa:	f8 01       	movw	r30, r16
    47fc:	84 85       	ldd	r24, Z+12	; 0x0c
    47fe:	f3 d2       	rcall	.+1510   	; 0x4de6 <_ZN6EspDrv7getDataEhPhbPb>
    4800:	89 81       	ldd	r24, Y+1	; 0x01
    4802:	88 23       	and	r24, r24
    4804:	39 f0       	breq	.+14     	; 0x4814 <_ZN13WiFiEspClient4peekEv+0x4e>
    4806:	d8 01       	movw	r26, r16
    4808:	1c 96       	adiw	r26, 0x0c	; 12
    480a:	8c 91       	ld	r24, X
    480c:	54 df       	rcall	.-344    	; 0x46b6 <_ZN12WiFiEspClass13releaseSocketEh>
    480e:	8f ef       	ldi	r24, 0xFF	; 255
    4810:	f8 01       	movw	r30, r16
    4812:	84 87       	std	Z+12, r24	; 0x0c
    4814:	8a 81       	ldd	r24, Y+2	; 0x02
    4816:	90 e0       	ldi	r25, 0x00	; 0
    4818:	02 c0       	rjmp	.+4      	; 0x481e <_ZN13WiFiEspClient4peekEv+0x58>
    481a:	8f ef       	ldi	r24, 0xFF	; 255
    481c:	9f ef       	ldi	r25, 0xFF	; 255
    481e:	0f 90       	pop	r0
    4820:	0f 90       	pop	r0
    4822:	df 91       	pop	r29
    4824:	cf 91       	pop	r28
    4826:	1f 91       	pop	r17
    4828:	0f 91       	pop	r16
    482a:	08 95       	ret

0000482c <_ZN13WiFiEspClient4readEPhj>:
    482c:	ef 92       	push	r14
    482e:	ff 92       	push	r15
    4830:	0f 93       	push	r16
    4832:	1f 93       	push	r17
    4834:	cf 93       	push	r28
    4836:	df 93       	push	r29
    4838:	ec 01       	movw	r28, r24
    483a:	8b 01       	movw	r16, r22
    483c:	7a 01       	movw	r14, r20
    483e:	e8 81       	ld	r30, Y
    4840:	f9 81       	ldd	r31, Y+1	; 0x01
    4842:	00 84       	ldd	r0, Z+8	; 0x08
    4844:	f1 85       	ldd	r31, Z+9	; 0x09
    4846:	e0 2d       	mov	r30, r0
    4848:	19 95       	eicall
    484a:	89 2b       	or	r24, r25
    484c:	51 f0       	breq	.+20     	; 0x4862 <_ZN13WiFiEspClient4readEPhj+0x36>
    484e:	a7 01       	movw	r20, r14
    4850:	b8 01       	movw	r22, r16
    4852:	8c 85       	ldd	r24, Y+12	; 0x0c
    4854:	df 91       	pop	r29
    4856:	cf 91       	pop	r28
    4858:	1f 91       	pop	r17
    485a:	0f 91       	pop	r16
    485c:	ff 90       	pop	r15
    485e:	ef 90       	pop	r14
    4860:	5d c7       	rjmp	.+3770   	; 0x571c <_ZN6EspDrv10getDataBufEhPhj>
    4862:	8f ef       	ldi	r24, 0xFF	; 255
    4864:	9f ef       	ldi	r25, 0xFF	; 255
    4866:	df 91       	pop	r29
    4868:	cf 91       	pop	r28
    486a:	1f 91       	pop	r17
    486c:	0f 91       	pop	r16
    486e:	ff 90       	pop	r15
    4870:	ef 90       	pop	r14
    4872:	08 95       	ret

00004874 <_ZN13WiFiEspClient5writeEPKhj>:
    4874:	0f 93       	push	r16
    4876:	1f 93       	push	r17
    4878:	cf 93       	push	r28
    487a:	df 93       	push	r29
    487c:	ec 01       	movw	r28, r24
    487e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4880:	84 30       	cpi	r24, 0x04	; 4
    4882:	18 f4       	brcc	.+6      	; 0x488a <_ZN13WiFiEspClient5writeEPKhj+0x16>
    4884:	41 15       	cp	r20, r1
    4886:	51 05       	cpc	r21, r1
    4888:	29 f4       	brne	.+10     	; 0x4894 <_ZN13WiFiEspClient5writeEPKhj+0x20>
    488a:	81 e0       	ldi	r24, 0x01	; 1
    488c:	90 e0       	ldi	r25, 0x00	; 0
    488e:	9b 83       	std	Y+3, r25	; 0x03
    4890:	8a 83       	std	Y+2, r24	; 0x02
    4892:	2e c0       	rjmp	.+92     	; 0x48f0 <_ZN13WiFiEspClient5writeEPKhj+0x7c>
    4894:	8a 01       	movw	r16, r20
    4896:	82 d3       	rcall	.+1796   	; 0x4f9c <_ZN6EspDrv8sendDataEhPKhj>
    4898:	81 11       	cpse	r24, r1
    489a:	2d c0       	rjmp	.+90     	; 0x48f6 <_ZN13WiFiEspClient5writeEPKhj+0x82>
    489c:	81 e0       	ldi	r24, 0x01	; 1
    489e:	90 e0       	ldi	r25, 0x00	; 0
    48a0:	9b 83       	std	Y+3, r25	; 0x03
    48a2:	8a 83       	std	Y+2, r24	; 0x02
    48a4:	6d e7       	ldi	r22, 0x7D	; 125
    48a6:	74 e0       	ldi	r23, 0x04	; 4
    48a8:	8d e1       	ldi	r24, 0x1D	; 29
    48aa:	95 e0       	ldi	r25, 0x05	; 5
    48ac:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    48b0:	6c ee       	ldi	r22, 0xEC	; 236
    48b2:	75 e0       	ldi	r23, 0x05	; 5
    48b4:	8d e1       	ldi	r24, 0x1D	; 29
    48b6:	95 e0       	ldi	r25, 0x05	; 5
    48b8:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    48bc:	61 ee       	ldi	r22, 0xE1	; 225
    48be:	72 e0       	ldi	r23, 0x02	; 2
    48c0:	8d e1       	ldi	r24, 0x1D	; 29
    48c2:	95 e0       	ldi	r25, 0x05	; 5
    48c4:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    48c8:	4a e0       	ldi	r20, 0x0A	; 10
    48ca:	50 e0       	ldi	r21, 0x00	; 0
    48cc:	6c 85       	ldd	r22, Y+12	; 0x0c
    48ce:	8d e1       	ldi	r24, 0x1D	; 29
    48d0:	95 e0       	ldi	r25, 0x05	; 5
    48d2:	0e 94 db 13 	call	0x27b6	; 0x27b6 <_ZN5Print7printlnEhi>
    48d6:	60 ea       	ldi	r22, 0xA0	; 160
    48d8:	7f e0       	ldi	r23, 0x0F	; 15
    48da:	80 e0       	ldi	r24, 0x00	; 0
    48dc:	90 e0       	ldi	r25, 0x00	; 0
    48de:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    48e2:	e8 81       	ld	r30, Y
    48e4:	f9 81       	ldd	r31, Y+1	; 0x01
    48e6:	04 88       	ldd	r0, Z+20	; 0x14
    48e8:	f5 89       	ldd	r31, Z+21	; 0x15
    48ea:	e0 2d       	mov	r30, r0
    48ec:	ce 01       	movw	r24, r28
    48ee:	19 95       	eicall
    48f0:	80 e0       	ldi	r24, 0x00	; 0
    48f2:	90 e0       	ldi	r25, 0x00	; 0
    48f4:	01 c0       	rjmp	.+2      	; 0x48f8 <_ZN13WiFiEspClient5writeEPKhj+0x84>
    48f6:	c8 01       	movw	r24, r16
    48f8:	df 91       	pop	r29
    48fa:	cf 91       	pop	r28
    48fc:	1f 91       	pop	r17
    48fe:	0f 91       	pop	r16
    4900:	08 95       	ret

00004902 <_ZN13WiFiEspClient4stopEv>:
    4902:	cf 93       	push	r28
    4904:	df 93       	push	r29
    4906:	fc 01       	movw	r30, r24
    4908:	24 85       	ldd	r18, Z+12	; 0x0c
    490a:	2f 3f       	cpi	r18, 0xFF	; 255
    490c:	01 f1       	breq	.+64     	; 0x494e <_ZN13WiFiEspClient4stopEv+0x4c>
    490e:	ec 01       	movw	r28, r24
    4910:	6d e7       	ldi	r22, 0x7D	; 125
    4912:	74 e0       	ldi	r23, 0x04	; 4
    4914:	8d e1       	ldi	r24, 0x1D	; 29
    4916:	95 e0       	ldi	r25, 0x05	; 5
    4918:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    491c:	6d ed       	ldi	r22, 0xDD	; 221
    491e:	75 e0       	ldi	r23, 0x05	; 5
    4920:	8d e1       	ldi	r24, 0x1D	; 29
    4922:	95 e0       	ldi	r25, 0x05	; 5
    4924:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    4928:	61 ee       	ldi	r22, 0xE1	; 225
    492a:	72 e0       	ldi	r23, 0x02	; 2
    492c:	8d e1       	ldi	r24, 0x1D	; 29
    492e:	95 e0       	ldi	r25, 0x05	; 5
    4930:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    4934:	4a e0       	ldi	r20, 0x0A	; 10
    4936:	50 e0       	ldi	r21, 0x00	; 0
    4938:	6c 85       	ldd	r22, Y+12	; 0x0c
    493a:	8d e1       	ldi	r24, 0x1D	; 29
    493c:	95 e0       	ldi	r25, 0x05	; 5
    493e:	0e 94 db 13 	call	0x27b6	; 0x27b6 <_ZN5Print7printlnEhi>
    4942:	8c 85       	ldd	r24, Y+12	; 0x0c
    4944:	58 d6       	rcall	.+3248   	; 0x55f6 <_ZN6EspDrv10stopClientEh>
    4946:	8c 85       	ldd	r24, Y+12	; 0x0c
    4948:	b6 de       	rcall	.-660    	; 0x46b6 <_ZN12WiFiEspClass13releaseSocketEh>
    494a:	8f ef       	ldi	r24, 0xFF	; 255
    494c:	8c 87       	std	Y+12, r24	; 0x0c
    494e:	df 91       	pop	r29
    4950:	cf 91       	pop	r28
    4952:	08 95       	ret

00004954 <_ZN13WiFiEspClientC1Ev>:
    4954:	fc 01       	movw	r30, r24
    4956:	13 82       	std	Z+3, r1	; 0x03
    4958:	12 82       	std	Z+2, r1	; 0x02
    495a:	88 ee       	ldi	r24, 0xE8	; 232
    495c:	93 e0       	ldi	r25, 0x03	; 3
    495e:	a0 e0       	ldi	r26, 0x00	; 0
    4960:	b0 e0       	ldi	r27, 0x00	; 0
    4962:	84 83       	std	Z+4, r24	; 0x04
    4964:	95 83       	std	Z+5, r25	; 0x05
    4966:	a6 83       	std	Z+6, r26	; 0x06
    4968:	b7 83       	std	Z+7, r27	; 0x07
    496a:	8c e8       	ldi	r24, 0x8C	; 140
    496c:	94 e0       	ldi	r25, 0x04	; 4
    496e:	91 83       	std	Z+1, r25	; 0x01
    4970:	80 83       	st	Z, r24
    4972:	8f ef       	ldi	r24, 0xFF	; 255
    4974:	84 87       	std	Z+12, r24	; 0x0c
    4976:	08 95       	ret

00004978 <_ZN13WiFiEspClient7connectEPKcjh>:
    4978:	df 92       	push	r13
    497a:	ef 92       	push	r14
    497c:	ff 92       	push	r15
    497e:	0f 93       	push	r16
    4980:	1f 93       	push	r17
    4982:	cf 93       	push	r28
    4984:	df 93       	push	r29
    4986:	ec 01       	movw	r28, r24
    4988:	8b 01       	movw	r16, r22
    498a:	7a 01       	movw	r14, r20
    498c:	d2 2e       	mov	r13, r18
    498e:	6d e7       	ldi	r22, 0x7D	; 125
    4990:	74 e0       	ldi	r23, 0x04	; 4
    4992:	8d e1       	ldi	r24, 0x1D	; 29
    4994:	95 e0       	ldi	r25, 0x05	; 5
    4996:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    499a:	6a e1       	ldi	r22, 0x1A	; 26
    499c:	76 e0       	ldi	r23, 0x06	; 6
    499e:	8d e1       	ldi	r24, 0x1D	; 29
    49a0:	95 e0       	ldi	r25, 0x05	; 5
    49a2:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    49a6:	61 ee       	ldi	r22, 0xE1	; 225
    49a8:	72 e0       	ldi	r23, 0x02	; 2
    49aa:	8d e1       	ldi	r24, 0x1D	; 29
    49ac:	95 e0       	ldi	r25, 0x05	; 5
    49ae:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    49b2:	b8 01       	movw	r22, r16
    49b4:	8d e1       	ldi	r24, 0x1D	; 29
    49b6:	95 e0       	ldi	r25, 0x05	; 5
    49b8:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    49bc:	66 de       	rcall	.-820    	; 0x468a <_ZN12WiFiEspClass13getFreeSocketEv>
    49be:	8c 87       	std	Y+12, r24	; 0x0c
    49c0:	8f 3f       	cpi	r24, 0xFF	; 255
    49c2:	61 f0       	breq	.+24     	; 0x49dc <_ZN13WiFiEspClient7connectEPKcjh+0x64>
    49c4:	2d 2d       	mov	r18, r13
    49c6:	48 2f       	mov	r20, r24
    49c8:	b7 01       	movw	r22, r14
    49ca:	c8 01       	movw	r24, r16
    49cc:	ab d5       	rcall	.+2902   	; 0x5524 <_ZN6EspDrv11startClientEPKcjhh>
    49ce:	88 23       	and	r24, r24
    49d0:	89 f0       	breq	.+34     	; 0x49f4 <_ZN13WiFiEspClient7connectEPKcjh+0x7c>
    49d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    49d4:	67 de       	rcall	.-818    	; 0x46a4 <_ZN12WiFiEspClass14allocateSocketEh>
    49d6:	81 e0       	ldi	r24, 0x01	; 1
    49d8:	90 e0       	ldi	r25, 0x00	; 0
    49da:	0e c0       	rjmp	.+28     	; 0x49f8 <_ZN13WiFiEspClient7connectEPKcjh+0x80>
    49dc:	6d e7       	ldi	r22, 0x7D	; 125
    49de:	74 e0       	ldi	r23, 0x04	; 4
    49e0:	8d e1       	ldi	r24, 0x1D	; 29
    49e2:	95 e0       	ldi	r25, 0x05	; 5
    49e4:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    49e8:	66 e0       	ldi	r22, 0x06	; 6
    49ea:	76 e0       	ldi	r23, 0x06	; 6
    49ec:	8d e1       	ldi	r24, 0x1D	; 29
    49ee:	95 e0       	ldi	r25, 0x05	; 5
    49f0:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    49f4:	80 e0       	ldi	r24, 0x00	; 0
    49f6:	90 e0       	ldi	r25, 0x00	; 0
    49f8:	df 91       	pop	r29
    49fa:	cf 91       	pop	r28
    49fc:	1f 91       	pop	r17
    49fe:	0f 91       	pop	r16
    4a00:	ff 90       	pop	r15
    4a02:	ef 90       	pop	r14
    4a04:	df 90       	pop	r13
    4a06:	08 95       	ret

00004a08 <_ZN13WiFiEspClient7connectEPKcj>:
    4a08:	20 e0       	ldi	r18, 0x00	; 0
    4a0a:	b6 cf       	rjmp	.-148    	; 0x4978 <_ZN13WiFiEspClient7connectEPKcjh>

00004a0c <_ZN13WiFiEspClient7connectE9IPAddressj>:
    4a0c:	cf 92       	push	r12
    4a0e:	df 92       	push	r13
    4a10:	ef 92       	push	r14
    4a12:	ff 92       	push	r15
    4a14:	0f 93       	push	r16
    4a16:	1f 93       	push	r17
    4a18:	cf 93       	push	r28
    4a1a:	df 93       	push	r29
    4a1c:	cd b7       	in	r28, 0x3d	; 61
    4a1e:	de b7       	in	r29, 0x3e	; 62
    4a20:	60 97       	sbiw	r28, 0x10	; 16
    4a22:	0f b6       	in	r0, 0x3f	; 63
    4a24:	f8 94       	cli
    4a26:	de bf       	out	0x3e, r29	; 62
    4a28:	0f be       	out	0x3f, r0	; 63
    4a2a:	cd bf       	out	0x3d, r28	; 61
    4a2c:	7c 01       	movw	r14, r24
    4a2e:	fb 01       	movw	r30, r22
    4a30:	6a 01       	movw	r12, r20
    4a32:	85 81       	ldd	r24, Z+5	; 0x05
    4a34:	1f 92       	push	r1
    4a36:	8f 93       	push	r24
    4a38:	84 81       	ldd	r24, Z+4	; 0x04
    4a3a:	1f 92       	push	r1
    4a3c:	8f 93       	push	r24
    4a3e:	83 81       	ldd	r24, Z+3	; 0x03
    4a40:	1f 92       	push	r1
    4a42:	8f 93       	push	r24
    4a44:	82 81       	ldd	r24, Z+2	; 0x02
    4a46:	1f 92       	push	r1
    4a48:	8f 93       	push	r24
    4a4a:	88 e2       	ldi	r24, 0x28	; 40
    4a4c:	96 e0       	ldi	r25, 0x06	; 6
    4a4e:	9f 93       	push	r25
    4a50:	8f 93       	push	r24
    4a52:	8e 01       	movw	r16, r28
    4a54:	0f 5f       	subi	r16, 0xFF	; 255
    4a56:	1f 4f       	sbci	r17, 0xFF	; 255
    4a58:	1f 93       	push	r17
    4a5a:	0f 93       	push	r16
    4a5c:	0e 94 11 32 	call	0x6422	; 0x6422 <sprintf_P>
    4a60:	20 e0       	ldi	r18, 0x00	; 0
    4a62:	a6 01       	movw	r20, r12
    4a64:	b8 01       	movw	r22, r16
    4a66:	c7 01       	movw	r24, r14
    4a68:	87 df       	rcall	.-242    	; 0x4978 <_ZN13WiFiEspClient7connectEPKcjh>
    4a6a:	0f b6       	in	r0, 0x3f	; 63
    4a6c:	f8 94       	cli
    4a6e:	de bf       	out	0x3e, r29	; 62
    4a70:	0f be       	out	0x3f, r0	; 63
    4a72:	cd bf       	out	0x3d, r28	; 61
    4a74:	60 96       	adiw	r28, 0x10	; 16
    4a76:	0f b6       	in	r0, 0x3f	; 63
    4a78:	f8 94       	cli
    4a7a:	de bf       	out	0x3e, r29	; 62
    4a7c:	0f be       	out	0x3f, r0	; 63
    4a7e:	cd bf       	out	0x3d, r28	; 61
    4a80:	df 91       	pop	r29
    4a82:	cf 91       	pop	r28
    4a84:	1f 91       	pop	r17
    4a86:	0f 91       	pop	r16
    4a88:	ff 90       	pop	r15
    4a8a:	ef 90       	pop	r14
    4a8c:	df 90       	pop	r13
    4a8e:	cf 90       	pop	r12
    4a90:	08 95       	ret

00004a92 <_ZN13WiFiEspClient6statusEv>:
    4a92:	1f 93       	push	r17
    4a94:	cf 93       	push	r28
    4a96:	df 93       	push	r29
    4a98:	ec 01       	movw	r28, r24
    4a9a:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a9c:	8f 3f       	cpi	r24, 0xFF	; 255
    4a9e:	79 f0       	breq	.+30     	; 0x4abe <_ZN13WiFiEspClient6statusEv+0x2c>
    4aa0:	27 d0       	rcall	.+78     	; 0x4af0 <_ZN6EspDrv9availDataEh>
    4aa2:	89 2b       	or	r24, r25
    4aa4:	11 f0       	breq	.+4      	; 0x4aaa <_ZN13WiFiEspClient6statusEv+0x18>
    4aa6:	14 e0       	ldi	r17, 0x04	; 4
    4aa8:	0b c0       	rjmp	.+22     	; 0x4ac0 <_ZN13WiFiEspClient6statusEv+0x2e>
    4aaa:	8c 85       	ldd	r24, Y+12	; 0x0c
    4aac:	68 d3       	rcall	.+1744   	; 0x517e <_ZN6EspDrv14getClientStateEh>
    4aae:	18 2f       	mov	r17, r24
    4ab0:	81 11       	cpse	r24, r1
    4ab2:	f9 cf       	rjmp	.-14     	; 0x4aa6 <_ZN13WiFiEspClient6statusEv+0x14>
    4ab4:	8c 85       	ldd	r24, Y+12	; 0x0c
    4ab6:	ff dd       	rcall	.-1026   	; 0x46b6 <_ZN12WiFiEspClass13releaseSocketEh>
    4ab8:	8f ef       	ldi	r24, 0xFF	; 255
    4aba:	8c 87       	std	Y+12, r24	; 0x0c
    4abc:	01 c0       	rjmp	.+2      	; 0x4ac0 <_ZN13WiFiEspClient6statusEv+0x2e>
    4abe:	10 e0       	ldi	r17, 0x00	; 0
    4ac0:	81 2f       	mov	r24, r17
    4ac2:	df 91       	pop	r29
    4ac4:	cf 91       	pop	r28
    4ac6:	1f 91       	pop	r17
    4ac8:	08 95       	ret

00004aca <_ZN13WiFiEspClient9connectedEv>:
    4aca:	e3 df       	rcall	.-58     	; 0x4a92 <_ZN13WiFiEspClient6statusEv>
    4acc:	91 e0       	ldi	r25, 0x01	; 1
    4ace:	84 30       	cpi	r24, 0x04	; 4
    4ad0:	09 f0       	breq	.+2      	; 0x4ad4 <_ZN13WiFiEspClient9connectedEv+0xa>
    4ad2:	90 e0       	ldi	r25, 0x00	; 0
    4ad4:	89 2f       	mov	r24, r25
    4ad6:	08 95       	ret

00004ad8 <_GLOBAL__sub_I__ZN13WiFiEspClientC2Ev>:
		stop();
		return 0;
	}

	return size;
}
    4ad8:	0f 93       	push	r16
    4ada:	00 e0       	ldi	r16, 0x00	; 0
    4adc:	20 e0       	ldi	r18, 0x00	; 0
    4ade:	40 e0       	ldi	r20, 0x00	; 0
    4ae0:	60 e0       	ldi	r22, 0x00	; 0
    4ae2:	8e e6       	ldi	r24, 0x6E	; 110
    4ae4:	96 e0       	ldi	r25, 0x06	; 6
    4ae6:	0e 94 ba 12 	call	0x2574	; 0x2574 <_ZN9IPAddressC1Ehhhh>
    4aea:	0f 91       	pop	r16
    4aec:	08 95       	ret

00004aee <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    4aee:	08 95       	ret

00004af0 <_ZN6EspDrv9availDataEh>:
	LOGDEBUG1(F("> startServer"), port);

	int ret = sendCmd(F("AT+CIPSERVER=%d,%d"), 1000, sock, port);

	return ret==TAG_OK;
}
    4af0:	cf 93       	push	r28
    4af2:	40 91 7b 06 	lds	r20, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4af6:	50 91 7c 06 	lds	r21, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4afa:	60 91 7d 06 	lds	r22, 0x067D	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4afe:	70 91 7e 06 	lds	r23, 0x067E	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4b02:	14 16       	cp	r1, r20
    4b04:	15 06       	cpc	r1, r21
    4b06:	16 06       	cpc	r1, r22
    4b08:	17 06       	cpc	r1, r23
    4b0a:	44 f4       	brge	.+16     	; 0x4b1c <_ZN6EspDrv9availDataEh+0x2c>
    4b0c:	90 91 7a 06 	lds	r25, 0x067A	; 0x80067a <_ZN6EspDrv7_connIdE>
    4b10:	98 17       	cp	r25, r24
    4b12:	11 f0       	breq	.+4      	; 0x4b18 <_ZN6EspDrv9availDataEh+0x28>
    4b14:	91 11       	cpse	r25, r1
    4b16:	02 c0       	rjmp	.+4      	; 0x4b1c <_ZN6EspDrv9availDataEh+0x2c>
    4b18:	ca 01       	movw	r24, r20
    4b1a:	c4 c0       	rjmp	.+392    	; 0x4ca4 <_ZN6EspDrv9availDataEh+0x1b4>
    4b1c:	c8 2f       	mov	r28, r24
    4b1e:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4b22:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4b26:	dc 01       	movw	r26, r24
    4b28:	ed 91       	ld	r30, X+
    4b2a:	fc 91       	ld	r31, X
    4b2c:	00 84       	ldd	r0, Z+8	; 0x08
    4b2e:	f1 85       	ldd	r31, Z+9	; 0x09
    4b30:	e0 2d       	mov	r30, r0
    4b32:	19 95       	eicall
    4b34:	89 2b       	or	r24, r25
    4b36:	19 f4       	brne	.+6      	; 0x4b3e <_ZN6EspDrv9availDataEh+0x4e>
    4b38:	80 e0       	ldi	r24, 0x00	; 0
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	b3 c0       	rjmp	.+358    	; 0x4ca4 <_ZN6EspDrv9availDataEh+0x1b4>
    4b3e:	66 ea       	ldi	r22, 0xA6	; 166
    4b40:	74 e0       	ldi	r23, 0x04	; 4
    4b42:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4b46:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4b4a:	0e 94 33 2e 	call	0x5c66	; 0x5c66 <_ZN6Stream4findEPc>
    4b4e:	88 23       	and	r24, r24
    4b50:	99 f3       	breq	.-26     	; 0x4b38 <_ZN6EspDrv9availDataEh+0x48>
    4b52:	41 e0       	ldi	r20, 0x01	; 1
    4b54:	60 e0       	ldi	r22, 0x00	; 0
    4b56:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4b5a:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4b5e:	65 d7       	rcall	.+3786   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4b60:	60 93 7a 06 	sts	0x067A, r22	; 0x80067a <_ZN6EspDrv7_connIdE>
    4b64:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4b68:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4b6c:	dc 01       	movw	r26, r24
    4b6e:	ed 91       	ld	r30, X+
    4b70:	fc 91       	ld	r31, X
    4b72:	02 84       	ldd	r0, Z+10	; 0x0a
    4b74:	f3 85       	ldd	r31, Z+11	; 0x0b
    4b76:	e0 2d       	mov	r30, r0
    4b78:	19 95       	eicall
    4b7a:	41 e0       	ldi	r20, 0x01	; 1
    4b7c:	60 e0       	ldi	r22, 0x00	; 0
    4b7e:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4b82:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4b86:	51 d7       	rcall	.+3746   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4b88:	60 93 7b 06 	sts	0x067B, r22	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4b8c:	70 93 7c 06 	sts	0x067C, r23	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4b90:	80 93 7d 06 	sts	0x067D, r24	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4b94:	90 93 7e 06 	sts	0x067E, r25	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4b98:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4b9c:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4ba0:	dc 01       	movw	r26, r24
    4ba2:	ed 91       	ld	r30, X+
    4ba4:	fc 91       	ld	r31, X
    4ba6:	02 84       	ldd	r0, Z+10	; 0x0a
    4ba8:	f3 85       	ldd	r31, Z+11	; 0x0b
    4baa:	e0 2d       	mov	r30, r0
    4bac:	19 95       	eicall
    4bae:	41 e0       	ldi	r20, 0x01	; 1
    4bb0:	60 e0       	ldi	r22, 0x00	; 0
    4bb2:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4bb6:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4bba:	37 d7       	rcall	.+3694   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4bbc:	60 93 74 06 	sts	0x0674, r22	; 0x800674 <_ZN6EspDrv9_remoteIpE>
    4bc0:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4bc4:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4bc8:	dc 01       	movw	r26, r24
    4bca:	ed 91       	ld	r30, X+
    4bcc:	fc 91       	ld	r31, X
    4bce:	02 84       	ldd	r0, Z+10	; 0x0a
    4bd0:	f3 85       	ldd	r31, Z+11	; 0x0b
    4bd2:	e0 2d       	mov	r30, r0
    4bd4:	19 95       	eicall
    4bd6:	41 e0       	ldi	r20, 0x01	; 1
    4bd8:	60 e0       	ldi	r22, 0x00	; 0
    4bda:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4bde:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4be2:	23 d7       	rcall	.+3654   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4be4:	60 93 75 06 	sts	0x0675, r22	; 0x800675 <_ZN6EspDrv9_remoteIpE+0x1>
    4be8:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4bec:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4bf0:	dc 01       	movw	r26, r24
    4bf2:	ed 91       	ld	r30, X+
    4bf4:	fc 91       	ld	r31, X
    4bf6:	02 84       	ldd	r0, Z+10	; 0x0a
    4bf8:	f3 85       	ldd	r31, Z+11	; 0x0b
    4bfa:	e0 2d       	mov	r30, r0
    4bfc:	19 95       	eicall
    4bfe:	41 e0       	ldi	r20, 0x01	; 1
    4c00:	60 e0       	ldi	r22, 0x00	; 0
    4c02:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c06:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c0a:	0f d7       	rcall	.+3614   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4c0c:	60 93 76 06 	sts	0x0676, r22	; 0x800676 <_ZN6EspDrv9_remoteIpE+0x2>
    4c10:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c14:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c18:	dc 01       	movw	r26, r24
    4c1a:	ed 91       	ld	r30, X+
    4c1c:	fc 91       	ld	r31, X
    4c1e:	02 84       	ldd	r0, Z+10	; 0x0a
    4c20:	f3 85       	ldd	r31, Z+11	; 0x0b
    4c22:	e0 2d       	mov	r30, r0
    4c24:	19 95       	eicall
    4c26:	41 e0       	ldi	r20, 0x01	; 1
    4c28:	60 e0       	ldi	r22, 0x00	; 0
    4c2a:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c2e:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c32:	fb d6       	rcall	.+3574   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4c34:	60 93 77 06 	sts	0x0677, r22	; 0x800677 <_ZN6EspDrv9_remoteIpE+0x3>
    4c38:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c3c:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c40:	dc 01       	movw	r26, r24
    4c42:	ed 91       	ld	r30, X+
    4c44:	fc 91       	ld	r31, X
    4c46:	02 84       	ldd	r0, Z+10	; 0x0a
    4c48:	f3 85       	ldd	r31, Z+11	; 0x0b
    4c4a:	e0 2d       	mov	r30, r0
    4c4c:	19 95       	eicall
    4c4e:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c52:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c56:	dc 01       	movw	r26, r24
    4c58:	ed 91       	ld	r30, X+
    4c5a:	fc 91       	ld	r31, X
    4c5c:	02 84       	ldd	r0, Z+10	; 0x0a
    4c5e:	f3 85       	ldd	r31, Z+11	; 0x0b
    4c60:	e0 2d       	mov	r30, r0
    4c62:	19 95       	eicall
    4c64:	41 e0       	ldi	r20, 0x01	; 1
    4c66:	60 e0       	ldi	r22, 0x00	; 0
    4c68:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c6c:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c70:	dc d6       	rcall	.+3512   	; 0x5a2a <_ZN6Stream8parseIntE13LookaheadModec>
    4c72:	70 93 79 06 	sts	0x0679, r23	; 0x800679 <_ZN6EspDrv11_remotePortE+0x1>
    4c76:	60 93 78 06 	sts	0x0678, r22	; 0x800678 <_ZN6EspDrv11_remotePortE>
    4c7a:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4c7e:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4c82:	dc 01       	movw	r26, r24
    4c84:	ed 91       	ld	r30, X+
    4c86:	fc 91       	ld	r31, X
    4c88:	02 84       	ldd	r0, Z+10	; 0x0a
    4c8a:	f3 85       	ldd	r31, Z+11	; 0x0b
    4c8c:	e0 2d       	mov	r30, r0
    4c8e:	19 95       	eicall
    4c90:	80 91 7a 06 	lds	r24, 0x067A	; 0x80067a <_ZN6EspDrv7_connIdE>
    4c94:	c8 17       	cp	r28, r24
    4c96:	11 f0       	breq	.+4      	; 0x4c9c <_ZN6EspDrv9availDataEh+0x1ac>
    4c98:	c1 11       	cpse	r28, r1
    4c9a:	4e cf       	rjmp	.-356    	; 0x4b38 <_ZN6EspDrv9availDataEh+0x48>
    4c9c:	80 91 7b 06 	lds	r24, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4ca0:	90 91 7c 06 	lds	r25, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4ca4:	cf 91       	pop	r28
    4ca6:	08 95       	ret

00004ca8 <_ZN6EspDrv9readUntilEiPKcb>:
    4ca8:	3f 92       	push	r3
    4caa:	4f 92       	push	r4
    4cac:	5f 92       	push	r5
    4cae:	6f 92       	push	r6
    4cb0:	7f 92       	push	r7
    4cb2:	8f 92       	push	r8
    4cb4:	9f 92       	push	r9
    4cb6:	af 92       	push	r10
    4cb8:	bf 92       	push	r11
    4cba:	cf 92       	push	r12
    4cbc:	df 92       	push	r13
    4cbe:	ef 92       	push	r14
    4cc0:	ff 92       	push	r15
    4cc2:	0f 93       	push	r16
    4cc4:	1f 93       	push	r17
    4cc6:	cf 93       	push	r28
    4cc8:	df 93       	push	r29
    4cca:	6c 01       	movw	r12, r24
    4ccc:	2b 01       	movw	r4, r22
    4cce:	34 2e       	mov	r3, r20
    4cd0:	85 e8       	ldi	r24, 0x85	; 133
    4cd2:	96 e0       	ldi	r25, 0x06	; 6
    4cd4:	85 d5       	rcall	.+2826   	; 0x57e0 <_ZN10RingBuffer5resetEv>
    4cd6:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    4cda:	4b 01       	movw	r8, r22
    4cdc:	5c 01       	movw	r10, r24
    4cde:	66 24       	eor	r6, r6
    4ce0:	6a 94       	dec	r6
    4ce2:	76 2c       	mov	r7, r6
    4ce4:	0d 2c       	mov	r0, r13
    4ce6:	00 0c       	add	r0, r0
    4ce8:	ee 08       	sbc	r14, r14
    4cea:	ff 08       	sbc	r15, r15
    4cec:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    4cf0:	dc 01       	movw	r26, r24
    4cf2:	cb 01       	movw	r24, r22
    4cf4:	88 19       	sub	r24, r8
    4cf6:	99 09       	sbc	r25, r9
    4cf8:	aa 09       	sbc	r26, r10
    4cfa:	bb 09       	sbc	r27, r11
    4cfc:	8c 15       	cp	r24, r12
    4cfe:	9d 05       	cpc	r25, r13
    4d00:	ae 05       	cpc	r26, r14
    4d02:	bf 05       	cpc	r27, r15
    4d04:	08 f0       	brcs	.+2      	; 0x4d08 <_ZN6EspDrv9readUntilEiPKcb+0x60>
    4d06:	43 c0       	rjmp	.+134    	; 0x4d8e <_ZN6EspDrv9readUntilEiPKcb+0xe6>
    4d08:	8f ef       	ldi	r24, 0xFF	; 255
    4d0a:	68 16       	cp	r6, r24
    4d0c:	78 06       	cpc	r7, r24
    4d0e:	09 f0       	breq	.+2      	; 0x4d12 <_ZN6EspDrv9readUntilEiPKcb+0x6a>
    4d10:	3e c0       	rjmp	.+124    	; 0x4d8e <_ZN6EspDrv9readUntilEiPKcb+0xe6>
    4d12:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4d16:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4d1a:	dc 01       	movw	r26, r24
    4d1c:	ed 91       	ld	r30, X+
    4d1e:	fc 91       	ld	r31, X
    4d20:	00 84       	ldd	r0, Z+8	; 0x08
    4d22:	f1 85       	ldd	r31, Z+9	; 0x09
    4d24:	e0 2d       	mov	r30, r0
    4d26:	19 95       	eicall
    4d28:	89 2b       	or	r24, r25
    4d2a:	01 f3       	breq	.-64     	; 0x4cec <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4d2c:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4d30:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4d34:	dc 01       	movw	r26, r24
    4d36:	ed 91       	ld	r30, X+
    4d38:	fc 91       	ld	r31, X
    4d3a:	02 84       	ldd	r0, Z+10	; 0x0a
    4d3c:	f3 85       	ldd	r31, Z+11	; 0x0b
    4d3e:	e0 2d       	mov	r30, r0
    4d40:	19 95       	eicall
    4d42:	68 2f       	mov	r22, r24
    4d44:	85 e8       	ldi	r24, 0x85	; 133
    4d46:	96 e0       	ldi	r25, 0x06	; 6
    4d48:	77 d5       	rcall	.+2798   	; 0x5838 <_ZN10RingBuffer4pushEc>
    4d4a:	41 14       	cp	r4, r1
    4d4c:	51 04       	cpc	r5, r1
    4d4e:	49 f0       	breq	.+18     	; 0x4d62 <_ZN6EspDrv9readUntilEiPKcb+0xba>
    4d50:	b2 01       	movw	r22, r4
    4d52:	85 e8       	ldi	r24, 0x85	; 133
    4d54:	96 e0       	ldi	r25, 0x06	; 6
    4d56:	83 d5       	rcall	.+2822   	; 0x585e <_ZN10RingBuffer8endsWithEPKc>
    4d58:	88 23       	and	r24, r24
    4d5a:	19 f0       	breq	.+6      	; 0x4d62 <_ZN6EspDrv9readUntilEiPKcb+0xba>
    4d5c:	85 e0       	ldi	r24, 0x05	; 5
    4d5e:	68 2e       	mov	r6, r24
    4d60:	71 2c       	mov	r7, r1
    4d62:	33 20       	and	r3, r3
    4d64:	19 f2       	breq	.-122    	; 0x4cec <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4d66:	07 e2       	ldi	r16, 0x27	; 39
    4d68:	12 e0       	ldi	r17, 0x02	; 2
    4d6a:	c0 e0       	ldi	r28, 0x00	; 0
    4d6c:	d0 e0       	ldi	r29, 0x00	; 0
    4d6e:	f8 01       	movw	r30, r16
    4d70:	61 91       	ld	r22, Z+
    4d72:	71 91       	ld	r23, Z+
    4d74:	8f 01       	movw	r16, r30
    4d76:	85 e8       	ldi	r24, 0x85	; 133
    4d78:	96 e0       	ldi	r25, 0x06	; 6
    4d7a:	71 d5       	rcall	.+2786   	; 0x585e <_ZN10RingBuffer8endsWithEPKc>
    4d7c:	88 23       	and	r24, r24
    4d7e:	11 f0       	breq	.+4      	; 0x4d84 <_ZN6EspDrv9readUntilEiPKcb+0xdc>
    4d80:	3e 01       	movw	r6, r28
    4d82:	b4 cf       	rjmp	.-152    	; 0x4cec <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4d84:	21 96       	adiw	r28, 0x01	; 1
    4d86:	c5 30       	cpi	r28, 0x05	; 5
    4d88:	d1 05       	cpc	r29, r1
    4d8a:	89 f7       	brne	.-30     	; 0x4d6e <_ZN6EspDrv9readUntilEiPKcb+0xc6>
    4d8c:	af cf       	rjmp	.-162    	; 0x4cec <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4d8e:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    4d92:	dc 01       	movw	r26, r24
    4d94:	cb 01       	movw	r24, r22
    4d96:	88 19       	sub	r24, r8
    4d98:	99 09       	sbc	r25, r9
    4d9a:	aa 09       	sbc	r26, r10
    4d9c:	bb 09       	sbc	r27, r11
    4d9e:	8c 15       	cp	r24, r12
    4da0:	9d 05       	cpc	r25, r13
    4da2:	ae 05       	cpc	r26, r14
    4da4:	bf 05       	cpc	r27, r15
    4da6:	60 f0       	brcs	.+24     	; 0x4dc0 <_ZN6EspDrv9readUntilEiPKcb+0x118>
    4da8:	6d e7       	ldi	r22, 0x7D	; 125
    4daa:	74 e0       	ldi	r23, 0x04	; 4
    4dac:	8d e1       	ldi	r24, 0x1D	; 29
    4dae:	95 e0       	ldi	r25, 0x05	; 5
    4db0:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    4db4:	64 e3       	ldi	r22, 0x34	; 52
    4db6:	76 e0       	ldi	r23, 0x06	; 6
    4db8:	8d e1       	ldi	r24, 0x1D	; 29
    4dba:	95 e0       	ldi	r25, 0x05	; 5
    4dbc:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    4dc0:	c3 01       	movw	r24, r6
    4dc2:	df 91       	pop	r29
    4dc4:	cf 91       	pop	r28
    4dc6:	1f 91       	pop	r17
    4dc8:	0f 91       	pop	r16
    4dca:	ff 90       	pop	r15
    4dcc:	ef 90       	pop	r14
    4dce:	df 90       	pop	r13
    4dd0:	cf 90       	pop	r12
    4dd2:	bf 90       	pop	r11
    4dd4:	af 90       	pop	r10
    4dd6:	9f 90       	pop	r9
    4dd8:	8f 90       	pop	r8
    4dda:	7f 90       	pop	r7
    4ddc:	6f 90       	pop	r6
    4dde:	5f 90       	pop	r5
    4de0:	4f 90       	pop	r4
    4de2:	3f 90       	pop	r3
    4de4:	08 95       	ret

00004de6 <_ZN6EspDrv7getDataEhPhbPb>:
    4de6:	8f 92       	push	r8
    4de8:	9f 92       	push	r9
    4dea:	af 92       	push	r10
    4dec:	bf 92       	push	r11
    4dee:	ef 92       	push	r14
    4df0:	ff 92       	push	r15
    4df2:	0f 93       	push	r16
    4df4:	1f 93       	push	r17
    4df6:	cf 93       	push	r28
    4df8:	df 93       	push	r29
    4dfa:	c0 91 7a 06 	lds	r28, 0x067A	; 0x80067a <_ZN6EspDrv7_connIdE>
    4dfe:	c8 13       	cpse	r28, r24
    4e00:	c1 c0       	rjmp	.+386    	; 0x4f84 <_ZN6EspDrv7getDataEhPhbPb+0x19e>
    4e02:	79 01       	movw	r14, r18
    4e04:	d4 2f       	mov	r29, r20
    4e06:	8b 01       	movw	r16, r22
    4e08:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    4e0c:	4b 01       	movw	r8, r22
    4e0e:	5c 01       	movw	r10, r24
    4e10:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4e14:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4e18:	dc 01       	movw	r26, r24
    4e1a:	ed 91       	ld	r30, X+
    4e1c:	fc 91       	ld	r31, X
    4e1e:	00 84       	ldd	r0, Z+8	; 0x08
    4e20:	f1 85       	ldd	r31, Z+9	; 0x09
    4e22:	e0 2d       	mov	r30, r0
    4e24:	19 95       	eicall
    4e26:	89 2b       	or	r24, r25
    4e28:	09 f4       	brne	.+2      	; 0x4e2c <_ZN6EspDrv7getDataEhPhbPb+0x46>
    4e2a:	72 c0       	rjmp	.+228    	; 0x4f10 <_ZN6EspDrv7getDataEhPhbPb+0x12a>
    4e2c:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4e30:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4e34:	dc 01       	movw	r26, r24
    4e36:	ed 91       	ld	r30, X+
    4e38:	fc 91       	ld	r31, X
    4e3a:	dd 23       	and	r29, r29
    4e3c:	39 f0       	breq	.+14     	; 0x4e4c <_ZN6EspDrv7getDataEhPhbPb+0x66>
    4e3e:	04 84       	ldd	r0, Z+12	; 0x0c
    4e40:	f5 85       	ldd	r31, Z+13	; 0x0d
    4e42:	e0 2d       	mov	r30, r0
    4e44:	19 95       	eicall
    4e46:	f8 01       	movw	r30, r16
    4e48:	80 83       	st	Z, r24
    4e4a:	19 c0       	rjmp	.+50     	; 0x4e7e <_ZN6EspDrv7getDataEhPhbPb+0x98>
    4e4c:	02 84       	ldd	r0, Z+10	; 0x0a
    4e4e:	f3 85       	ldd	r31, Z+11	; 0x0b
    4e50:	e0 2d       	mov	r30, r0
    4e52:	19 95       	eicall
    4e54:	f8 01       	movw	r30, r16
    4e56:	80 83       	st	Z, r24
    4e58:	80 91 7b 06 	lds	r24, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4e5c:	90 91 7c 06 	lds	r25, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4e60:	a0 91 7d 06 	lds	r26, 0x067D	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4e64:	b0 91 7e 06 	lds	r27, 0x067E	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4e68:	01 97       	sbiw	r24, 0x01	; 1
    4e6a:	a1 09       	sbc	r26, r1
    4e6c:	b1 09       	sbc	r27, r1
    4e6e:	80 93 7b 06 	sts	0x067B, r24	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4e72:	90 93 7c 06 	sts	0x067C, r25	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4e76:	a0 93 7d 06 	sts	0x067D, r26	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4e7a:	b0 93 7e 06 	sts	0x067E, r27	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4e7e:	80 91 7b 06 	lds	r24, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4e82:	90 91 7c 06 	lds	r25, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4e86:	a0 91 7d 06 	lds	r26, 0x067D	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4e8a:	b0 91 7e 06 	lds	r27, 0x067E	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4e8e:	89 2b       	or	r24, r25
    4e90:	8a 2b       	or	r24, r26
    4e92:	8b 2b       	or	r24, r27
    4e94:	11 f0       	breq	.+4      	; 0x4e9a <_ZN6EspDrv7getDataEhPhbPb+0xb4>
    4e96:	81 e0       	ldi	r24, 0x01	; 1
    4e98:	76 c0       	rjmp	.+236    	; 0x4f86 <_ZN6EspDrv7getDataEhPhbPb+0x1a0>
    4e9a:	65 e0       	ldi	r22, 0x05	; 5
    4e9c:	70 e0       	ldi	r23, 0x00	; 0
    4e9e:	80 e0       	ldi	r24, 0x00	; 0
    4ea0:	90 e0       	ldi	r25, 0x00	; 0
    4ea2:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    4ea6:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4eaa:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4eae:	dc 01       	movw	r26, r24
    4eb0:	ed 91       	ld	r30, X+
    4eb2:	fc 91       	ld	r31, X
    4eb4:	00 84       	ldd	r0, Z+8	; 0x08
    4eb6:	f1 85       	ldd	r31, Z+9	; 0x09
    4eb8:	e0 2d       	mov	r30, r0
    4eba:	19 95       	eicall
    4ebc:	89 2b       	or	r24, r25
    4ebe:	59 f3       	breq	.-42     	; 0x4e96 <_ZN6EspDrv7getDataEhPhbPb+0xb0>
    4ec0:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4ec4:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4ec8:	dc 01       	movw	r26, r24
    4eca:	ed 91       	ld	r30, X+
    4ecc:	fc 91       	ld	r31, X
    4ece:	04 84       	ldd	r0, Z+12	; 0x0c
    4ed0:	f5 85       	ldd	r31, Z+13	; 0x0d
    4ed2:	e0 2d       	mov	r30, r0
    4ed4:	19 95       	eicall
    4ed6:	d0 e0       	ldi	r29, 0x00	; 0
    4ed8:	e0 96       	adiw	r28, 0x30	; 48
    4eda:	8c 17       	cp	r24, r28
    4edc:	9d 07       	cpc	r25, r29
    4ede:	d9 f6       	brne	.-74     	; 0x4e96 <_ZN6EspDrv7getDataEhPhbPb+0xb0>
    4ee0:	40 e0       	ldi	r20, 0x00	; 0
    4ee2:	6c ea       	ldi	r22, 0xAC	; 172
    4ee4:	74 e0       	ldi	r23, 0x04	; 4
    4ee6:	84 ef       	ldi	r24, 0xF4	; 244
    4ee8:	91 e0       	ldi	r25, 0x01	; 1
    4eea:	de de       	rcall	.-580    	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    4eec:	05 97       	sbiw	r24, 0x05	; 5
    4eee:	61 f0       	breq	.+24     	; 0x4f08 <_ZN6EspDrv7getDataEhPhbPb+0x122>
    4ef0:	6d e7       	ldi	r22, 0x7D	; 125
    4ef2:	74 e0       	ldi	r23, 0x04	; 4
    4ef4:	8d e1       	ldi	r24, 0x1D	; 29
    4ef6:	95 e0       	ldi	r25, 0x05	; 5
    4ef8:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    4efc:	63 eb       	ldi	r22, 0xB3	; 179
    4efe:	76 e0       	ldi	r23, 0x06	; 6
    4f00:	8d e1       	ldi	r24, 0x1D	; 29
    4f02:	95 e0       	ldi	r25, 0x05	; 5
    4f04:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    4f08:	81 e0       	ldi	r24, 0x01	; 1
    4f0a:	f7 01       	movw	r30, r14
    4f0c:	80 83       	st	Z, r24
    4f0e:	3b c0       	rjmp	.+118    	; 0x4f86 <_ZN6EspDrv7getDataEhPhbPb+0x1a0>
    4f10:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    4f14:	dc 01       	movw	r26, r24
    4f16:	cb 01       	movw	r24, r22
    4f18:	88 19       	sub	r24, r8
    4f1a:	99 09       	sbc	r25, r9
    4f1c:	aa 09       	sbc	r26, r10
    4f1e:	bb 09       	sbc	r27, r11
    4f20:	80 3d       	cpi	r24, 0xD0	; 208
    4f22:	97 40       	sbci	r25, 0x07	; 7
    4f24:	a1 05       	cpc	r26, r1
    4f26:	b1 05       	cpc	r27, r1
    4f28:	08 f4       	brcc	.+2      	; 0x4f2c <_ZN6EspDrv7getDataEhPhbPb+0x146>
    4f2a:	72 cf       	rjmp	.-284    	; 0x4e10 <_ZN6EspDrv7getDataEhPhbPb+0x2a>
    4f2c:	6d e7       	ldi	r22, 0x7D	; 125
    4f2e:	74 e0       	ldi	r23, 0x04	; 4
    4f30:	8d e1       	ldi	r24, 0x1D	; 29
    4f32:	95 e0       	ldi	r25, 0x05	; 5
    4f34:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    4f38:	6a ea       	ldi	r22, 0xAA	; 170
    4f3a:	76 e0       	ldi	r23, 0x06	; 6
    4f3c:	8d e1       	ldi	r24, 0x1D	; 29
    4f3e:	95 e0       	ldi	r25, 0x05	; 5
    4f40:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    4f44:	61 ee       	ldi	r22, 0xE1	; 225
    4f46:	72 e0       	ldi	r23, 0x02	; 2
    4f48:	8d e1       	ldi	r24, 0x1D	; 29
    4f4a:	95 e0       	ldi	r25, 0x05	; 5
    4f4c:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    4f50:	40 91 7b 06 	lds	r20, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4f54:	50 91 7c 06 	lds	r21, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4f58:	60 91 7d 06 	lds	r22, 0x067D	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4f5c:	70 91 7e 06 	lds	r23, 0x067E	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4f60:	2a e0       	ldi	r18, 0x0A	; 10
    4f62:	30 e0       	ldi	r19, 0x00	; 0
    4f64:	8d e1       	ldi	r24, 0x1D	; 29
    4f66:	95 e0       	ldi	r25, 0x05	; 5
    4f68:	0e 94 4b 14 	call	0x2896	; 0x2896 <_ZN5Print7printlnEli>
    4f6c:	10 92 7b 06 	sts	0x067B, r1	; 0x80067b <_ZN6EspDrv7_bufPosE>
    4f70:	10 92 7c 06 	sts	0x067C, r1	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    4f74:	10 92 7d 06 	sts	0x067D, r1	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    4f78:	10 92 7e 06 	sts	0x067E, r1	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    4f7c:	10 92 7a 06 	sts	0x067A, r1	; 0x80067a <_ZN6EspDrv7_connIdE>
    4f80:	d8 01       	movw	r26, r16
    4f82:	1c 92       	st	X, r1
    4f84:	80 e0       	ldi	r24, 0x00	; 0
    4f86:	df 91       	pop	r29
    4f88:	cf 91       	pop	r28
    4f8a:	1f 91       	pop	r17
    4f8c:	0f 91       	pop	r16
    4f8e:	ff 90       	pop	r15
    4f90:	ef 90       	pop	r14
    4f92:	bf 90       	pop	r11
    4f94:	af 90       	pop	r10
    4f96:	9f 90       	pop	r9
    4f98:	8f 90       	pop	r8
    4f9a:	08 95       	ret

00004f9c <_ZN6EspDrv8sendDataEhPKhj>:
    4f9c:	cf 92       	push	r12
    4f9e:	df 92       	push	r13
    4fa0:	ef 92       	push	r14
    4fa2:	ff 92       	push	r15
    4fa4:	0f 93       	push	r16
    4fa6:	1f 93       	push	r17
    4fa8:	cf 93       	push	r28
    4faa:	df 93       	push	r29
    4fac:	cd b7       	in	r28, 0x3d	; 61
    4fae:	de b7       	in	r29, 0x3e	; 62
    4fb0:	64 97       	sbiw	r28, 0x14	; 20
    4fb2:	0f b6       	in	r0, 0x3f	; 63
    4fb4:	f8 94       	cli
    4fb6:	de bf       	out	0x3e, r29	; 62
    4fb8:	0f be       	out	0x3f, r0	; 63
    4fba:	cd bf       	out	0x3d, r28	; 61
    4fbc:	6b 01       	movw	r12, r22
    4fbe:	8a 01       	movw	r16, r20
    4fc0:	1f 93       	push	r17
    4fc2:	4f 93       	push	r20
    4fc4:	1f 92       	push	r1
    4fc6:	8f 93       	push	r24
    4fc8:	89 e9       	ldi	r24, 0x99	; 153
    4fca:	96 e0       	ldi	r25, 0x06	; 6
    4fcc:	9f 93       	push	r25
    4fce:	8f 93       	push	r24
    4fd0:	9e 01       	movw	r18, r28
    4fd2:	2f 5f       	subi	r18, 0xFF	; 255
    4fd4:	3f 4f       	sbci	r19, 0xFF	; 255
    4fd6:	79 01       	movw	r14, r18
    4fd8:	3f 93       	push	r19
    4fda:	2f 93       	push	r18
    4fdc:	0e 94 11 32 	call	0x6422	; 0x6422 <sprintf_P>
    4fe0:	b7 01       	movw	r22, r14
    4fe2:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    4fe6:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    4fea:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    4fee:	40 e0       	ldi	r20, 0x00	; 0
    4ff0:	66 eb       	ldi	r22, 0xB6	; 182
    4ff2:	74 e0       	ldi	r23, 0x04	; 4
    4ff4:	88 ee       	ldi	r24, 0xE8	; 232
    4ff6:	93 e0       	ldi	r25, 0x03	; 3
    4ff8:	57 de       	rcall	.-850    	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    4ffa:	0f b6       	in	r0, 0x3f	; 63
    4ffc:	f8 94       	cli
    4ffe:	de bf       	out	0x3e, r29	; 62
    5000:	0f be       	out	0x3f, r0	; 63
    5002:	cd bf       	out	0x3d, r28	; 61
    5004:	05 97       	sbiw	r24, 0x05	; 5
    5006:	49 f0       	breq	.+18     	; 0x501a <_ZN6EspDrv8sendDataEhPKhj+0x7e>
    5008:	6d e7       	ldi	r22, 0x7D	; 125
    500a:	74 e0       	ldi	r23, 0x04	; 4
    500c:	8d e1       	ldi	r24, 0x1D	; 29
    500e:	95 e0       	ldi	r25, 0x05	; 5
    5010:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    5014:	6e e7       	ldi	r22, 0x7E	; 126
    5016:	76 e0       	ldi	r23, 0x06	; 6
    5018:	1d c0       	rjmp	.+58     	; 0x5054 <_ZN6EspDrv8sendDataEhPKhj+0xb8>
    501a:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    501e:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    5022:	dc 01       	movw	r26, r24
    5024:	ed 91       	ld	r30, X+
    5026:	fc 91       	ld	r31, X
    5028:	02 80       	ldd	r0, Z+2	; 0x02
    502a:	f3 81       	ldd	r31, Z+3	; 0x03
    502c:	e0 2d       	mov	r30, r0
    502e:	a8 01       	movw	r20, r16
    5030:	b6 01       	movw	r22, r12
    5032:	19 95       	eicall
    5034:	41 e0       	ldi	r20, 0x01	; 1
    5036:	60 e0       	ldi	r22, 0x00	; 0
    5038:	70 e0       	ldi	r23, 0x00	; 0
    503a:	80 ed       	ldi	r24, 0xD0	; 208
    503c:	97 e0       	ldi	r25, 0x07	; 7
    503e:	34 de       	rcall	.-920    	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    5040:	03 97       	sbiw	r24, 0x03	; 3
    5042:	71 f0       	breq	.+28     	; 0x5060 <_ZN6EspDrv8sendDataEhPKhj+0xc4>
    5044:	6d e7       	ldi	r22, 0x7D	; 125
    5046:	74 e0       	ldi	r23, 0x04	; 4
    5048:	8d e1       	ldi	r24, 0x1D	; 29
    504a:	95 e0       	ldi	r25, 0x05	; 5
    504c:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    5050:	63 e6       	ldi	r22, 0x63	; 99
    5052:	76 e0       	ldi	r23, 0x06	; 6
    5054:	8d e1       	ldi	r24, 0x1D	; 29
    5056:	95 e0       	ldi	r25, 0x05	; 5
    5058:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    505c:	80 e0       	ldi	r24, 0x00	; 0
    505e:	01 c0       	rjmp	.+2      	; 0x5062 <_ZN6EspDrv8sendDataEhPKhj+0xc6>
    5060:	81 e0       	ldi	r24, 0x01	; 1
    5062:	64 96       	adiw	r28, 0x14	; 20
    5064:	0f b6       	in	r0, 0x3f	; 63
    5066:	f8 94       	cli
    5068:	de bf       	out	0x3e, r29	; 62
    506a:	0f be       	out	0x3f, r0	; 63
    506c:	cd bf       	out	0x3d, r28	; 61
    506e:	df 91       	pop	r29
    5070:	cf 91       	pop	r28
    5072:	1f 91       	pop	r17
    5074:	0f 91       	pop	r16
    5076:	ff 90       	pop	r15
    5078:	ef 90       	pop	r14
    507a:	df 90       	pop	r13
    507c:	cf 90       	pop	r12
    507e:	08 95       	ret

00005080 <_ZN6EspDrv11espEmptyBufEb>:
    5080:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    5084:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    5088:	dc 01       	movw	r26, r24
    508a:	ed 91       	ld	r30, X+
    508c:	fc 91       	ld	r31, X
    508e:	00 84       	ldd	r0, Z+8	; 0x08
    5090:	f1 85       	ldd	r31, Z+9	; 0x09
    5092:	e0 2d       	mov	r30, r0
    5094:	19 95       	eicall
    5096:	18 16       	cp	r1, r24
    5098:	19 06       	cpc	r1, r25
    509a:	64 f4       	brge	.+24     	; 0x50b4 <_ZN6EspDrv11espEmptyBufEb+0x34>
    509c:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    50a0:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    50a4:	dc 01       	movw	r26, r24
    50a6:	ed 91       	ld	r30, X+
    50a8:	fc 91       	ld	r31, X
    50aa:	02 84       	ldd	r0, Z+10	; 0x0a
    50ac:	f3 85       	ldd	r31, Z+11	; 0x0b
    50ae:	e0 2d       	mov	r30, r0
    50b0:	19 95       	eicall
    50b2:	e6 cf       	rjmp	.-52     	; 0x5080 <_ZN6EspDrv11espEmptyBufEb>
    50b4:	08 95       	ret

000050b6 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci>:
    50b6:	af 92       	push	r10
    50b8:	bf 92       	push	r11
    50ba:	cf 92       	push	r12
    50bc:	df 92       	push	r13
    50be:	ef 92       	push	r14
    50c0:	ff 92       	push	r15
    50c2:	0f 93       	push	r16
    50c4:	1f 93       	push	r17
    50c6:	cf 93       	push	r28
    50c8:	df 93       	push	r29
    50ca:	5c 01       	movw	r10, r24
    50cc:	6b 01       	movw	r12, r22
    50ce:	7a 01       	movw	r14, r20
    50d0:	e9 01       	movw	r28, r18
    50d2:	18 82       	st	Y, r1
    50d4:	81 e0       	ldi	r24, 0x01	; 1
    50d6:	d4 df       	rcall	.-88     	; 0x5080 <_ZN6EspDrv11espEmptyBufEb>
    50d8:	b5 01       	movw	r22, r10
    50da:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    50de:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    50e2:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    50e6:	41 e0       	ldi	r20, 0x01	; 1
    50e8:	b6 01       	movw	r22, r12
    50ea:	88 ee       	ldi	r24, 0xE8	; 232
    50ec:	93 e0       	ldi	r25, 0x03	; 3
    50ee:	dc dd       	rcall	.-1096   	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    50f0:	85 30       	cpi	r24, 0x05	; 5
    50f2:	91 05       	cpc	r25, r1
    50f4:	51 f5       	brne	.+84     	; 0x514a <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0x94>
    50f6:	85 e8       	ldi	r24, 0x85	; 133
    50f8:	96 e0       	ldi	r25, 0x06	; 6
    50fa:	78 d3       	rcall	.+1776   	; 0x57ec <_ZN10RingBuffer4initEv>
    50fc:	41 e0       	ldi	r20, 0x01	; 1
    50fe:	b7 01       	movw	r22, r14
    5100:	84 ef       	ldi	r24, 0xF4	; 244
    5102:	91 e0       	ldi	r25, 0x01	; 1
    5104:	d1 dd       	rcall	.-1118   	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    5106:	05 97       	sbiw	r24, 0x05	; 5
    5108:	b9 f4       	brne	.+46     	; 0x5138 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0x82>
    510a:	f7 01       	movw	r30, r14
    510c:	01 90       	ld	r0, Z+
    510e:	00 20       	and	r0, r0
    5110:	e9 f7       	brne	.-6      	; 0x510c <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0x56>
    5112:	31 97       	sbiw	r30, 0x01	; 1
    5114:	af 01       	movw	r20, r30
    5116:	4e 19       	sub	r20, r14
    5118:	5f 09       	sbc	r21, r15
    511a:	98 01       	movw	r18, r16
    511c:	21 50       	subi	r18, 0x01	; 1
    511e:	31 09       	sbc	r19, r1
    5120:	be 01       	movw	r22, r28
    5122:	85 e8       	ldi	r24, 0x85	; 133
    5124:	96 e0       	ldi	r25, 0x06	; 6
    5126:	d4 d3       	rcall	.+1960   	; 0x58d0 <_ZN10RingBuffer7getStrNEPcjj>
    5128:	41 e0       	ldi	r20, 0x01	; 1
    512a:	60 e0       	ldi	r22, 0x00	; 0
    512c:	70 e0       	ldi	r23, 0x00	; 0
    512e:	80 ed       	ldi	r24, 0xD0	; 208
    5130:	97 e0       	ldi	r25, 0x07	; 7
    5132:	ba dd       	rcall	.-1164   	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    5134:	81 e0       	ldi	r24, 0x01	; 1
    5136:	18 c0       	rjmp	.+48     	; 0x5168 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0xb2>
    5138:	6d e7       	ldi	r22, 0x7D	; 125
    513a:	74 e0       	ldi	r23, 0x04	; 4
    513c:	8d e1       	ldi	r24, 0x1D	; 29
    513e:	95 e0       	ldi	r25, 0x05	; 5
    5140:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    5144:	61 e5       	ldi	r22, 0x51	; 81
    5146:	76 e0       	ldi	r23, 0x06	; 6
    5148:	0a c0       	rjmp	.+20     	; 0x515e <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0xa8>
    514a:	05 97       	sbiw	r24, 0x05	; 5
    514c:	60 f0       	brcs	.+24     	; 0x5166 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0xb0>
    514e:	6d e7       	ldi	r22, 0x7D	; 125
    5150:	74 e0       	ldi	r23, 0x04	; 4
    5152:	8d e1       	ldi	r24, 0x1D	; 29
    5154:	95 e0       	ldi	r25, 0x05	; 5
    5156:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    515a:	64 e4       	ldi	r22, 0x44	; 68
    515c:	76 e0       	ldi	r23, 0x06	; 6
    515e:	8d e1       	ldi	r24, 0x1D	; 29
    5160:	95 e0       	ldi	r25, 0x05	; 5
    5162:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    5166:	80 e0       	ldi	r24, 0x00	; 0
    5168:	df 91       	pop	r29
    516a:	cf 91       	pop	r28
    516c:	1f 91       	pop	r17
    516e:	0f 91       	pop	r16
    5170:	ff 90       	pop	r15
    5172:	ef 90       	pop	r14
    5174:	df 90       	pop	r13
    5176:	cf 90       	pop	r12
    5178:	bf 90       	pop	r11
    517a:	af 90       	pop	r10
    517c:	08 95       	ret

0000517e <_ZN6EspDrv14getClientStateEh>:
    517e:	ef 92       	push	r14
    5180:	ff 92       	push	r15
    5182:	0f 93       	push	r16
    5184:	1f 93       	push	r17
    5186:	cf 93       	push	r28
    5188:	df 93       	push	r29
    518a:	cd b7       	in	r28, 0x3d	; 61
    518c:	de b7       	in	r29, 0x3e	; 62
    518e:	6e 97       	sbiw	r28, 0x1e	; 30
    5190:	0f b6       	in	r0, 0x3f	; 63
    5192:	f8 94       	cli
    5194:	de bf       	out	0x3e, r29	; 62
    5196:	0f be       	out	0x3f, r0	; 63
    5198:	cd bf       	out	0x3d, r28	; 61
    519a:	1f 92       	push	r1
    519c:	8f 93       	push	r24
    519e:	89 e6       	ldi	r24, 0x69	; 105
    51a0:	97 e0       	ldi	r25, 0x07	; 7
    51a2:	9f 93       	push	r25
    51a4:	8f 93       	push	r24
    51a6:	ce 01       	movw	r24, r28
    51a8:	01 96       	adiw	r24, 0x01	; 1
    51aa:	7c 01       	movw	r14, r24
    51ac:	9f 93       	push	r25
    51ae:	8f 93       	push	r24
    51b0:	0e 94 11 32 	call	0x6422	; 0x6422 <sprintf_P>
    51b4:	0a e0       	ldi	r16, 0x0A	; 10
    51b6:	10 e0       	ldi	r17, 0x00	; 0
    51b8:	9e 01       	movw	r18, r28
    51ba:	2b 5e       	subi	r18, 0xEB	; 235
    51bc:	3f 4f       	sbci	r19, 0xFF	; 255
    51be:	4a ea       	ldi	r20, 0xAA	; 170
    51c0:	54 e0       	ldi	r21, 0x04	; 4
    51c2:	b7 01       	movw	r22, r14
    51c4:	8c e5       	ldi	r24, 0x5C	; 92
    51c6:	97 e0       	ldi	r25, 0x07	; 7
    51c8:	76 df       	rcall	.-276    	; 0x50b6 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci>
    51ca:	0f 90       	pop	r0
    51cc:	0f 90       	pop	r0
    51ce:	0f 90       	pop	r0
    51d0:	0f 90       	pop	r0
    51d2:	0f 90       	pop	r0
    51d4:	0f 90       	pop	r0
    51d6:	6e 96       	adiw	r28, 0x1e	; 30
    51d8:	0f b6       	in	r0, 0x3f	; 63
    51da:	f8 94       	cli
    51dc:	de bf       	out	0x3e, r29	; 62
    51de:	0f be       	out	0x3f, r0	; 63
    51e0:	cd bf       	out	0x3d, r28	; 61
    51e2:	df 91       	pop	r29
    51e4:	cf 91       	pop	r28
    51e6:	1f 91       	pop	r17
    51e8:	0f 91       	pop	r16
    51ea:	ff 90       	pop	r15
    51ec:	ef 90       	pop	r14
    51ee:	08 95       	ret

000051f0 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperS2_S2_Pci>:
    51f0:	4f 92       	push	r4
    51f2:	5f 92       	push	r5
    51f4:	6f 92       	push	r6
    51f6:	7f 92       	push	r7
    51f8:	8f 92       	push	r8
    51fa:	9f 92       	push	r9
    51fc:	af 92       	push	r10
    51fe:	bf 92       	push	r11
    5200:	cf 92       	push	r12
    5202:	df 92       	push	r13
    5204:	ef 92       	push	r14
    5206:	ff 92       	push	r15
    5208:	0f 93       	push	r16
    520a:	1f 93       	push	r17
    520c:	cf 93       	push	r28
    520e:	df 93       	push	r29
    5210:	cd b7       	in	r28, 0x3d	; 61
    5212:	de b7       	in	r29, 0x3e	; 62
    5214:	4c 01       	movw	r8, r24
    5216:	6b 01       	movw	r12, r22
    5218:	5a 01       	movw	r10, r20
    521a:	39 01       	movw	r6, r18
    521c:	4d b6       	in	r4, 0x3d	; 61
    521e:	5e b6       	in	r5, 0x3e	; 62
    5220:	cb 01       	movw	r24, r22
    5222:	0e 94 59 31 	call	0x62b2	; 0x62b2 <__strlen_P>
    5226:	01 96       	adiw	r24, 0x01	; 1
    5228:	2d b7       	in	r18, 0x3d	; 61
    522a:	3e b7       	in	r19, 0x3e	; 62
    522c:	28 1b       	sub	r18, r24
    522e:	39 0b       	sbc	r19, r25
    5230:	0f b6       	in	r0, 0x3f	; 63
    5232:	f8 94       	cli
    5234:	3e bf       	out	0x3e, r19	; 62
    5236:	0f be       	out	0x3f, r0	; 63
    5238:	2d bf       	out	0x3d, r18	; 61
    523a:	8d b7       	in	r24, 0x3d	; 61
    523c:	9e b7       	in	r25, 0x3e	; 62
    523e:	01 96       	adiw	r24, 0x01	; 1
    5240:	7c 01       	movw	r14, r24
    5242:	b6 01       	movw	r22, r12
    5244:	0e 94 52 31 	call	0x62a4	; 0x62a4 <strcpy_P>
    5248:	c5 01       	movw	r24, r10
    524a:	0e 94 59 31 	call	0x62b2	; 0x62b2 <__strlen_P>
    524e:	01 96       	adiw	r24, 0x01	; 1
    5250:	2d b7       	in	r18, 0x3d	; 61
    5252:	3e b7       	in	r19, 0x3e	; 62
    5254:	28 1b       	sub	r18, r24
    5256:	39 0b       	sbc	r19, r25
    5258:	0f b6       	in	r0, 0x3f	; 63
    525a:	f8 94       	cli
    525c:	3e bf       	out	0x3e, r19	; 62
    525e:	0f be       	out	0x3f, r0	; 63
    5260:	2d bf       	out	0x3d, r18	; 61
    5262:	8d b7       	in	r24, 0x3d	; 61
    5264:	9e b7       	in	r25, 0x3e	; 62
    5266:	01 96       	adiw	r24, 0x01	; 1
    5268:	6c 01       	movw	r12, r24
    526a:	b5 01       	movw	r22, r10
    526c:	0e 94 52 31 	call	0x62a4	; 0x62a4 <strcpy_P>
    5270:	93 01       	movw	r18, r6
    5272:	a6 01       	movw	r20, r12
    5274:	b7 01       	movw	r22, r14
    5276:	c4 01       	movw	r24, r8
    5278:	1e df       	rcall	.-452    	; 0x50b6 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci>
    527a:	0f b6       	in	r0, 0x3f	; 63
    527c:	f8 94       	cli
    527e:	5e be       	out	0x3e, r5	; 62
    5280:	0f be       	out	0x3f, r0	; 63
    5282:	4d be       	out	0x3d, r4	; 61
    5284:	df 91       	pop	r29
    5286:	cf 91       	pop	r28
    5288:	1f 91       	pop	r17
    528a:	0f 91       	pop	r16
    528c:	ff 90       	pop	r15
    528e:	ef 90       	pop	r14
    5290:	df 90       	pop	r13
    5292:	cf 90       	pop	r12
    5294:	bf 90       	pop	r11
    5296:	af 90       	pop	r10
    5298:	9f 90       	pop	r9
    529a:	8f 90       	pop	r8
    529c:	7f 90       	pop	r7
    529e:	6f 90       	pop	r6
    52a0:	5f 90       	pop	r5
    52a2:	4f 90       	pop	r4
    52a4:	08 95       	ret

000052a6 <_ZN6EspDrv19getConnectionStatusEv>:
    52a6:	0f 93       	push	r16
    52a8:	1f 93       	push	r17
    52aa:	cf 93       	push	r28
    52ac:	df 93       	push	r29
    52ae:	cd b7       	in	r28, 0x3d	; 61
    52b0:	de b7       	in	r29, 0x3e	; 62
    52b2:	2a 97       	sbiw	r28, 0x0a	; 10
    52b4:	0f b6       	in	r0, 0x3f	; 63
    52b6:	f8 94       	cli
    52b8:	de bf       	out	0x3e, r29	; 62
    52ba:	0f be       	out	0x3f, r0	; 63
    52bc:	cd bf       	out	0x3d, r28	; 61
    52be:	0a e0       	ldi	r16, 0x0A	; 10
    52c0:	10 e0       	ldi	r17, 0x00	; 0
    52c2:	9e 01       	movw	r18, r28
    52c4:	2f 5f       	subi	r18, 0xFF	; 255
    52c6:	3f 4f       	sbci	r19, 0xFF	; 255
    52c8:	4d e8       	ldi	r20, 0x8D	; 141
    52ca:	57 e0       	ldi	r21, 0x07	; 7
    52cc:	65 e8       	ldi	r22, 0x85	; 133
    52ce:	77 e0       	ldi	r23, 0x07	; 7
    52d0:	88 e7       	ldi	r24, 0x78	; 120
    52d2:	97 e0       	ldi	r25, 0x07	; 7
    52d4:	8d df       	rcall	.-230    	; 0x51f0 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperS2_S2_Pci>
    52d6:	88 23       	and	r24, r24
    52d8:	69 f0       	breq	.+26     	; 0x52f4 <_ZN6EspDrv19getConnectionStatusEv+0x4e>
    52da:	ce 01       	movw	r24, r28
    52dc:	01 96       	adiw	r24, 0x01	; 1
    52de:	8e d7       	rcall	.+3868   	; 0x61fc <atoi>
    52e0:	9c 01       	movw	r18, r24
    52e2:	22 50       	subi	r18, 0x02	; 2
    52e4:	31 09       	sbc	r19, r1
    52e6:	23 30       	cpi	r18, 0x03	; 3
    52e8:	31 05       	cpc	r19, r1
    52ea:	30 f0       	brcs	.+12     	; 0x52f8 <_ZN6EspDrv19getConnectionStatusEv+0x52>
    52ec:	05 97       	sbiw	r24, 0x05	; 5
    52ee:	31 f0       	breq	.+12     	; 0x52fc <_ZN6EspDrv19getConnectionStatusEv+0x56>
    52f0:	80 e0       	ldi	r24, 0x00	; 0
    52f2:	05 c0       	rjmp	.+10     	; 0x52fe <_ZN6EspDrv19getConnectionStatusEv+0x58>
    52f4:	8f ef       	ldi	r24, 0xFF	; 255
    52f6:	03 c0       	rjmp	.+6      	; 0x52fe <_ZN6EspDrv19getConnectionStatusEv+0x58>
    52f8:	81 e0       	ldi	r24, 0x01	; 1
    52fa:	01 c0       	rjmp	.+2      	; 0x52fe <_ZN6EspDrv19getConnectionStatusEv+0x58>
    52fc:	83 e0       	ldi	r24, 0x03	; 3
    52fe:	2a 96       	adiw	r28, 0x0a	; 10
    5300:	0f b6       	in	r0, 0x3f	; 63
    5302:	f8 94       	cli
    5304:	de bf       	out	0x3e, r29	; 62
    5306:	0f be       	out	0x3f, r0	; 63
    5308:	cd bf       	out	0x3d, r28	; 61
    530a:	df 91       	pop	r29
    530c:	cf 91       	pop	r28
    530e:	1f 91       	pop	r17
    5310:	0f 91       	pop	r16
    5312:	08 95       	ret

00005314 <_ZN6EspDrv12getFwVersionEv>:
    5314:	0f 93       	push	r16
    5316:	1f 93       	push	r17
    5318:	10 92 7f 06 	sts	0x067F, r1	; 0x80067f <_ZN6EspDrv9fwVersionE>
    531c:	06 e0       	ldi	r16, 0x06	; 6
    531e:	10 e0       	ldi	r17, 0x00	; 0
    5320:	2f e7       	ldi	r18, 0x7F	; 127
    5322:	36 e0       	ldi	r19, 0x06	; 6
    5324:	49 e5       	ldi	r20, 0x59	; 89
    5326:	57 e0       	ldi	r21, 0x07	; 7
    5328:	6c e4       	ldi	r22, 0x4C	; 76
    532a:	77 e0       	ldi	r23, 0x07	; 7
    532c:	85 e4       	ldi	r24, 0x45	; 69
    532e:	97 e0       	ldi	r25, 0x07	; 7
    5330:	5f df       	rcall	.-322    	; 0x51f0 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperS2_S2_Pci>
    5332:	8f e7       	ldi	r24, 0x7F	; 127
    5334:	96 e0       	ldi	r25, 0x06	; 6
    5336:	1f 91       	pop	r17
    5338:	0f 91       	pop	r16
    533a:	08 95       	ret

0000533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>:
    533c:	0f 93       	push	r16
    533e:	1f 93       	push	r17
    5340:	cf 93       	push	r28
    5342:	df 93       	push	r29
    5344:	8c 01       	movw	r16, r24
    5346:	eb 01       	movw	r28, r22
    5348:	81 e0       	ldi	r24, 0x01	; 1
    534a:	9a de       	rcall	.-716    	; 0x5080 <_ZN6EspDrv11espEmptyBufEb>
    534c:	b8 01       	movw	r22, r16
    534e:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    5352:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    5356:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    535a:	41 e0       	ldi	r20, 0x01	; 1
    535c:	60 e0       	ldi	r22, 0x00	; 0
    535e:	70 e0       	ldi	r23, 0x00	; 0
    5360:	ce 01       	movw	r24, r28
    5362:	df 91       	pop	r29
    5364:	cf 91       	pop	r28
    5366:	1f 91       	pop	r17
    5368:	0f 91       	pop	r16
    536a:	9e cc       	rjmp	.-1732   	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>

0000536c <_ZN6EspDrv5resetEv>:
    536c:	68 ee       	ldi	r22, 0xE8	; 232
    536e:	73 e0       	ldi	r23, 0x03	; 3
    5370:	82 e1       	ldi	r24, 0x12	; 18
    5372:	98 e0       	ldi	r25, 0x08	; 8
    5374:	e3 df       	rcall	.-58     	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    5376:	68 eb       	ldi	r22, 0xB8	; 184
    5378:	7b e0       	ldi	r23, 0x0B	; 11
    537a:	80 e0       	ldi	r24, 0x00	; 0
    537c:	90 e0       	ldi	r25, 0x00	; 0
    537e:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    5382:	80 e0       	ldi	r24, 0x00	; 0
    5384:	7d de       	rcall	.-774    	; 0x5080 <_ZN6EspDrv11espEmptyBufEb>
    5386:	68 ee       	ldi	r22, 0xE8	; 232
    5388:	73 e0       	ldi	r23, 0x03	; 3
    538a:	8d e0       	ldi	r24, 0x0D	; 13
    538c:	98 e0       	ldi	r25, 0x08	; 8
    538e:	d6 df       	rcall	.-84     	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    5390:	68 ee       	ldi	r22, 0xE8	; 232
    5392:	73 e0       	ldi	r23, 0x03	; 3
    5394:	81 e0       	ldi	r24, 0x01	; 1
    5396:	98 e0       	ldi	r25, 0x08	; 8
    5398:	d1 df       	rcall	.-94     	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    539a:	68 ec       	ldi	r22, 0xC8	; 200
    539c:	70 e0       	ldi	r23, 0x00	; 0
    539e:	80 e0       	ldi	r24, 0x00	; 0
    53a0:	90 e0       	ldi	r25, 0x00	; 0
    53a2:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    53a6:	68 ee       	ldi	r22, 0xE8	; 232
    53a8:	73 e0       	ldi	r23, 0x03	; 3
    53aa:	85 ef       	ldi	r24, 0xF5	; 245
    53ac:	97 e0       	ldi	r25, 0x07	; 7
    53ae:	c6 df       	rcall	.-116    	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    53b0:	68 ee       	ldi	r22, 0xE8	; 232
    53b2:	73 e0       	ldi	r23, 0x03	; 3
    53b4:	87 ee       	ldi	r24, 0xE7	; 231
    53b6:	97 e0       	ldi	r25, 0x07	; 7
    53b8:	c1 df       	rcall	.-126    	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    53ba:	68 ee       	ldi	r22, 0xE8	; 232
    53bc:	73 e0       	ldi	r23, 0x03	; 3
    53be:	87 ed       	ldi	r24, 0xD7	; 215
    53c0:	97 e0       	ldi	r25, 0x07	; 7
    53c2:	bc df       	rcall	.-136    	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    53c4:	68 ee       	ldi	r22, 0xE8	; 232
    53c6:	73 e0       	ldi	r23, 0x03	; 3
    53c8:	89 ec       	ldi	r24, 0xC9	; 201
    53ca:	97 e0       	ldi	r25, 0x07	; 7
    53cc:	b7 df       	rcall	.-146    	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    53ce:	68 ec       	ldi	r22, 0xC8	; 200
    53d0:	70 e0       	ldi	r23, 0x00	; 0
    53d2:	80 e0       	ldi	r24, 0x00	; 0
    53d4:	90 e0       	ldi	r25, 0x00	; 0
    53d6:	0c 94 b5 15 	jmp	0x2b6a	; 0x2b6a <delay>

000053da <_ZN6EspDrv14wifiDriverInitEP6Stream>:
    53da:	cf 93       	push	r28
    53dc:	df 93       	push	r29
    53de:	90 93 8e 06 	sts	0x068E, r25	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    53e2:	80 93 8d 06 	sts	0x068D, r24	; 0x80068d <_ZN6EspDrv9espSerialE>
    53e6:	c5 e0       	ldi	r28, 0x05	; 5
    53e8:	d0 e0       	ldi	r29, 0x00	; 0
    53ea:	68 ee       	ldi	r22, 0xE8	; 232
    53ec:	73 e0       	ldi	r23, 0x03	; 3
    53ee:	8f e6       	ldi	r24, 0x6F	; 111
    53f0:	98 e0       	ldi	r25, 0x08	; 8
    53f2:	a4 df       	rcall	.-184    	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    53f4:	89 2b       	or	r24, r25
    53f6:	e1 f0       	breq	.+56     	; 0x5430 <_ZN6EspDrv14wifiDriverInitEP6Stream+0x56>
    53f8:	68 ee       	ldi	r22, 0xE8	; 232
    53fa:	73 e0       	ldi	r23, 0x03	; 3
    53fc:	80 e0       	ldi	r24, 0x00	; 0
    53fe:	90 e0       	ldi	r25, 0x00	; 0
    5400:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
    5404:	21 97       	sbiw	r28, 0x01	; 1
    5406:	89 f7       	brne	.-30     	; 0x53ea <_ZN6EspDrv14wifiDriverInitEP6Stream+0x10>
    5408:	6d e7       	ldi	r22, 0x7D	; 125
    540a:	74 e0       	ldi	r23, 0x04	; 4
    540c:	8d e1       	ldi	r24, 0x1D	; 29
    540e:	95 e0       	ldi	r25, 0x05	; 5
    5410:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    5414:	62 e5       	ldi	r22, 0x52	; 82
    5416:	78 e0       	ldi	r23, 0x08	; 8
    5418:	8d e1       	ldi	r24, 0x1D	; 29
    541a:	95 e0       	ldi	r25, 0x05	; 5
    541c:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN5Print7printlnEPK19__FlashStringHelper>
    5420:	68 e8       	ldi	r22, 0x88	; 136
    5422:	73 e1       	ldi	r23, 0x13	; 19
    5424:	80 e0       	ldi	r24, 0x00	; 0
    5426:	90 e0       	ldi	r25, 0x00	; 0
    5428:	df 91       	pop	r29
    542a:	cf 91       	pop	r28
    542c:	0c 94 b5 15 	jmp	0x2b6a	; 0x2b6a <delay>
    5430:	9d df       	rcall	.-198    	; 0x536c <_ZN6EspDrv5resetEv>
    5432:	70 df       	rcall	.-288    	; 0x5314 <_ZN6EspDrv12getFwVersionEv>
    5434:	80 91 7f 06 	lds	r24, 0x067F	; 0x80067f <_ZN6EspDrv9fwVersionE>
    5438:	81 53       	subi	r24, 0x31	; 49
    543a:	82 30       	cpi	r24, 0x02	; 2
    543c:	20 f4       	brcc	.+8      	; 0x5446 <_ZN6EspDrv14wifiDriverInitEP6Stream+0x6c>
    543e:	80 91 80 06 	lds	r24, 0x0680	; 0x800680 <_ZN6EspDrv9fwVersionE+0x1>
    5442:	8e 32       	cpi	r24, 0x2E	; 46
    5444:	e9 f0       	breq	.+58     	; 0x5480 <_ZN6EspDrv14wifiDriverInitEP6Stream+0xa6>
    5446:	6d e7       	ldi	r22, 0x7D	; 125
    5448:	74 e0       	ldi	r23, 0x04	; 4
    544a:	8d e1       	ldi	r24, 0x1D	; 29
    544c:	95 e0       	ldi	r25, 0x05	; 5
    544e:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    5452:	64 e3       	ldi	r22, 0x34	; 52
    5454:	78 e0       	ldi	r23, 0x08	; 8
    5456:	8d e1       	ldi	r24, 0x1D	; 29
    5458:	95 e0       	ldi	r25, 0x05	; 5
    545a:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    545e:	61 ee       	ldi	r22, 0xE1	; 225
    5460:	72 e0       	ldi	r23, 0x02	; 2
    5462:	8d e1       	ldi	r24, 0x1D	; 29
    5464:	95 e0       	ldi	r25, 0x05	; 5
    5466:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    546a:	6f e7       	ldi	r22, 0x7F	; 127
    546c:	76 e0       	ldi	r23, 0x06	; 6
    546e:	8d e1       	ldi	r24, 0x1D	; 29
    5470:	95 e0       	ldi	r25, 0x05	; 5
    5472:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    5476:	60 ea       	ldi	r22, 0xA0	; 160
    5478:	7f e0       	ldi	r23, 0x0F	; 15
    547a:	80 e0       	ldi	r24, 0x00	; 0
    547c:	90 e0       	ldi	r25, 0x00	; 0
    547e:	d4 cf       	rjmp	.-88     	; 0x5428 <_ZN6EspDrv14wifiDriverInitEP6Stream+0x4e>
    5480:	6d e7       	ldi	r22, 0x7D	; 125
    5482:	74 e0       	ldi	r23, 0x04	; 4
    5484:	8d e1       	ldi	r24, 0x1D	; 29
    5486:	95 e0       	ldi	r25, 0x05	; 5
    5488:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    548c:	69 e1       	ldi	r22, 0x19	; 25
    548e:	78 e0       	ldi	r23, 0x08	; 8
    5490:	8d e1       	ldi	r24, 0x1D	; 29
    5492:	95 e0       	ldi	r25, 0x05	; 5
    5494:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    5498:	61 ee       	ldi	r22, 0xE1	; 225
    549a:	72 e0       	ldi	r23, 0x02	; 2
    549c:	8d e1       	ldi	r24, 0x1D	; 29
    549e:	95 e0       	ldi	r25, 0x05	; 5
    54a0:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    54a4:	6f e7       	ldi	r22, 0x7F	; 127
    54a6:	76 e0       	ldi	r23, 0x06	; 6
    54a8:	8d e1       	ldi	r24, 0x1D	; 29
    54aa:	95 e0       	ldi	r25, 0x05	; 5
    54ac:	df 91       	pop	r29
    54ae:	cf 91       	pop	r28
    54b0:	0c 94 71 13 	jmp	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>

000054b4 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>:
    54b4:	cf 93       	push	r28
    54b6:	df 93       	push	r29
    54b8:	cd b7       	in	r28, 0x3d	; 61
    54ba:	de b7       	in	r29, 0x3e	; 62
    54bc:	c8 5c       	subi	r28, 0xC8	; 200
    54be:	d1 09       	sbc	r29, r1
    54c0:	0f b6       	in	r0, 0x3f	; 63
    54c2:	f8 94       	cli
    54c4:	de bf       	out	0x3e, r29	; 62
    54c6:	0f be       	out	0x3f, r0	; 63
    54c8:	cd bf       	out	0x3d, r28	; 61
    54ca:	9e 01       	movw	r18, r28
    54cc:	2e 52       	subi	r18, 0x2E	; 46
    54ce:	3f 4f       	sbci	r19, 0xFF	; 255
    54d0:	c2 53       	subi	r28, 0x32	; 50
    54d2:	df 4f       	sbci	r29, 0xFF	; 255
    54d4:	48 81       	ld	r20, Y
    54d6:	59 81       	ldd	r21, Y+1	; 0x01
    54d8:	ce 5c       	subi	r28, 0xCE	; 206
    54da:	d0 40       	sbci	r29, 0x00	; 0
    54dc:	68 ec       	ldi	r22, 0xC8	; 200
    54de:	70 e0       	ldi	r23, 0x00	; 0
    54e0:	ce 01       	movw	r24, r28
    54e2:	01 96       	adiw	r24, 0x01	; 1
    54e4:	cc d7       	rcall	.+3992   	; 0x647e <vsnprintf_P>
    54e6:	81 e0       	ldi	r24, 0x01	; 1
    54e8:	cb dd       	rcall	.-1130   	; 0x5080 <_ZN6EspDrv11espEmptyBufEb>
    54ea:	be 01       	movw	r22, r28
    54ec:	6f 5f       	subi	r22, 0xFF	; 255
    54ee:	7f 4f       	sbci	r23, 0xFF	; 255
    54f0:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    54f4:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    54f8:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
    54fc:	41 e0       	ldi	r20, 0x01	; 1
    54fe:	60 e0       	ldi	r22, 0x00	; 0
    5500:	70 e0       	ldi	r23, 0x00	; 0
    5502:	c0 53       	subi	r28, 0x30	; 48
    5504:	df 4f       	sbci	r29, 0xFF	; 255
    5506:	88 81       	ld	r24, Y
    5508:	99 81       	ldd	r25, Y+1	; 0x01
    550a:	c0 5d       	subi	r28, 0xD0	; 208
    550c:	d0 40       	sbci	r29, 0x00	; 0
    550e:	cc db       	rcall	.-2152   	; 0x4ca8 <_ZN6EspDrv9readUntilEiPKcb>
    5510:	c8 53       	subi	r28, 0x38	; 56
    5512:	df 4f       	sbci	r29, 0xFF	; 255
    5514:	0f b6       	in	r0, 0x3f	; 63
    5516:	f8 94       	cli
    5518:	de bf       	out	0x3e, r29	; 62
    551a:	0f be       	out	0x3f, r0	; 63
    551c:	cd bf       	out	0x3d, r28	; 61
    551e:	df 91       	pop	r29
    5520:	cf 91       	pop	r28
    5522:	08 95       	ret

00005524 <_ZN6EspDrv11startClientEPKcjhh>:


bool EspDrv::startClient(const char* host, uint16_t port, uint8_t sock, uint8_t protMode)
{
    5524:	ff 92       	push	r15
    5526:	0f 93       	push	r16
    5528:	1f 93       	push	r17
    552a:	cf 93       	push	r28
    552c:	df 93       	push	r29
    552e:	d8 2f       	mov	r29, r24
    5530:	19 2f       	mov	r17, r25
    5532:	06 2f       	mov	r16, r22
    5534:	f7 2e       	mov	r15, r23
    5536:	c4 2f       	mov	r28, r20

	// for UDP we set a dummy remote port and UDP mode to 2
	// this allows to specify the target host/port in CIPSEND

	int ret;
	if (protMode==TCP_MODE)
    5538:	21 11       	cpse	r18, r1
    553a:	19 c0       	rjmp	.+50     	; 0x556e <_ZN6EspDrv11startClientEPKcjhh+0x4a>
		ret = sendCmd(F("AT+CIPSTART=%d,\"TCP\",\"%s\",%u"), 5000, sock, host, port);
    553c:	7f 93       	push	r23
    553e:	6f 93       	push	r22
    5540:	9f 93       	push	r25
    5542:	8f 93       	push	r24
    5544:	1f 92       	push	r1
    5546:	4f 93       	push	r20
    5548:	83 e1       	ldi	r24, 0x13	; 19
    554a:	8f 93       	push	r24
    554c:	88 e8       	ldi	r24, 0x88	; 136
    554e:	8f 93       	push	r24
    5550:	88 e2       	ldi	r24, 0x28	; 40
    5552:	97 e0       	ldi	r25, 0x07	; 7
    5554:	9f 93       	push	r25
    5556:	8f 93       	push	r24
    5558:	ad df       	rcall	.-166    	; 0x54b4 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
    555a:	fc 01       	movw	r30, r24
    555c:	8d b7       	in	r24, 0x3d	; 61
    555e:	9e b7       	in	r25, 0x3e	; 62
    5560:	0a 96       	adiw	r24, 0x0a	; 10
    5562:	0f b6       	in	r0, 0x3f	; 63
    5564:	f8 94       	cli
    5566:	9e bf       	out	0x3e, r25	; 62
    5568:	0f be       	out	0x3f, r0	; 63
    556a:	8d bf       	out	0x3d, r24	; 61
    556c:	3a c0       	rjmp	.+116    	; 0x55e2 <_ZN6EspDrv11startClientEPKcjhh+0xbe>
	else if (protMode==SSL_MODE)
    556e:	22 30       	cpi	r18, 0x02	; 2
    5570:	f1 f4       	brne	.+60     	; 0x55ae <_ZN6EspDrv11startClientEPKcjhh+0x8a>
	{
		// better to put the CIPSSLSIZE here because it is not supported before firmware 1.4
		sendCmd(F("AT+CIPSSLSIZE=4096"));
    5572:	68 ee       	ldi	r22, 0xE8	; 232
    5574:	73 e0       	ldi	r23, 0x03	; 3
    5576:	85 e1       	ldi	r24, 0x15	; 21
    5578:	97 e0       	ldi	r25, 0x07	; 7
    557a:	e0 de       	rcall	.-576    	; 0x533c <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
		ret = sendCmd(F("AT+CIPSTART=%d,\"SSL\",\"%s\",%u"), 5000, sock, host, port);
    557c:	ff 92       	push	r15
    557e:	0f 93       	push	r16
    5580:	1f 93       	push	r17
    5582:	df 93       	push	r29
    5584:	1f 92       	push	r1
    5586:	cf 93       	push	r28
    5588:	83 e1       	ldi	r24, 0x13	; 19
    558a:	8f 93       	push	r24
    558c:	88 e8       	ldi	r24, 0x88	; 136
    558e:	8f 93       	push	r24
    5590:	88 ef       	ldi	r24, 0xF8	; 248
    5592:	96 e0       	ldi	r25, 0x06	; 6
    5594:	9f 93       	push	r25
    5596:	8f 93       	push	r24
    5598:	8d df       	rcall	.-230    	; 0x54b4 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
    559a:	fc 01       	movw	r30, r24
    559c:	8d b7       	in	r24, 0x3d	; 61
    559e:	9e b7       	in	r25, 0x3e	; 62
    55a0:	0a 96       	adiw	r24, 0x0a	; 10
    55a2:	0f b6       	in	r0, 0x3f	; 63
    55a4:	f8 94       	cli
    55a6:	9e bf       	out	0x3e, r25	; 62
    55a8:	0f be       	out	0x3f, r0	; 63
    55aa:	8d bf       	out	0x3d, r24	; 61
    55ac:	1a c0       	rjmp	.+52     	; 0x55e2 <_ZN6EspDrv11startClientEPKcjhh+0xbe>
	}
	else if (protMode==UDP_MODE)
    55ae:	21 30       	cpi	r18, 0x01	; 1
    55b0:	c1 f4       	brne	.+48     	; 0x55e2 <_ZN6EspDrv11startClientEPKcjhh+0xbe>
		ret = sendCmd(F("AT+CIPSTART=%d,\"UDP\",\"%s\",0,%u,2"), 5000, sock, host, port);
    55b2:	7f 93       	push	r23
    55b4:	6f 93       	push	r22
    55b6:	9f 93       	push	r25
    55b8:	8f 93       	push	r24
    55ba:	1f 92       	push	r1
    55bc:	4f 93       	push	r20
    55be:	83 e1       	ldi	r24, 0x13	; 19
    55c0:	8f 93       	push	r24
    55c2:	88 e8       	ldi	r24, 0x88	; 136
    55c4:	8f 93       	push	r24
    55c6:	87 ed       	ldi	r24, 0xD7	; 215
    55c8:	96 e0       	ldi	r25, 0x06	; 6
    55ca:	9f 93       	push	r25
    55cc:	8f 93       	push	r24
    55ce:	72 df       	rcall	.-284    	; 0x54b4 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
    55d0:	fc 01       	movw	r30, r24
    55d2:	8d b7       	in	r24, 0x3d	; 61
    55d4:	9e b7       	in	r25, 0x3e	; 62
    55d6:	0a 96       	adiw	r24, 0x0a	; 10
    55d8:	0f b6       	in	r0, 0x3f	; 63
    55da:	f8 94       	cli
    55dc:	9e bf       	out	0x3e, r25	; 62
    55de:	0f be       	out	0x3f, r0	; 63
    55e0:	8d bf       	out	0x3d, r24	; 61

	return ret==TAG_OK;
    55e2:	81 e0       	ldi	r24, 0x01	; 1
    55e4:	ef 2b       	or	r30, r31
    55e6:	09 f0       	breq	.+2      	; 0x55ea <_ZN6EspDrv11startClientEPKcjhh+0xc6>
    55e8:	80 e0       	ldi	r24, 0x00	; 0
}
    55ea:	df 91       	pop	r29
    55ec:	cf 91       	pop	r28
    55ee:	1f 91       	pop	r17
    55f0:	0f 91       	pop	r16
    55f2:	ff 90       	pop	r15
    55f4:	08 95       	ret

000055f6 <_ZN6EspDrv10stopClientEh>:
// Start server TCP on port specified
void EspDrv::stopClient(uint8_t sock)
{
	LOGDEBUG1(F("> stopClient"), sock);

	int ret = sendCmd(F("AT+CIPCLOSE=%d"), 4000, sock);
    55f6:	1f 92       	push	r1
    55f8:	8f 93       	push	r24
    55fa:	8f e0       	ldi	r24, 0x0F	; 15
    55fc:	8f 93       	push	r24
    55fe:	80 ea       	ldi	r24, 0xA0	; 160
    5600:	8f 93       	push	r24
    5602:	88 ec       	ldi	r24, 0xC8	; 200
    5604:	96 e0       	ldi	r25, 0x06	; 6
    5606:	9f 93       	push	r25
    5608:	8f 93       	push	r24
    560a:	54 df       	rcall	.-344    	; 0x54b4 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
}
    560c:	0f 90       	pop	r0
    560e:	0f 90       	pop	r0
    5610:	0f 90       	pop	r0
    5612:	0f 90       	pop	r0
    5614:	0f 90       	pop	r0
    5616:	0f 90       	pop	r0
    5618:	08 95       	ret

0000561a <_ZN6EspDrv11wifiConnectEPKcS1_>:
}



bool EspDrv::wifiConnect(const char* ssid, const char* passphrase)
{
    561a:	cf 93       	push	r28
    561c:	df 93       	push	r29
    561e:	d8 2f       	mov	r29, r24
    5620:	c9 2f       	mov	r28, r25
	// TODO
	// Escape character syntax is needed if "SSID" or "password" contains
	// any special characters (',', '"' and '/')

    // connect to access point, use CUR mode to avoid connection at boot
	int ret = sendCmd(F("AT+CWJAP_CUR=\"%s\",\"%s\""), 20000, ssid, passphrase);
    5622:	7f 93       	push	r23
    5624:	6f 93       	push	r22
    5626:	9f 93       	push	r25
    5628:	8f 93       	push	r24
    562a:	8e e4       	ldi	r24, 0x4E	; 78
    562c:	8f 93       	push	r24
    562e:	80 e2       	ldi	r24, 0x20	; 32
    5630:	8f 93       	push	r24
    5632:	82 eb       	ldi	r24, 0xB2	; 178
    5634:	97 e0       	ldi	r25, 0x07	; 7
    5636:	9f 93       	push	r25
    5638:	8f 93       	push	r24
    563a:	3c df       	rcall	.-392    	; 0x54b4 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>

	if (ret==TAG_OK)
    563c:	2d b7       	in	r18, 0x3d	; 61
    563e:	3e b7       	in	r19, 0x3e	; 62
    5640:	28 5f       	subi	r18, 0xF8	; 248
    5642:	3f 4f       	sbci	r19, 0xFF	; 255
    5644:	0f b6       	in	r0, 0x3f	; 63
    5646:	f8 94       	cli
    5648:	3e bf       	out	0x3e, r19	; 62
    564a:	0f be       	out	0x3f, r0	; 63
    564c:	2d bf       	out	0x3d, r18	; 61
	{
		LOGINFO1(F("Connected to"), ssid);
    564e:	6d e7       	ldi	r22, 0x7D	; 125
    5650:	74 e0       	ldi	r23, 0x04	; 4
	// any special characters (',', '"' and '/')

    // connect to access point, use CUR mode to avoid connection at boot
	int ret = sendCmd(F("AT+CWJAP_CUR=\"%s\",\"%s\""), 20000, ssid, passphrase);

	if (ret==TAG_OK)
    5652:	89 2b       	or	r24, r25
    5654:	c1 f4       	brne	.+48     	; 0x5686 <_ZN6EspDrv11wifiConnectEPKcS1_+0x6c>
	{
		LOGINFO1(F("Connected to"), ssid);
    5656:	8d e1       	ldi	r24, 0x1D	; 29
    5658:	95 e0       	ldi	r25, 0x05	; 5
    565a:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    565e:	65 ea       	ldi	r22, 0xA5	; 165
    5660:	77 e0       	ldi	r23, 0x07	; 7
    5662:	8d e1       	ldi	r24, 0x1D	; 29
    5664:	95 e0       	ldi	r25, 0x05	; 5
    5666:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    566a:	61 ee       	ldi	r22, 0xE1	; 225
    566c:	72 e0       	ldi	r23, 0x02	; 2
    566e:	8d e1       	ldi	r24, 0x1D	; 29
    5670:	95 e0       	ldi	r25, 0x05	; 5
    5672:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    5676:	6d 2f       	mov	r22, r29
    5678:	7c 2f       	mov	r23, r28
    567a:	8d e1       	ldi	r24, 0x1D	; 29
    567c:	95 e0       	ldi	r25, 0x05	; 5
    567e:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>
		return true;
    5682:	81 e0       	ldi	r24, 0x01	; 1
    5684:	1f c0       	rjmp	.+62     	; 0x56c4 <_ZN6EspDrv11wifiConnectEPKcS1_+0xaa>
	}

	LOGWARN1(F("Failed connecting to"), ssid);
    5686:	8d e1       	ldi	r24, 0x1D	; 29
    5688:	95 e0       	ldi	r25, 0x05	; 5
    568a:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    568e:	60 e9       	ldi	r22, 0x90	; 144
    5690:	77 e0       	ldi	r23, 0x07	; 7
    5692:	8d e1       	ldi	r24, 0x1D	; 29
    5694:	95 e0       	ldi	r25, 0x05	; 5
    5696:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN5Print5printEPK19__FlashStringHelper>
    569a:	61 ee       	ldi	r22, 0xE1	; 225
    569c:	72 e0       	ldi	r23, 0x02	; 2
    569e:	8d e1       	ldi	r24, 0x1D	; 29
    56a0:	95 e0       	ldi	r25, 0x05	; 5
    56a2:	0e 94 46 13 	call	0x268c	; 0x268c <_ZN5Print5printEPKc>
    56a6:	6d 2f       	mov	r22, r29
    56a8:	7c 2f       	mov	r23, r28
    56aa:	8d e1       	ldi	r24, 0x1D	; 29
    56ac:	95 e0       	ldi	r25, 0x05	; 5
    56ae:	0e 94 71 13 	call	0x26e2	; 0x26e2 <_ZN5Print7printlnEPKc>

	// clean additional messages logged after the FAIL tag
	delay(1000);
    56b2:	68 ee       	ldi	r22, 0xE8	; 232
    56b4:	73 e0       	ldi	r23, 0x03	; 3
    56b6:	80 e0       	ldi	r24, 0x00	; 0
    56b8:	90 e0       	ldi	r25, 0x00	; 0
    56ba:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <delay>
	espEmptyBuf(false);
    56be:	80 e0       	ldi	r24, 0x00	; 0
    56c0:	df dc       	rcall	.-1602   	; 0x5080 <_ZN6EspDrv11espEmptyBufEb>

	return false;
    56c2:	80 e0       	ldi	r24, 0x00	; 0
}
    56c4:	df 91       	pop	r29
    56c6:	cf 91       	pop	r28
    56c8:	08 95       	ret

000056ca <_ZN6EspDrv9timedReadEv>:
}


// copied from Serial::timedRead
int EspDrv::timedRead()
{
    56ca:	cf 92       	push	r12
    56cc:	df 92       	push	r13
    56ce:	ef 92       	push	r14
    56d0:	ff 92       	push	r15
  int _timeout = 1000;
  int c;
  long _startMillis = millis();
    56d2:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    56d6:	6b 01       	movw	r12, r22
    56d8:	7c 01       	movw	r14, r24
  do
  {
    c = espSerial->read();
    56da:	80 91 8d 06 	lds	r24, 0x068D	; 0x80068d <_ZN6EspDrv9espSerialE>
    56de:	90 91 8e 06 	lds	r25, 0x068E	; 0x80068e <_ZN6EspDrv9espSerialE+0x1>
    56e2:	dc 01       	movw	r26, r24
    56e4:	ed 91       	ld	r30, X+
    56e6:	fc 91       	ld	r31, X
    56e8:	02 84       	ldd	r0, Z+10	; 0x0a
    56ea:	f3 85       	ldd	r31, Z+11	; 0x0b
    56ec:	e0 2d       	mov	r30, r0
    56ee:	19 95       	eicall
    if (c >= 0) return c;
    56f0:	97 ff       	sbrs	r25, 7
    56f2:	0f c0       	rjmp	.+30     	; 0x5712 <_ZN6EspDrv9timedReadEv+0x48>
  } while(millis() - _startMillis < _timeout);
    56f4:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
int EspDrv::timedRead()
{
  int _timeout = 1000;
  int c;
  long _startMillis = millis();
  do
    56f8:	dc 01       	movw	r26, r24
    56fa:	cb 01       	movw	r24, r22
    56fc:	8c 19       	sub	r24, r12
    56fe:	9d 09       	sbc	r25, r13
    5700:	ae 09       	sbc	r26, r14
    5702:	bf 09       	sbc	r27, r15
    5704:	88 3e       	cpi	r24, 0xE8	; 232
    5706:	93 40       	sbci	r25, 0x03	; 3
    5708:	a1 05       	cpc	r26, r1
    570a:	b1 05       	cpc	r27, r1
    570c:	30 f3       	brcs	.-52     	; 0x56da <_ZN6EspDrv9timedReadEv+0x10>
  {
    c = espSerial->read();
    if (c >= 0) return c;
  } while(millis() - _startMillis < _timeout);

  return -1; // -1 indicates timeout
    570e:	8f ef       	ldi	r24, 0xFF	; 255
    5710:	9f ef       	ldi	r25, 0xFF	; 255
}
    5712:	ff 90       	pop	r15
    5714:	ef 90       	pop	r14
    5716:	df 90       	pop	r13
    5718:	cf 90       	pop	r12
    571a:	08 95       	ret

0000571c <_ZN6EspDrv10getDataBufEhPhj>:
 * Receive the data into a buffer.
 * It reads up to bufSize bytes.
 * @return	received data size for success else -1.
 */
int EspDrv::getDataBuf(uint8_t connId, uint8_t *buf, uint16_t bufSize)
{
    571c:	cf 92       	push	r12
    571e:	df 92       	push	r13
    5720:	ef 92       	push	r14
    5722:	ff 92       	push	r15
    5724:	0f 93       	push	r16
    5726:	1f 93       	push	r17
    5728:	cf 93       	push	r28
    572a:	df 93       	push	r29
    572c:	8a 01       	movw	r16, r20
	if (connId!=_connId)
    572e:	90 91 7a 06 	lds	r25, 0x067A	; 0x80067a <_ZN6EspDrv7_connIdE>
    5732:	98 13       	cpse	r25, r24
    5734:	34 c0       	rjmp	.+104    	; 0x579e <_ZN6EspDrv10getDataBufEhPhj+0x82>
		return false;

	if(_bufPos<bufSize)
    5736:	80 91 7b 06 	lds	r24, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    573a:	90 91 7c 06 	lds	r25, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    573e:	a0 91 7d 06 	lds	r26, 0x067D	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    5742:	b0 91 7e 06 	lds	r27, 0x067E	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    5746:	6a 01       	movw	r12, r20
    5748:	e1 2c       	mov	r14, r1
    574a:	f1 2c       	mov	r15, r1
    574c:	8c 15       	cp	r24, r12
    574e:	9d 05       	cpc	r25, r13
    5750:	ae 05       	cpc	r26, r14
    5752:	bf 05       	cpc	r27, r15
    5754:	0c f4       	brge	.+2      	; 0x5758 <_ZN6EspDrv10getDataBufEhPhj+0x3c>
		bufSize = _bufPos;
    5756:	8c 01       	movw	r16, r24
    5758:	eb 01       	movw	r28, r22
    575a:	7b 01       	movw	r14, r22
    575c:	e0 0e       	add	r14, r16
    575e:	f1 1e       	adc	r15, r17
	
	for(int i=0; i<bufSize; i++)
    5760:	ce 15       	cp	r28, r14
    5762:	df 05       	cpc	r29, r15
    5764:	d1 f0       	breq	.+52     	; 0x579a <_ZN6EspDrv10getDataBufEhPhj+0x7e>
	{
		int c = timedRead();
    5766:	b1 df       	rcall	.-158    	; 0x56ca <_ZN6EspDrv9timedReadEv>
		//LOGDEBUG(c);
		if(c==-1)
    5768:	8f 3f       	cpi	r24, 0xFF	; 255
    576a:	2f ef       	ldi	r18, 0xFF	; 255
    576c:	92 07       	cpc	r25, r18
    576e:	d1 f0       	breq	.+52     	; 0x57a4 <_ZN6EspDrv10getDataBufEhPhj+0x88>
			return -1;
		
		buf[i] = (char)c;
    5770:	89 93       	st	Y+, r24
		_bufPos--;
    5772:	80 91 7b 06 	lds	r24, 0x067B	; 0x80067b <_ZN6EspDrv7_bufPosE>
    5776:	90 91 7c 06 	lds	r25, 0x067C	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    577a:	a0 91 7d 06 	lds	r26, 0x067D	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    577e:	b0 91 7e 06 	lds	r27, 0x067E	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
    5782:	01 97       	sbiw	r24, 0x01	; 1
    5784:	a1 09       	sbc	r26, r1
    5786:	b1 09       	sbc	r27, r1
    5788:	80 93 7b 06 	sts	0x067B, r24	; 0x80067b <_ZN6EspDrv7_bufPosE>
    578c:	90 93 7c 06 	sts	0x067C, r25	; 0x80067c <_ZN6EspDrv7_bufPosE+0x1>
    5790:	a0 93 7d 06 	sts	0x067D, r26	; 0x80067d <_ZN6EspDrv7_bufPosE+0x2>
    5794:	b0 93 7e 06 	sts	0x067E, r27	; 0x80067e <_ZN6EspDrv7_bufPosE+0x3>
		return false;

	if(_bufPos<bufSize)
		bufSize = _bufPos;
	
	for(int i=0; i<bufSize; i++)
    5798:	e3 cf       	rjmp	.-58     	; 0x5760 <_ZN6EspDrv10getDataBufEhPhj+0x44>
		
		buf[i] = (char)c;
		_bufPos--;
	}

	return bufSize;
    579a:	c8 01       	movw	r24, r16
    579c:	05 c0       	rjmp	.+10     	; 0x57a8 <_ZN6EspDrv10getDataBufEhPhj+0x8c>
 * @return	received data size for success else -1.
 */
int EspDrv::getDataBuf(uint8_t connId, uint8_t *buf, uint16_t bufSize)
{
	if (connId!=_connId)
		return false;
    579e:	80 e0       	ldi	r24, 0x00	; 0
    57a0:	90 e0       	ldi	r25, 0x00	; 0
    57a2:	02 c0       	rjmp	.+4      	; 0x57a8 <_ZN6EspDrv10getDataBufEhPhj+0x8c>
	for(int i=0; i<bufSize; i++)
	{
		int c = timedRead();
		//LOGDEBUG(c);
		if(c==-1)
			return -1;
    57a4:	8f ef       	ldi	r24, 0xFF	; 255
    57a6:	9f ef       	ldi	r25, 0xFF	; 255
		buf[i] = (char)c;
		_bufPos--;
	}

	return bufSize;
}
    57a8:	df 91       	pop	r29
    57aa:	cf 91       	pop	r28
    57ac:	1f 91       	pop	r17
    57ae:	0f 91       	pop	r16
    57b0:	ff 90       	pop	r15
    57b2:	ef 90       	pop	r14
    57b4:	df 90       	pop	r13
    57b6:	cf 90       	pop	r12
    57b8:	08 95       	ret

000057ba <_GLOBAL__sub_I_ESPTAGS>:
  return -1; // -1 indicates timeout
}



EspDrv espDrv;
    57ba:	0f 93       	push	r16
    57bc:	00 e0       	ldi	r16, 0x00	; 0
    57be:	20 e0       	ldi	r18, 0x00	; 0
    57c0:	40 e0       	ldi	r20, 0x00	; 0
    57c2:	60 e0       	ldi	r22, 0x00	; 0
    57c4:	8f e8       	ldi	r24, 0x8F	; 143
    57c6:	96 e0       	ldi	r25, 0x06	; 6
    57c8:	0e 94 ba 12 	call	0x2574	; 0x2574 <_ZN9IPAddressC1Ehhhh>
} TagsEnum;


Stream *EspDrv::espSerial;

RingBuffer EspDrv::ringBuf(32);
    57cc:	60 e2       	ldi	r22, 0x20	; 32
    57ce:	70 e0       	ldi	r23, 0x00	; 0
    57d0:	85 e8       	ldi	r24, 0x85	; 133
    57d2:	96 e0       	ldi	r25, 0x06	; 6
  return -1; // -1 indicates timeout
}



EspDrv espDrv;
    57d4:	0f 91       	pop	r16
} TagsEnum;


Stream *EspDrv::espSerial;

RingBuffer EspDrv::ringBuf(32);
    57d6:	16 c0       	rjmp	.+44     	; 0x5804 <_ZN10RingBufferC1Ej>

000057d8 <_GLOBAL__sub_D_ESPTAGS>:
    57d8:	85 e8       	ldi	r24, 0x85	; 133
    57da:	96 e0       	ldi	r25, 0x06	; 6
    57dc:	00 c0       	rjmp	.+0      	; 0x57de <_ZN10RingBufferD1Ev>

000057de <_ZN10RingBufferD1Ev>:
void RingBuffer::getStr(char * destination, unsigned int skipChars)
{
	int len = ringBufP-ringBuf-skipChars;

	// copy buffer to destination string
	strncpy(destination, ringBuf, len);
    57de:	08 95       	ret

000057e0 <_ZN10RingBuffer5resetEv>:
    57e0:	fc 01       	movw	r30, r24
    57e2:	22 81       	ldd	r18, Z+2	; 0x02
    57e4:	33 81       	ldd	r19, Z+3	; 0x03
    57e6:	37 83       	std	Z+7, r19	; 0x07
    57e8:	26 83       	std	Z+6, r18	; 0x06
    57ea:	08 95       	ret

000057ec <_ZN10RingBuffer4initEv>:
    57ec:	fc 01       	movw	r30, r24
    57ee:	82 81       	ldd	r24, Z+2	; 0x02
    57f0:	93 81       	ldd	r25, Z+3	; 0x03
    57f2:	97 83       	std	Z+7, r25	; 0x07
    57f4:	86 83       	std	Z+6, r24	; 0x06
    57f6:	40 81       	ld	r20, Z
    57f8:	51 81       	ldd	r21, Z+1	; 0x01
    57fa:	4f 5f       	subi	r20, 0xFF	; 255
    57fc:	5f 4f       	sbci	r21, 0xFF	; 255
    57fe:	60 e0       	ldi	r22, 0x00	; 0
    5800:	70 e0       	ldi	r23, 0x00	; 0
    5802:	7a c5       	rjmp	.+2804   	; 0x62f8 <memset>

00005804 <_ZN10RingBufferC1Ej>:
    5804:	0f 93       	push	r16
    5806:	1f 93       	push	r17
    5808:	cf 93       	push	r28
    580a:	df 93       	push	r29
    580c:	8c 01       	movw	r16, r24
    580e:	eb 01       	movw	r28, r22
    5810:	fc 01       	movw	r30, r24
    5812:	71 83       	std	Z+1, r23	; 0x01
    5814:	60 83       	st	Z, r22
    5816:	cb 01       	movw	r24, r22
    5818:	01 96       	adiw	r24, 0x01	; 1
    581a:	0e 94 d3 12 	call	0x25a6	; 0x25a6 <_Znaj>
    581e:	f8 01       	movw	r30, r16
    5820:	93 83       	std	Z+3, r25	; 0x03
    5822:	82 83       	std	Z+2, r24	; 0x02
    5824:	c8 0f       	add	r28, r24
    5826:	d9 1f       	adc	r29, r25
    5828:	d5 83       	std	Z+5, r29	; 0x05
    582a:	c4 83       	std	Z+4, r28	; 0x04
    582c:	c8 01       	movw	r24, r16
    582e:	df 91       	pop	r29
    5830:	cf 91       	pop	r28
    5832:	1f 91       	pop	r17
    5834:	0f 91       	pop	r16
    5836:	da cf       	rjmp	.-76     	; 0x57ec <_ZN10RingBuffer4initEv>

00005838 <_ZN10RingBuffer4pushEc>:
    5838:	fc 01       	movw	r30, r24
    583a:	a6 81       	ldd	r26, Z+6	; 0x06
    583c:	b7 81       	ldd	r27, Z+7	; 0x07
    583e:	6c 93       	st	X, r22
    5840:	86 81       	ldd	r24, Z+6	; 0x06
    5842:	97 81       	ldd	r25, Z+7	; 0x07
    5844:	01 96       	adiw	r24, 0x01	; 1
    5846:	97 83       	std	Z+7, r25	; 0x07
    5848:	86 83       	std	Z+6, r24	; 0x06
    584a:	24 81       	ldd	r18, Z+4	; 0x04
    584c:	35 81       	ldd	r19, Z+5	; 0x05
    584e:	82 17       	cp	r24, r18
    5850:	93 07       	cpc	r25, r19
    5852:	20 f0       	brcs	.+8      	; 0x585c <_ZN10RingBuffer4pushEc+0x24>
    5854:	82 81       	ldd	r24, Z+2	; 0x02
    5856:	93 81       	ldd	r25, Z+3	; 0x03
    5858:	97 83       	std	Z+7, r25	; 0x07
    585a:	86 83       	std	Z+6, r24	; 0x06
    585c:	08 95       	ret

0000585e <_ZN10RingBuffer8endsWithEPKc>:
    585e:	cf 93       	push	r28
    5860:	df 93       	push	r29
    5862:	dc 01       	movw	r26, r24
    5864:	fb 01       	movw	r30, r22
    5866:	01 90       	ld	r0, Z+
    5868:	00 20       	and	r0, r0
    586a:	e9 f7       	brne	.-6      	; 0x5866 <_ZN10RingBuffer8endsWithEPKc+0x8>
    586c:	31 97       	sbiw	r30, 0x01	; 1
    586e:	9f 01       	movw	r18, r30
    5870:	26 1b       	sub	r18, r22
    5872:	37 0b       	sbc	r19, r23
    5874:	16 96       	adiw	r26, 0x06	; 6
    5876:	ed 91       	ld	r30, X+
    5878:	fc 91       	ld	r31, X
    587a:	17 97       	sbiw	r26, 0x07	; 7
    587c:	e2 1b       	sub	r30, r18
    587e:	f3 0b       	sbc	r31, r19
    5880:	12 96       	adiw	r26, 0x02	; 2
    5882:	8d 91       	ld	r24, X+
    5884:	9c 91       	ld	r25, X
    5886:	13 97       	sbiw	r26, 0x03	; 3
    5888:	e8 17       	cp	r30, r24
    588a:	f9 07       	cpc	r31, r25
    588c:	28 f4       	brcc	.+10     	; 0x5898 <_ZN10RingBuffer8endsWithEPKc+0x3a>
    588e:	4d 91       	ld	r20, X+
    5890:	5c 91       	ld	r21, X
    5892:	11 97       	sbiw	r26, 0x01	; 1
    5894:	e4 0f       	add	r30, r20
    5896:	f5 1f       	adc	r31, r21
    5898:	26 0f       	add	r18, r22
    589a:	37 1f       	adc	r19, r23
    589c:	eb 01       	movw	r28, r22
    589e:	62 17       	cp	r22, r18
    58a0:	73 07       	cpc	r23, r19
    58a2:	80 f4       	brcc	.+32     	; 0x58c4 <_ZN10RingBuffer8endsWithEPKc+0x66>
    58a4:	6f 5f       	subi	r22, 0xFF	; 255
    58a6:	7f 4f       	sbci	r23, 0xFF	; 255
    58a8:	58 81       	ld	r21, Y
    58aa:	40 81       	ld	r20, Z
    58ac:	54 13       	cpse	r21, r20
    58ae:	0c c0       	rjmp	.+24     	; 0x58c8 <_ZN10RingBuffer8endsWithEPKc+0x6a>
    58b0:	31 96       	adiw	r30, 0x01	; 1
    58b2:	14 96       	adiw	r26, 0x04	; 4
    58b4:	4d 91       	ld	r20, X+
    58b6:	5c 91       	ld	r21, X
    58b8:	15 97       	sbiw	r26, 0x05	; 5
    58ba:	e4 17       	cp	r30, r20
    58bc:	f5 07       	cpc	r31, r21
    58be:	71 f7       	brne	.-36     	; 0x589c <_ZN10RingBuffer8endsWithEPKc+0x3e>
    58c0:	fc 01       	movw	r30, r24
    58c2:	ec cf       	rjmp	.-40     	; 0x589c <_ZN10RingBuffer8endsWithEPKc+0x3e>
    58c4:	81 e0       	ldi	r24, 0x01	; 1
    58c6:	01 c0       	rjmp	.+2      	; 0x58ca <_ZN10RingBuffer8endsWithEPKc+0x6c>
    58c8:	80 e0       	ldi	r24, 0x00	; 0
    58ca:	df 91       	pop	r29
    58cc:	cf 91       	pop	r28
    58ce:	08 95       	ret

000058d0 <_ZN10RingBuffer7getStrNEPcjj>:
	// terminate output string
	//destination[len]=0;
}

void RingBuffer::getStrN(char * destination, unsigned int skipChars, unsigned int num)
{
    58d0:	fc 01       	movw	r30, r24
    58d2:	cb 01       	movw	r24, r22
	int len = ringBufP-ringBuf-skipChars;
    58d4:	62 81       	ldd	r22, Z+2	; 0x02
    58d6:	73 81       	ldd	r23, Z+3	; 0x03
    58d8:	06 80       	ldd	r0, Z+6	; 0x06
    58da:	f7 81       	ldd	r31, Z+7	; 0x07
    58dc:	e0 2d       	mov	r30, r0
    58de:	e6 1b       	sub	r30, r22
    58e0:	f7 0b       	sbc	r31, r23
    58e2:	e4 1b       	sub	r30, r20
    58e4:	f5 0b       	sbc	r31, r21

	if (len>num)
    58e6:	2e 17       	cp	r18, r30
    58e8:	3f 07       	cpc	r19, r31
    58ea:	10 f0       	brcs	.+4      	; 0x58f0 <_ZN10RingBuffer7getStrNEPcjj+0x20>
	//destination[len]=0;
}

void RingBuffer::getStrN(char * destination, unsigned int skipChars, unsigned int num)
{
	int len = ringBufP-ringBuf-skipChars;
    58ec:	af 01       	movw	r20, r30
    58ee:	01 c0       	rjmp	.+2      	; 0x58f2 <_ZN10RingBuffer7getStrNEPcjj+0x22>

	if (len>num)
		len=num;
    58f0:	a9 01       	movw	r20, r18

	// copy buffer to destination string
	strncpy(destination, ringBuf, len);
    58f2:	19 c5       	rjmp	.+2610   	; 0x6326 <strncpy>

000058f4 <_ZN6Stream9timedReadEv>:
}

// reads data from the stream until the target string of given length is found
// returns true if target string is found, false if timed out
bool Stream::find(char *target, size_t length)
{
    58f4:	0f 93       	push	r16
    58f6:	1f 93       	push	r17
    58f8:	cf 93       	push	r28
    58fa:	df 93       	push	r29
    58fc:	ec 01       	movw	r28, r24
    58fe:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    5902:	68 87       	std	Y+8, r22	; 0x08
    5904:	79 87       	std	Y+9, r23	; 0x09
    5906:	8a 87       	std	Y+10, r24	; 0x0a
    5908:	9b 87       	std	Y+11, r25	; 0x0b
    590a:	e8 81       	ld	r30, Y
    590c:	f9 81       	ldd	r31, Y+1	; 0x01
    590e:	02 84       	ldd	r0, Z+10	; 0x0a
    5910:	f3 85       	ldd	r31, Z+11	; 0x0b
    5912:	e0 2d       	mov	r30, r0
    5914:	ce 01       	movw	r24, r28
    5916:	19 95       	eicall
    5918:	97 ff       	sbrs	r25, 7
    591a:	17 c0       	rjmp	.+46     	; 0x594a <_ZN6Stream9timedReadEv+0x56>
    591c:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    5920:	08 85       	ldd	r16, Y+8	; 0x08
    5922:	19 85       	ldd	r17, Y+9	; 0x09
    5924:	2a 85       	ldd	r18, Y+10	; 0x0a
    5926:	3b 85       	ldd	r19, Y+11	; 0x0b
    5928:	dc 01       	movw	r26, r24
    592a:	cb 01       	movw	r24, r22
    592c:	80 1b       	sub	r24, r16
    592e:	91 0b       	sbc	r25, r17
    5930:	a2 0b       	sbc	r26, r18
    5932:	b3 0b       	sbc	r27, r19
    5934:	0c 81       	ldd	r16, Y+4	; 0x04
    5936:	1d 81       	ldd	r17, Y+5	; 0x05
    5938:	2e 81       	ldd	r18, Y+6	; 0x06
    593a:	3f 81       	ldd	r19, Y+7	; 0x07
    593c:	80 17       	cp	r24, r16
    593e:	91 07       	cpc	r25, r17
    5940:	a2 07       	cpc	r26, r18
    5942:	b3 07       	cpc	r27, r19
    5944:	10 f3       	brcs	.-60     	; 0x590a <_ZN6Stream9timedReadEv+0x16>
    5946:	8f ef       	ldi	r24, 0xFF	; 255
    5948:	9f ef       	ldi	r25, 0xFF	; 255
    594a:	df 91       	pop	r29
    594c:	cf 91       	pop	r28
    594e:	1f 91       	pop	r17
    5950:	0f 91       	pop	r16
    5952:	08 95       	ret

00005954 <_ZN6Stream9timedPeekEv>:
    5954:	0f 93       	push	r16
    5956:	1f 93       	push	r17
    5958:	cf 93       	push	r28
    595a:	df 93       	push	r29
    595c:	ec 01       	movw	r28, r24
    595e:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    5962:	68 87       	std	Y+8, r22	; 0x08
    5964:	79 87       	std	Y+9, r23	; 0x09
    5966:	8a 87       	std	Y+10, r24	; 0x0a
    5968:	9b 87       	std	Y+11, r25	; 0x0b
    596a:	e8 81       	ld	r30, Y
    596c:	f9 81       	ldd	r31, Y+1	; 0x01
    596e:	04 84       	ldd	r0, Z+12	; 0x0c
    5970:	f5 85       	ldd	r31, Z+13	; 0x0d
    5972:	e0 2d       	mov	r30, r0
    5974:	ce 01       	movw	r24, r28
    5976:	19 95       	eicall
    5978:	97 ff       	sbrs	r25, 7
    597a:	17 c0       	rjmp	.+46     	; 0x59aa <_ZN6Stream9timedPeekEv+0x56>
    597c:	0e 94 84 15 	call	0x2b08	; 0x2b08 <millis>
    5980:	08 85       	ldd	r16, Y+8	; 0x08
    5982:	19 85       	ldd	r17, Y+9	; 0x09
    5984:	2a 85       	ldd	r18, Y+10	; 0x0a
    5986:	3b 85       	ldd	r19, Y+11	; 0x0b
    5988:	dc 01       	movw	r26, r24
    598a:	cb 01       	movw	r24, r22
    598c:	80 1b       	sub	r24, r16
    598e:	91 0b       	sbc	r25, r17
    5990:	a2 0b       	sbc	r26, r18
    5992:	b3 0b       	sbc	r27, r19
    5994:	0c 81       	ldd	r16, Y+4	; 0x04
    5996:	1d 81       	ldd	r17, Y+5	; 0x05
    5998:	2e 81       	ldd	r18, Y+6	; 0x06
    599a:	3f 81       	ldd	r19, Y+7	; 0x07
    599c:	80 17       	cp	r24, r16
    599e:	91 07       	cpc	r25, r17
    59a0:	a2 07       	cpc	r26, r18
    59a2:	b3 07       	cpc	r27, r19
    59a4:	10 f3       	brcs	.-60     	; 0x596a <_ZN6Stream9timedPeekEv+0x16>
    59a6:	8f ef       	ldi	r24, 0xFF	; 255
    59a8:	9f ef       	ldi	r25, 0xFF	; 255
    59aa:	df 91       	pop	r29
    59ac:	cf 91       	pop	r28
    59ae:	1f 91       	pop	r17
    59b0:	0f 91       	pop	r16
    59b2:	08 95       	ret

000059b4 <_ZN6Stream13peekNextDigitE13LookaheadModeb>:
    59b4:	0f 93       	push	r16
    59b6:	1f 93       	push	r17
    59b8:	cf 93       	push	r28
    59ba:	df 93       	push	r29
    59bc:	ec 01       	movw	r28, r24
    59be:	16 2f       	mov	r17, r22
    59c0:	04 2f       	mov	r16, r20
    59c2:	ce 01       	movw	r24, r28
    59c4:	c7 df       	rcall	.-114    	; 0x5954 <_ZN6Stream9timedPeekEv>
    59c6:	97 fd       	sbrc	r25, 7
    59c8:	2b c0       	rjmp	.+86     	; 0x5a20 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x6c>
    59ca:	8d 32       	cpi	r24, 0x2D	; 45
    59cc:	91 05       	cpc	r25, r1
    59ce:	09 f1       	breq	.+66     	; 0x5a12 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x5e>
    59d0:	9c 01       	movw	r18, r24
    59d2:	20 53       	subi	r18, 0x30	; 48
    59d4:	31 09       	sbc	r19, r1
    59d6:	2a 30       	cpi	r18, 0x0A	; 10
    59d8:	31 05       	cpc	r19, r1
    59da:	10 f1       	brcs	.+68     	; 0x5a20 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x6c>
    59dc:	00 23       	and	r16, r16
    59de:	19 f0       	breq	.+6      	; 0x59e6 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x32>
    59e0:	8e 32       	cpi	r24, 0x2E	; 46
    59e2:	91 05       	cpc	r25, r1
    59e4:	c1 f0       	breq	.+48     	; 0x5a16 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x62>
    59e6:	11 30       	cpi	r17, 0x01	; 1
    59e8:	c9 f0       	breq	.+50     	; 0x5a1c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x68>
    59ea:	12 30       	cpi	r17, 0x02	; 2
    59ec:	51 f4       	brne	.+20     	; 0x5a02 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4e>
    59ee:	8d 30       	cpi	r24, 0x0D	; 13
    59f0:	91 05       	cpc	r25, r1
    59f2:	39 f0       	breq	.+14     	; 0x5a02 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4e>
    59f4:	24 f4       	brge	.+8      	; 0x59fe <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4a>
    59f6:	09 97       	sbiw	r24, 0x09	; 9
    59f8:	02 97       	sbiw	r24, 0x02	; 2
    59fa:	18 f0       	brcs	.+6      	; 0x5a02 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4e>
    59fc:	0f c0       	rjmp	.+30     	; 0x5a1c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x68>
    59fe:	80 97       	sbiw	r24, 0x20	; 32
    5a00:	69 f4       	brne	.+26     	; 0x5a1c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x68>
    5a02:	e8 81       	ld	r30, Y
    5a04:	f9 81       	ldd	r31, Y+1	; 0x01
    5a06:	02 84       	ldd	r0, Z+10	; 0x0a
    5a08:	f3 85       	ldd	r31, Z+11	; 0x0b
    5a0a:	e0 2d       	mov	r30, r0
    5a0c:	ce 01       	movw	r24, r28
    5a0e:	19 95       	eicall
    5a10:	d8 cf       	rjmp	.-80     	; 0x59c2 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0xe>
    5a12:	8d e2       	ldi	r24, 0x2D	; 45
    5a14:	01 c0       	rjmp	.+2      	; 0x5a18 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x64>
    5a16:	8e e2       	ldi	r24, 0x2E	; 46
    5a18:	90 e0       	ldi	r25, 0x00	; 0
    5a1a:	02 c0       	rjmp	.+4      	; 0x5a20 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x6c>
    5a1c:	8f ef       	ldi	r24, 0xFF	; 255
    5a1e:	9f ef       	ldi	r25, 0xFF	; 255
    5a20:	df 91       	pop	r29
    5a22:	cf 91       	pop	r28
    5a24:	1f 91       	pop	r17
    5a26:	0f 91       	pop	r16
    5a28:	08 95       	ret

00005a2a <_ZN6Stream8parseIntE13LookaheadModec>:
    5a2a:	bf 92       	push	r11
    5a2c:	cf 92       	push	r12
    5a2e:	df 92       	push	r13
    5a30:	ef 92       	push	r14
    5a32:	ff 92       	push	r15
    5a34:	0f 93       	push	r16
    5a36:	1f 93       	push	r17
    5a38:	cf 93       	push	r28
    5a3a:	df 93       	push	r29
    5a3c:	8c 01       	movw	r16, r24
    5a3e:	c4 2f       	mov	r28, r20
    5a40:	40 e0       	ldi	r20, 0x00	; 0
    5a42:	b8 df       	rcall	.-144    	; 0x59b4 <_ZN6Stream13peekNextDigitE13LookaheadModeb>
    5a44:	fc 01       	movw	r30, r24
    5a46:	97 fd       	sbrc	r25, 7
    5a48:	43 c0       	rjmp	.+134    	; 0x5ad0 <_ZN6Stream8parseIntE13LookaheadModec+0xa6>
    5a4a:	c1 2c       	mov	r12, r1
    5a4c:	d1 2c       	mov	r13, r1
    5a4e:	76 01       	movw	r14, r12
    5a50:	b1 2c       	mov	r11, r1
    5a52:	d0 e0       	ldi	r29, 0x00	; 0
    5a54:	ec 17       	cp	r30, r28
    5a56:	fd 07       	cpc	r31, r29
    5a58:	01 f1       	breq	.+64     	; 0x5a9a <_ZN6Stream8parseIntE13LookaheadModec+0x70>
    5a5a:	ed 32       	cpi	r30, 0x2D	; 45
    5a5c:	f1 05       	cpc	r31, r1
    5a5e:	d9 f0       	breq	.+54     	; 0x5a96 <_ZN6Stream8parseIntE13LookaheadModec+0x6c>
    5a60:	cf 01       	movw	r24, r30
    5a62:	c0 97       	sbiw	r24, 0x30	; 48
    5a64:	0a 97       	sbiw	r24, 0x0a	; 10
    5a66:	c8 f4       	brcc	.+50     	; 0x5a9a <_ZN6Stream8parseIntE13LookaheadModec+0x70>
    5a68:	aa e0       	ldi	r26, 0x0A	; 10
    5a6a:	b0 e0       	ldi	r27, 0x00	; 0
    5a6c:	a7 01       	movw	r20, r14
    5a6e:	96 01       	movw	r18, r12
    5a70:	9b d1       	rcall	.+822    	; 0x5da8 <__muluhisi3>
    5a72:	6f 01       	movw	r12, r30
    5a74:	ff 0f       	add	r31, r31
    5a76:	ee 08       	sbc	r14, r14
    5a78:	ff 08       	sbc	r15, r15
    5a7a:	dc 01       	movw	r26, r24
    5a7c:	cb 01       	movw	r24, r22
    5a7e:	8c 0d       	add	r24, r12
    5a80:	9d 1d       	adc	r25, r13
    5a82:	ae 1d       	adc	r26, r14
    5a84:	bf 1d       	adc	r27, r15
    5a86:	6c 01       	movw	r12, r24
    5a88:	7d 01       	movw	r14, r26
    5a8a:	20 e3       	ldi	r18, 0x30	; 48
    5a8c:	c2 1a       	sub	r12, r18
    5a8e:	d1 08       	sbc	r13, r1
    5a90:	e1 08       	sbc	r14, r1
    5a92:	f1 08       	sbc	r15, r1
    5a94:	02 c0       	rjmp	.+4      	; 0x5a9a <_ZN6Stream8parseIntE13LookaheadModec+0x70>
    5a96:	bb 24       	eor	r11, r11
    5a98:	b3 94       	inc	r11
    5a9a:	d8 01       	movw	r26, r16
    5a9c:	ed 91       	ld	r30, X+
    5a9e:	fc 91       	ld	r31, X
    5aa0:	02 84       	ldd	r0, Z+10	; 0x0a
    5aa2:	f3 85       	ldd	r31, Z+11	; 0x0b
    5aa4:	e0 2d       	mov	r30, r0
    5aa6:	c8 01       	movw	r24, r16
    5aa8:	19 95       	eicall
    5aaa:	c8 01       	movw	r24, r16
    5aac:	53 df       	rcall	.-346    	; 0x5954 <_ZN6Stream9timedPeekEv>
    5aae:	fc 01       	movw	r30, r24
    5ab0:	c0 97       	sbiw	r24, 0x30	; 48
    5ab2:	0a 97       	sbiw	r24, 0x0a	; 10
    5ab4:	78 f2       	brcs	.-98     	; 0x5a54 <_ZN6Stream8parseIntE13LookaheadModec+0x2a>
    5ab6:	ce 17       	cp	r28, r30
    5ab8:	df 07       	cpc	r29, r31
    5aba:	61 f2       	breq	.-104    	; 0x5a54 <_ZN6Stream8parseIntE13LookaheadModec+0x2a>
    5abc:	bb 20       	and	r11, r11
    5abe:	61 f0       	breq	.+24     	; 0x5ad8 <_ZN6Stream8parseIntE13LookaheadModec+0xae>
    5ac0:	66 27       	eor	r22, r22
    5ac2:	77 27       	eor	r23, r23
    5ac4:	cb 01       	movw	r24, r22
    5ac6:	6c 19       	sub	r22, r12
    5ac8:	7d 09       	sbc	r23, r13
    5aca:	8e 09       	sbc	r24, r14
    5acc:	9f 09       	sbc	r25, r15
    5ace:	06 c0       	rjmp	.+12     	; 0x5adc <_ZN6Stream8parseIntE13LookaheadModec+0xb2>
    5ad0:	60 e0       	ldi	r22, 0x00	; 0
    5ad2:	70 e0       	ldi	r23, 0x00	; 0
    5ad4:	cb 01       	movw	r24, r22
    5ad6:	02 c0       	rjmp	.+4      	; 0x5adc <_ZN6Stream8parseIntE13LookaheadModec+0xb2>
    5ad8:	c7 01       	movw	r24, r14
    5ada:	b6 01       	movw	r22, r12
    5adc:	df 91       	pop	r29
    5ade:	cf 91       	pop	r28
    5ae0:	1f 91       	pop	r17
    5ae2:	0f 91       	pop	r16
    5ae4:	ff 90       	pop	r15
    5ae6:	ef 90       	pop	r14
    5ae8:	df 90       	pop	r13
    5aea:	cf 90       	pop	r12
    5aec:	bf 90       	pop	r11
    5aee:	08 95       	ret

00005af0 <_ZN6Stream9findMultiEPNS_11MultiTargetEi>:
    5af0:	4f 92       	push	r4
    5af2:	5f 92       	push	r5
    5af4:	6f 92       	push	r6
    5af6:	7f 92       	push	r7
    5af8:	8f 92       	push	r8
    5afa:	9f 92       	push	r9
    5afc:	af 92       	push	r10
    5afe:	bf 92       	push	r11
    5b00:	cf 92       	push	r12
    5b02:	df 92       	push	r13
    5b04:	ef 92       	push	r14
    5b06:	ff 92       	push	r15
    5b08:	0f 93       	push	r16
    5b0a:	1f 93       	push	r17
    5b0c:	cf 93       	push	r28
    5b0e:	df 93       	push	r29
    5b10:	8c 01       	movw	r16, r24
    5b12:	eb 01       	movw	r28, r22
    5b14:	86 e0       	ldi	r24, 0x06	; 6
    5b16:	84 9f       	mul	r24, r20
    5b18:	40 01       	movw	r8, r0
    5b1a:	85 9f       	mul	r24, r21
    5b1c:	90 0c       	add	r9, r0
    5b1e:	11 24       	eor	r1, r1
    5b20:	86 0e       	add	r8, r22
    5b22:	97 1e       	adc	r9, r23
    5b24:	fb 01       	movw	r30, r22
    5b26:	e8 15       	cp	r30, r8
    5b28:	f9 05       	cpc	r31, r9
    5b2a:	f8 f4       	brcc	.+62     	; 0x5b6a <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x7a>
    5b2c:	82 81       	ldd	r24, Z+2	; 0x02
    5b2e:	93 81       	ldd	r25, Z+3	; 0x03
    5b30:	89 2b       	or	r24, r25
    5b32:	09 f1       	breq	.+66     	; 0x5b76 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x86>
    5b34:	36 96       	adiw	r30, 0x06	; 6
    5b36:	f7 cf       	rjmp	.-18     	; 0x5b26 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x36>
    5b38:	60 81       	ld	r22, Z
    5b3a:	71 81       	ldd	r23, Z+1	; 0x01
    5b3c:	44 81       	ldd	r20, Z+4	; 0x04
    5b3e:	55 81       	ldd	r21, Z+5	; 0x05
    5b40:	db 01       	movw	r26, r22
    5b42:	a4 0f       	add	r26, r20
    5b44:	b5 1f       	adc	r27, r21
    5b46:	2c 91       	ld	r18, X
    5b48:	30 e0       	ldi	r19, 0x00	; 0
    5b4a:	82 17       	cp	r24, r18
    5b4c:	93 07       	cpc	r25, r19
    5b4e:	09 f5       	brne	.+66     	; 0x5b92 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xa2>
    5b50:	4f 5f       	subi	r20, 0xFF	; 255
    5b52:	5f 4f       	sbci	r21, 0xFF	; 255
    5b54:	55 83       	std	Z+5, r21	; 0x05
    5b56:	44 83       	std	Z+4, r20	; 0x04
    5b58:	22 81       	ldd	r18, Z+2	; 0x02
    5b5a:	33 81       	ldd	r19, Z+3	; 0x03
    5b5c:	42 17       	cp	r20, r18
    5b5e:	53 07       	cpc	r21, r19
    5b60:	51 f0       	breq	.+20     	; 0x5b76 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x86>
    5b62:	36 96       	adiw	r30, 0x06	; 6
    5b64:	e8 15       	cp	r30, r8
    5b66:	f9 05       	cpc	r31, r9
    5b68:	38 f3       	brcs	.-50     	; 0x5b38 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x48>
    5b6a:	c8 01       	movw	r24, r16
    5b6c:	c3 de       	rcall	.-634    	; 0x58f4 <_ZN6Stream9timedReadEv>
    5b6e:	97 fd       	sbrc	r25, 7
    5b70:	44 c0       	rjmp	.+136    	; 0x5bfa <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x10a>
    5b72:	fe 01       	movw	r30, r28
    5b74:	f7 cf       	rjmp	.-18     	; 0x5b64 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x74>
    5b76:	ec 1b       	sub	r30, r28
    5b78:	fd 0b       	sbc	r31, r29
    5b7a:	f5 95       	asr	r31
    5b7c:	e7 95       	ror	r30
    5b7e:	2b ea       	ldi	r18, 0xAB	; 171
    5b80:	3a ea       	ldi	r19, 0xAA	; 170
    5b82:	e2 9f       	mul	r30, r18
    5b84:	c0 01       	movw	r24, r0
    5b86:	e3 9f       	mul	r30, r19
    5b88:	90 0d       	add	r25, r0
    5b8a:	f2 9f       	mul	r31, r18
    5b8c:	90 0d       	add	r25, r0
    5b8e:	11 24       	eor	r1, r1
    5b90:	36 c0       	rjmp	.+108    	; 0x5bfe <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x10e>
    5b92:	41 15       	cp	r20, r1
    5b94:	51 05       	cpc	r21, r1
    5b96:	29 f3       	breq	.-54     	; 0x5b62 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x72>
    5b98:	c4 80       	ldd	r12, Z+4	; 0x04
    5b9a:	d5 80       	ldd	r13, Z+5	; 0x05
    5b9c:	96 01       	movw	r18, r12
    5b9e:	21 50       	subi	r18, 0x01	; 1
    5ba0:	31 09       	sbc	r19, r1
    5ba2:	35 83       	std	Z+5, r19	; 0x05
    5ba4:	24 83       	std	Z+4, r18	; 0x04
    5ba6:	db 01       	movw	r26, r22
    5ba8:	a2 0f       	add	r26, r18
    5baa:	b3 1f       	adc	r27, r19
    5bac:	ac 91       	ld	r26, X
    5bae:	b0 e0       	ldi	r27, 0x00	; 0
    5bb0:	8a 17       	cp	r24, r26
    5bb2:	9b 07       	cpc	r25, r27
    5bb4:	f9 f4       	brne	.+62     	; 0x5bf4 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x104>
    5bb6:	21 15       	cp	r18, r1
    5bb8:	31 05       	cpc	r19, r1
    5bba:	c9 f0       	breq	.+50     	; 0x5bee <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xfe>
    5bbc:	5b 01       	movw	r10, r22
    5bbe:	7a 01       	movw	r14, r20
    5bc0:	e2 1a       	sub	r14, r18
    5bc2:	f3 0a       	sbc	r15, r19
    5bc4:	e6 0e       	add	r14, r22
    5bc6:	f7 1e       	adc	r15, r23
    5bc8:	41 2c       	mov	r4, r1
    5bca:	51 2c       	mov	r5, r1
    5bcc:	d5 01       	movw	r26, r10
    5bce:	6d 90       	ld	r6, X+
    5bd0:	5d 01       	movw	r10, r26
    5bd2:	d7 01       	movw	r26, r14
    5bd4:	7d 90       	ld	r7, X+
    5bd6:	7d 01       	movw	r14, r26
    5bd8:	67 10       	cpse	r6, r7
    5bda:	06 c0       	rjmp	.+12     	; 0x5be8 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xf8>
    5bdc:	bf ef       	ldi	r27, 0xFF	; 255
    5bde:	4b 1a       	sub	r4, r27
    5be0:	5b 0a       	sbc	r5, r27
    5be2:	42 16       	cp	r4, r18
    5be4:	53 06       	cpc	r5, r19
    5be6:	90 f3       	brcs	.-28     	; 0x5bcc <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xdc>
    5be8:	24 15       	cp	r18, r4
    5bea:	35 05       	cpc	r19, r5
    5bec:	a9 f6       	brne	.-86     	; 0x5b98 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xa8>
    5bee:	d5 82       	std	Z+5, r13	; 0x05
    5bf0:	c4 82       	std	Z+4, r12	; 0x04
    5bf2:	b7 cf       	rjmp	.-146    	; 0x5b62 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x72>
    5bf4:	23 2b       	or	r18, r19
    5bf6:	81 f6       	brne	.-96     	; 0x5b98 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xa8>
    5bf8:	b4 cf       	rjmp	.-152    	; 0x5b62 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x72>
    5bfa:	8f ef       	ldi	r24, 0xFF	; 255
    5bfc:	9f ef       	ldi	r25, 0xFF	; 255
    5bfe:	df 91       	pop	r29
    5c00:	cf 91       	pop	r28
    5c02:	1f 91       	pop	r17
    5c04:	0f 91       	pop	r16
    5c06:	ff 90       	pop	r15
    5c08:	ef 90       	pop	r14
    5c0a:	df 90       	pop	r13
    5c0c:	cf 90       	pop	r12
    5c0e:	bf 90       	pop	r11
    5c10:	af 90       	pop	r10
    5c12:	9f 90       	pop	r9
    5c14:	8f 90       	pop	r8
    5c16:	7f 90       	pop	r7
    5c18:	6f 90       	pop	r6
    5c1a:	5f 90       	pop	r5
    5c1c:	4f 90       	pop	r4
    5c1e:	08 95       	ret

00005c20 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1>:
    5c20:	cf 93       	push	r28
    5c22:	df 93       	push	r29
    5c24:	00 d0       	rcall	.+0      	; 0x5c26 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x6>
    5c26:	00 d0       	rcall	.+0      	; 0x5c28 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x8>
    5c28:	cd b7       	in	r28, 0x3d	; 61
    5c2a:	de b7       	in	r29, 0x3e	; 62
    5c2c:	fe 01       	movw	r30, r28
    5c2e:	31 96       	adiw	r30, 0x01	; 1
    5c30:	26 e0       	ldi	r18, 0x06	; 6
    5c32:	df 01       	movw	r26, r30
    5c34:	1d 92       	st	X+, r1
    5c36:	2a 95       	dec	r18
    5c38:	e9 f7       	brne	.-6      	; 0x5c34 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x14>
    5c3a:	7a 83       	std	Y+2, r23	; 0x02
    5c3c:	69 83       	std	Y+1, r22	; 0x01
    5c3e:	5c 83       	std	Y+4, r21	; 0x04
    5c40:	4b 83       	std	Y+3, r20	; 0x03
    5c42:	41 e0       	ldi	r20, 0x01	; 1
    5c44:	50 e0       	ldi	r21, 0x00	; 0
    5c46:	bf 01       	movw	r22, r30
    5c48:	53 df       	rcall	.-346    	; 0x5af0 <_ZN6Stream9findMultiEPNS_11MultiTargetEi>
    5c4a:	21 e0       	ldi	r18, 0x01	; 1
    5c4c:	89 2b       	or	r24, r25
    5c4e:	09 f0       	breq	.+2      	; 0x5c52 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x32>
    5c50:	20 e0       	ldi	r18, 0x00	; 0
    5c52:	82 2f       	mov	r24, r18
    5c54:	26 96       	adiw	r28, 0x06	; 6
    5c56:	0f b6       	in	r0, 0x3f	; 63
    5c58:	f8 94       	cli
    5c5a:	de bf       	out	0x3e, r29	; 62
    5c5c:	0f be       	out	0x3f, r0	; 63
    5c5e:	cd bf       	out	0x3d, r28	; 61
    5c60:	df 91       	pop	r29
    5c62:	cf 91       	pop	r28
    5c64:	08 95       	ret

00005c66 <_ZN6Stream4findEPc>:
}

 // find returns true if the target string is found
bool  Stream::find(char *target)
{
  return findUntil(target, strlen(target), NULL, 0);
    5c66:	fb 01       	movw	r30, r22
    5c68:	01 90       	ld	r0, Z+
    5c6a:	00 20       	and	r0, r0
    5c6c:	e9 f7       	brne	.-6      	; 0x5c68 <_ZN6Stream4findEPc+0x2>
    5c6e:	31 97       	sbiw	r30, 0x01	; 1
    5c70:	af 01       	movw	r20, r30
    5c72:	46 1b       	sub	r20, r22
    5c74:	57 0b       	sbc	r21, r23
    5c76:	d4 cf       	rjmp	.-88     	; 0x5c20 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1>

00005c78 <__cmpsf2>:
    5c78:	32 d0       	rcall	.+100    	; 0x5cde <__fp_cmp>
    5c7a:	08 f4       	brcc	.+2      	; 0x5c7e <__cmpsf2+0x6>
    5c7c:	81 e0       	ldi	r24, 0x01	; 1
    5c7e:	08 95       	ret

00005c80 <__fixunssfsi>:
    5c80:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <__fp_splitA>
    5c84:	88 f0       	brcs	.+34     	; 0x5ca8 <__fixunssfsi+0x28>
    5c86:	9f 57       	subi	r25, 0x7F	; 127
    5c88:	98 f0       	brcs	.+38     	; 0x5cb0 <__fixunssfsi+0x30>
    5c8a:	b9 2f       	mov	r27, r25
    5c8c:	99 27       	eor	r25, r25
    5c8e:	b7 51       	subi	r27, 0x17	; 23
    5c90:	b0 f0       	brcs	.+44     	; 0x5cbe <__fixunssfsi+0x3e>
    5c92:	e1 f0       	breq	.+56     	; 0x5ccc <__fixunssfsi+0x4c>
    5c94:	66 0f       	add	r22, r22
    5c96:	77 1f       	adc	r23, r23
    5c98:	88 1f       	adc	r24, r24
    5c9a:	99 1f       	adc	r25, r25
    5c9c:	1a f0       	brmi	.+6      	; 0x5ca4 <__fixunssfsi+0x24>
    5c9e:	ba 95       	dec	r27
    5ca0:	c9 f7       	brne	.-14     	; 0x5c94 <__fixunssfsi+0x14>
    5ca2:	14 c0       	rjmp	.+40     	; 0x5ccc <__fixunssfsi+0x4c>
    5ca4:	b1 30       	cpi	r27, 0x01	; 1
    5ca6:	91 f0       	breq	.+36     	; 0x5ccc <__fixunssfsi+0x4c>
    5ca8:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <__fp_zero>
    5cac:	b1 e0       	ldi	r27, 0x01	; 1
    5cae:	08 95       	ret
    5cb0:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__fp_zero>
    5cb4:	67 2f       	mov	r22, r23
    5cb6:	78 2f       	mov	r23, r24
    5cb8:	88 27       	eor	r24, r24
    5cba:	b8 5f       	subi	r27, 0xF8	; 248
    5cbc:	39 f0       	breq	.+14     	; 0x5ccc <__fixunssfsi+0x4c>
    5cbe:	b9 3f       	cpi	r27, 0xF9	; 249
    5cc0:	cc f3       	brlt	.-14     	; 0x5cb4 <__fixunssfsi+0x34>
    5cc2:	86 95       	lsr	r24
    5cc4:	77 95       	ror	r23
    5cc6:	67 95       	ror	r22
    5cc8:	b3 95       	inc	r27
    5cca:	d9 f7       	brne	.-10     	; 0x5cc2 <__fixunssfsi+0x42>
    5ccc:	3e f4       	brtc	.+14     	; 0x5cdc <__fixunssfsi+0x5c>
    5cce:	90 95       	com	r25
    5cd0:	80 95       	com	r24
    5cd2:	70 95       	com	r23
    5cd4:	61 95       	neg	r22
    5cd6:	7f 4f       	sbci	r23, 0xFF	; 255
    5cd8:	8f 4f       	sbci	r24, 0xFF	; 255
    5cda:	9f 4f       	sbci	r25, 0xFF	; 255
    5cdc:	08 95       	ret

00005cde <__fp_cmp>:
    5cde:	99 0f       	add	r25, r25
    5ce0:	00 08       	sbc	r0, r0
    5ce2:	55 0f       	add	r21, r21
    5ce4:	aa 0b       	sbc	r26, r26
    5ce6:	e0 e8       	ldi	r30, 0x80	; 128
    5ce8:	fe ef       	ldi	r31, 0xFE	; 254
    5cea:	16 16       	cp	r1, r22
    5cec:	17 06       	cpc	r1, r23
    5cee:	e8 07       	cpc	r30, r24
    5cf0:	f9 07       	cpc	r31, r25
    5cf2:	c0 f0       	brcs	.+48     	; 0x5d24 <__fp_cmp+0x46>
    5cf4:	12 16       	cp	r1, r18
    5cf6:	13 06       	cpc	r1, r19
    5cf8:	e4 07       	cpc	r30, r20
    5cfa:	f5 07       	cpc	r31, r21
    5cfc:	98 f0       	brcs	.+38     	; 0x5d24 <__fp_cmp+0x46>
    5cfe:	62 1b       	sub	r22, r18
    5d00:	73 0b       	sbc	r23, r19
    5d02:	84 0b       	sbc	r24, r20
    5d04:	95 0b       	sbc	r25, r21
    5d06:	39 f4       	brne	.+14     	; 0x5d16 <__fp_cmp+0x38>
    5d08:	0a 26       	eor	r0, r26
    5d0a:	61 f0       	breq	.+24     	; 0x5d24 <__fp_cmp+0x46>
    5d0c:	23 2b       	or	r18, r19
    5d0e:	24 2b       	or	r18, r20
    5d10:	25 2b       	or	r18, r21
    5d12:	21 f4       	brne	.+8      	; 0x5d1c <__fp_cmp+0x3e>
    5d14:	08 95       	ret
    5d16:	0a 26       	eor	r0, r26
    5d18:	09 f4       	brne	.+2      	; 0x5d1c <__fp_cmp+0x3e>
    5d1a:	a1 40       	sbci	r26, 0x01	; 1
    5d1c:	a6 95       	lsr	r26
    5d1e:	8f ef       	ldi	r24, 0xFF	; 255
    5d20:	81 1d       	adc	r24, r1
    5d22:	81 1d       	adc	r24, r1
    5d24:	08 95       	ret

00005d26 <__gesf2>:
    5d26:	db df       	rcall	.-74     	; 0x5cde <__fp_cmp>
    5d28:	08 f4       	brcc	.+2      	; 0x5d2c <__gesf2+0x6>
    5d2a:	8f ef       	ldi	r24, 0xFF	; 255
    5d2c:	08 95       	ret

00005d2e <__unordsf2>:
    5d2e:	d7 df       	rcall	.-82     	; 0x5cde <__fp_cmp>
    5d30:	88 0b       	sbc	r24, r24
    5d32:	99 0b       	sbc	r25, r25
    5d34:	08 95       	ret

00005d36 <__udivmodsi4>:
    5d36:	a1 e2       	ldi	r26, 0x21	; 33
    5d38:	1a 2e       	mov	r1, r26
    5d3a:	aa 1b       	sub	r26, r26
    5d3c:	bb 1b       	sub	r27, r27
    5d3e:	fd 01       	movw	r30, r26
    5d40:	0d c0       	rjmp	.+26     	; 0x5d5c <__udivmodsi4_ep>

00005d42 <__udivmodsi4_loop>:
    5d42:	aa 1f       	adc	r26, r26
    5d44:	bb 1f       	adc	r27, r27
    5d46:	ee 1f       	adc	r30, r30
    5d48:	ff 1f       	adc	r31, r31
    5d4a:	a2 17       	cp	r26, r18
    5d4c:	b3 07       	cpc	r27, r19
    5d4e:	e4 07       	cpc	r30, r20
    5d50:	f5 07       	cpc	r31, r21
    5d52:	20 f0       	brcs	.+8      	; 0x5d5c <__udivmodsi4_ep>
    5d54:	a2 1b       	sub	r26, r18
    5d56:	b3 0b       	sbc	r27, r19
    5d58:	e4 0b       	sbc	r30, r20
    5d5a:	f5 0b       	sbc	r31, r21

00005d5c <__udivmodsi4_ep>:
    5d5c:	66 1f       	adc	r22, r22
    5d5e:	77 1f       	adc	r23, r23
    5d60:	88 1f       	adc	r24, r24
    5d62:	99 1f       	adc	r25, r25
    5d64:	1a 94       	dec	r1
    5d66:	69 f7       	brne	.-38     	; 0x5d42 <__udivmodsi4_loop>
    5d68:	60 95       	com	r22
    5d6a:	70 95       	com	r23
    5d6c:	80 95       	com	r24
    5d6e:	90 95       	com	r25
    5d70:	9b 01       	movw	r18, r22
    5d72:	ac 01       	movw	r20, r24
    5d74:	bd 01       	movw	r22, r26
    5d76:	cf 01       	movw	r24, r30
    5d78:	08 95       	ret

00005d7a <__tablejump2__>:
    5d7a:	ee 0f       	add	r30, r30
    5d7c:	ff 1f       	adc	r31, r31
    5d7e:	88 1f       	adc	r24, r24
    5d80:	8b bf       	out	0x3b, r24	; 59
    5d82:	07 90       	elpm	r0, Z+
    5d84:	f6 91       	elpm	r31, Z
    5d86:	e0 2d       	mov	r30, r0
    5d88:	19 94       	eijmp

00005d8a <__umulhisi3>:
    5d8a:	a2 9f       	mul	r26, r18
    5d8c:	b0 01       	movw	r22, r0
    5d8e:	b3 9f       	mul	r27, r19
    5d90:	c0 01       	movw	r24, r0
    5d92:	a3 9f       	mul	r26, r19
    5d94:	70 0d       	add	r23, r0
    5d96:	81 1d       	adc	r24, r1
    5d98:	11 24       	eor	r1, r1
    5d9a:	91 1d       	adc	r25, r1
    5d9c:	b2 9f       	mul	r27, r18
    5d9e:	70 0d       	add	r23, r0
    5da0:	81 1d       	adc	r24, r1
    5da2:	11 24       	eor	r1, r1
    5da4:	91 1d       	adc	r25, r1
    5da6:	08 95       	ret

00005da8 <__muluhisi3>:
    5da8:	f0 df       	rcall	.-32     	; 0x5d8a <__umulhisi3>
    5daa:	a5 9f       	mul	r26, r21
    5dac:	90 0d       	add	r25, r0
    5dae:	b4 9f       	mul	r27, r20
    5db0:	90 0d       	add	r25, r0
    5db2:	a4 9f       	mul	r26, r20
    5db4:	80 0d       	add	r24, r0
    5db6:	91 1d       	adc	r25, r1
    5db8:	11 24       	eor	r1, r1
    5dba:	08 95       	ret

00005dbc <dtostrf>:
    5dbc:	ef 92       	push	r14
    5dbe:	0f 93       	push	r16
    5dc0:	1f 93       	push	r17
    5dc2:	cf 93       	push	r28
    5dc4:	df 93       	push	r29
    5dc6:	e8 01       	movw	r28, r16
    5dc8:	47 fd       	sbrc	r20, 7
    5dca:	02 c0       	rjmp	.+4      	; 0x5dd0 <dtostrf+0x14>
    5dcc:	34 e0       	ldi	r19, 0x04	; 4
    5dce:	01 c0       	rjmp	.+2      	; 0x5dd2 <dtostrf+0x16>
    5dd0:	34 e1       	ldi	r19, 0x14	; 20
    5dd2:	04 2e       	mov	r0, r20
    5dd4:	00 0c       	add	r0, r0
    5dd6:	55 0b       	sbc	r21, r21
    5dd8:	57 ff       	sbrs	r21, 7
    5dda:	03 c0       	rjmp	.+6      	; 0x5de2 <dtostrf+0x26>
    5ddc:	51 95       	neg	r21
    5dde:	41 95       	neg	r20
    5de0:	51 09       	sbc	r21, r1
    5de2:	e3 2e       	mov	r14, r19
    5de4:	02 2f       	mov	r16, r18
    5de6:	24 2f       	mov	r18, r20
    5de8:	ae 01       	movw	r20, r28
    5dea:	7e d5       	rcall	.+2812   	; 0x68e8 <dtoa_prf>
    5dec:	ce 01       	movw	r24, r28
    5dee:	df 91       	pop	r29
    5df0:	cf 91       	pop	r28
    5df2:	1f 91       	pop	r17
    5df4:	0f 91       	pop	r16
    5df6:	ef 90       	pop	r14
    5df8:	08 95       	ret

00005dfa <malloc>:
    5dfa:	0f 93       	push	r16
    5dfc:	1f 93       	push	r17
    5dfe:	cf 93       	push	r28
    5e00:	df 93       	push	r29
    5e02:	82 30       	cpi	r24, 0x02	; 2
    5e04:	91 05       	cpc	r25, r1
    5e06:	10 f4       	brcc	.+4      	; 0x5e0c <malloc+0x12>
    5e08:	82 e0       	ldi	r24, 0x02	; 2
    5e0a:	90 e0       	ldi	r25, 0x00	; 0
    5e0c:	e0 91 97 06 	lds	r30, 0x0697	; 0x800697 <__flp>
    5e10:	f0 91 98 06 	lds	r31, 0x0698	; 0x800698 <__flp+0x1>
    5e14:	20 e0       	ldi	r18, 0x00	; 0
    5e16:	30 e0       	ldi	r19, 0x00	; 0
    5e18:	a0 e0       	ldi	r26, 0x00	; 0
    5e1a:	b0 e0       	ldi	r27, 0x00	; 0
    5e1c:	30 97       	sbiw	r30, 0x00	; 0
    5e1e:	19 f1       	breq	.+70     	; 0x5e66 <malloc+0x6c>
    5e20:	40 81       	ld	r20, Z
    5e22:	51 81       	ldd	r21, Z+1	; 0x01
    5e24:	02 81       	ldd	r16, Z+2	; 0x02
    5e26:	13 81       	ldd	r17, Z+3	; 0x03
    5e28:	48 17       	cp	r20, r24
    5e2a:	59 07       	cpc	r21, r25
    5e2c:	c8 f0       	brcs	.+50     	; 0x5e60 <malloc+0x66>
    5e2e:	84 17       	cp	r24, r20
    5e30:	95 07       	cpc	r25, r21
    5e32:	69 f4       	brne	.+26     	; 0x5e4e <malloc+0x54>
    5e34:	10 97       	sbiw	r26, 0x00	; 0
    5e36:	31 f0       	breq	.+12     	; 0x5e44 <malloc+0x4a>
    5e38:	12 96       	adiw	r26, 0x02	; 2
    5e3a:	0c 93       	st	X, r16
    5e3c:	12 97       	sbiw	r26, 0x02	; 2
    5e3e:	13 96       	adiw	r26, 0x03	; 3
    5e40:	1c 93       	st	X, r17
    5e42:	27 c0       	rjmp	.+78     	; 0x5e92 <malloc+0x98>
    5e44:	00 93 97 06 	sts	0x0697, r16	; 0x800697 <__flp>
    5e48:	10 93 98 06 	sts	0x0698, r17	; 0x800698 <__flp+0x1>
    5e4c:	22 c0       	rjmp	.+68     	; 0x5e92 <malloc+0x98>
    5e4e:	21 15       	cp	r18, r1
    5e50:	31 05       	cpc	r19, r1
    5e52:	19 f0       	breq	.+6      	; 0x5e5a <malloc+0x60>
    5e54:	42 17       	cp	r20, r18
    5e56:	53 07       	cpc	r21, r19
    5e58:	18 f4       	brcc	.+6      	; 0x5e60 <malloc+0x66>
    5e5a:	9a 01       	movw	r18, r20
    5e5c:	bd 01       	movw	r22, r26
    5e5e:	ef 01       	movw	r28, r30
    5e60:	df 01       	movw	r26, r30
    5e62:	f8 01       	movw	r30, r16
    5e64:	db cf       	rjmp	.-74     	; 0x5e1c <malloc+0x22>
    5e66:	21 15       	cp	r18, r1
    5e68:	31 05       	cpc	r19, r1
    5e6a:	f9 f0       	breq	.+62     	; 0x5eaa <malloc+0xb0>
    5e6c:	28 1b       	sub	r18, r24
    5e6e:	39 0b       	sbc	r19, r25
    5e70:	24 30       	cpi	r18, 0x04	; 4
    5e72:	31 05       	cpc	r19, r1
    5e74:	80 f4       	brcc	.+32     	; 0x5e96 <malloc+0x9c>
    5e76:	8a 81       	ldd	r24, Y+2	; 0x02
    5e78:	9b 81       	ldd	r25, Y+3	; 0x03
    5e7a:	61 15       	cp	r22, r1
    5e7c:	71 05       	cpc	r23, r1
    5e7e:	21 f0       	breq	.+8      	; 0x5e88 <malloc+0x8e>
    5e80:	fb 01       	movw	r30, r22
    5e82:	93 83       	std	Z+3, r25	; 0x03
    5e84:	82 83       	std	Z+2, r24	; 0x02
    5e86:	04 c0       	rjmp	.+8      	; 0x5e90 <malloc+0x96>
    5e88:	90 93 98 06 	sts	0x0698, r25	; 0x800698 <__flp+0x1>
    5e8c:	80 93 97 06 	sts	0x0697, r24	; 0x800697 <__flp>
    5e90:	fe 01       	movw	r30, r28
    5e92:	32 96       	adiw	r30, 0x02	; 2
    5e94:	44 c0       	rjmp	.+136    	; 0x5f1e <malloc+0x124>
    5e96:	fe 01       	movw	r30, r28
    5e98:	e2 0f       	add	r30, r18
    5e9a:	f3 1f       	adc	r31, r19
    5e9c:	81 93       	st	Z+, r24
    5e9e:	91 93       	st	Z+, r25
    5ea0:	22 50       	subi	r18, 0x02	; 2
    5ea2:	31 09       	sbc	r19, r1
    5ea4:	39 83       	std	Y+1, r19	; 0x01
    5ea6:	28 83       	st	Y, r18
    5ea8:	3a c0       	rjmp	.+116    	; 0x5f1e <malloc+0x124>
    5eaa:	20 91 95 06 	lds	r18, 0x0695	; 0x800695 <__brkval>
    5eae:	30 91 96 06 	lds	r19, 0x0696	; 0x800696 <__brkval+0x1>
    5eb2:	23 2b       	or	r18, r19
    5eb4:	41 f4       	brne	.+16     	; 0x5ec6 <malloc+0xcc>
    5eb6:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    5eba:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    5ebe:	30 93 96 06 	sts	0x0696, r19	; 0x800696 <__brkval+0x1>
    5ec2:	20 93 95 06 	sts	0x0695, r18	; 0x800695 <__brkval>
    5ec6:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    5eca:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    5ece:	21 15       	cp	r18, r1
    5ed0:	31 05       	cpc	r19, r1
    5ed2:	41 f4       	brne	.+16     	; 0x5ee4 <malloc+0xea>
    5ed4:	2d b7       	in	r18, 0x3d	; 61
    5ed6:	3e b7       	in	r19, 0x3e	; 62
    5ed8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    5edc:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    5ee0:	24 1b       	sub	r18, r20
    5ee2:	35 0b       	sbc	r19, r21
    5ee4:	e0 91 95 06 	lds	r30, 0x0695	; 0x800695 <__brkval>
    5ee8:	f0 91 96 06 	lds	r31, 0x0696	; 0x800696 <__brkval+0x1>
    5eec:	e2 17       	cp	r30, r18
    5eee:	f3 07       	cpc	r31, r19
    5ef0:	a0 f4       	brcc	.+40     	; 0x5f1a <malloc+0x120>
    5ef2:	2e 1b       	sub	r18, r30
    5ef4:	3f 0b       	sbc	r19, r31
    5ef6:	28 17       	cp	r18, r24
    5ef8:	39 07       	cpc	r19, r25
    5efa:	78 f0       	brcs	.+30     	; 0x5f1a <malloc+0x120>
    5efc:	ac 01       	movw	r20, r24
    5efe:	4e 5f       	subi	r20, 0xFE	; 254
    5f00:	5f 4f       	sbci	r21, 0xFF	; 255
    5f02:	24 17       	cp	r18, r20
    5f04:	35 07       	cpc	r19, r21
    5f06:	48 f0       	brcs	.+18     	; 0x5f1a <malloc+0x120>
    5f08:	4e 0f       	add	r20, r30
    5f0a:	5f 1f       	adc	r21, r31
    5f0c:	50 93 96 06 	sts	0x0696, r21	; 0x800696 <__brkval+0x1>
    5f10:	40 93 95 06 	sts	0x0695, r20	; 0x800695 <__brkval>
    5f14:	81 93       	st	Z+, r24
    5f16:	91 93       	st	Z+, r25
    5f18:	02 c0       	rjmp	.+4      	; 0x5f1e <malloc+0x124>
    5f1a:	e0 e0       	ldi	r30, 0x00	; 0
    5f1c:	f0 e0       	ldi	r31, 0x00	; 0
    5f1e:	cf 01       	movw	r24, r30
    5f20:	df 91       	pop	r29
    5f22:	cf 91       	pop	r28
    5f24:	1f 91       	pop	r17
    5f26:	0f 91       	pop	r16
    5f28:	08 95       	ret

00005f2a <free>:
    5f2a:	cf 93       	push	r28
    5f2c:	df 93       	push	r29
    5f2e:	00 97       	sbiw	r24, 0x00	; 0
    5f30:	09 f4       	brne	.+2      	; 0x5f34 <free+0xa>
    5f32:	81 c0       	rjmp	.+258    	; 0x6036 <free+0x10c>
    5f34:	fc 01       	movw	r30, r24
    5f36:	32 97       	sbiw	r30, 0x02	; 2
    5f38:	13 82       	std	Z+3, r1	; 0x03
    5f3a:	12 82       	std	Z+2, r1	; 0x02
    5f3c:	a0 91 97 06 	lds	r26, 0x0697	; 0x800697 <__flp>
    5f40:	b0 91 98 06 	lds	r27, 0x0698	; 0x800698 <__flp+0x1>
    5f44:	10 97       	sbiw	r26, 0x00	; 0
    5f46:	81 f4       	brne	.+32     	; 0x5f68 <free+0x3e>
    5f48:	20 81       	ld	r18, Z
    5f4a:	31 81       	ldd	r19, Z+1	; 0x01
    5f4c:	82 0f       	add	r24, r18
    5f4e:	93 1f       	adc	r25, r19
    5f50:	20 91 95 06 	lds	r18, 0x0695	; 0x800695 <__brkval>
    5f54:	30 91 96 06 	lds	r19, 0x0696	; 0x800696 <__brkval+0x1>
    5f58:	28 17       	cp	r18, r24
    5f5a:	39 07       	cpc	r19, r25
    5f5c:	51 f5       	brne	.+84     	; 0x5fb2 <free+0x88>
    5f5e:	f0 93 96 06 	sts	0x0696, r31	; 0x800696 <__brkval+0x1>
    5f62:	e0 93 95 06 	sts	0x0695, r30	; 0x800695 <__brkval>
    5f66:	67 c0       	rjmp	.+206    	; 0x6036 <free+0x10c>
    5f68:	ed 01       	movw	r28, r26
    5f6a:	20 e0       	ldi	r18, 0x00	; 0
    5f6c:	30 e0       	ldi	r19, 0x00	; 0
    5f6e:	ce 17       	cp	r28, r30
    5f70:	df 07       	cpc	r29, r31
    5f72:	40 f4       	brcc	.+16     	; 0x5f84 <free+0x5a>
    5f74:	4a 81       	ldd	r20, Y+2	; 0x02
    5f76:	5b 81       	ldd	r21, Y+3	; 0x03
    5f78:	9e 01       	movw	r18, r28
    5f7a:	41 15       	cp	r20, r1
    5f7c:	51 05       	cpc	r21, r1
    5f7e:	f1 f0       	breq	.+60     	; 0x5fbc <free+0x92>
    5f80:	ea 01       	movw	r28, r20
    5f82:	f5 cf       	rjmp	.-22     	; 0x5f6e <free+0x44>
    5f84:	d3 83       	std	Z+3, r29	; 0x03
    5f86:	c2 83       	std	Z+2, r28	; 0x02
    5f88:	40 81       	ld	r20, Z
    5f8a:	51 81       	ldd	r21, Z+1	; 0x01
    5f8c:	84 0f       	add	r24, r20
    5f8e:	95 1f       	adc	r25, r21
    5f90:	c8 17       	cp	r28, r24
    5f92:	d9 07       	cpc	r29, r25
    5f94:	59 f4       	brne	.+22     	; 0x5fac <free+0x82>
    5f96:	88 81       	ld	r24, Y
    5f98:	99 81       	ldd	r25, Y+1	; 0x01
    5f9a:	84 0f       	add	r24, r20
    5f9c:	95 1f       	adc	r25, r21
    5f9e:	02 96       	adiw	r24, 0x02	; 2
    5fa0:	91 83       	std	Z+1, r25	; 0x01
    5fa2:	80 83       	st	Z, r24
    5fa4:	8a 81       	ldd	r24, Y+2	; 0x02
    5fa6:	9b 81       	ldd	r25, Y+3	; 0x03
    5fa8:	93 83       	std	Z+3, r25	; 0x03
    5faa:	82 83       	std	Z+2, r24	; 0x02
    5fac:	21 15       	cp	r18, r1
    5fae:	31 05       	cpc	r19, r1
    5fb0:	29 f4       	brne	.+10     	; 0x5fbc <free+0x92>
    5fb2:	f0 93 98 06 	sts	0x0698, r31	; 0x800698 <__flp+0x1>
    5fb6:	e0 93 97 06 	sts	0x0697, r30	; 0x800697 <__flp>
    5fba:	3d c0       	rjmp	.+122    	; 0x6036 <free+0x10c>
    5fbc:	e9 01       	movw	r28, r18
    5fbe:	fb 83       	std	Y+3, r31	; 0x03
    5fc0:	ea 83       	std	Y+2, r30	; 0x02
    5fc2:	49 91       	ld	r20, Y+
    5fc4:	59 91       	ld	r21, Y+
    5fc6:	c4 0f       	add	r28, r20
    5fc8:	d5 1f       	adc	r29, r21
    5fca:	ec 17       	cp	r30, r28
    5fcc:	fd 07       	cpc	r31, r29
    5fce:	61 f4       	brne	.+24     	; 0x5fe8 <free+0xbe>
    5fd0:	80 81       	ld	r24, Z
    5fd2:	91 81       	ldd	r25, Z+1	; 0x01
    5fd4:	84 0f       	add	r24, r20
    5fd6:	95 1f       	adc	r25, r21
    5fd8:	02 96       	adiw	r24, 0x02	; 2
    5fda:	e9 01       	movw	r28, r18
    5fdc:	99 83       	std	Y+1, r25	; 0x01
    5fde:	88 83       	st	Y, r24
    5fe0:	82 81       	ldd	r24, Z+2	; 0x02
    5fe2:	93 81       	ldd	r25, Z+3	; 0x03
    5fe4:	9b 83       	std	Y+3, r25	; 0x03
    5fe6:	8a 83       	std	Y+2, r24	; 0x02
    5fe8:	e0 e0       	ldi	r30, 0x00	; 0
    5fea:	f0 e0       	ldi	r31, 0x00	; 0
    5fec:	12 96       	adiw	r26, 0x02	; 2
    5fee:	8d 91       	ld	r24, X+
    5ff0:	9c 91       	ld	r25, X
    5ff2:	13 97       	sbiw	r26, 0x03	; 3
    5ff4:	00 97       	sbiw	r24, 0x00	; 0
    5ff6:	19 f0       	breq	.+6      	; 0x5ffe <free+0xd4>
    5ff8:	fd 01       	movw	r30, r26
    5ffa:	dc 01       	movw	r26, r24
    5ffc:	f7 cf       	rjmp	.-18     	; 0x5fec <free+0xc2>
    5ffe:	8d 91       	ld	r24, X+
    6000:	9c 91       	ld	r25, X
    6002:	11 97       	sbiw	r26, 0x01	; 1
    6004:	9d 01       	movw	r18, r26
    6006:	2e 5f       	subi	r18, 0xFE	; 254
    6008:	3f 4f       	sbci	r19, 0xFF	; 255
    600a:	82 0f       	add	r24, r18
    600c:	93 1f       	adc	r25, r19
    600e:	20 91 95 06 	lds	r18, 0x0695	; 0x800695 <__brkval>
    6012:	30 91 96 06 	lds	r19, 0x0696	; 0x800696 <__brkval+0x1>
    6016:	28 17       	cp	r18, r24
    6018:	39 07       	cpc	r19, r25
    601a:	69 f4       	brne	.+26     	; 0x6036 <free+0x10c>
    601c:	30 97       	sbiw	r30, 0x00	; 0
    601e:	29 f4       	brne	.+10     	; 0x602a <free+0x100>
    6020:	10 92 98 06 	sts	0x0698, r1	; 0x800698 <__flp+0x1>
    6024:	10 92 97 06 	sts	0x0697, r1	; 0x800697 <__flp>
    6028:	02 c0       	rjmp	.+4      	; 0x602e <free+0x104>
    602a:	13 82       	std	Z+3, r1	; 0x03
    602c:	12 82       	std	Z+2, r1	; 0x02
    602e:	b0 93 96 06 	sts	0x0696, r27	; 0x800696 <__brkval+0x1>
    6032:	a0 93 95 06 	sts	0x0695, r26	; 0x800695 <__brkval>
    6036:	df 91       	pop	r29
    6038:	cf 91       	pop	r28
    603a:	08 95       	ret

0000603c <realloc>:
    603c:	6f 92       	push	r6
    603e:	7f 92       	push	r7
    6040:	8f 92       	push	r8
    6042:	9f 92       	push	r9
    6044:	af 92       	push	r10
    6046:	bf 92       	push	r11
    6048:	cf 92       	push	r12
    604a:	df 92       	push	r13
    604c:	ef 92       	push	r14
    604e:	ff 92       	push	r15
    6050:	0f 93       	push	r16
    6052:	1f 93       	push	r17
    6054:	cf 93       	push	r28
    6056:	df 93       	push	r29
    6058:	00 97       	sbiw	r24, 0x00	; 0
    605a:	81 f4       	brne	.+32     	; 0x607c <realloc+0x40>
    605c:	cb 01       	movw	r24, r22
    605e:	df 91       	pop	r29
    6060:	cf 91       	pop	r28
    6062:	1f 91       	pop	r17
    6064:	0f 91       	pop	r16
    6066:	ff 90       	pop	r15
    6068:	ef 90       	pop	r14
    606a:	df 90       	pop	r13
    606c:	cf 90       	pop	r12
    606e:	bf 90       	pop	r11
    6070:	af 90       	pop	r10
    6072:	9f 90       	pop	r9
    6074:	8f 90       	pop	r8
    6076:	7f 90       	pop	r7
    6078:	6f 90       	pop	r6
    607a:	bf ce       	rjmp	.-642    	; 0x5dfa <malloc>
    607c:	fc 01       	movw	r30, r24
    607e:	e6 0f       	add	r30, r22
    6080:	f7 1f       	adc	r31, r23
    6082:	9c 01       	movw	r18, r24
    6084:	22 50       	subi	r18, 0x02	; 2
    6086:	31 09       	sbc	r19, r1
    6088:	e2 17       	cp	r30, r18
    608a:	f3 07       	cpc	r31, r19
    608c:	08 f4       	brcc	.+2      	; 0x6090 <realloc+0x54>
    608e:	a5 c0       	rjmp	.+330    	; 0x61da <realloc+0x19e>
    6090:	ec 01       	movw	r28, r24
    6092:	d9 01       	movw	r26, r18
    6094:	0d 91       	ld	r16, X+
    6096:	1c 91       	ld	r17, X
    6098:	11 97       	sbiw	r26, 0x01	; 1
    609a:	06 17       	cp	r16, r22
    609c:	17 07       	cpc	r17, r23
    609e:	a8 f0       	brcs	.+42     	; 0x60ca <realloc+0x8e>
    60a0:	05 30       	cpi	r16, 0x05	; 5
    60a2:	11 05       	cpc	r17, r1
    60a4:	08 f4       	brcc	.+2      	; 0x60a8 <realloc+0x6c>
    60a6:	97 c0       	rjmp	.+302    	; 0x61d6 <realloc+0x19a>
    60a8:	c8 01       	movw	r24, r16
    60aa:	04 97       	sbiw	r24, 0x04	; 4
    60ac:	86 17       	cp	r24, r22
    60ae:	97 07       	cpc	r25, r23
    60b0:	08 f4       	brcc	.+2      	; 0x60b4 <realloc+0x78>
    60b2:	91 c0       	rjmp	.+290    	; 0x61d6 <realloc+0x19a>
    60b4:	02 50       	subi	r16, 0x02	; 2
    60b6:	11 09       	sbc	r17, r1
    60b8:	06 1b       	sub	r16, r22
    60ba:	17 0b       	sbc	r17, r23
    60bc:	01 93       	st	Z+, r16
    60be:	11 93       	st	Z+, r17
    60c0:	6d 93       	st	X+, r22
    60c2:	7c 93       	st	X, r23
    60c4:	cf 01       	movw	r24, r30
    60c6:	31 df       	rcall	.-414    	; 0x5f2a <free>
    60c8:	86 c0       	rjmp	.+268    	; 0x61d6 <realloc+0x19a>
    60ca:	5b 01       	movw	r10, r22
    60cc:	a0 1a       	sub	r10, r16
    60ce:	b1 0a       	sbc	r11, r17
    60d0:	4c 01       	movw	r8, r24
    60d2:	80 0e       	add	r8, r16
    60d4:	91 1e       	adc	r9, r17
    60d6:	a0 91 97 06 	lds	r26, 0x0697	; 0x800697 <__flp>
    60da:	b0 91 98 06 	lds	r27, 0x0698	; 0x800698 <__flp+0x1>
    60de:	61 2c       	mov	r6, r1
    60e0:	71 2c       	mov	r7, r1
    60e2:	e1 2c       	mov	r14, r1
    60e4:	f1 2c       	mov	r15, r1
    60e6:	10 97       	sbiw	r26, 0x00	; 0
    60e8:	09 f4       	brne	.+2      	; 0x60ec <realloc+0xb0>
    60ea:	46 c0       	rjmp	.+140    	; 0x6178 <realloc+0x13c>
    60ec:	8d 91       	ld	r24, X+
    60ee:	9c 91       	ld	r25, X
    60f0:	11 97       	sbiw	r26, 0x01	; 1
    60f2:	a8 15       	cp	r26, r8
    60f4:	b9 05       	cpc	r27, r9
    60f6:	b1 f5       	brne	.+108    	; 0x6164 <realloc+0x128>
    60f8:	6c 01       	movw	r12, r24
    60fa:	42 e0       	ldi	r20, 0x02	; 2
    60fc:	c4 0e       	add	r12, r20
    60fe:	d1 1c       	adc	r13, r1
    6100:	ca 14       	cp	r12, r10
    6102:	db 04       	cpc	r13, r11
    6104:	78 f1       	brcs	.+94     	; 0x6164 <realloc+0x128>
    6106:	4c 01       	movw	r8, r24
    6108:	8a 18       	sub	r8, r10
    610a:	9b 08       	sbc	r9, r11
    610c:	64 01       	movw	r12, r8
    610e:	42 e0       	ldi	r20, 0x02	; 2
    6110:	c4 0e       	add	r12, r20
    6112:	d1 1c       	adc	r13, r1
    6114:	12 96       	adiw	r26, 0x02	; 2
    6116:	bc 90       	ld	r11, X
    6118:	12 97       	sbiw	r26, 0x02	; 2
    611a:	13 96       	adiw	r26, 0x03	; 3
    611c:	ac 91       	ld	r26, X
    611e:	b5 e0       	ldi	r27, 0x05	; 5
    6120:	cb 16       	cp	r12, r27
    6122:	d1 04       	cpc	r13, r1
    6124:	40 f0       	brcs	.+16     	; 0x6136 <realloc+0xfa>
    6126:	b2 82       	std	Z+2, r11	; 0x02
    6128:	a3 83       	std	Z+3, r26	; 0x03
    612a:	91 82       	std	Z+1, r9	; 0x01
    612c:	80 82       	st	Z, r8
    612e:	d9 01       	movw	r26, r18
    6130:	6d 93       	st	X+, r22
    6132:	7c 93       	st	X, r23
    6134:	09 c0       	rjmp	.+18     	; 0x6148 <realloc+0x10c>
    6136:	0e 5f       	subi	r16, 0xFE	; 254
    6138:	1f 4f       	sbci	r17, 0xFF	; 255
    613a:	80 0f       	add	r24, r16
    613c:	91 1f       	adc	r25, r17
    613e:	f9 01       	movw	r30, r18
    6140:	91 83       	std	Z+1, r25	; 0x01
    6142:	80 83       	st	Z, r24
    6144:	eb 2d       	mov	r30, r11
    6146:	fa 2f       	mov	r31, r26
    6148:	e1 14       	cp	r14, r1
    614a:	f1 04       	cpc	r15, r1
    614c:	31 f0       	breq	.+12     	; 0x615a <realloc+0x11e>
    614e:	d7 01       	movw	r26, r14
    6150:	13 96       	adiw	r26, 0x03	; 3
    6152:	fc 93       	st	X, r31
    6154:	ee 93       	st	-X, r30
    6156:	12 97       	sbiw	r26, 0x02	; 2
    6158:	3e c0       	rjmp	.+124    	; 0x61d6 <realloc+0x19a>
    615a:	f0 93 98 06 	sts	0x0698, r31	; 0x800698 <__flp+0x1>
    615e:	e0 93 97 06 	sts	0x0697, r30	; 0x800697 <__flp>
    6162:	39 c0       	rjmp	.+114    	; 0x61d6 <realloc+0x19a>
    6164:	68 16       	cp	r6, r24
    6166:	79 06       	cpc	r7, r25
    6168:	08 f4       	brcc	.+2      	; 0x616c <realloc+0x130>
    616a:	3c 01       	movw	r6, r24
    616c:	7d 01       	movw	r14, r26
    616e:	12 96       	adiw	r26, 0x02	; 2
    6170:	0d 90       	ld	r0, X+
    6172:	bc 91       	ld	r27, X
    6174:	a0 2d       	mov	r26, r0
    6176:	b7 cf       	rjmp	.-146    	; 0x60e6 <realloc+0xaa>
    6178:	80 91 95 06 	lds	r24, 0x0695	; 0x800695 <__brkval>
    617c:	90 91 96 06 	lds	r25, 0x0696	; 0x800696 <__brkval+0x1>
    6180:	88 16       	cp	r8, r24
    6182:	99 06       	cpc	r9, r25
    6184:	e1 f4       	brne	.+56     	; 0x61be <realloc+0x182>
    6186:	66 16       	cp	r6, r22
    6188:	77 06       	cpc	r7, r23
    618a:	c8 f4       	brcc	.+50     	; 0x61be <realloc+0x182>
    618c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    6190:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    6194:	00 97       	sbiw	r24, 0x00	; 0
    6196:	41 f4       	brne	.+16     	; 0x61a8 <realloc+0x16c>
    6198:	8d b7       	in	r24, 0x3d	; 61
    619a:	9e b7       	in	r25, 0x3e	; 62
    619c:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    61a0:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    61a4:	84 1b       	sub	r24, r20
    61a6:	95 0b       	sbc	r25, r21
    61a8:	e8 17       	cp	r30, r24
    61aa:	f9 07       	cpc	r31, r25
    61ac:	b0 f4       	brcc	.+44     	; 0x61da <realloc+0x19e>
    61ae:	f0 93 96 06 	sts	0x0696, r31	; 0x800696 <__brkval+0x1>
    61b2:	e0 93 95 06 	sts	0x0695, r30	; 0x800695 <__brkval>
    61b6:	f9 01       	movw	r30, r18
    61b8:	71 83       	std	Z+1, r23	; 0x01
    61ba:	60 83       	st	Z, r22
    61bc:	0c c0       	rjmp	.+24     	; 0x61d6 <realloc+0x19a>
    61be:	cb 01       	movw	r24, r22
    61c0:	1c de       	rcall	.-968    	; 0x5dfa <malloc>
    61c2:	7c 01       	movw	r14, r24
    61c4:	00 97       	sbiw	r24, 0x00	; 0
    61c6:	49 f0       	breq	.+18     	; 0x61da <realloc+0x19e>
    61c8:	a8 01       	movw	r20, r16
    61ca:	be 01       	movw	r22, r28
    61cc:	7b d0       	rcall	.+246    	; 0x62c4 <memcpy>
    61ce:	ce 01       	movw	r24, r28
    61d0:	ac de       	rcall	.-680    	; 0x5f2a <free>
    61d2:	c7 01       	movw	r24, r14
    61d4:	04 c0       	rjmp	.+8      	; 0x61de <realloc+0x1a2>
    61d6:	ce 01       	movw	r24, r28
    61d8:	02 c0       	rjmp	.+4      	; 0x61de <realloc+0x1a2>
    61da:	80 e0       	ldi	r24, 0x00	; 0
    61dc:	90 e0       	ldi	r25, 0x00	; 0
    61de:	df 91       	pop	r29
    61e0:	cf 91       	pop	r28
    61e2:	1f 91       	pop	r17
    61e4:	0f 91       	pop	r16
    61e6:	ff 90       	pop	r15
    61e8:	ef 90       	pop	r14
    61ea:	df 90       	pop	r13
    61ec:	cf 90       	pop	r12
    61ee:	bf 90       	pop	r11
    61f0:	af 90       	pop	r10
    61f2:	9f 90       	pop	r9
    61f4:	8f 90       	pop	r8
    61f6:	7f 90       	pop	r7
    61f8:	6f 90       	pop	r6
    61fa:	08 95       	ret

000061fc <atoi>:
    61fc:	fc 01       	movw	r30, r24
    61fe:	88 27       	eor	r24, r24
    6200:	99 27       	eor	r25, r25
    6202:	e8 94       	clt
    6204:	21 91       	ld	r18, Z+
    6206:	20 32       	cpi	r18, 0x20	; 32
    6208:	e9 f3       	breq	.-6      	; 0x6204 <atoi+0x8>
    620a:	29 30       	cpi	r18, 0x09	; 9
    620c:	10 f0       	brcs	.+4      	; 0x6212 <atoi+0x16>
    620e:	2e 30       	cpi	r18, 0x0E	; 14
    6210:	c8 f3       	brcs	.-14     	; 0x6204 <atoi+0x8>
    6212:	2b 32       	cpi	r18, 0x2B	; 43
    6214:	39 f0       	breq	.+14     	; 0x6224 <atoi+0x28>
    6216:	2d 32       	cpi	r18, 0x2D	; 45
    6218:	31 f4       	brne	.+12     	; 0x6226 <atoi+0x2a>
    621a:	68 94       	set
    621c:	03 c0       	rjmp	.+6      	; 0x6224 <atoi+0x28>
    621e:	e0 d0       	rcall	.+448    	; 0x63e0 <__mulhi_const_10>
    6220:	82 0f       	add	r24, r18
    6222:	91 1d       	adc	r25, r1
    6224:	21 91       	ld	r18, Z+
    6226:	20 53       	subi	r18, 0x30	; 48
    6228:	2a 30       	cpi	r18, 0x0A	; 10
    622a:	c8 f3       	brcs	.-14     	; 0x621e <atoi+0x22>
    622c:	1e f4       	brtc	.+6      	; 0x6234 <atoi+0x38>
    622e:	90 95       	com	r25
    6230:	81 95       	neg	r24
    6232:	9f 4f       	sbci	r25, 0xFF	; 255
    6234:	08 95       	ret

00006236 <atol>:
    6236:	1f 93       	push	r17
    6238:	fc 01       	movw	r30, r24
    623a:	99 27       	eor	r25, r25
    623c:	88 27       	eor	r24, r24
    623e:	bc 01       	movw	r22, r24
    6240:	e8 94       	clt
    6242:	11 91       	ld	r17, Z+
    6244:	10 32       	cpi	r17, 0x20	; 32
    6246:	e9 f3       	breq	.-6      	; 0x6242 <atol+0xc>
    6248:	19 30       	cpi	r17, 0x09	; 9
    624a:	10 f0       	brcs	.+4      	; 0x6250 <atol+0x1a>
    624c:	1e 30       	cpi	r17, 0x0E	; 14
    624e:	c8 f3       	brcs	.-14     	; 0x6242 <atol+0xc>
    6250:	1b 32       	cpi	r17, 0x2B	; 43
    6252:	49 f0       	breq	.+18     	; 0x6266 <atol+0x30>
    6254:	1d 32       	cpi	r17, 0x2D	; 45
    6256:	41 f4       	brne	.+16     	; 0x6268 <atol+0x32>
    6258:	68 94       	set
    625a:	05 c0       	rjmp	.+10     	; 0x6266 <atol+0x30>
    625c:	ac d0       	rcall	.+344    	; 0x63b6 <__mulsi_const_10>
    625e:	61 0f       	add	r22, r17
    6260:	71 1d       	adc	r23, r1
    6262:	81 1d       	adc	r24, r1
    6264:	91 1d       	adc	r25, r1
    6266:	11 91       	ld	r17, Z+
    6268:	10 53       	subi	r17, 0x30	; 48
    626a:	1a 30       	cpi	r17, 0x0A	; 10
    626c:	b8 f3       	brcs	.-18     	; 0x625c <atol+0x26>
    626e:	3e f4       	brtc	.+14     	; 0x627e <atol+0x48>
    6270:	90 95       	com	r25
    6272:	80 95       	com	r24
    6274:	70 95       	com	r23
    6276:	61 95       	neg	r22
    6278:	7f 4f       	sbci	r23, 0xFF	; 255
    627a:	8f 4f       	sbci	r24, 0xFF	; 255
    627c:	9f 4f       	sbci	r25, 0xFF	; 255
    627e:	1f 91       	pop	r17
    6280:	08 95       	ret

00006282 <isspace>:
    6282:	91 11       	cpse	r25, r1
    6284:	7f c5       	rjmp	.+2814   	; 0x6d84 <__ctype_isfalse>
    6286:	80 32       	cpi	r24, 0x20	; 32
    6288:	19 f0       	breq	.+6      	; 0x6290 <isspace+0xe>
    628a:	89 50       	subi	r24, 0x09	; 9
    628c:	85 50       	subi	r24, 0x05	; 5
    628e:	d0 f7       	brcc	.-12     	; 0x6284 <isspace+0x2>
    6290:	08 95       	ret

00006292 <memcpy_P>:
    6292:	fb 01       	movw	r30, r22
    6294:	dc 01       	movw	r26, r24
    6296:	02 c0       	rjmp	.+4      	; 0x629c <memcpy_P+0xa>
    6298:	05 90       	lpm	r0, Z+
    629a:	0d 92       	st	X+, r0
    629c:	41 50       	subi	r20, 0x01	; 1
    629e:	50 40       	sbci	r21, 0x00	; 0
    62a0:	d8 f7       	brcc	.-10     	; 0x6298 <memcpy_P+0x6>
    62a2:	08 95       	ret

000062a4 <strcpy_P>:
    62a4:	fb 01       	movw	r30, r22
    62a6:	dc 01       	movw	r26, r24
    62a8:	05 90       	lpm	r0, Z+
    62aa:	0d 92       	st	X+, r0
    62ac:	00 20       	and	r0, r0
    62ae:	e1 f7       	brne	.-8      	; 0x62a8 <strcpy_P+0x4>
    62b0:	08 95       	ret

000062b2 <__strlen_P>:
    62b2:	fc 01       	movw	r30, r24
    62b4:	05 90       	lpm	r0, Z+
    62b6:	00 20       	and	r0, r0
    62b8:	e9 f7       	brne	.-6      	; 0x62b4 <__strlen_P+0x2>
    62ba:	80 95       	com	r24
    62bc:	90 95       	com	r25
    62be:	8e 0f       	add	r24, r30
    62c0:	9f 1f       	adc	r25, r31
    62c2:	08 95       	ret

000062c4 <memcpy>:
    62c4:	fb 01       	movw	r30, r22
    62c6:	dc 01       	movw	r26, r24
    62c8:	02 c0       	rjmp	.+4      	; 0x62ce <memcpy+0xa>
    62ca:	01 90       	ld	r0, Z+
    62cc:	0d 92       	st	X+, r0
    62ce:	41 50       	subi	r20, 0x01	; 1
    62d0:	50 40       	sbci	r21, 0x00	; 0
    62d2:	d8 f7       	brcc	.-10     	; 0x62ca <memcpy+0x6>
    62d4:	08 95       	ret

000062d6 <memmove>:
    62d6:	68 17       	cp	r22, r24
    62d8:	79 07       	cpc	r23, r25
    62da:	68 f4       	brcc	.+26     	; 0x62f6 <memmove+0x20>
    62dc:	fb 01       	movw	r30, r22
    62de:	dc 01       	movw	r26, r24
    62e0:	e4 0f       	add	r30, r20
    62e2:	f5 1f       	adc	r31, r21
    62e4:	a4 0f       	add	r26, r20
    62e6:	b5 1f       	adc	r27, r21
    62e8:	02 c0       	rjmp	.+4      	; 0x62ee <memmove+0x18>
    62ea:	02 90       	ld	r0, -Z
    62ec:	0e 92       	st	-X, r0
    62ee:	41 50       	subi	r20, 0x01	; 1
    62f0:	50 40       	sbci	r21, 0x00	; 0
    62f2:	d8 f7       	brcc	.-10     	; 0x62ea <memmove+0x14>
    62f4:	08 95       	ret
    62f6:	e6 cf       	rjmp	.-52     	; 0x62c4 <memcpy>

000062f8 <memset>:
    62f8:	dc 01       	movw	r26, r24
    62fa:	01 c0       	rjmp	.+2      	; 0x62fe <memset+0x6>
    62fc:	6d 93       	st	X+, r22
    62fe:	41 50       	subi	r20, 0x01	; 1
    6300:	50 40       	sbci	r21, 0x00	; 0
    6302:	e0 f7       	brcc	.-8      	; 0x62fc <memset+0x4>
    6304:	08 95       	ret

00006306 <strcmp>:
    6306:	fb 01       	movw	r30, r22
    6308:	dc 01       	movw	r26, r24
    630a:	8d 91       	ld	r24, X+
    630c:	01 90       	ld	r0, Z+
    630e:	80 19       	sub	r24, r0
    6310:	01 10       	cpse	r0, r1
    6312:	d9 f3       	breq	.-10     	; 0x630a <strcmp+0x4>
    6314:	99 0b       	sbc	r25, r25
    6316:	08 95       	ret

00006318 <strcpy>:
    6318:	fb 01       	movw	r30, r22
    631a:	dc 01       	movw	r26, r24
    631c:	01 90       	ld	r0, Z+
    631e:	0d 92       	st	X+, r0
    6320:	00 20       	and	r0, r0
    6322:	e1 f7       	brne	.-8      	; 0x631c <strcpy+0x4>
    6324:	08 95       	ret

00006326 <strncpy>:
    6326:	fb 01       	movw	r30, r22
    6328:	dc 01       	movw	r26, r24
    632a:	41 50       	subi	r20, 0x01	; 1
    632c:	50 40       	sbci	r21, 0x00	; 0
    632e:	48 f0       	brcs	.+18     	; 0x6342 <strncpy+0x1c>
    6330:	01 90       	ld	r0, Z+
    6332:	0d 92       	st	X+, r0
    6334:	00 20       	and	r0, r0
    6336:	c9 f7       	brne	.-14     	; 0x632a <strncpy+0x4>
    6338:	01 c0       	rjmp	.+2      	; 0x633c <strncpy+0x16>
    633a:	1d 92       	st	X+, r1
    633c:	41 50       	subi	r20, 0x01	; 1
    633e:	50 40       	sbci	r21, 0x00	; 0
    6340:	e0 f7       	brcc	.-8      	; 0x633a <strncpy+0x14>
    6342:	08 95       	ret

00006344 <strnlen>:
    6344:	fc 01       	movw	r30, r24
    6346:	61 50       	subi	r22, 0x01	; 1
    6348:	70 40       	sbci	r23, 0x00	; 0
    634a:	01 90       	ld	r0, Z+
    634c:	01 10       	cpse	r0, r1
    634e:	d8 f7       	brcc	.-10     	; 0x6346 <strnlen+0x2>
    6350:	80 95       	com	r24
    6352:	90 95       	com	r25
    6354:	8e 0f       	add	r24, r30
    6356:	9f 1f       	adc	r25, r31
    6358:	08 95       	ret

0000635a <strstr>:
    635a:	fb 01       	movw	r30, r22
    635c:	51 91       	ld	r21, Z+
    635e:	55 23       	and	r21, r21
    6360:	a9 f0       	breq	.+42     	; 0x638c <strstr+0x32>
    6362:	bf 01       	movw	r22, r30
    6364:	dc 01       	movw	r26, r24
    6366:	4d 91       	ld	r20, X+
    6368:	45 17       	cp	r20, r21
    636a:	41 11       	cpse	r20, r1
    636c:	e1 f7       	brne	.-8      	; 0x6366 <strstr+0xc>
    636e:	59 f4       	brne	.+22     	; 0x6386 <strstr+0x2c>
    6370:	cd 01       	movw	r24, r26
    6372:	01 90       	ld	r0, Z+
    6374:	00 20       	and	r0, r0
    6376:	49 f0       	breq	.+18     	; 0x638a <strstr+0x30>
    6378:	4d 91       	ld	r20, X+
    637a:	40 15       	cp	r20, r0
    637c:	41 11       	cpse	r20, r1
    637e:	c9 f3       	breq	.-14     	; 0x6372 <strstr+0x18>
    6380:	fb 01       	movw	r30, r22
    6382:	41 11       	cpse	r20, r1
    6384:	ef cf       	rjmp	.-34     	; 0x6364 <strstr+0xa>
    6386:	81 e0       	ldi	r24, 0x01	; 1
    6388:	90 e0       	ldi	r25, 0x00	; 0
    638a:	01 97       	sbiw	r24, 0x01	; 1
    638c:	08 95       	ret

0000638e <itoa>:
    638e:	45 32       	cpi	r20, 0x25	; 37
    6390:	51 05       	cpc	r21, r1
    6392:	18 f4       	brcc	.+6      	; 0x639a <itoa+0xc>
    6394:	42 30       	cpi	r20, 0x02	; 2
    6396:	08 f0       	brcs	.+2      	; 0x639a <itoa+0xc>
    6398:	04 c0       	rjmp	.+8      	; 0x63a2 <__itoa_ncheck>
    639a:	fb 01       	movw	r30, r22
    639c:	10 82       	st	Z, r1
    639e:	cb 01       	movw	r24, r22
    63a0:	08 95       	ret

000063a2 <__itoa_ncheck>:
    63a2:	bb 27       	eor	r27, r27
    63a4:	4a 30       	cpi	r20, 0x0A	; 10
    63a6:	31 f4       	brne	.+12     	; 0x63b4 <__itoa_ncheck+0x12>
    63a8:	99 23       	and	r25, r25
    63aa:	22 f4       	brpl	.+8      	; 0x63b4 <__itoa_ncheck+0x12>
    63ac:	bd e2       	ldi	r27, 0x2D	; 45
    63ae:	90 95       	com	r25
    63b0:	81 95       	neg	r24
    63b2:	9f 4f       	sbci	r25, 0xFF	; 255
    63b4:	1e c0       	rjmp	.+60     	; 0x63f2 <__utoa_common>

000063b6 <__mulsi_const_10>:
    63b6:	59 2f       	mov	r21, r25
    63b8:	48 2f       	mov	r20, r24
    63ba:	37 2f       	mov	r19, r23
    63bc:	26 2f       	mov	r18, r22
    63be:	66 0f       	add	r22, r22
    63c0:	77 1f       	adc	r23, r23
    63c2:	88 1f       	adc	r24, r24
    63c4:	99 1f       	adc	r25, r25
    63c6:	66 0f       	add	r22, r22
    63c8:	77 1f       	adc	r23, r23
    63ca:	88 1f       	adc	r24, r24
    63cc:	99 1f       	adc	r25, r25
    63ce:	62 0f       	add	r22, r18
    63d0:	73 1f       	adc	r23, r19
    63d2:	84 1f       	adc	r24, r20
    63d4:	95 1f       	adc	r25, r21
    63d6:	66 0f       	add	r22, r22
    63d8:	77 1f       	adc	r23, r23
    63da:	88 1f       	adc	r24, r24
    63dc:	99 1f       	adc	r25, r25
    63de:	08 95       	ret

000063e0 <__mulhi_const_10>:
    63e0:	7a e0       	ldi	r23, 0x0A	; 10
    63e2:	97 9f       	mul	r25, r23
    63e4:	90 2d       	mov	r25, r0
    63e6:	87 9f       	mul	r24, r23
    63e8:	80 2d       	mov	r24, r0
    63ea:	91 0d       	add	r25, r1
    63ec:	11 24       	eor	r1, r1
    63ee:	08 95       	ret

000063f0 <__utoa_ncheck>:
    63f0:	bb 27       	eor	r27, r27

000063f2 <__utoa_common>:
    63f2:	fb 01       	movw	r30, r22
    63f4:	55 27       	eor	r21, r21
    63f6:	aa 27       	eor	r26, r26
    63f8:	88 0f       	add	r24, r24
    63fa:	99 1f       	adc	r25, r25
    63fc:	aa 1f       	adc	r26, r26
    63fe:	a4 17       	cp	r26, r20
    6400:	10 f0       	brcs	.+4      	; 0x6406 <__utoa_common+0x14>
    6402:	a4 1b       	sub	r26, r20
    6404:	83 95       	inc	r24
    6406:	50 51       	subi	r21, 0x10	; 16
    6408:	b9 f7       	brne	.-18     	; 0x63f8 <__utoa_common+0x6>
    640a:	a0 5d       	subi	r26, 0xD0	; 208
    640c:	aa 33       	cpi	r26, 0x3A	; 58
    640e:	08 f0       	brcs	.+2      	; 0x6412 <__utoa_common+0x20>
    6410:	a9 5d       	subi	r26, 0xD9	; 217
    6412:	a1 93       	st	Z+, r26
    6414:	00 97       	sbiw	r24, 0x00	; 0
    6416:	79 f7       	brne	.-34     	; 0x63f6 <__utoa_common+0x4>
    6418:	b1 11       	cpse	r27, r1
    641a:	b1 93       	st	Z+, r27
    641c:	11 92       	st	Z+, r1
    641e:	cb 01       	movw	r24, r22
    6420:	bf c4       	rjmp	.+2430   	; 0x6da0 <strrev>

00006422 <sprintf_P>:
    6422:	0f 93       	push	r16
    6424:	1f 93       	push	r17
    6426:	cf 93       	push	r28
    6428:	df 93       	push	r29
    642a:	cd b7       	in	r28, 0x3d	; 61
    642c:	de b7       	in	r29, 0x3e	; 62
    642e:	2e 97       	sbiw	r28, 0x0e	; 14
    6430:	0f b6       	in	r0, 0x3f	; 63
    6432:	f8 94       	cli
    6434:	de bf       	out	0x3e, r29	; 62
    6436:	0f be       	out	0x3f, r0	; 63
    6438:	cd bf       	out	0x3d, r28	; 61
    643a:	0e 89       	ldd	r16, Y+22	; 0x16
    643c:	1f 89       	ldd	r17, Y+23	; 0x17
    643e:	8e e0       	ldi	r24, 0x0E	; 14
    6440:	8c 83       	std	Y+4, r24	; 0x04
    6442:	1a 83       	std	Y+2, r17	; 0x02
    6444:	09 83       	std	Y+1, r16	; 0x01
    6446:	8f ef       	ldi	r24, 0xFF	; 255
    6448:	9f e7       	ldi	r25, 0x7F	; 127
    644a:	9e 83       	std	Y+6, r25	; 0x06
    644c:	8d 83       	std	Y+5, r24	; 0x05
    644e:	ae 01       	movw	r20, r28
    6450:	46 5e       	subi	r20, 0xE6	; 230
    6452:	5f 4f       	sbci	r21, 0xFF	; 255
    6454:	68 8d       	ldd	r22, Y+24	; 0x18
    6456:	79 8d       	ldd	r23, Y+25	; 0x19
    6458:	ce 01       	movw	r24, r28
    645a:	01 96       	adiw	r24, 0x01	; 1
    645c:	48 d0       	rcall	.+144    	; 0x64ee <vfprintf>
    645e:	ef 81       	ldd	r30, Y+7	; 0x07
    6460:	f8 85       	ldd	r31, Y+8	; 0x08
    6462:	e0 0f       	add	r30, r16
    6464:	f1 1f       	adc	r31, r17
    6466:	10 82       	st	Z, r1
    6468:	2e 96       	adiw	r28, 0x0e	; 14
    646a:	0f b6       	in	r0, 0x3f	; 63
    646c:	f8 94       	cli
    646e:	de bf       	out	0x3e, r29	; 62
    6470:	0f be       	out	0x3f, r0	; 63
    6472:	cd bf       	out	0x3d, r28	; 61
    6474:	df 91       	pop	r29
    6476:	cf 91       	pop	r28
    6478:	1f 91       	pop	r17
    647a:	0f 91       	pop	r16
    647c:	08 95       	ret

0000647e <vsnprintf_P>:
    647e:	0f 93       	push	r16
    6480:	1f 93       	push	r17
    6482:	cf 93       	push	r28
    6484:	df 93       	push	r29
    6486:	cd b7       	in	r28, 0x3d	; 61
    6488:	de b7       	in	r29, 0x3e	; 62
    648a:	2e 97       	sbiw	r28, 0x0e	; 14
    648c:	0f b6       	in	r0, 0x3f	; 63
    648e:	f8 94       	cli
    6490:	de bf       	out	0x3e, r29	; 62
    6492:	0f be       	out	0x3f, r0	; 63
    6494:	cd bf       	out	0x3d, r28	; 61
    6496:	8c 01       	movw	r16, r24
    6498:	fa 01       	movw	r30, r20
    649a:	8e e0       	ldi	r24, 0x0E	; 14
    649c:	8c 83       	std	Y+4, r24	; 0x04
    649e:	1a 83       	std	Y+2, r17	; 0x02
    64a0:	09 83       	std	Y+1, r16	; 0x01
    64a2:	77 ff       	sbrs	r23, 7
    64a4:	02 c0       	rjmp	.+4      	; 0x64aa <vsnprintf_P+0x2c>
    64a6:	60 e0       	ldi	r22, 0x00	; 0
    64a8:	70 e8       	ldi	r23, 0x80	; 128
    64aa:	cb 01       	movw	r24, r22
    64ac:	01 97       	sbiw	r24, 0x01	; 1
    64ae:	9e 83       	std	Y+6, r25	; 0x06
    64b0:	8d 83       	std	Y+5, r24	; 0x05
    64b2:	a9 01       	movw	r20, r18
    64b4:	bf 01       	movw	r22, r30
    64b6:	ce 01       	movw	r24, r28
    64b8:	01 96       	adiw	r24, 0x01	; 1
    64ba:	19 d0       	rcall	.+50     	; 0x64ee <vfprintf>
    64bc:	4d 81       	ldd	r20, Y+5	; 0x05
    64be:	5e 81       	ldd	r21, Y+6	; 0x06
    64c0:	57 fd       	sbrc	r21, 7
    64c2:	0a c0       	rjmp	.+20     	; 0x64d8 <vsnprintf_P+0x5a>
    64c4:	2f 81       	ldd	r18, Y+7	; 0x07
    64c6:	38 85       	ldd	r19, Y+8	; 0x08
    64c8:	42 17       	cp	r20, r18
    64ca:	53 07       	cpc	r21, r19
    64cc:	0c f4       	brge	.+2      	; 0x64d0 <vsnprintf_P+0x52>
    64ce:	9a 01       	movw	r18, r20
    64d0:	f8 01       	movw	r30, r16
    64d2:	e2 0f       	add	r30, r18
    64d4:	f3 1f       	adc	r31, r19
    64d6:	10 82       	st	Z, r1
    64d8:	2e 96       	adiw	r28, 0x0e	; 14
    64da:	0f b6       	in	r0, 0x3f	; 63
    64dc:	f8 94       	cli
    64de:	de bf       	out	0x3e, r29	; 62
    64e0:	0f be       	out	0x3f, r0	; 63
    64e2:	cd bf       	out	0x3d, r28	; 61
    64e4:	df 91       	pop	r29
    64e6:	cf 91       	pop	r28
    64e8:	1f 91       	pop	r17
    64ea:	0f 91       	pop	r16
    64ec:	08 95       	ret

000064ee <vfprintf>:
    64ee:	2f 92       	push	r2
    64f0:	3f 92       	push	r3
    64f2:	4f 92       	push	r4
    64f4:	5f 92       	push	r5
    64f6:	6f 92       	push	r6
    64f8:	7f 92       	push	r7
    64fa:	8f 92       	push	r8
    64fc:	9f 92       	push	r9
    64fe:	af 92       	push	r10
    6500:	bf 92       	push	r11
    6502:	cf 92       	push	r12
    6504:	df 92       	push	r13
    6506:	ef 92       	push	r14
    6508:	ff 92       	push	r15
    650a:	0f 93       	push	r16
    650c:	1f 93       	push	r17
    650e:	cf 93       	push	r28
    6510:	df 93       	push	r29
    6512:	cd b7       	in	r28, 0x3d	; 61
    6514:	de b7       	in	r29, 0x3e	; 62
    6516:	2b 97       	sbiw	r28, 0x0b	; 11
    6518:	0f b6       	in	r0, 0x3f	; 63
    651a:	f8 94       	cli
    651c:	de bf       	out	0x3e, r29	; 62
    651e:	0f be       	out	0x3f, r0	; 63
    6520:	cd bf       	out	0x3d, r28	; 61
    6522:	6c 01       	movw	r12, r24
    6524:	7b 01       	movw	r14, r22
    6526:	8a 01       	movw	r16, r20
    6528:	fc 01       	movw	r30, r24
    652a:	17 82       	std	Z+7, r1	; 0x07
    652c:	16 82       	std	Z+6, r1	; 0x06
    652e:	83 81       	ldd	r24, Z+3	; 0x03
    6530:	81 ff       	sbrs	r24, 1
    6532:	bf c1       	rjmp	.+894    	; 0x68b2 <vfprintf+0x3c4>
    6534:	ce 01       	movw	r24, r28
    6536:	01 96       	adiw	r24, 0x01	; 1
    6538:	3c 01       	movw	r6, r24
    653a:	f6 01       	movw	r30, r12
    653c:	93 81       	ldd	r25, Z+3	; 0x03
    653e:	f7 01       	movw	r30, r14
    6540:	93 fd       	sbrc	r25, 3
    6542:	85 91       	lpm	r24, Z+
    6544:	93 ff       	sbrs	r25, 3
    6546:	81 91       	ld	r24, Z+
    6548:	7f 01       	movw	r14, r30
    654a:	88 23       	and	r24, r24
    654c:	09 f4       	brne	.+2      	; 0x6550 <vfprintf+0x62>
    654e:	ad c1       	rjmp	.+858    	; 0x68aa <vfprintf+0x3bc>
    6550:	85 32       	cpi	r24, 0x25	; 37
    6552:	39 f4       	brne	.+14     	; 0x6562 <vfprintf+0x74>
    6554:	93 fd       	sbrc	r25, 3
    6556:	85 91       	lpm	r24, Z+
    6558:	93 ff       	sbrs	r25, 3
    655a:	81 91       	ld	r24, Z+
    655c:	7f 01       	movw	r14, r30
    655e:	85 32       	cpi	r24, 0x25	; 37
    6560:	21 f4       	brne	.+8      	; 0x656a <vfprintf+0x7c>
    6562:	b6 01       	movw	r22, r12
    6564:	90 e0       	ldi	r25, 0x00	; 0
    6566:	2c d4       	rcall	.+2136   	; 0x6dc0 <fputc>
    6568:	e8 cf       	rjmp	.-48     	; 0x653a <vfprintf+0x4c>
    656a:	91 2c       	mov	r9, r1
    656c:	21 2c       	mov	r2, r1
    656e:	31 2c       	mov	r3, r1
    6570:	ff e1       	ldi	r31, 0x1F	; 31
    6572:	f3 15       	cp	r31, r3
    6574:	d8 f0       	brcs	.+54     	; 0x65ac <vfprintf+0xbe>
    6576:	8b 32       	cpi	r24, 0x2B	; 43
    6578:	79 f0       	breq	.+30     	; 0x6598 <vfprintf+0xaa>
    657a:	38 f4       	brcc	.+14     	; 0x658a <vfprintf+0x9c>
    657c:	80 32       	cpi	r24, 0x20	; 32
    657e:	79 f0       	breq	.+30     	; 0x659e <vfprintf+0xb0>
    6580:	83 32       	cpi	r24, 0x23	; 35
    6582:	a1 f4       	brne	.+40     	; 0x65ac <vfprintf+0xbe>
    6584:	23 2d       	mov	r18, r3
    6586:	20 61       	ori	r18, 0x10	; 16
    6588:	1d c0       	rjmp	.+58     	; 0x65c4 <vfprintf+0xd6>
    658a:	8d 32       	cpi	r24, 0x2D	; 45
    658c:	61 f0       	breq	.+24     	; 0x65a6 <vfprintf+0xb8>
    658e:	80 33       	cpi	r24, 0x30	; 48
    6590:	69 f4       	brne	.+26     	; 0x65ac <vfprintf+0xbe>
    6592:	23 2d       	mov	r18, r3
    6594:	21 60       	ori	r18, 0x01	; 1
    6596:	16 c0       	rjmp	.+44     	; 0x65c4 <vfprintf+0xd6>
    6598:	83 2d       	mov	r24, r3
    659a:	82 60       	ori	r24, 0x02	; 2
    659c:	38 2e       	mov	r3, r24
    659e:	e3 2d       	mov	r30, r3
    65a0:	e4 60       	ori	r30, 0x04	; 4
    65a2:	3e 2e       	mov	r3, r30
    65a4:	2a c0       	rjmp	.+84     	; 0x65fa <vfprintf+0x10c>
    65a6:	f3 2d       	mov	r31, r3
    65a8:	f8 60       	ori	r31, 0x08	; 8
    65aa:	1d c0       	rjmp	.+58     	; 0x65e6 <vfprintf+0xf8>
    65ac:	37 fc       	sbrc	r3, 7
    65ae:	2d c0       	rjmp	.+90     	; 0x660a <vfprintf+0x11c>
    65b0:	20 ed       	ldi	r18, 0xD0	; 208
    65b2:	28 0f       	add	r18, r24
    65b4:	2a 30       	cpi	r18, 0x0A	; 10
    65b6:	40 f0       	brcs	.+16     	; 0x65c8 <vfprintf+0xda>
    65b8:	8e 32       	cpi	r24, 0x2E	; 46
    65ba:	b9 f4       	brne	.+46     	; 0x65ea <vfprintf+0xfc>
    65bc:	36 fc       	sbrc	r3, 6
    65be:	75 c1       	rjmp	.+746    	; 0x68aa <vfprintf+0x3bc>
    65c0:	23 2d       	mov	r18, r3
    65c2:	20 64       	ori	r18, 0x40	; 64
    65c4:	32 2e       	mov	r3, r18
    65c6:	19 c0       	rjmp	.+50     	; 0x65fa <vfprintf+0x10c>
    65c8:	36 fe       	sbrs	r3, 6
    65ca:	06 c0       	rjmp	.+12     	; 0x65d8 <vfprintf+0xea>
    65cc:	8a e0       	ldi	r24, 0x0A	; 10
    65ce:	98 9e       	mul	r9, r24
    65d0:	20 0d       	add	r18, r0
    65d2:	11 24       	eor	r1, r1
    65d4:	92 2e       	mov	r9, r18
    65d6:	11 c0       	rjmp	.+34     	; 0x65fa <vfprintf+0x10c>
    65d8:	ea e0       	ldi	r30, 0x0A	; 10
    65da:	2e 9e       	mul	r2, r30
    65dc:	20 0d       	add	r18, r0
    65de:	11 24       	eor	r1, r1
    65e0:	22 2e       	mov	r2, r18
    65e2:	f3 2d       	mov	r31, r3
    65e4:	f0 62       	ori	r31, 0x20	; 32
    65e6:	3f 2e       	mov	r3, r31
    65e8:	08 c0       	rjmp	.+16     	; 0x65fa <vfprintf+0x10c>
    65ea:	8c 36       	cpi	r24, 0x6C	; 108
    65ec:	21 f4       	brne	.+8      	; 0x65f6 <vfprintf+0x108>
    65ee:	83 2d       	mov	r24, r3
    65f0:	80 68       	ori	r24, 0x80	; 128
    65f2:	38 2e       	mov	r3, r24
    65f4:	02 c0       	rjmp	.+4      	; 0x65fa <vfprintf+0x10c>
    65f6:	88 36       	cpi	r24, 0x68	; 104
    65f8:	41 f4       	brne	.+16     	; 0x660a <vfprintf+0x11c>
    65fa:	f7 01       	movw	r30, r14
    65fc:	93 fd       	sbrc	r25, 3
    65fe:	85 91       	lpm	r24, Z+
    6600:	93 ff       	sbrs	r25, 3
    6602:	81 91       	ld	r24, Z+
    6604:	7f 01       	movw	r14, r30
    6606:	81 11       	cpse	r24, r1
    6608:	b3 cf       	rjmp	.-154    	; 0x6570 <vfprintf+0x82>
    660a:	98 2f       	mov	r25, r24
    660c:	9f 7d       	andi	r25, 0xDF	; 223
    660e:	95 54       	subi	r25, 0x45	; 69
    6610:	93 30       	cpi	r25, 0x03	; 3
    6612:	28 f4       	brcc	.+10     	; 0x661e <vfprintf+0x130>
    6614:	0c 5f       	subi	r16, 0xFC	; 252
    6616:	1f 4f       	sbci	r17, 0xFF	; 255
    6618:	9f e3       	ldi	r25, 0x3F	; 63
    661a:	99 83       	std	Y+1, r25	; 0x01
    661c:	0d c0       	rjmp	.+26     	; 0x6638 <vfprintf+0x14a>
    661e:	83 36       	cpi	r24, 0x63	; 99
    6620:	31 f0       	breq	.+12     	; 0x662e <vfprintf+0x140>
    6622:	83 37       	cpi	r24, 0x73	; 115
    6624:	71 f0       	breq	.+28     	; 0x6642 <vfprintf+0x154>
    6626:	83 35       	cpi	r24, 0x53	; 83
    6628:	09 f0       	breq	.+2      	; 0x662c <vfprintf+0x13e>
    662a:	55 c0       	rjmp	.+170    	; 0x66d6 <vfprintf+0x1e8>
    662c:	20 c0       	rjmp	.+64     	; 0x666e <vfprintf+0x180>
    662e:	f8 01       	movw	r30, r16
    6630:	80 81       	ld	r24, Z
    6632:	89 83       	std	Y+1, r24	; 0x01
    6634:	0e 5f       	subi	r16, 0xFE	; 254
    6636:	1f 4f       	sbci	r17, 0xFF	; 255
    6638:	88 24       	eor	r8, r8
    663a:	83 94       	inc	r8
    663c:	91 2c       	mov	r9, r1
    663e:	53 01       	movw	r10, r6
    6640:	12 c0       	rjmp	.+36     	; 0x6666 <vfprintf+0x178>
    6642:	28 01       	movw	r4, r16
    6644:	f2 e0       	ldi	r31, 0x02	; 2
    6646:	4f 0e       	add	r4, r31
    6648:	51 1c       	adc	r5, r1
    664a:	f8 01       	movw	r30, r16
    664c:	a0 80       	ld	r10, Z
    664e:	b1 80       	ldd	r11, Z+1	; 0x01
    6650:	36 fe       	sbrs	r3, 6
    6652:	03 c0       	rjmp	.+6      	; 0x665a <vfprintf+0x16c>
    6654:	69 2d       	mov	r22, r9
    6656:	70 e0       	ldi	r23, 0x00	; 0
    6658:	02 c0       	rjmp	.+4      	; 0x665e <vfprintf+0x170>
    665a:	6f ef       	ldi	r22, 0xFF	; 255
    665c:	7f ef       	ldi	r23, 0xFF	; 255
    665e:	c5 01       	movw	r24, r10
    6660:	71 de       	rcall	.-798    	; 0x6344 <strnlen>
    6662:	4c 01       	movw	r8, r24
    6664:	82 01       	movw	r16, r4
    6666:	f3 2d       	mov	r31, r3
    6668:	ff 77       	andi	r31, 0x7F	; 127
    666a:	3f 2e       	mov	r3, r31
    666c:	15 c0       	rjmp	.+42     	; 0x6698 <vfprintf+0x1aa>
    666e:	28 01       	movw	r4, r16
    6670:	22 e0       	ldi	r18, 0x02	; 2
    6672:	42 0e       	add	r4, r18
    6674:	51 1c       	adc	r5, r1
    6676:	f8 01       	movw	r30, r16
    6678:	a0 80       	ld	r10, Z
    667a:	b1 80       	ldd	r11, Z+1	; 0x01
    667c:	36 fe       	sbrs	r3, 6
    667e:	03 c0       	rjmp	.+6      	; 0x6686 <vfprintf+0x198>
    6680:	69 2d       	mov	r22, r9
    6682:	70 e0       	ldi	r23, 0x00	; 0
    6684:	02 c0       	rjmp	.+4      	; 0x668a <vfprintf+0x19c>
    6686:	6f ef       	ldi	r22, 0xFF	; 255
    6688:	7f ef       	ldi	r23, 0xFF	; 255
    668a:	c5 01       	movw	r24, r10
    668c:	7e d3       	rcall	.+1788   	; 0x6d8a <strnlen_P>
    668e:	4c 01       	movw	r8, r24
    6690:	f3 2d       	mov	r31, r3
    6692:	f0 68       	ori	r31, 0x80	; 128
    6694:	3f 2e       	mov	r3, r31
    6696:	82 01       	movw	r16, r4
    6698:	33 fc       	sbrc	r3, 3
    669a:	19 c0       	rjmp	.+50     	; 0x66ce <vfprintf+0x1e0>
    669c:	82 2d       	mov	r24, r2
    669e:	90 e0       	ldi	r25, 0x00	; 0
    66a0:	88 16       	cp	r8, r24
    66a2:	99 06       	cpc	r9, r25
    66a4:	a0 f4       	brcc	.+40     	; 0x66ce <vfprintf+0x1e0>
    66a6:	b6 01       	movw	r22, r12
    66a8:	80 e2       	ldi	r24, 0x20	; 32
    66aa:	90 e0       	ldi	r25, 0x00	; 0
    66ac:	89 d3       	rcall	.+1810   	; 0x6dc0 <fputc>
    66ae:	2a 94       	dec	r2
    66b0:	f5 cf       	rjmp	.-22     	; 0x669c <vfprintf+0x1ae>
    66b2:	f5 01       	movw	r30, r10
    66b4:	37 fc       	sbrc	r3, 7
    66b6:	85 91       	lpm	r24, Z+
    66b8:	37 fe       	sbrs	r3, 7
    66ba:	81 91       	ld	r24, Z+
    66bc:	5f 01       	movw	r10, r30
    66be:	b6 01       	movw	r22, r12
    66c0:	90 e0       	ldi	r25, 0x00	; 0
    66c2:	7e d3       	rcall	.+1788   	; 0x6dc0 <fputc>
    66c4:	21 10       	cpse	r2, r1
    66c6:	2a 94       	dec	r2
    66c8:	21 e0       	ldi	r18, 0x01	; 1
    66ca:	82 1a       	sub	r8, r18
    66cc:	91 08       	sbc	r9, r1
    66ce:	81 14       	cp	r8, r1
    66d0:	91 04       	cpc	r9, r1
    66d2:	79 f7       	brne	.-34     	; 0x66b2 <vfprintf+0x1c4>
    66d4:	e1 c0       	rjmp	.+450    	; 0x6898 <vfprintf+0x3aa>
    66d6:	84 36       	cpi	r24, 0x64	; 100
    66d8:	11 f0       	breq	.+4      	; 0x66de <vfprintf+0x1f0>
    66da:	89 36       	cpi	r24, 0x69	; 105
    66dc:	39 f5       	brne	.+78     	; 0x672c <vfprintf+0x23e>
    66de:	f8 01       	movw	r30, r16
    66e0:	37 fe       	sbrs	r3, 7
    66e2:	07 c0       	rjmp	.+14     	; 0x66f2 <vfprintf+0x204>
    66e4:	60 81       	ld	r22, Z
    66e6:	71 81       	ldd	r23, Z+1	; 0x01
    66e8:	82 81       	ldd	r24, Z+2	; 0x02
    66ea:	93 81       	ldd	r25, Z+3	; 0x03
    66ec:	0c 5f       	subi	r16, 0xFC	; 252
    66ee:	1f 4f       	sbci	r17, 0xFF	; 255
    66f0:	08 c0       	rjmp	.+16     	; 0x6702 <vfprintf+0x214>
    66f2:	60 81       	ld	r22, Z
    66f4:	71 81       	ldd	r23, Z+1	; 0x01
    66f6:	07 2e       	mov	r0, r23
    66f8:	00 0c       	add	r0, r0
    66fa:	88 0b       	sbc	r24, r24
    66fc:	99 0b       	sbc	r25, r25
    66fe:	0e 5f       	subi	r16, 0xFE	; 254
    6700:	1f 4f       	sbci	r17, 0xFF	; 255
    6702:	f3 2d       	mov	r31, r3
    6704:	ff 76       	andi	r31, 0x6F	; 111
    6706:	3f 2e       	mov	r3, r31
    6708:	97 ff       	sbrs	r25, 7
    670a:	09 c0       	rjmp	.+18     	; 0x671e <vfprintf+0x230>
    670c:	90 95       	com	r25
    670e:	80 95       	com	r24
    6710:	70 95       	com	r23
    6712:	61 95       	neg	r22
    6714:	7f 4f       	sbci	r23, 0xFF	; 255
    6716:	8f 4f       	sbci	r24, 0xFF	; 255
    6718:	9f 4f       	sbci	r25, 0xFF	; 255
    671a:	f0 68       	ori	r31, 0x80	; 128
    671c:	3f 2e       	mov	r3, r31
    671e:	2a e0       	ldi	r18, 0x0A	; 10
    6720:	30 e0       	ldi	r19, 0x00	; 0
    6722:	a3 01       	movw	r20, r6
    6724:	89 d3       	rcall	.+1810   	; 0x6e38 <__ultoa_invert>
    6726:	88 2e       	mov	r8, r24
    6728:	86 18       	sub	r8, r6
    672a:	44 c0       	rjmp	.+136    	; 0x67b4 <vfprintf+0x2c6>
    672c:	85 37       	cpi	r24, 0x75	; 117
    672e:	31 f4       	brne	.+12     	; 0x673c <vfprintf+0x24e>
    6730:	23 2d       	mov	r18, r3
    6732:	2f 7e       	andi	r18, 0xEF	; 239
    6734:	b2 2e       	mov	r11, r18
    6736:	2a e0       	ldi	r18, 0x0A	; 10
    6738:	30 e0       	ldi	r19, 0x00	; 0
    673a:	25 c0       	rjmp	.+74     	; 0x6786 <vfprintf+0x298>
    673c:	93 2d       	mov	r25, r3
    673e:	99 7f       	andi	r25, 0xF9	; 249
    6740:	b9 2e       	mov	r11, r25
    6742:	8f 36       	cpi	r24, 0x6F	; 111
    6744:	c1 f0       	breq	.+48     	; 0x6776 <vfprintf+0x288>
    6746:	18 f4       	brcc	.+6      	; 0x674e <vfprintf+0x260>
    6748:	88 35       	cpi	r24, 0x58	; 88
    674a:	79 f0       	breq	.+30     	; 0x676a <vfprintf+0x27c>
    674c:	ae c0       	rjmp	.+348    	; 0x68aa <vfprintf+0x3bc>
    674e:	80 37       	cpi	r24, 0x70	; 112
    6750:	19 f0       	breq	.+6      	; 0x6758 <vfprintf+0x26a>
    6752:	88 37       	cpi	r24, 0x78	; 120
    6754:	21 f0       	breq	.+8      	; 0x675e <vfprintf+0x270>
    6756:	a9 c0       	rjmp	.+338    	; 0x68aa <vfprintf+0x3bc>
    6758:	e9 2f       	mov	r30, r25
    675a:	e0 61       	ori	r30, 0x10	; 16
    675c:	be 2e       	mov	r11, r30
    675e:	b4 fe       	sbrs	r11, 4
    6760:	0d c0       	rjmp	.+26     	; 0x677c <vfprintf+0x28e>
    6762:	fb 2d       	mov	r31, r11
    6764:	f4 60       	ori	r31, 0x04	; 4
    6766:	bf 2e       	mov	r11, r31
    6768:	09 c0       	rjmp	.+18     	; 0x677c <vfprintf+0x28e>
    676a:	34 fe       	sbrs	r3, 4
    676c:	0a c0       	rjmp	.+20     	; 0x6782 <vfprintf+0x294>
    676e:	29 2f       	mov	r18, r25
    6770:	26 60       	ori	r18, 0x06	; 6
    6772:	b2 2e       	mov	r11, r18
    6774:	06 c0       	rjmp	.+12     	; 0x6782 <vfprintf+0x294>
    6776:	28 e0       	ldi	r18, 0x08	; 8
    6778:	30 e0       	ldi	r19, 0x00	; 0
    677a:	05 c0       	rjmp	.+10     	; 0x6786 <vfprintf+0x298>
    677c:	20 e1       	ldi	r18, 0x10	; 16
    677e:	30 e0       	ldi	r19, 0x00	; 0
    6780:	02 c0       	rjmp	.+4      	; 0x6786 <vfprintf+0x298>
    6782:	20 e1       	ldi	r18, 0x10	; 16
    6784:	32 e0       	ldi	r19, 0x02	; 2
    6786:	f8 01       	movw	r30, r16
    6788:	b7 fe       	sbrs	r11, 7
    678a:	07 c0       	rjmp	.+14     	; 0x679a <vfprintf+0x2ac>
    678c:	60 81       	ld	r22, Z
    678e:	71 81       	ldd	r23, Z+1	; 0x01
    6790:	82 81       	ldd	r24, Z+2	; 0x02
    6792:	93 81       	ldd	r25, Z+3	; 0x03
    6794:	0c 5f       	subi	r16, 0xFC	; 252
    6796:	1f 4f       	sbci	r17, 0xFF	; 255
    6798:	06 c0       	rjmp	.+12     	; 0x67a6 <vfprintf+0x2b8>
    679a:	60 81       	ld	r22, Z
    679c:	71 81       	ldd	r23, Z+1	; 0x01
    679e:	80 e0       	ldi	r24, 0x00	; 0
    67a0:	90 e0       	ldi	r25, 0x00	; 0
    67a2:	0e 5f       	subi	r16, 0xFE	; 254
    67a4:	1f 4f       	sbci	r17, 0xFF	; 255
    67a6:	a3 01       	movw	r20, r6
    67a8:	47 d3       	rcall	.+1678   	; 0x6e38 <__ultoa_invert>
    67aa:	88 2e       	mov	r8, r24
    67ac:	86 18       	sub	r8, r6
    67ae:	fb 2d       	mov	r31, r11
    67b0:	ff 77       	andi	r31, 0x7F	; 127
    67b2:	3f 2e       	mov	r3, r31
    67b4:	36 fe       	sbrs	r3, 6
    67b6:	0d c0       	rjmp	.+26     	; 0x67d2 <vfprintf+0x2e4>
    67b8:	23 2d       	mov	r18, r3
    67ba:	2e 7f       	andi	r18, 0xFE	; 254
    67bc:	a2 2e       	mov	r10, r18
    67be:	89 14       	cp	r8, r9
    67c0:	58 f4       	brcc	.+22     	; 0x67d8 <vfprintf+0x2ea>
    67c2:	34 fe       	sbrs	r3, 4
    67c4:	0b c0       	rjmp	.+22     	; 0x67dc <vfprintf+0x2ee>
    67c6:	32 fc       	sbrc	r3, 2
    67c8:	09 c0       	rjmp	.+18     	; 0x67dc <vfprintf+0x2ee>
    67ca:	83 2d       	mov	r24, r3
    67cc:	8e 7e       	andi	r24, 0xEE	; 238
    67ce:	a8 2e       	mov	r10, r24
    67d0:	05 c0       	rjmp	.+10     	; 0x67dc <vfprintf+0x2ee>
    67d2:	b8 2c       	mov	r11, r8
    67d4:	a3 2c       	mov	r10, r3
    67d6:	03 c0       	rjmp	.+6      	; 0x67de <vfprintf+0x2f0>
    67d8:	b8 2c       	mov	r11, r8
    67da:	01 c0       	rjmp	.+2      	; 0x67de <vfprintf+0x2f0>
    67dc:	b9 2c       	mov	r11, r9
    67de:	a4 fe       	sbrs	r10, 4
    67e0:	0f c0       	rjmp	.+30     	; 0x6800 <vfprintf+0x312>
    67e2:	fe 01       	movw	r30, r28
    67e4:	e8 0d       	add	r30, r8
    67e6:	f1 1d       	adc	r31, r1
    67e8:	80 81       	ld	r24, Z
    67ea:	80 33       	cpi	r24, 0x30	; 48
    67ec:	21 f4       	brne	.+8      	; 0x67f6 <vfprintf+0x308>
    67ee:	9a 2d       	mov	r25, r10
    67f0:	99 7e       	andi	r25, 0xE9	; 233
    67f2:	a9 2e       	mov	r10, r25
    67f4:	09 c0       	rjmp	.+18     	; 0x6808 <vfprintf+0x31a>
    67f6:	a2 fe       	sbrs	r10, 2
    67f8:	06 c0       	rjmp	.+12     	; 0x6806 <vfprintf+0x318>
    67fa:	b3 94       	inc	r11
    67fc:	b3 94       	inc	r11
    67fe:	04 c0       	rjmp	.+8      	; 0x6808 <vfprintf+0x31a>
    6800:	8a 2d       	mov	r24, r10
    6802:	86 78       	andi	r24, 0x86	; 134
    6804:	09 f0       	breq	.+2      	; 0x6808 <vfprintf+0x31a>
    6806:	b3 94       	inc	r11
    6808:	a3 fc       	sbrc	r10, 3
    680a:	10 c0       	rjmp	.+32     	; 0x682c <vfprintf+0x33e>
    680c:	a0 fe       	sbrs	r10, 0
    680e:	06 c0       	rjmp	.+12     	; 0x681c <vfprintf+0x32e>
    6810:	b2 14       	cp	r11, r2
    6812:	80 f4       	brcc	.+32     	; 0x6834 <vfprintf+0x346>
    6814:	28 0c       	add	r2, r8
    6816:	92 2c       	mov	r9, r2
    6818:	9b 18       	sub	r9, r11
    681a:	0d c0       	rjmp	.+26     	; 0x6836 <vfprintf+0x348>
    681c:	b2 14       	cp	r11, r2
    681e:	58 f4       	brcc	.+22     	; 0x6836 <vfprintf+0x348>
    6820:	b6 01       	movw	r22, r12
    6822:	80 e2       	ldi	r24, 0x20	; 32
    6824:	90 e0       	ldi	r25, 0x00	; 0
    6826:	cc d2       	rcall	.+1432   	; 0x6dc0 <fputc>
    6828:	b3 94       	inc	r11
    682a:	f8 cf       	rjmp	.-16     	; 0x681c <vfprintf+0x32e>
    682c:	b2 14       	cp	r11, r2
    682e:	18 f4       	brcc	.+6      	; 0x6836 <vfprintf+0x348>
    6830:	2b 18       	sub	r2, r11
    6832:	02 c0       	rjmp	.+4      	; 0x6838 <vfprintf+0x34a>
    6834:	98 2c       	mov	r9, r8
    6836:	21 2c       	mov	r2, r1
    6838:	a4 fe       	sbrs	r10, 4
    683a:	0f c0       	rjmp	.+30     	; 0x685a <vfprintf+0x36c>
    683c:	b6 01       	movw	r22, r12
    683e:	80 e3       	ldi	r24, 0x30	; 48
    6840:	90 e0       	ldi	r25, 0x00	; 0
    6842:	be d2       	rcall	.+1404   	; 0x6dc0 <fputc>
    6844:	a2 fe       	sbrs	r10, 2
    6846:	16 c0       	rjmp	.+44     	; 0x6874 <vfprintf+0x386>
    6848:	a1 fc       	sbrc	r10, 1
    684a:	03 c0       	rjmp	.+6      	; 0x6852 <vfprintf+0x364>
    684c:	88 e7       	ldi	r24, 0x78	; 120
    684e:	90 e0       	ldi	r25, 0x00	; 0
    6850:	02 c0       	rjmp	.+4      	; 0x6856 <vfprintf+0x368>
    6852:	88 e5       	ldi	r24, 0x58	; 88
    6854:	90 e0       	ldi	r25, 0x00	; 0
    6856:	b6 01       	movw	r22, r12
    6858:	0c c0       	rjmp	.+24     	; 0x6872 <vfprintf+0x384>
    685a:	8a 2d       	mov	r24, r10
    685c:	86 78       	andi	r24, 0x86	; 134
    685e:	51 f0       	breq	.+20     	; 0x6874 <vfprintf+0x386>
    6860:	a1 fe       	sbrs	r10, 1
    6862:	02 c0       	rjmp	.+4      	; 0x6868 <vfprintf+0x37a>
    6864:	8b e2       	ldi	r24, 0x2B	; 43
    6866:	01 c0       	rjmp	.+2      	; 0x686a <vfprintf+0x37c>
    6868:	80 e2       	ldi	r24, 0x20	; 32
    686a:	a7 fc       	sbrc	r10, 7
    686c:	8d e2       	ldi	r24, 0x2D	; 45
    686e:	b6 01       	movw	r22, r12
    6870:	90 e0       	ldi	r25, 0x00	; 0
    6872:	a6 d2       	rcall	.+1356   	; 0x6dc0 <fputc>
    6874:	89 14       	cp	r8, r9
    6876:	30 f4       	brcc	.+12     	; 0x6884 <vfprintf+0x396>
    6878:	b6 01       	movw	r22, r12
    687a:	80 e3       	ldi	r24, 0x30	; 48
    687c:	90 e0       	ldi	r25, 0x00	; 0
    687e:	a0 d2       	rcall	.+1344   	; 0x6dc0 <fputc>
    6880:	9a 94       	dec	r9
    6882:	f8 cf       	rjmp	.-16     	; 0x6874 <vfprintf+0x386>
    6884:	8a 94       	dec	r8
    6886:	f3 01       	movw	r30, r6
    6888:	e8 0d       	add	r30, r8
    688a:	f1 1d       	adc	r31, r1
    688c:	80 81       	ld	r24, Z
    688e:	b6 01       	movw	r22, r12
    6890:	90 e0       	ldi	r25, 0x00	; 0
    6892:	96 d2       	rcall	.+1324   	; 0x6dc0 <fputc>
    6894:	81 10       	cpse	r8, r1
    6896:	f6 cf       	rjmp	.-20     	; 0x6884 <vfprintf+0x396>
    6898:	22 20       	and	r2, r2
    689a:	09 f4       	brne	.+2      	; 0x689e <vfprintf+0x3b0>
    689c:	4e ce       	rjmp	.-868    	; 0x653a <vfprintf+0x4c>
    689e:	b6 01       	movw	r22, r12
    68a0:	80 e2       	ldi	r24, 0x20	; 32
    68a2:	90 e0       	ldi	r25, 0x00	; 0
    68a4:	8d d2       	rcall	.+1306   	; 0x6dc0 <fputc>
    68a6:	2a 94       	dec	r2
    68a8:	f7 cf       	rjmp	.-18     	; 0x6898 <vfprintf+0x3aa>
    68aa:	f6 01       	movw	r30, r12
    68ac:	86 81       	ldd	r24, Z+6	; 0x06
    68ae:	97 81       	ldd	r25, Z+7	; 0x07
    68b0:	02 c0       	rjmp	.+4      	; 0x68b6 <vfprintf+0x3c8>
    68b2:	8f ef       	ldi	r24, 0xFF	; 255
    68b4:	9f ef       	ldi	r25, 0xFF	; 255
    68b6:	2b 96       	adiw	r28, 0x0b	; 11
    68b8:	0f b6       	in	r0, 0x3f	; 63
    68ba:	f8 94       	cli
    68bc:	de bf       	out	0x3e, r29	; 62
    68be:	0f be       	out	0x3f, r0	; 63
    68c0:	cd bf       	out	0x3d, r28	; 61
    68c2:	df 91       	pop	r29
    68c4:	cf 91       	pop	r28
    68c6:	1f 91       	pop	r17
    68c8:	0f 91       	pop	r16
    68ca:	ff 90       	pop	r15
    68cc:	ef 90       	pop	r14
    68ce:	df 90       	pop	r13
    68d0:	cf 90       	pop	r12
    68d2:	bf 90       	pop	r11
    68d4:	af 90       	pop	r10
    68d6:	9f 90       	pop	r9
    68d8:	8f 90       	pop	r8
    68da:	7f 90       	pop	r7
    68dc:	6f 90       	pop	r6
    68de:	5f 90       	pop	r5
    68e0:	4f 90       	pop	r4
    68e2:	3f 90       	pop	r3
    68e4:	2f 90       	pop	r2
    68e6:	08 95       	ret

000068e8 <dtoa_prf>:
    68e8:	8f 92       	push	r8
    68ea:	9f 92       	push	r9
    68ec:	af 92       	push	r10
    68ee:	bf 92       	push	r11
    68f0:	cf 92       	push	r12
    68f2:	df 92       	push	r13
    68f4:	ef 92       	push	r14
    68f6:	ff 92       	push	r15
    68f8:	0f 93       	push	r16
    68fa:	1f 93       	push	r17
    68fc:	cf 93       	push	r28
    68fe:	df 93       	push	r29
    6900:	cd b7       	in	r28, 0x3d	; 61
    6902:	de b7       	in	r29, 0x3e	; 62
    6904:	29 97       	sbiw	r28, 0x09	; 9
    6906:	0f b6       	in	r0, 0x3f	; 63
    6908:	f8 94       	cli
    690a:	de bf       	out	0x3e, r29	; 62
    690c:	0f be       	out	0x3f, r0	; 63
    690e:	cd bf       	out	0x3d, r28	; 61
    6910:	6a 01       	movw	r12, r20
    6912:	12 2f       	mov	r17, r18
    6914:	b0 2e       	mov	r11, r16
    6916:	2b e3       	ldi	r18, 0x3B	; 59
    6918:	20 17       	cp	r18, r16
    691a:	20 f0       	brcs	.+8      	; 0x6924 <dtoa_prf+0x3c>
    691c:	ff 24       	eor	r15, r15
    691e:	f3 94       	inc	r15
    6920:	f0 0e       	add	r15, r16
    6922:	02 c0       	rjmp	.+4      	; 0x6928 <dtoa_prf+0x40>
    6924:	2c e3       	ldi	r18, 0x3C	; 60
    6926:	f2 2e       	mov	r15, r18
    6928:	0f 2d       	mov	r16, r15
    692a:	27 e0       	ldi	r18, 0x07	; 7
    692c:	ae 01       	movw	r20, r28
    692e:	4f 5f       	subi	r20, 0xFF	; 255
    6930:	5f 4f       	sbci	r21, 0xFF	; 255
    6932:	50 d1       	rcall	.+672    	; 0x6bd4 <__ftoa_engine>
    6934:	bc 01       	movw	r22, r24
    6936:	49 81       	ldd	r20, Y+1	; 0x01
    6938:	84 2f       	mov	r24, r20
    693a:	89 70       	andi	r24, 0x09	; 9
    693c:	81 30       	cpi	r24, 0x01	; 1
    693e:	31 f0       	breq	.+12     	; 0x694c <dtoa_prf+0x64>
    6940:	e1 fc       	sbrc	r14, 1
    6942:	06 c0       	rjmp	.+12     	; 0x6950 <dtoa_prf+0x68>
    6944:	e0 fe       	sbrs	r14, 0
    6946:	06 c0       	rjmp	.+12     	; 0x6954 <dtoa_prf+0x6c>
    6948:	90 e2       	ldi	r25, 0x20	; 32
    694a:	05 c0       	rjmp	.+10     	; 0x6956 <dtoa_prf+0x6e>
    694c:	9d e2       	ldi	r25, 0x2D	; 45
    694e:	03 c0       	rjmp	.+6      	; 0x6956 <dtoa_prf+0x6e>
    6950:	9b e2       	ldi	r25, 0x2B	; 43
    6952:	01 c0       	rjmp	.+2      	; 0x6956 <dtoa_prf+0x6e>
    6954:	90 e0       	ldi	r25, 0x00	; 0
    6956:	5e 2d       	mov	r21, r14
    6958:	50 71       	andi	r21, 0x10	; 16
    695a:	43 ff       	sbrs	r20, 3
    695c:	3c c0       	rjmp	.+120    	; 0x69d6 <dtoa_prf+0xee>
    695e:	91 11       	cpse	r25, r1
    6960:	02 c0       	rjmp	.+4      	; 0x6966 <dtoa_prf+0x7e>
    6962:	83 e0       	ldi	r24, 0x03	; 3
    6964:	01 c0       	rjmp	.+2      	; 0x6968 <dtoa_prf+0x80>
    6966:	84 e0       	ldi	r24, 0x04	; 4
    6968:	81 17       	cp	r24, r17
    696a:	18 f4       	brcc	.+6      	; 0x6972 <dtoa_prf+0x8a>
    696c:	21 2f       	mov	r18, r17
    696e:	28 1b       	sub	r18, r24
    6970:	01 c0       	rjmp	.+2      	; 0x6974 <dtoa_prf+0x8c>
    6972:	20 e0       	ldi	r18, 0x00	; 0
    6974:	51 11       	cpse	r21, r1
    6976:	0b c0       	rjmp	.+22     	; 0x698e <dtoa_prf+0xa6>
    6978:	f6 01       	movw	r30, r12
    697a:	82 2f       	mov	r24, r18
    697c:	30 e2       	ldi	r19, 0x20	; 32
    697e:	88 23       	and	r24, r24
    6980:	19 f0       	breq	.+6      	; 0x6988 <dtoa_prf+0xa0>
    6982:	31 93       	st	Z+, r19
    6984:	81 50       	subi	r24, 0x01	; 1
    6986:	fb cf       	rjmp	.-10     	; 0x697e <dtoa_prf+0x96>
    6988:	c2 0e       	add	r12, r18
    698a:	d1 1c       	adc	r13, r1
    698c:	20 e0       	ldi	r18, 0x00	; 0
    698e:	99 23       	and	r25, r25
    6990:	29 f0       	breq	.+10     	; 0x699c <dtoa_prf+0xb4>
    6992:	d6 01       	movw	r26, r12
    6994:	9c 93       	st	X, r25
    6996:	f6 01       	movw	r30, r12
    6998:	31 96       	adiw	r30, 0x01	; 1
    699a:	6f 01       	movw	r12, r30
    699c:	c6 01       	movw	r24, r12
    699e:	03 96       	adiw	r24, 0x03	; 3
    69a0:	e2 fe       	sbrs	r14, 2
    69a2:	0a c0       	rjmp	.+20     	; 0x69b8 <dtoa_prf+0xd0>
    69a4:	3e e4       	ldi	r19, 0x4E	; 78
    69a6:	d6 01       	movw	r26, r12
    69a8:	3c 93       	st	X, r19
    69aa:	41 e4       	ldi	r20, 0x41	; 65
    69ac:	11 96       	adiw	r26, 0x01	; 1
    69ae:	4c 93       	st	X, r20
    69b0:	11 97       	sbiw	r26, 0x01	; 1
    69b2:	12 96       	adiw	r26, 0x02	; 2
    69b4:	3c 93       	st	X, r19
    69b6:	06 c0       	rjmp	.+12     	; 0x69c4 <dtoa_prf+0xdc>
    69b8:	3e e6       	ldi	r19, 0x6E	; 110
    69ba:	f6 01       	movw	r30, r12
    69bc:	30 83       	st	Z, r19
    69be:	41 e6       	ldi	r20, 0x61	; 97
    69c0:	41 83       	std	Z+1, r20	; 0x01
    69c2:	32 83       	std	Z+2, r19	; 0x02
    69c4:	fc 01       	movw	r30, r24
    69c6:	32 2f       	mov	r19, r18
    69c8:	40 e2       	ldi	r20, 0x20	; 32
    69ca:	33 23       	and	r19, r19
    69cc:	09 f4       	brne	.+2      	; 0x69d0 <dtoa_prf+0xe8>
    69ce:	42 c0       	rjmp	.+132    	; 0x6a54 <dtoa_prf+0x16c>
    69d0:	41 93       	st	Z+, r20
    69d2:	31 50       	subi	r19, 0x01	; 1
    69d4:	fa cf       	rjmp	.-12     	; 0x69ca <dtoa_prf+0xe2>
    69d6:	42 ff       	sbrs	r20, 2
    69d8:	44 c0       	rjmp	.+136    	; 0x6a62 <dtoa_prf+0x17a>
    69da:	91 11       	cpse	r25, r1
    69dc:	02 c0       	rjmp	.+4      	; 0x69e2 <dtoa_prf+0xfa>
    69de:	83 e0       	ldi	r24, 0x03	; 3
    69e0:	01 c0       	rjmp	.+2      	; 0x69e4 <dtoa_prf+0xfc>
    69e2:	84 e0       	ldi	r24, 0x04	; 4
    69e4:	81 17       	cp	r24, r17
    69e6:	18 f4       	brcc	.+6      	; 0x69ee <dtoa_prf+0x106>
    69e8:	21 2f       	mov	r18, r17
    69ea:	28 1b       	sub	r18, r24
    69ec:	01 c0       	rjmp	.+2      	; 0x69f0 <dtoa_prf+0x108>
    69ee:	20 e0       	ldi	r18, 0x00	; 0
    69f0:	51 11       	cpse	r21, r1
    69f2:	0b c0       	rjmp	.+22     	; 0x6a0a <dtoa_prf+0x122>
    69f4:	f6 01       	movw	r30, r12
    69f6:	82 2f       	mov	r24, r18
    69f8:	30 e2       	ldi	r19, 0x20	; 32
    69fa:	88 23       	and	r24, r24
    69fc:	19 f0       	breq	.+6      	; 0x6a04 <dtoa_prf+0x11c>
    69fe:	31 93       	st	Z+, r19
    6a00:	81 50       	subi	r24, 0x01	; 1
    6a02:	fb cf       	rjmp	.-10     	; 0x69fa <dtoa_prf+0x112>
    6a04:	c2 0e       	add	r12, r18
    6a06:	d1 1c       	adc	r13, r1
    6a08:	20 e0       	ldi	r18, 0x00	; 0
    6a0a:	99 23       	and	r25, r25
    6a0c:	29 f0       	breq	.+10     	; 0x6a18 <dtoa_prf+0x130>
    6a0e:	d6 01       	movw	r26, r12
    6a10:	9c 93       	st	X, r25
    6a12:	f6 01       	movw	r30, r12
    6a14:	31 96       	adiw	r30, 0x01	; 1
    6a16:	6f 01       	movw	r12, r30
    6a18:	c6 01       	movw	r24, r12
    6a1a:	03 96       	adiw	r24, 0x03	; 3
    6a1c:	e2 fe       	sbrs	r14, 2
    6a1e:	0b c0       	rjmp	.+22     	; 0x6a36 <dtoa_prf+0x14e>
    6a20:	39 e4       	ldi	r19, 0x49	; 73
    6a22:	d6 01       	movw	r26, r12
    6a24:	3c 93       	st	X, r19
    6a26:	3e e4       	ldi	r19, 0x4E	; 78
    6a28:	11 96       	adiw	r26, 0x01	; 1
    6a2a:	3c 93       	st	X, r19
    6a2c:	11 97       	sbiw	r26, 0x01	; 1
    6a2e:	36 e4       	ldi	r19, 0x46	; 70
    6a30:	12 96       	adiw	r26, 0x02	; 2
    6a32:	3c 93       	st	X, r19
    6a34:	07 c0       	rjmp	.+14     	; 0x6a44 <dtoa_prf+0x15c>
    6a36:	39 e6       	ldi	r19, 0x69	; 105
    6a38:	f6 01       	movw	r30, r12
    6a3a:	30 83       	st	Z, r19
    6a3c:	3e e6       	ldi	r19, 0x6E	; 110
    6a3e:	31 83       	std	Z+1, r19	; 0x01
    6a40:	36 e6       	ldi	r19, 0x66	; 102
    6a42:	32 83       	std	Z+2, r19	; 0x02
    6a44:	fc 01       	movw	r30, r24
    6a46:	32 2f       	mov	r19, r18
    6a48:	40 e2       	ldi	r20, 0x20	; 32
    6a4a:	33 23       	and	r19, r19
    6a4c:	19 f0       	breq	.+6      	; 0x6a54 <dtoa_prf+0x16c>
    6a4e:	41 93       	st	Z+, r20
    6a50:	31 50       	subi	r19, 0x01	; 1
    6a52:	fb cf       	rjmp	.-10     	; 0x6a4a <dtoa_prf+0x162>
    6a54:	fc 01       	movw	r30, r24
    6a56:	e2 0f       	add	r30, r18
    6a58:	f1 1d       	adc	r31, r1
    6a5a:	10 82       	st	Z, r1
    6a5c:	8e ef       	ldi	r24, 0xFE	; 254
    6a5e:	9f ef       	ldi	r25, 0xFF	; 255
    6a60:	a6 c0       	rjmp	.+332    	; 0x6bae <dtoa_prf+0x2c6>
    6a62:	21 e0       	ldi	r18, 0x01	; 1
    6a64:	30 e0       	ldi	r19, 0x00	; 0
    6a66:	91 11       	cpse	r25, r1
    6a68:	02 c0       	rjmp	.+4      	; 0x6a6e <dtoa_prf+0x186>
    6a6a:	20 e0       	ldi	r18, 0x00	; 0
    6a6c:	30 e0       	ldi	r19, 0x00	; 0
    6a6e:	16 16       	cp	r1, r22
    6a70:	17 06       	cpc	r1, r23
    6a72:	1c f4       	brge	.+6      	; 0x6a7a <dtoa_prf+0x192>
    6a74:	fb 01       	movw	r30, r22
    6a76:	31 96       	adiw	r30, 0x01	; 1
    6a78:	02 c0       	rjmp	.+4      	; 0x6a7e <dtoa_prf+0x196>
    6a7a:	e1 e0       	ldi	r30, 0x01	; 1
    6a7c:	f0 e0       	ldi	r31, 0x00	; 0
    6a7e:	2e 0f       	add	r18, r30
    6a80:	3f 1f       	adc	r19, r31
    6a82:	bb 20       	and	r11, r11
    6a84:	21 f0       	breq	.+8      	; 0x6a8e <dtoa_prf+0x1a6>
    6a86:	eb 2d       	mov	r30, r11
    6a88:	f0 e0       	ldi	r31, 0x00	; 0
    6a8a:	31 96       	adiw	r30, 0x01	; 1
    6a8c:	02 c0       	rjmp	.+4      	; 0x6a92 <dtoa_prf+0x1aa>
    6a8e:	e0 e0       	ldi	r30, 0x00	; 0
    6a90:	f0 e0       	ldi	r31, 0x00	; 0
    6a92:	2e 0f       	add	r18, r30
    6a94:	3f 1f       	adc	r19, r31
    6a96:	e1 2f       	mov	r30, r17
    6a98:	f0 e0       	ldi	r31, 0x00	; 0
    6a9a:	2e 17       	cp	r18, r30
    6a9c:	3f 07       	cpc	r19, r31
    6a9e:	1c f4       	brge	.+6      	; 0x6aa6 <dtoa_prf+0x1be>
    6aa0:	12 1b       	sub	r17, r18
    6aa2:	21 2f       	mov	r18, r17
    6aa4:	01 c0       	rjmp	.+2      	; 0x6aa8 <dtoa_prf+0x1c0>
    6aa6:	20 e0       	ldi	r18, 0x00	; 0
    6aa8:	8e 2d       	mov	r24, r14
    6aaa:	88 71       	andi	r24, 0x18	; 24
    6aac:	59 f4       	brne	.+22     	; 0x6ac4 <dtoa_prf+0x1dc>
    6aae:	f6 01       	movw	r30, r12
    6ab0:	82 2f       	mov	r24, r18
    6ab2:	30 e2       	ldi	r19, 0x20	; 32
    6ab4:	88 23       	and	r24, r24
    6ab6:	19 f0       	breq	.+6      	; 0x6abe <dtoa_prf+0x1d6>
    6ab8:	31 93       	st	Z+, r19
    6aba:	81 50       	subi	r24, 0x01	; 1
    6abc:	fb cf       	rjmp	.-10     	; 0x6ab4 <dtoa_prf+0x1cc>
    6abe:	c2 0e       	add	r12, r18
    6ac0:	d1 1c       	adc	r13, r1
    6ac2:	20 e0       	ldi	r18, 0x00	; 0
    6ac4:	99 23       	and	r25, r25
    6ac6:	29 f0       	breq	.+10     	; 0x6ad2 <dtoa_prf+0x1ea>
    6ac8:	d6 01       	movw	r26, r12
    6aca:	9c 93       	st	X, r25
    6acc:	f6 01       	movw	r30, r12
    6ace:	31 96       	adiw	r30, 0x01	; 1
    6ad0:	6f 01       	movw	r12, r30
    6ad2:	51 11       	cpse	r21, r1
    6ad4:	0b c0       	rjmp	.+22     	; 0x6aec <dtoa_prf+0x204>
    6ad6:	f6 01       	movw	r30, r12
    6ad8:	82 2f       	mov	r24, r18
    6ada:	90 e3       	ldi	r25, 0x30	; 48
    6adc:	88 23       	and	r24, r24
    6ade:	19 f0       	breq	.+6      	; 0x6ae6 <dtoa_prf+0x1fe>
    6ae0:	91 93       	st	Z+, r25
    6ae2:	81 50       	subi	r24, 0x01	; 1
    6ae4:	fb cf       	rjmp	.-10     	; 0x6adc <dtoa_prf+0x1f4>
    6ae6:	c2 0e       	add	r12, r18
    6ae8:	d1 1c       	adc	r13, r1
    6aea:	20 e0       	ldi	r18, 0x00	; 0
    6aec:	0f 2d       	mov	r16, r15
    6aee:	06 0f       	add	r16, r22
    6af0:	9a 81       	ldd	r25, Y+2	; 0x02
    6af2:	34 2f       	mov	r19, r20
    6af4:	30 71       	andi	r19, 0x10	; 16
    6af6:	44 ff       	sbrs	r20, 4
    6af8:	03 c0       	rjmp	.+6      	; 0x6b00 <dtoa_prf+0x218>
    6afa:	91 33       	cpi	r25, 0x31	; 49
    6afc:	09 f4       	brne	.+2      	; 0x6b00 <dtoa_prf+0x218>
    6afe:	01 50       	subi	r16, 0x01	; 1
    6b00:	10 16       	cp	r1, r16
    6b02:	24 f4       	brge	.+8      	; 0x6b0c <dtoa_prf+0x224>
    6b04:	09 30       	cpi	r16, 0x09	; 9
    6b06:	18 f0       	brcs	.+6      	; 0x6b0e <dtoa_prf+0x226>
    6b08:	08 e0       	ldi	r16, 0x08	; 8
    6b0a:	01 c0       	rjmp	.+2      	; 0x6b0e <dtoa_prf+0x226>
    6b0c:	01 e0       	ldi	r16, 0x01	; 1
    6b0e:	ab 01       	movw	r20, r22
    6b10:	77 ff       	sbrs	r23, 7
    6b12:	02 c0       	rjmp	.+4      	; 0x6b18 <dtoa_prf+0x230>
    6b14:	40 e0       	ldi	r20, 0x00	; 0
    6b16:	50 e0       	ldi	r21, 0x00	; 0
    6b18:	fb 01       	movw	r30, r22
    6b1a:	e4 1b       	sub	r30, r20
    6b1c:	f5 0b       	sbc	r31, r21
    6b1e:	a1 e0       	ldi	r26, 0x01	; 1
    6b20:	b0 e0       	ldi	r27, 0x00	; 0
    6b22:	ac 0f       	add	r26, r28
    6b24:	bd 1f       	adc	r27, r29
    6b26:	ea 0f       	add	r30, r26
    6b28:	fb 1f       	adc	r31, r27
    6b2a:	8e e2       	ldi	r24, 0x2E	; 46
    6b2c:	a8 2e       	mov	r10, r24
    6b2e:	4b 01       	movw	r8, r22
    6b30:	80 1a       	sub	r8, r16
    6b32:	91 08       	sbc	r9, r1
    6b34:	0b 2d       	mov	r16, r11
    6b36:	10 e0       	ldi	r17, 0x00	; 0
    6b38:	11 95       	neg	r17
    6b3a:	01 95       	neg	r16
    6b3c:	11 09       	sbc	r17, r1
    6b3e:	4f 3f       	cpi	r20, 0xFF	; 255
    6b40:	bf ef       	ldi	r27, 0xFF	; 255
    6b42:	5b 07       	cpc	r21, r27
    6b44:	21 f4       	brne	.+8      	; 0x6b4e <dtoa_prf+0x266>
    6b46:	d6 01       	movw	r26, r12
    6b48:	ac 92       	st	X, r10
    6b4a:	11 96       	adiw	r26, 0x01	; 1
    6b4c:	6d 01       	movw	r12, r26
    6b4e:	64 17       	cp	r22, r20
    6b50:	75 07       	cpc	r23, r21
    6b52:	2c f0       	brlt	.+10     	; 0x6b5e <dtoa_prf+0x276>
    6b54:	84 16       	cp	r8, r20
    6b56:	95 06       	cpc	r9, r21
    6b58:	14 f4       	brge	.+4      	; 0x6b5e <dtoa_prf+0x276>
    6b5a:	81 81       	ldd	r24, Z+1	; 0x01
    6b5c:	01 c0       	rjmp	.+2      	; 0x6b60 <dtoa_prf+0x278>
    6b5e:	80 e3       	ldi	r24, 0x30	; 48
    6b60:	41 50       	subi	r20, 0x01	; 1
    6b62:	51 09       	sbc	r21, r1
    6b64:	31 96       	adiw	r30, 0x01	; 1
    6b66:	d6 01       	movw	r26, r12
    6b68:	11 96       	adiw	r26, 0x01	; 1
    6b6a:	7d 01       	movw	r14, r26
    6b6c:	40 17       	cp	r20, r16
    6b6e:	51 07       	cpc	r21, r17
    6b70:	24 f0       	brlt	.+8      	; 0x6b7a <dtoa_prf+0x292>
    6b72:	d6 01       	movw	r26, r12
    6b74:	8c 93       	st	X, r24
    6b76:	67 01       	movw	r12, r14
    6b78:	e2 cf       	rjmp	.-60     	; 0x6b3e <dtoa_prf+0x256>
    6b7a:	64 17       	cp	r22, r20
    6b7c:	75 07       	cpc	r23, r21
    6b7e:	39 f4       	brne	.+14     	; 0x6b8e <dtoa_prf+0x2a6>
    6b80:	96 33       	cpi	r25, 0x36	; 54
    6b82:	20 f4       	brcc	.+8      	; 0x6b8c <dtoa_prf+0x2a4>
    6b84:	95 33       	cpi	r25, 0x35	; 53
    6b86:	19 f4       	brne	.+6      	; 0x6b8e <dtoa_prf+0x2a6>
    6b88:	31 11       	cpse	r19, r1
    6b8a:	01 c0       	rjmp	.+2      	; 0x6b8e <dtoa_prf+0x2a6>
    6b8c:	81 e3       	ldi	r24, 0x31	; 49
    6b8e:	f6 01       	movw	r30, r12
    6b90:	80 83       	st	Z, r24
    6b92:	f7 01       	movw	r30, r14
    6b94:	82 2f       	mov	r24, r18
    6b96:	90 e2       	ldi	r25, 0x20	; 32
    6b98:	88 23       	and	r24, r24
    6b9a:	19 f0       	breq	.+6      	; 0x6ba2 <dtoa_prf+0x2ba>
    6b9c:	91 93       	st	Z+, r25
    6b9e:	81 50       	subi	r24, 0x01	; 1
    6ba0:	fb cf       	rjmp	.-10     	; 0x6b98 <dtoa_prf+0x2b0>
    6ba2:	f7 01       	movw	r30, r14
    6ba4:	e2 0f       	add	r30, r18
    6ba6:	f1 1d       	adc	r31, r1
    6ba8:	10 82       	st	Z, r1
    6baa:	80 e0       	ldi	r24, 0x00	; 0
    6bac:	90 e0       	ldi	r25, 0x00	; 0
    6bae:	29 96       	adiw	r28, 0x09	; 9
    6bb0:	0f b6       	in	r0, 0x3f	; 63
    6bb2:	f8 94       	cli
    6bb4:	de bf       	out	0x3e, r29	; 62
    6bb6:	0f be       	out	0x3f, r0	; 63
    6bb8:	cd bf       	out	0x3d, r28	; 61
    6bba:	df 91       	pop	r29
    6bbc:	cf 91       	pop	r28
    6bbe:	1f 91       	pop	r17
    6bc0:	0f 91       	pop	r16
    6bc2:	ff 90       	pop	r15
    6bc4:	ef 90       	pop	r14
    6bc6:	df 90       	pop	r13
    6bc8:	cf 90       	pop	r12
    6bca:	bf 90       	pop	r11
    6bcc:	af 90       	pop	r10
    6bce:	9f 90       	pop	r9
    6bd0:	8f 90       	pop	r8
    6bd2:	08 95       	ret

00006bd4 <__ftoa_engine>:
    6bd4:	28 30       	cpi	r18, 0x08	; 8
    6bd6:	08 f0       	brcs	.+2      	; 0x6bda <__ftoa_engine+0x6>
    6bd8:	27 e0       	ldi	r18, 0x07	; 7
    6bda:	33 27       	eor	r19, r19
    6bdc:	da 01       	movw	r26, r20
    6bde:	99 0f       	add	r25, r25
    6be0:	31 1d       	adc	r19, r1
    6be2:	87 fd       	sbrc	r24, 7
    6be4:	91 60       	ori	r25, 0x01	; 1
    6be6:	00 96       	adiw	r24, 0x00	; 0
    6be8:	61 05       	cpc	r22, r1
    6bea:	71 05       	cpc	r23, r1
    6bec:	39 f4       	brne	.+14     	; 0x6bfc <__ftoa_engine+0x28>
    6bee:	32 60       	ori	r19, 0x02	; 2
    6bf0:	2e 5f       	subi	r18, 0xFE	; 254
    6bf2:	3d 93       	st	X+, r19
    6bf4:	30 e3       	ldi	r19, 0x30	; 48
    6bf6:	2a 95       	dec	r18
    6bf8:	e1 f7       	brne	.-8      	; 0x6bf2 <__ftoa_engine+0x1e>
    6bfa:	08 95       	ret
    6bfc:	9f 3f       	cpi	r25, 0xFF	; 255
    6bfe:	30 f0       	brcs	.+12     	; 0x6c0c <__ftoa_engine+0x38>
    6c00:	80 38       	cpi	r24, 0x80	; 128
    6c02:	71 05       	cpc	r23, r1
    6c04:	61 05       	cpc	r22, r1
    6c06:	09 f0       	breq	.+2      	; 0x6c0a <__ftoa_engine+0x36>
    6c08:	3c 5f       	subi	r19, 0xFC	; 252
    6c0a:	3c 5f       	subi	r19, 0xFC	; 252
    6c0c:	3d 93       	st	X+, r19
    6c0e:	91 30       	cpi	r25, 0x01	; 1
    6c10:	08 f0       	brcs	.+2      	; 0x6c14 <__ftoa_engine+0x40>
    6c12:	80 68       	ori	r24, 0x80	; 128
    6c14:	91 1d       	adc	r25, r1
    6c16:	df 93       	push	r29
    6c18:	cf 93       	push	r28
    6c1a:	1f 93       	push	r17
    6c1c:	0f 93       	push	r16
    6c1e:	ff 92       	push	r15
    6c20:	ef 92       	push	r14
    6c22:	19 2f       	mov	r17, r25
    6c24:	98 7f       	andi	r25, 0xF8	; 248
    6c26:	96 95       	lsr	r25
    6c28:	e9 2f       	mov	r30, r25
    6c2a:	96 95       	lsr	r25
    6c2c:	96 95       	lsr	r25
    6c2e:	e9 0f       	add	r30, r25
    6c30:	ff 27       	eor	r31, r31
    6c32:	ea 57       	subi	r30, 0x7A	; 122
    6c34:	fe 4f       	sbci	r31, 0xFE	; 254
    6c36:	99 27       	eor	r25, r25
    6c38:	33 27       	eor	r19, r19
    6c3a:	ee 24       	eor	r14, r14
    6c3c:	ff 24       	eor	r15, r15
    6c3e:	a7 01       	movw	r20, r14
    6c40:	e7 01       	movw	r28, r14
    6c42:	05 90       	lpm	r0, Z+
    6c44:	08 94       	sec
    6c46:	07 94       	ror	r0
    6c48:	28 f4       	brcc	.+10     	; 0x6c54 <__ftoa_engine+0x80>
    6c4a:	36 0f       	add	r19, r22
    6c4c:	e7 1e       	adc	r14, r23
    6c4e:	f8 1e       	adc	r15, r24
    6c50:	49 1f       	adc	r20, r25
    6c52:	51 1d       	adc	r21, r1
    6c54:	66 0f       	add	r22, r22
    6c56:	77 1f       	adc	r23, r23
    6c58:	88 1f       	adc	r24, r24
    6c5a:	99 1f       	adc	r25, r25
    6c5c:	06 94       	lsr	r0
    6c5e:	a1 f7       	brne	.-24     	; 0x6c48 <__ftoa_engine+0x74>
    6c60:	05 90       	lpm	r0, Z+
    6c62:	07 94       	ror	r0
    6c64:	28 f4       	brcc	.+10     	; 0x6c70 <__ftoa_engine+0x9c>
    6c66:	e7 0e       	add	r14, r23
    6c68:	f8 1e       	adc	r15, r24
    6c6a:	49 1f       	adc	r20, r25
    6c6c:	56 1f       	adc	r21, r22
    6c6e:	c1 1d       	adc	r28, r1
    6c70:	77 0f       	add	r23, r23
    6c72:	88 1f       	adc	r24, r24
    6c74:	99 1f       	adc	r25, r25
    6c76:	66 1f       	adc	r22, r22
    6c78:	06 94       	lsr	r0
    6c7a:	a1 f7       	brne	.-24     	; 0x6c64 <__ftoa_engine+0x90>
    6c7c:	05 90       	lpm	r0, Z+
    6c7e:	07 94       	ror	r0
    6c80:	28 f4       	brcc	.+10     	; 0x6c8c <__ftoa_engine+0xb8>
    6c82:	f8 0e       	add	r15, r24
    6c84:	49 1f       	adc	r20, r25
    6c86:	56 1f       	adc	r21, r22
    6c88:	c7 1f       	adc	r28, r23
    6c8a:	d1 1d       	adc	r29, r1
    6c8c:	88 0f       	add	r24, r24
    6c8e:	99 1f       	adc	r25, r25
    6c90:	66 1f       	adc	r22, r22
    6c92:	77 1f       	adc	r23, r23
    6c94:	06 94       	lsr	r0
    6c96:	a1 f7       	brne	.-24     	; 0x6c80 <__ftoa_engine+0xac>
    6c98:	05 90       	lpm	r0, Z+
    6c9a:	07 94       	ror	r0
    6c9c:	20 f4       	brcc	.+8      	; 0x6ca6 <__ftoa_engine+0xd2>
    6c9e:	49 0f       	add	r20, r25
    6ca0:	56 1f       	adc	r21, r22
    6ca2:	c7 1f       	adc	r28, r23
    6ca4:	d8 1f       	adc	r29, r24
    6ca6:	99 0f       	add	r25, r25
    6ca8:	66 1f       	adc	r22, r22
    6caa:	77 1f       	adc	r23, r23
    6cac:	88 1f       	adc	r24, r24
    6cae:	06 94       	lsr	r0
    6cb0:	a9 f7       	brne	.-22     	; 0x6c9c <__ftoa_engine+0xc8>
    6cb2:	84 91       	lpm	r24, Z
    6cb4:	10 95       	com	r17
    6cb6:	17 70       	andi	r17, 0x07	; 7
    6cb8:	41 f0       	breq	.+16     	; 0x6cca <__ftoa_engine+0xf6>
    6cba:	d6 95       	lsr	r29
    6cbc:	c7 95       	ror	r28
    6cbe:	57 95       	ror	r21
    6cc0:	47 95       	ror	r20
    6cc2:	f7 94       	ror	r15
    6cc4:	e7 94       	ror	r14
    6cc6:	1a 95       	dec	r17
    6cc8:	c1 f7       	brne	.-16     	; 0x6cba <__ftoa_engine+0xe6>
    6cca:	ec e2       	ldi	r30, 0x2C	; 44
    6ccc:	f1 e0       	ldi	r31, 0x01	; 1
    6cce:	68 94       	set
    6cd0:	15 90       	lpm	r1, Z+
    6cd2:	15 91       	lpm	r17, Z+
    6cd4:	35 91       	lpm	r19, Z+
    6cd6:	65 91       	lpm	r22, Z+
    6cd8:	95 91       	lpm	r25, Z+
    6cda:	05 90       	lpm	r0, Z+
    6cdc:	7f e2       	ldi	r23, 0x2F	; 47
    6cde:	73 95       	inc	r23
    6ce0:	e1 18       	sub	r14, r1
    6ce2:	f1 0a       	sbc	r15, r17
    6ce4:	43 0b       	sbc	r20, r19
    6ce6:	56 0b       	sbc	r21, r22
    6ce8:	c9 0b       	sbc	r28, r25
    6cea:	d0 09       	sbc	r29, r0
    6cec:	c0 f7       	brcc	.-16     	; 0x6cde <__ftoa_engine+0x10a>
    6cee:	e1 0c       	add	r14, r1
    6cf0:	f1 1e       	adc	r15, r17
    6cf2:	43 1f       	adc	r20, r19
    6cf4:	56 1f       	adc	r21, r22
    6cf6:	c9 1f       	adc	r28, r25
    6cf8:	d0 1d       	adc	r29, r0
    6cfa:	7e f4       	brtc	.+30     	; 0x6d1a <__ftoa_engine+0x146>
    6cfc:	70 33       	cpi	r23, 0x30	; 48
    6cfe:	11 f4       	brne	.+4      	; 0x6d04 <__ftoa_engine+0x130>
    6d00:	8a 95       	dec	r24
    6d02:	e6 cf       	rjmp	.-52     	; 0x6cd0 <__ftoa_engine+0xfc>
    6d04:	e8 94       	clt
    6d06:	01 50       	subi	r16, 0x01	; 1
    6d08:	30 f0       	brcs	.+12     	; 0x6d16 <__ftoa_engine+0x142>
    6d0a:	08 0f       	add	r16, r24
    6d0c:	0a f4       	brpl	.+2      	; 0x6d10 <__ftoa_engine+0x13c>
    6d0e:	00 27       	eor	r16, r16
    6d10:	02 17       	cp	r16, r18
    6d12:	08 f4       	brcc	.+2      	; 0x6d16 <__ftoa_engine+0x142>
    6d14:	20 2f       	mov	r18, r16
    6d16:	23 95       	inc	r18
    6d18:	02 2f       	mov	r16, r18
    6d1a:	7a 33       	cpi	r23, 0x3A	; 58
    6d1c:	28 f0       	brcs	.+10     	; 0x6d28 <__ftoa_engine+0x154>
    6d1e:	79 e3       	ldi	r23, 0x39	; 57
    6d20:	7d 93       	st	X+, r23
    6d22:	2a 95       	dec	r18
    6d24:	e9 f7       	brne	.-6      	; 0x6d20 <__ftoa_engine+0x14c>
    6d26:	10 c0       	rjmp	.+32     	; 0x6d48 <__ftoa_engine+0x174>
    6d28:	7d 93       	st	X+, r23
    6d2a:	2a 95       	dec	r18
    6d2c:	89 f6       	brne	.-94     	; 0x6cd0 <__ftoa_engine+0xfc>
    6d2e:	06 94       	lsr	r0
    6d30:	97 95       	ror	r25
    6d32:	67 95       	ror	r22
    6d34:	37 95       	ror	r19
    6d36:	17 95       	ror	r17
    6d38:	17 94       	ror	r1
    6d3a:	e1 18       	sub	r14, r1
    6d3c:	f1 0a       	sbc	r15, r17
    6d3e:	43 0b       	sbc	r20, r19
    6d40:	56 0b       	sbc	r21, r22
    6d42:	c9 0b       	sbc	r28, r25
    6d44:	d0 09       	sbc	r29, r0
    6d46:	98 f0       	brcs	.+38     	; 0x6d6e <__ftoa_engine+0x19a>
    6d48:	23 95       	inc	r18
    6d4a:	7e 91       	ld	r23, -X
    6d4c:	73 95       	inc	r23
    6d4e:	7a 33       	cpi	r23, 0x3A	; 58
    6d50:	08 f0       	brcs	.+2      	; 0x6d54 <__ftoa_engine+0x180>
    6d52:	70 e3       	ldi	r23, 0x30	; 48
    6d54:	7c 93       	st	X, r23
    6d56:	20 13       	cpse	r18, r16
    6d58:	b8 f7       	brcc	.-18     	; 0x6d48 <__ftoa_engine+0x174>
    6d5a:	7e 91       	ld	r23, -X
    6d5c:	70 61       	ori	r23, 0x10	; 16
    6d5e:	7d 93       	st	X+, r23
    6d60:	30 f0       	brcs	.+12     	; 0x6d6e <__ftoa_engine+0x19a>
    6d62:	83 95       	inc	r24
    6d64:	71 e3       	ldi	r23, 0x31	; 49
    6d66:	7d 93       	st	X+, r23
    6d68:	70 e3       	ldi	r23, 0x30	; 48
    6d6a:	2a 95       	dec	r18
    6d6c:	e1 f7       	brne	.-8      	; 0x6d66 <__ftoa_engine+0x192>
    6d6e:	11 24       	eor	r1, r1
    6d70:	ef 90       	pop	r14
    6d72:	ff 90       	pop	r15
    6d74:	0f 91       	pop	r16
    6d76:	1f 91       	pop	r17
    6d78:	cf 91       	pop	r28
    6d7a:	df 91       	pop	r29
    6d7c:	99 27       	eor	r25, r25
    6d7e:	87 fd       	sbrc	r24, 7
    6d80:	90 95       	com	r25
    6d82:	08 95       	ret

00006d84 <__ctype_isfalse>:
    6d84:	99 27       	eor	r25, r25
    6d86:	88 27       	eor	r24, r24

00006d88 <__ctype_istrue>:
    6d88:	08 95       	ret

00006d8a <strnlen_P>:
    6d8a:	fc 01       	movw	r30, r24
    6d8c:	05 90       	lpm	r0, Z+
    6d8e:	61 50       	subi	r22, 0x01	; 1
    6d90:	70 40       	sbci	r23, 0x00	; 0
    6d92:	01 10       	cpse	r0, r1
    6d94:	d8 f7       	brcc	.-10     	; 0x6d8c <strnlen_P+0x2>
    6d96:	80 95       	com	r24
    6d98:	90 95       	com	r25
    6d9a:	8e 0f       	add	r24, r30
    6d9c:	9f 1f       	adc	r25, r31
    6d9e:	08 95       	ret

00006da0 <strrev>:
    6da0:	dc 01       	movw	r26, r24
    6da2:	fc 01       	movw	r30, r24
    6da4:	67 2f       	mov	r22, r23
    6da6:	71 91       	ld	r23, Z+
    6da8:	77 23       	and	r23, r23
    6daa:	e1 f7       	brne	.-8      	; 0x6da4 <strrev+0x4>
    6dac:	32 97       	sbiw	r30, 0x02	; 2
    6dae:	04 c0       	rjmp	.+8      	; 0x6db8 <strrev+0x18>
    6db0:	7c 91       	ld	r23, X
    6db2:	6d 93       	st	X+, r22
    6db4:	70 83       	st	Z, r23
    6db6:	62 91       	ld	r22, -Z
    6db8:	ae 17       	cp	r26, r30
    6dba:	bf 07       	cpc	r27, r31
    6dbc:	c8 f3       	brcs	.-14     	; 0x6db0 <strrev+0x10>
    6dbe:	08 95       	ret

00006dc0 <fputc>:
    6dc0:	0f 93       	push	r16
    6dc2:	1f 93       	push	r17
    6dc4:	cf 93       	push	r28
    6dc6:	df 93       	push	r29
    6dc8:	fb 01       	movw	r30, r22
    6dca:	23 81       	ldd	r18, Z+3	; 0x03
    6dcc:	21 fd       	sbrc	r18, 1
    6dce:	03 c0       	rjmp	.+6      	; 0x6dd6 <fputc+0x16>
    6dd0:	8f ef       	ldi	r24, 0xFF	; 255
    6dd2:	9f ef       	ldi	r25, 0xFF	; 255
    6dd4:	2c c0       	rjmp	.+88     	; 0x6e2e <fputc+0x6e>
    6dd6:	22 ff       	sbrs	r18, 2
    6dd8:	16 c0       	rjmp	.+44     	; 0x6e06 <fputc+0x46>
    6dda:	46 81       	ldd	r20, Z+6	; 0x06
    6ddc:	57 81       	ldd	r21, Z+7	; 0x07
    6dde:	24 81       	ldd	r18, Z+4	; 0x04
    6de0:	35 81       	ldd	r19, Z+5	; 0x05
    6de2:	42 17       	cp	r20, r18
    6de4:	53 07       	cpc	r21, r19
    6de6:	44 f4       	brge	.+16     	; 0x6df8 <fputc+0x38>
    6de8:	a0 81       	ld	r26, Z
    6dea:	b1 81       	ldd	r27, Z+1	; 0x01
    6dec:	9d 01       	movw	r18, r26
    6dee:	2f 5f       	subi	r18, 0xFF	; 255
    6df0:	3f 4f       	sbci	r19, 0xFF	; 255
    6df2:	31 83       	std	Z+1, r19	; 0x01
    6df4:	20 83       	st	Z, r18
    6df6:	8c 93       	st	X, r24
    6df8:	26 81       	ldd	r18, Z+6	; 0x06
    6dfa:	37 81       	ldd	r19, Z+7	; 0x07
    6dfc:	2f 5f       	subi	r18, 0xFF	; 255
    6dfe:	3f 4f       	sbci	r19, 0xFF	; 255
    6e00:	37 83       	std	Z+7, r19	; 0x07
    6e02:	26 83       	std	Z+6, r18	; 0x06
    6e04:	14 c0       	rjmp	.+40     	; 0x6e2e <fputc+0x6e>
    6e06:	8b 01       	movw	r16, r22
    6e08:	ec 01       	movw	r28, r24
    6e0a:	fb 01       	movw	r30, r22
    6e0c:	00 84       	ldd	r0, Z+8	; 0x08
    6e0e:	f1 85       	ldd	r31, Z+9	; 0x09
    6e10:	e0 2d       	mov	r30, r0
    6e12:	19 95       	eicall
    6e14:	89 2b       	or	r24, r25
    6e16:	e1 f6       	brne	.-72     	; 0x6dd0 <fputc+0x10>
    6e18:	d8 01       	movw	r26, r16
    6e1a:	16 96       	adiw	r26, 0x06	; 6
    6e1c:	8d 91       	ld	r24, X+
    6e1e:	9c 91       	ld	r25, X
    6e20:	17 97       	sbiw	r26, 0x07	; 7
    6e22:	01 96       	adiw	r24, 0x01	; 1
    6e24:	17 96       	adiw	r26, 0x07	; 7
    6e26:	9c 93       	st	X, r25
    6e28:	8e 93       	st	-X, r24
    6e2a:	16 97       	sbiw	r26, 0x06	; 6
    6e2c:	ce 01       	movw	r24, r28
    6e2e:	df 91       	pop	r29
    6e30:	cf 91       	pop	r28
    6e32:	1f 91       	pop	r17
    6e34:	0f 91       	pop	r16
    6e36:	08 95       	ret

00006e38 <__ultoa_invert>:
    6e38:	fa 01       	movw	r30, r20
    6e3a:	aa 27       	eor	r26, r26
    6e3c:	28 30       	cpi	r18, 0x08	; 8
    6e3e:	51 f1       	breq	.+84     	; 0x6e94 <__ultoa_invert+0x5c>
    6e40:	20 31       	cpi	r18, 0x10	; 16
    6e42:	81 f1       	breq	.+96     	; 0x6ea4 <__ultoa_invert+0x6c>
    6e44:	e8 94       	clt
    6e46:	6f 93       	push	r22
    6e48:	6e 7f       	andi	r22, 0xFE	; 254
    6e4a:	6e 5f       	subi	r22, 0xFE	; 254
    6e4c:	7f 4f       	sbci	r23, 0xFF	; 255
    6e4e:	8f 4f       	sbci	r24, 0xFF	; 255
    6e50:	9f 4f       	sbci	r25, 0xFF	; 255
    6e52:	af 4f       	sbci	r26, 0xFF	; 255
    6e54:	b1 e0       	ldi	r27, 0x01	; 1
    6e56:	3e d0       	rcall	.+124    	; 0x6ed4 <__ultoa_invert+0x9c>
    6e58:	b4 e0       	ldi	r27, 0x04	; 4
    6e5a:	3c d0       	rcall	.+120    	; 0x6ed4 <__ultoa_invert+0x9c>
    6e5c:	67 0f       	add	r22, r23
    6e5e:	78 1f       	adc	r23, r24
    6e60:	89 1f       	adc	r24, r25
    6e62:	9a 1f       	adc	r25, r26
    6e64:	a1 1d       	adc	r26, r1
    6e66:	68 0f       	add	r22, r24
    6e68:	79 1f       	adc	r23, r25
    6e6a:	8a 1f       	adc	r24, r26
    6e6c:	91 1d       	adc	r25, r1
    6e6e:	a1 1d       	adc	r26, r1
    6e70:	6a 0f       	add	r22, r26
    6e72:	71 1d       	adc	r23, r1
    6e74:	81 1d       	adc	r24, r1
    6e76:	91 1d       	adc	r25, r1
    6e78:	a1 1d       	adc	r26, r1
    6e7a:	20 d0       	rcall	.+64     	; 0x6ebc <__ultoa_invert+0x84>
    6e7c:	09 f4       	brne	.+2      	; 0x6e80 <__ultoa_invert+0x48>
    6e7e:	68 94       	set
    6e80:	3f 91       	pop	r19
    6e82:	2a e0       	ldi	r18, 0x0A	; 10
    6e84:	26 9f       	mul	r18, r22
    6e86:	11 24       	eor	r1, r1
    6e88:	30 19       	sub	r19, r0
    6e8a:	30 5d       	subi	r19, 0xD0	; 208
    6e8c:	31 93       	st	Z+, r19
    6e8e:	de f6       	brtc	.-74     	; 0x6e46 <__ultoa_invert+0xe>
    6e90:	cf 01       	movw	r24, r30
    6e92:	08 95       	ret
    6e94:	46 2f       	mov	r20, r22
    6e96:	47 70       	andi	r20, 0x07	; 7
    6e98:	40 5d       	subi	r20, 0xD0	; 208
    6e9a:	41 93       	st	Z+, r20
    6e9c:	b3 e0       	ldi	r27, 0x03	; 3
    6e9e:	0f d0       	rcall	.+30     	; 0x6ebe <__ultoa_invert+0x86>
    6ea0:	c9 f7       	brne	.-14     	; 0x6e94 <__ultoa_invert+0x5c>
    6ea2:	f6 cf       	rjmp	.-20     	; 0x6e90 <__ultoa_invert+0x58>
    6ea4:	46 2f       	mov	r20, r22
    6ea6:	4f 70       	andi	r20, 0x0F	; 15
    6ea8:	40 5d       	subi	r20, 0xD0	; 208
    6eaa:	4a 33       	cpi	r20, 0x3A	; 58
    6eac:	18 f0       	brcs	.+6      	; 0x6eb4 <__ultoa_invert+0x7c>
    6eae:	49 5d       	subi	r20, 0xD9	; 217
    6eb0:	31 fd       	sbrc	r19, 1
    6eb2:	40 52       	subi	r20, 0x20	; 32
    6eb4:	41 93       	st	Z+, r20
    6eb6:	02 d0       	rcall	.+4      	; 0x6ebc <__ultoa_invert+0x84>
    6eb8:	a9 f7       	brne	.-22     	; 0x6ea4 <__ultoa_invert+0x6c>
    6eba:	ea cf       	rjmp	.-44     	; 0x6e90 <__ultoa_invert+0x58>
    6ebc:	b4 e0       	ldi	r27, 0x04	; 4
    6ebe:	a6 95       	lsr	r26
    6ec0:	97 95       	ror	r25
    6ec2:	87 95       	ror	r24
    6ec4:	77 95       	ror	r23
    6ec6:	67 95       	ror	r22
    6ec8:	ba 95       	dec	r27
    6eca:	c9 f7       	brne	.-14     	; 0x6ebe <__ultoa_invert+0x86>
    6ecc:	00 97       	sbiw	r24, 0x00	; 0
    6ece:	61 05       	cpc	r22, r1
    6ed0:	71 05       	cpc	r23, r1
    6ed2:	08 95       	ret
    6ed4:	9b 01       	movw	r18, r22
    6ed6:	ac 01       	movw	r20, r24
    6ed8:	0a 2e       	mov	r0, r26
    6eda:	06 94       	lsr	r0
    6edc:	57 95       	ror	r21
    6ede:	47 95       	ror	r20
    6ee0:	37 95       	ror	r19
    6ee2:	27 95       	ror	r18
    6ee4:	ba 95       	dec	r27
    6ee6:	c9 f7       	brne	.-14     	; 0x6eda <__ultoa_invert+0xa2>
    6ee8:	62 0f       	add	r22, r18
    6eea:	73 1f       	adc	r23, r19
    6eec:	84 1f       	adc	r24, r20
    6eee:	95 1f       	adc	r25, r21
    6ef0:	a0 1d       	adc	r26, r0
    6ef2:	08 95       	ret

00006ef4 <__do_global_dtors>:
    6ef4:	14 e0       	ldi	r17, 0x04	; 4
    6ef6:	c2 e4       	ldi	r28, 0x42	; 66
    6ef8:	d4 e0       	ldi	r29, 0x04	; 4
    6efa:	00 e0       	ldi	r16, 0x00	; 0
    6efc:	06 c0       	rjmp	.+12     	; 0x6f0a <__do_global_dtors+0x16>
    6efe:	80 2f       	mov	r24, r16
    6f00:	fe 01       	movw	r30, r28
    6f02:	0e 94 bd 2e 	call	0x5d7a	; 0x5d7a <__tablejump2__>
    6f06:	21 96       	adiw	r28, 0x01	; 1
    6f08:	01 1d       	adc	r16, r1
    6f0a:	c4 34       	cpi	r28, 0x44	; 68
    6f0c:	d1 07       	cpc	r29, r17
    6f0e:	80 e0       	ldi	r24, 0x00	; 0
    6f10:	08 07       	cpc	r16, r24
    6f12:	a9 f7       	brne	.-22     	; 0x6efe <__do_global_dtors+0xa>
    6f14:	f8 94       	cli

00006f16 <__stop_program>:
    6f16:	ff cf       	rjmp	.-2      	; 0x6f16 <__stop_program>
