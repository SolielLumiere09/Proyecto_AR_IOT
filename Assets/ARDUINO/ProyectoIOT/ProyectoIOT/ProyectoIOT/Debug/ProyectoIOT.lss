
ProyectoIOT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002d2  00800200  00006d92  00006e26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006d92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a0  008004d2  008004d2  000070f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000070f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007154  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000e20  00000000  00000000  00007194  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002c15a  00000000  00000000  00007fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00005e8e  00000000  00000000  0003410e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000832b  00000000  00000000  00039f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000036b4  00000000  00000000  000422c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000058e3  00000000  00000000  0004597c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00014551  00000000  00000000  0004b25f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000e88  00000000  00000000  0005f7b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c4       	rjmp	.+2182   	; 0x888 <__dtors_end>
       2:	00 00       	nop
       4:	72 c4       	rjmp	.+2276   	; 0x8ea <__bad_interrupt>
       6:	00 00       	nop
       8:	70 c4       	rjmp	.+2272   	; 0x8ea <__bad_interrupt>
       a:	00 00       	nop
       c:	6e c4       	rjmp	.+2268   	; 0x8ea <__bad_interrupt>
       e:	00 00       	nop
      10:	6c c4       	rjmp	.+2264   	; 0x8ea <__bad_interrupt>
      12:	00 00       	nop
      14:	6a c4       	rjmp	.+2260   	; 0x8ea <__bad_interrupt>
      16:	00 00       	nop
      18:	68 c4       	rjmp	.+2256   	; 0x8ea <__bad_interrupt>
      1a:	00 00       	nop
      1c:	66 c4       	rjmp	.+2252   	; 0x8ea <__bad_interrupt>
      1e:	00 00       	nop
      20:	64 c4       	rjmp	.+2248   	; 0x8ea <__bad_interrupt>
      22:	00 00       	nop
      24:	62 c4       	rjmp	.+2244   	; 0x8ea <__bad_interrupt>
      26:	00 00       	nop
      28:	60 c4       	rjmp	.+2240   	; 0x8ea <__bad_interrupt>
      2a:	00 00       	nop
      2c:	5e c4       	rjmp	.+2236   	; 0x8ea <__bad_interrupt>
      2e:	00 00       	nop
      30:	5c c4       	rjmp	.+2232   	; 0x8ea <__bad_interrupt>
      32:	00 00       	nop
      34:	5a c4       	rjmp	.+2228   	; 0x8ea <__bad_interrupt>
      36:	00 00       	nop
      38:	58 c4       	rjmp	.+2224   	; 0x8ea <__bad_interrupt>
      3a:	00 00       	nop
      3c:	56 c4       	rjmp	.+2220   	; 0x8ea <__bad_interrupt>
      3e:	00 00       	nop
      40:	54 c4       	rjmp	.+2216   	; 0x8ea <__bad_interrupt>
      42:	00 00       	nop
      44:	52 c4       	rjmp	.+2212   	; 0x8ea <__bad_interrupt>
      46:	00 00       	nop
      48:	50 c4       	rjmp	.+2208   	; 0x8ea <__bad_interrupt>
      4a:	00 00       	nop
      4c:	4e c4       	rjmp	.+2204   	; 0x8ea <__bad_interrupt>
      4e:	00 00       	nop
      50:	4c c4       	rjmp	.+2200   	; 0x8ea <__bad_interrupt>
      52:	00 00       	nop
      54:	4a c4       	rjmp	.+2196   	; 0x8ea <__bad_interrupt>
      56:	00 00       	nop
      58:	48 c4       	rjmp	.+2192   	; 0x8ea <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 77 14 	jmp	0x28ee	; 0x28ee <__vector_23>
      60:	44 c4       	rjmp	.+2184   	; 0x8ea <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 84 10 	jmp	0x2108	; 0x2108 <__vector_25>
      68:	0c 94 ba 10 	jmp	0x2174	; 0x2174 <__vector_26>
      6c:	3e c4       	rjmp	.+2172   	; 0x8ea <__bad_interrupt>
      6e:	00 00       	nop
      70:	3c c4       	rjmp	.+2168   	; 0x8ea <__bad_interrupt>
      72:	00 00       	nop
      74:	3a c4       	rjmp	.+2164   	; 0x8ea <__bad_interrupt>
      76:	00 00       	nop
      78:	38 c4       	rjmp	.+2160   	; 0x8ea <__bad_interrupt>
      7a:	00 00       	nop
      7c:	36 c4       	rjmp	.+2156   	; 0x8ea <__bad_interrupt>
      7e:	00 00       	nop
      80:	34 c4       	rjmp	.+2152   	; 0x8ea <__bad_interrupt>
      82:	00 00       	nop
      84:	32 c4       	rjmp	.+2148   	; 0x8ea <__bad_interrupt>
      86:	00 00       	nop
      88:	30 c4       	rjmp	.+2144   	; 0x8ea <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2e c4       	rjmp	.+2140   	; 0x8ea <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 19 11 	jmp	0x2232	; 0x2232 <__vector_36>
      94:	0c 94 4f 11 	jmp	0x229e	; 0x229e <__vector_37>
      98:	28 c4       	rjmp	.+2128   	; 0x8ea <__bad_interrupt>
      9a:	00 00       	nop
      9c:	26 c4       	rjmp	.+2124   	; 0x8ea <__bad_interrupt>
      9e:	00 00       	nop
      a0:	24 c4       	rjmp	.+2120   	; 0x8ea <__bad_interrupt>
      a2:	00 00       	nop
      a4:	22 c4       	rjmp	.+2116   	; 0x8ea <__bad_interrupt>
      a6:	00 00       	nop
      a8:	20 c4       	rjmp	.+2112   	; 0x8ea <__bad_interrupt>
      aa:	00 00       	nop
      ac:	1e c4       	rjmp	.+2108   	; 0x8ea <__bad_interrupt>
      ae:	00 00       	nop
      b0:	1c c4       	rjmp	.+2104   	; 0x8ea <__bad_interrupt>
      b2:	00 00       	nop
      b4:	1a c4       	rjmp	.+2100   	; 0x8ea <__bad_interrupt>
      b6:	00 00       	nop
      b8:	18 c4       	rjmp	.+2096   	; 0x8ea <__bad_interrupt>
      ba:	00 00       	nop
      bc:	16 c4       	rjmp	.+2092   	; 0x8ea <__bad_interrupt>
      be:	00 00       	nop
      c0:	14 c4       	rjmp	.+2088   	; 0x8ea <__bad_interrupt>
      c2:	00 00       	nop
      c4:	12 c4       	rjmp	.+2084   	; 0x8ea <__bad_interrupt>
      c6:	00 00       	nop
      c8:	10 c4       	rjmp	.+2080   	; 0x8ea <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0e c4       	rjmp	.+2076   	; 0x8ea <__bad_interrupt>
      ce:	00 00       	nop
      d0:	0c c4       	rjmp	.+2072   	; 0x8ea <__bad_interrupt>
      d2:	00 00       	nop
      d4:	0a c4       	rjmp	.+2068   	; 0x8ea <__bad_interrupt>
      d6:	00 00       	nop
      d8:	08 c4       	rjmp	.+2064   	; 0x8ea <__bad_interrupt>
      da:	00 00       	nop
      dc:	06 c4       	rjmp	.+2060   	; 0x8ea <__bad_interrupt>
      de:	00 00       	nop
      e0:	04 c4       	rjmp	.+2056   	; 0x8ea <__bad_interrupt>
      e2:	00 00       	nop
      e4:	d7 15       	cp	r29, r7
      e6:	dc 15       	cp	r29, r12
      e8:	e1 15       	cp	r30, r1
      ea:	eb 15       	cp	r30, r11
      ec:	f5 15       	cp	r31, r5
      ee:	6e 16       	cp	r6, r30
      f0:	ff 15       	cp	r31, r15
      f2:	07 16       	cp	r0, r23
      f4:	0f 16       	cp	r0, r31
      f6:	19 16       	cp	r1, r25
      f8:	23 16       	cp	r2, r19
      fa:	2d 16       	cp	r2, r29
      fc:	3c 16       	cp	r3, r28
      fe:	46 16       	cp	r4, r22
     100:	6e 16       	cp	r6, r30
     102:	50 16       	cp	r5, r16
     104:	5a 16       	cp	r5, r26
     106:	64 16       	cp	r6, r20
     108:	92 16       	cp	r9, r18
     10a:	95 16       	cp	r9, r21
     10c:	84 16       	cp	r8, r20
     10e:	88 16       	cp	r8, r24
     110:	8e 16       	cp	r8, r30
     112:	cc 16       	cp	r12, r28
     114:	99 16       	cp	r9, r25
     116:	9d 16       	cp	r9, r29
     118:	a3 16       	cp	r10, r19
     11a:	a7 16       	cp	r10, r23
     11c:	ab 16       	cp	r10, r27
     11e:	b1 16       	cp	r11, r17
     120:	b5 16       	cp	r11, r21
     122:	b9 16       	cp	r11, r25
     124:	cc 16       	cp	r12, r28
     126:	bf 16       	cp	r11, r31
     128:	c3 16       	cp	r12, r19
     12a:	c7 16       	cp	r12, r23

0000012c <__trampolines_end>:
     12c:	00 40       	sbci	r16, 0x00	; 0
     12e:	7a 10       	cpse	r7, r10
     130:	f3 5a       	subi	r31, 0xA3	; 163
     132:	00 a0       	ldd	r0, Z+32	; 0x20
     134:	72 4e       	sbci	r23, 0xE2	; 226
     136:	18 09       	sbc	r17, r8
     138:	00 10       	cpse	r0, r0
     13a:	a5 d4       	rcall	.+2378   	; 0xa86 <_ZN9MaxMatrix12setColumnAllEhh+0x74>
     13c:	e8 00       	.word	0x00e8	; ????
     13e:	00 e8       	ldi	r16, 0x80	; 128
     140:	76 48       	sbci	r23, 0x86	; 134
     142:	17 00       	.word	0x0017	; ????
     144:	00 e4       	ldi	r16, 0x40	; 64
     146:	0b 54       	subi	r16, 0x4B	; 75
     148:	02 00       	.word	0x0002	; ????
     14a:	00 ca       	rjmp	.-3072   	; 0xfffff54c <__eeprom_end+0xff7ef54c>
     14c:	9a 3b       	cpi	r25, 0xBA	; 186
     14e:	00 00       	nop
     150:	00 e1       	ldi	r16, 0x10	; 16
     152:	f5 05       	cpc	r31, r5
     154:	00 00       	nop
     156:	80 96       	adiw	r24, 0x20	; 32
     158:	98 00       	.word	0x0098	; ????
     15a:	00 00       	nop
     15c:	40 42       	sbci	r20, 0x20	; 32
     15e:	0f 00       	.word	0x000f	; ????
     160:	00 00       	nop
     162:	a0 86       	std	Z+8, r10	; 0x08
     164:	01 00       	.word	0x0001	; ????
     166:	00 00       	nop
     168:	10 27       	eor	r17, r16
     16a:	00 00       	nop
     16c:	00 00       	nop
     16e:	e8 03       	fmulsu	r22, r16
     170:	00 00       	nop
     172:	00 00       	nop
     174:	64 00       	.word	0x0064	; ????
     176:	00 00       	nop
     178:	00 00       	nop
     17a:	0a 00       	.word	0x000a	; ????
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	01 00       	.word	0x0001	; ????
     182:	00 00       	nop
     184:	00 00       	nop
     186:	2c 76       	andi	r18, 0x6C	; 108
     188:	d8 88       	ldd	r13, Y+16	; 0x10
     18a:	dc 67       	ori	r29, 0x7C	; 124
     18c:	4f 08       	sbc	r4, r15
     18e:	23 df       	rcall	.-442    	; 0xffffffd6 <__eeprom_end+0xff7effd6>
     190:	c1 df       	rcall	.-126    	; 0x114 <__SREG__+0xd5>
     192:	ae 59       	subi	r26, 0x9E	; 158
     194:	e1 b1       	in	r30, 0x01	; 1
     196:	b7 96       	adiw	r30, 0x27	; 39
     198:	e5 e3       	ldi	r30, 0x35	; 53
     19a:	e4 53       	subi	r30, 0x34	; 52
     19c:	c6 3a       	cpi	r28, 0xA6	; 166
     19e:	e6 51       	subi	r30, 0x16	; 22
     1a0:	99 76       	andi	r25, 0x69	; 105
     1a2:	96 e8       	ldi	r25, 0x86	; 134
     1a4:	e6 c2       	rjmp	.+1484   	; 0x772 <_ZZN6EspDrv14getClientStateEhE3__c_0+0x9>
     1a6:	84 26       	eor	r8, r20
     1a8:	eb 89       	ldd	r30, Y+19	; 0x13
     1aa:	8c 9b       	sbis	0x11, 4	; 17
     1ac:	62 ed       	ldi	r22, 0xD2	; 210
     1ae:	40 7c       	andi	r20, 0xC0	; 192
     1b0:	6f fc       	.word	0xfc6f	; ????
     1b2:	ef bc       	out	0x2f, r14	; 47
     1b4:	9c 9f       	mul	r25, r28
     1b6:	40 f2       	brcs	.-112    	; 0x148 <__trampolines_end+0x1c>
     1b8:	ba a5       	ldd	r27, Y+42	; 0x2a
     1ba:	6f a5       	ldd	r22, Y+47	; 0x2f
     1bc:	f4 90       	lpm	r15, Z
     1be:	05 5a       	subi	r16, 0xA5	; 165
     1c0:	2a f7       	brpl	.-54     	; 0x18c <__trampolines_end+0x60>
     1c2:	5c 93       	st	X, r21
     1c4:	6b 6c       	ori	r22, 0xCB	; 203
     1c6:	f9 67       	ori	r31, 0x79	; 121
     1c8:	6d c1       	rjmp	.+730    	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     1ca:	1b fc       	.word	0xfc1b	; ????
     1cc:	e0 e4       	ldi	r30, 0x40	; 64
     1ce:	0d 47       	sbci	r16, 0x7D	; 125
     1d0:	fe f5       	brtc	.+126    	; 0x250 <_ZL2CH+0x2a>
     1d2:	20 e6       	ldi	r18, 0x60	; 96
     1d4:	b5 00       	.word	0x00b5	; ????
     1d6:	d0 ed       	ldi	r29, 0xD0	; 208
     1d8:	90 2e       	mov	r9, r16
     1da:	03 00       	.word	0x0003	; ????
     1dc:	94 35       	cpi	r25, 0x54	; 84
     1de:	77 05       	cpc	r23, r7
     1e0:	00 80       	ld	r0, Z
     1e2:	84 1e       	adc	r8, r20
     1e4:	08 00       	.word	0x0008	; ????
     1e6:	00 20       	and	r0, r0
     1e8:	4e 0a       	sbc	r4, r30
     1ea:	00 00       	nop
     1ec:	00 c8       	rjmp	.-4096   	; 0xfffff1ee <__eeprom_end+0xff7ef1ee>
     1ee:	0c 33       	cpi	r16, 0x3C	; 60
     1f0:	33 33       	cpi	r19, 0x33	; 51
     1f2:	33 0f       	add	r19, r19
     1f4:	98 6e       	ori	r25, 0xE8	; 232
     1f6:	12 83       	std	Z+2, r17	; 0x02
     1f8:	11 41       	sbci	r17, 0x11	; 17
     1fa:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1fc:	21 14       	cp	r2, r1
     1fe:	89 3b       	cpi	r24, 0xB9	; 185
     200:	e6 55       	subi	r30, 0x56	; 86
     202:	16 cf       	rjmp	.-468    	; 0x30 <__FUSE_REGION_LENGTH__+0x2d>
     204:	fe e6       	ldi	r31, 0x6E	; 110
     206:	db 18       	sub	r13, r11
     208:	d1 84       	ldd	r13, Z+9	; 0x09
     20a:	4b 38       	cpi	r20, 0x8B	; 139
     20c:	1b f7       	brvc	.-58     	; 0x1d4 <__trampolines_end+0xa8>
     20e:	7c 1d       	adc	r23, r12
     210:	90 1d       	adc	r25, r0
     212:	a4 bb       	out	0x14, r26	; 20
     214:	e4 24       	eor	r14, r4
     216:	20 32       	cpi	r18, 0x20	; 32
     218:	84 72       	andi	r24, 0x24	; 36
     21a:	5e 22       	and	r5, r30
     21c:	81 00       	.word	0x0081	; ????
     21e:	c9 f1       	breq	.+114    	; 0x292 <_ZL2CH+0x6c>
     220:	24 ec       	ldi	r18, 0xC4	; 196
     222:	a1 e5       	ldi	r26, 0x51	; 81
     224:	3d 27       	eor	r19, r29

00000226 <_ZL2CH>:
     226:	03 08 00 00 00 00 00 01 08 5f 00 00 00 00 03 08     ........._......
     236:	03 00 03 00 00 05 08 14 3e 14 3e 14 04 08 24 6a     ........>.>...$j
     246:	2b 12 00 05 08 63 13 08 64 63 05 08 36 49 56 20     +....c..dc..6IV 
     256:	50 01 08 03 00 00 00 00 03 08 1c 22 41 00 00 03     P.........."A...
     266:	08 41 22 1c 00 00 05 08 28 18 0e 18 28 05 08 08     .A".....(...(...
     276:	08 3e 08 08 02 08 b0 70 00 00 00 04 08 08 08 08     .>.....p........
     286:	08 00 02 08 60 60 00 00 00 04 08 60 18 06 01 00     ....``.....`....
     296:	04 08 3e 41 41 3e 00 03 08 42 7f 40 00 00 04 08     ..>AA>...B.@....
     2a6:	62 51 49 46 00 04 08 22 41 49 36 00 04 08 18 14     bQIF..."AI6.....
     2b6:	12 7f 00 04 08 27 45 45 39 00 04 08 3e 49 49 30     .....'EE9...>II0
     2c6:	00 04 08 61 11 09 07 00 04 08 36 49 49 36 00 04     ...a......6II6..
     2d6:	08 06 49 49 3e 00 02 08 50 00 00 00 00 02 08 80     ..II>...P.......
     2e6:	50 00 00 00 03 08 10 28 44 00 00 03 08 14 14 14     P......(D.......
     2f6:	00 00 03 08 44 28 10 00 00 04 08 02 59 09 06 00     ....D(......Y...
     306:	05 08 3e 49 55 5d 0e 04 08 7e 11 11 7e 00 04 08     ..>IU]...~..~...
     316:	7f 49 49 36 00 04 08 3e 41 41 22 00 04 08 7f 41     .II6...>AA"....A
     326:	41 3e 00 04 08 7f 49 49 41 00 04 08 7f 09 09 01     A>....IIA.......
     336:	00 04 08 3e 41 49 7a 00 04 08 7f 08 08 7f 00 03     ...>AIz.........
     346:	08 41 7f 41 00 00 04 08 30 40 41 3f 00 04 08 7f     .A.A....0@A?....
     356:	08 14 63 00 04 08 7f 40 40 40 00 05 08 7f 02 0c     ..c....@@@......
     366:	02 7f 05 08 7f 04 08 10 7f 04 08 3e 41 41 3e 00     ...........>AA>.
     376:	04 08 7f 09 09 06 00 04 08 3e 41 41 be 00 04 08     .........>AA....
     386:	7f 09 09 76 00 04 08 46 49 49 32 00 05 08 01 01     ...v...FII2.....
     396:	7f 01 01 04 08 3f 40 40 3f 00 05 08 0f 30 40 30     .....?@@?....0@0
     3a6:	0f 05 08 3f 40 38 40 3f 05 08 63 14 08 14 63 05     ...?@8@?..c...c.
     3b6:	08 07 08 70 08 07 04 08 61 51 49 47 00 02 08 7f     ...p....aQIG....
     3c6:	41 00 00 00 04 08 01 06 18 60 00 02 08 41 7f 00     A........`...A..
     3d6:	00 00 03 08 02 01 02 00 00 04 08 40 40 40 40 00     ...........@@@@.
     3e6:	02 08 01 02 00 00 00 04 08 20 54 54 78 00 04 08     ......... TTx...
     3f6:	7f 44 44 38 00 04 08 38 44 44 28 00 04 08 38 44     .DD8...8DD(...8D
     406:	44 7f 00 04 08 38 54 54 18 00 03 08 04 7e 05 00     D....8TT.....~..
     416:	00 04 08 98 a4 a4 78 00 04 08 7f 04 04 78 00 03     ......x......x..
     426:	08 44 7d 40 00 00 04 08 40 80 84 7d 00 04 08 7f     .D}@....@..}....
     436:	10 28 44 00 03 08 41 7f 40 00 00 05 08 7c 04 7c     .(D...A.@....|.|
     446:	04 78 04 08 7c 04 04 78 00 04 08 38 44 44 38 00     .x..|..x...8DD8.
     456:	04 08 fc 24 24 18 00 04 08 18 24 24 fc 00 04 08     ...$$.....$$....
     466:	7c 08 04 04 00 04 08 48 54 54 24 00 03 08 04 3f     |......HTT$....?
     476:	44 00 00 04 08 3c 40 40 7c 00 05 08 1c 20 40 20     D....<@@|.... @ 
     486:	1c 05 08 3c 40 3c 40 3c 05 08 44 28 10 28 44 04     ...<@<@<..D(.(D.
     496:	08 9c a0 a0 7c 00 03 08 64 54 4c 00 00 03 08 08     ....|...dTL.....
     4a6:	36 41 00 00 01 08 7f 00 00 00 00 03 08 41 36 08     6A...........A6.
     4b6:	00 00 04 08 08 04 08 04 00                          .........

000004bf <digital_pin_to_timer_PGM>:
     4bf:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
     4eb:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00000505 <digital_pin_to_bit_mask_PGM>:
     505:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
     515:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
     525:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
     535:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
     545:	04 08 10 20 40 80                                   ... @.

0000054b <digital_pin_to_port_PGM>:
     54b:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
     55b:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
     56b:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
     57b:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
     58b:	0b 0b 0b 0b 0b 0b                                   ......

00000591 <port_to_output_PGM>:
     591:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
     5a1:	02 01 00 00 05 01 08 01 0b 01                       ..........

000005ab <port_to_mode_PGM>:
     5ab:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
     5bb:	01 01 00 00 04 01 07 01 0a 01                       ..........

000005c5 <_ZZN12WiFiEspClass4initEP6StreamE3__c>:
     5c5:	49 6e 69 74 69 61 6c 69 7a 69 6e 67 20 45 53 50     Initializing ESP
     5d5:	20 6d 6f 64 75 6c 65 00                              module.

000005dd <_ZZN13WiFiEspClient4stopEvE3__c>:
     5dd:	44 69 73 63 6f 6e 6e 65 63 74 69 6e 67 20 00        Disconnecting .

000005ec <_ZZN13WiFiEspClient5writeEPKhjE3__c>:
     5ec:	46 61 69 6c 65 64 20 74 6f 20 77 72 69 74 65 20     Failed to write 
     5fc:	74 6f 20 73 6f 63 6b 65 74 00                       to socket.

00000606 <_ZZN13WiFiEspClient7connectEPKcjhE3__c_0>:
     606:	4e 6f 20 73 6f 63 6b 65 74 20 61 76 61 69 6c 61     No socket availa
     616:	62 6c 65 00                                         ble.

0000061a <_ZZN13WiFiEspClient7connectEPKcjhE3__c>:
     61a:	43 6f 6e 6e 65 63 74 69 6e 67 20 74 6f 00           Connecting to.

00000628 <_ZZN13WiFiEspClient7connectE9IPAddressjE3__c>:
     628:	25 64 2e 25 64 2e 25 64 2e 25 64 00                 %d.%d.%d.%d.

00000634 <_ZZN6EspDrv9readUntilEiPKcbE3__c>:
     634:	3e 3e 3e 20 54 49 4d 45 4f 55 54 20 3e 3e 3e 00     >>> TIMEOUT >>>.

00000644 <_ZZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_PciE3__c_3>:
     644:	4e 6f 20 74 61 67 20 66 6f 75 6e 64 00              No tag found.

00000651 <_ZZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_PciE3__c_1>:
     651:	45 6e 64 20 74 61 67 20 6e 6f 74 20 66 6f 75 6e     End tag not foun
     661:	64 00                                               d.

00000663 <_ZZN6EspDrv8sendDataEhPKhjE3__c_2>:
     663:	44 61 74 61 20 70 61 63 6b 65 74 20 73 65 6e 64     Data packet send
     673:	20 65 72 72 6f 72 20 28 32 29 00                     error (2).

0000067e <_ZZN6EspDrv8sendDataEhPKhjE3__c_1>:
     67e:	44 61 74 61 20 70 61 63 6b 65 74 20 73 65 6e 64     Data packet send
     68e:	20 65 72 72 6f 72 20 28 31 29 00                     error (1).

00000699 <_ZZN6EspDrv8sendDataEhPKhjE3__c_0>:
     699:	41 54 2b 43 49 50 53 45 4e 44 3d 25 64 2c 25 75     AT+CIPSEND=%d,%u
	...

000006aa <_ZZN6EspDrv7getDataEhPhbPbE3__c_1>:
     6aa:	54 49 4d 45 4f 55 54 3a 00                          TIMEOUT:.

000006b3 <_ZZN6EspDrv7getDataEhPhbPbE3__c>:
     6b3:	54 61 67 20 43 4c 4f 53 45 44 20 6e 6f 74 20 66     Tag CLOSED not f
     6c3:	6f 75 6e 64 00                                      ound.

000006c8 <_ZZN6EspDrv10stopClientEhE3__c_0>:
     6c8:	41 54 2b 43 49 50 43 4c 4f 53 45 3d 25 64 00        AT+CIPCLOSE=%d.

000006d7 <_ZZN6EspDrv11startClientEPKcjhhE3__c_3>:
     6d7:	41 54 2b 43 49 50 53 54 41 52 54 3d 25 64 2c 22     AT+CIPSTART=%d,"
     6e7:	55 44 50 22 2c 22 25 73 22 2c 30 2c 25 75 2c 32     UDP","%s",0,%u,2
	...

000006f8 <_ZZN6EspDrv11startClientEPKcjhhE3__c_2>:
     6f8:	41 54 2b 43 49 50 53 54 41 52 54 3d 25 64 2c 22     AT+CIPSTART=%d,"
     708:	53 53 4c 22 2c 22 25 73 22 2c 25 75 00              SSL","%s",%u.

00000715 <_ZZN6EspDrv11startClientEPKcjhhE3__c_1>:
     715:	41 54 2b 43 49 50 53 53 4c 53 49 5a 45 3d 34 30     AT+CIPSSLSIZE=40
     725:	39 36 00                                            96.

00000728 <_ZZN6EspDrv11startClientEPKcjhhE3__c_0>:
     728:	41 54 2b 43 49 50 53 54 41 52 54 3d 25 64 2c 22     AT+CIPSTART=%d,"
     738:	54 43 50 22 2c 22 25 73 22 2c 25 75 00              TCP","%s",%u.

00000745 <_ZZN6EspDrv12getFwVersionEvE3__c_0>:
     745:	41 54 2b 47 4d 52 00                                AT+GMR.

0000074c <_ZZN6EspDrv12getFwVersionEvE3__c_1>:
     74c:	53 44 4b 20 76 65 72 73 69 6f 6e 3a 00              SDK version:.

00000759 <_ZZN6EspDrv12getFwVersionEvE3__c_2>:
     759:	0d 0a 00                                            ...

0000075c <_ZZN6EspDrv14getClientStateEhE3__c_1>:
     75c:	41 54 2b 43 49 50 53 54 41 54 55 53 00              AT+CIPSTATUS.

00000769 <_ZZN6EspDrv14getClientStateEhE3__c_0>:
     769:	2b 43 49 50 53 54 41 54 55 53 3a 25 64 2c 00        +CIPSTATUS:%d,.

00000778 <_ZZN6EspDrv19getConnectionStatusEvE3__c_0>:
     778:	41 54 2b 43 49 50 53 54 41 54 55 53 00              AT+CIPSTATUS.

00000785 <_ZZN6EspDrv19getConnectionStatusEvE3__c_1>:
     785:	53 54 41 54 55 53 3a 00                             STATUS:.

0000078d <_ZZN6EspDrv19getConnectionStatusEvE3__c_2>:
     78d:	0d 0a 00                                            ...

00000790 <_ZZN6EspDrv11wifiConnectEPKcS1_E3__c_2>:
     790:	46 61 69 6c 65 64 20 63 6f 6e 6e 65 63 74 69 6e     Failed connectin
     7a0:	67 20 74 6f 00                                      g to.

000007a5 <_ZZN6EspDrv11wifiConnectEPKcS1_E3__c_1>:
     7a5:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 00              Connected to.

000007b2 <_ZZN6EspDrv11wifiConnectEPKcS1_E3__c_0>:
     7b2:	41 54 2b 43 57 4a 41 50 5f 43 55 52 3d 22 25 73     AT+CWJAP_CUR="%s
     7c2:	22 2c 22 25 73 22 00                                ","%s".

000007c9 <_ZZN6EspDrv5resetEvE3__c_6>:
     7c9:	41 54 2b 43 57 44 48 43 50 3d 31 2c 31 00           AT+CWDHCP=1,1.

000007d7 <_ZZN6EspDrv5resetEvE3__c_5>:
     7d7:	41 54 2b 43 57 41 55 54 4f 43 4f 4e 4e 3d 30 00     AT+CWAUTOCONN=0.

000007e7 <_ZZN6EspDrv5resetEvE3__c_4>:
     7e7:	41 54 2b 43 49 50 44 49 4e 46 4f 3d 31 00           AT+CIPDINFO=1.

000007f5 <_ZZN6EspDrv5resetEvE3__c_3>:
     7f5:	41 54 2b 43 49 50 4d 55 58 3d 31 00                 AT+CIPMUX=1.

00000801 <_ZZN6EspDrv5resetEvE3__c_2>:
     801:	41 54 2b 43 57 4d 4f 44 45 3d 31 00                 AT+CWMODE=1.

0000080d <_ZZN6EspDrv5resetEvE3__c_1>:
     80d:	41 54 45 30 00                                      ATE0.

00000812 <_ZZN6EspDrv5resetEvE3__c_0>:
     812:	41 54 2b 52 53 54 00                                AT+RST.

00000819 <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_3>:
     819:	49 6e 69 74 69 6c 69 7a 61 74 69 6f 6e 20 73 75     Initilization su
     829:	63 63 65 73 73 66 75 6c 20 2d 00                    ccessful -.

00000834 <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_2>:
     834:	57 61 72 6e 69 6e 67 3a 20 55 6e 73 75 70 70 6f     Warning: Unsuppo
     844:	72 74 65 64 20 66 69 72 6d 77 61 72 65 00           rted firmware.

00000852 <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_1>:
     852:	43 61 6e 6e 6f 74 20 69 6e 69 74 69 61 6c 69 7a     Cannot initializ
     862:	65 20 45 53 50 20 6d 6f 64 75 6c 65 00              e ESP module.

0000086f <_ZZN6EspDrv14wifiDriverInitEP6StreamE3__c_0>:
     86f:	41 54 00                                            AT.

00000872 <__ctors_start>:
     872:	d8 0a       	sbc	r13, r24
     874:	05 0d       	add	r16, r5
     876:	51 0d       	add	r21, r1
     878:	ec 10       	cpse	r14, r12
     87a:	81 11       	cpse	r24, r1
     87c:	55 22       	and	r5, r21
     87e:	a3 22       	and	r10, r19
     880:	a9 24       	eor	r10, r9
     882:	1a 2b       	or	r17, r26

00000884 <__ctors_end>:
     884:	11 0d       	add	r17, r1
     886:	29 2b       	or	r18, r25

00000888 <__dtors_end>:
     888:	11 24       	eor	r1, r1
     88a:	1f be       	out	0x3f, r1	; 63
     88c:	cf ef       	ldi	r28, 0xFF	; 255
     88e:	d1 e2       	ldi	r29, 0x21	; 33
     890:	de bf       	out	0x3e, r29	; 62
     892:	cd bf       	out	0x3d, r28	; 61
     894:	00 e0       	ldi	r16, 0x00	; 0
     896:	0c bf       	out	0x3c, r16	; 60

00000898 <__do_copy_data>:
     898:	14 e0       	ldi	r17, 0x04	; 4
     89a:	a0 e0       	ldi	r26, 0x00	; 0
     89c:	b2 e0       	ldi	r27, 0x02	; 2
     89e:	e2 e9       	ldi	r30, 0x92	; 146
     8a0:	fd e6       	ldi	r31, 0x6D	; 109
     8a2:	00 e0       	ldi	r16, 0x00	; 0
     8a4:	0b bf       	out	0x3b, r16	; 59
     8a6:	02 c0       	rjmp	.+4      	; 0x8ac <__do_copy_data+0x14>
     8a8:	07 90       	elpm	r0, Z+
     8aa:	0d 92       	st	X+, r0
     8ac:	a2 3d       	cpi	r26, 0xD2	; 210
     8ae:	b1 07       	cpc	r27, r17
     8b0:	d9 f7       	brne	.-10     	; 0x8a8 <__do_copy_data+0x10>

000008b2 <__do_clear_bss>:
     8b2:	26 e0       	ldi	r18, 0x06	; 6
     8b4:	a2 ed       	ldi	r26, 0xD2	; 210
     8b6:	b4 e0       	ldi	r27, 0x04	; 4
     8b8:	01 c0       	rjmp	.+2      	; 0x8bc <.do_clear_bss_start>

000008ba <.do_clear_bss_loop>:
     8ba:	1d 92       	st	X+, r1

000008bc <.do_clear_bss_start>:
     8bc:	a2 37       	cpi	r26, 0x72	; 114
     8be:	b2 07       	cpc	r27, r18
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <.do_clear_bss_loop>

000008c2 <__do_global_ctors>:
     8c2:	14 e0       	ldi	r17, 0x04	; 4
     8c4:	c2 e4       	ldi	r28, 0x42	; 66
     8c6:	d4 e0       	ldi	r29, 0x04	; 4
     8c8:	00 e0       	ldi	r16, 0x00	; 0
     8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <__do_global_ctors+0x16>
     8cc:	21 97       	sbiw	r28, 0x01	; 1
     8ce:	01 09       	sbc	r16, r1
     8d0:	80 2f       	mov	r24, r16
     8d2:	fe 01       	movw	r30, r28
     8d4:	0e 94 fa 2d 	call	0x5bf4	; 0x5bf4 <__tablejump2__>
     8d8:	c9 33       	cpi	r28, 0x39	; 57
     8da:	d1 07       	cpc	r29, r17
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	08 07       	cpc	r16, r24
     8e0:	a9 f7       	brne	.-22     	; 0x8cc <__do_global_ctors+0xa>
     8e2:	0e 94 04 12 	call	0x2408	; 0x2408 <main>
     8e6:	0c 94 b7 36 	jmp	0x6d6e	; 0x6d6e <__do_global_dtors>

000008ea <__bad_interrupt>:
     8ea:	8a cb       	rjmp	.-2284   	; 0x0 <__vectors>

000008ec <_ZN9MaxMatrixC1Ehhhh>:


#include "Arduino.h"
#include "MaxMatrix.h"

MaxMatrix::MaxMatrix(byte _data, byte _load, byte _clock, byte _num) 
     8ec:	0f 93       	push	r16
     8ee:	fc 01       	movw	r30, r24
{
	data = _data;
     8f0:	60 83       	st	Z, r22
	load = _load;
     8f2:	41 83       	std	Z+1, r20	; 0x01
	clock = _clock;
     8f4:	22 83       	std	Z+2, r18	; 0x02
	num = _num;
     8f6:	03 83       	std	Z+3, r16	; 0x03
     8f8:	dc 01       	movw	r26, r24
     8fa:	14 96       	adiw	r26, 0x04	; 4
     8fc:	ec 5a       	subi	r30, 0xAC	; 172
     8fe:	ff 4f       	sbci	r31, 0xFF	; 255
	for (int i=0; i<80; i++)
		buffer[i] = 0;
     900:	1d 92       	st	X+, r1
{
	data = _data;
	load = _load;
	clock = _clock;
	num = _num;
	for (int i=0; i<80; i++)
     902:	ae 17       	cp	r26, r30
     904:	bf 07       	cpc	r27, r31
     906:	e1 f7       	brne	.-8      	; 0x900 <_ZN9MaxMatrixC1Ehhhh+0x14>
		buffer[i] = 0;
}
     908:	0f 91       	pop	r16
     90a:	08 95       	ret

0000090c <_ZN9MaxMatrix10setCommandEhh>:
	for (int i=0; i<80; i++)
		buffer[i] = 0;
}

void MaxMatrix::setCommand(byte command, byte value)
{
     90c:	ef 92       	push	r14
     90e:	ff 92       	push	r15
     910:	0f 93       	push	r16
     912:	1f 93       	push	r17
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	ec 01       	movw	r28, r24
     91a:	e6 2e       	mov	r14, r22
     91c:	f4 2e       	mov	r15, r20
	digitalWrite(load, LOW);    
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	89 81       	ldd	r24, Y+1	; 0x01
     922:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	for (int i=0; i<num; i++) 
     926:	00 e0       	ldi	r16, 0x00	; 0
     928:	10 e0       	ldi	r17, 0x00	; 0
     92a:	8b 81       	ldd	r24, Y+3	; 0x03
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	08 17       	cp	r16, r24
     930:	19 07       	cpc	r17, r25
     932:	7c f4       	brge	.+30     	; 0x952 <_ZN9MaxMatrix10setCommandEhh+0x46>
	{
		shiftOut(data, clock, MSBFIRST, command);
     934:	2e 2d       	mov	r18, r14
     936:	41 e0       	ldi	r20, 0x01	; 1
     938:	6a 81       	ldd	r22, Y+2	; 0x02
     93a:	88 81       	ld	r24, Y
     93c:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
		shiftOut(data, clock, MSBFIRST, value);
     940:	2f 2d       	mov	r18, r15
     942:	41 e0       	ldi	r20, 0x01	; 1
     944:	6a 81       	ldd	r22, Y+2	; 0x02
     946:	88 81       	ld	r24, Y
     948:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
}

void MaxMatrix::setCommand(byte command, byte value)
{
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     94c:	0f 5f       	subi	r16, 0xFF	; 255
     94e:	1f 4f       	sbci	r17, 0xFF	; 255
     950:	ec cf       	rjmp	.-40     	; 0x92a <_ZN9MaxMatrix10setCommandEhh+0x1e>
	{
		shiftOut(data, clock, MSBFIRST, command);
		shiftOut(data, clock, MSBFIRST, value);
	}
	digitalWrite(load, LOW);
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	89 81       	ldd	r24, Y+1	; 0x01
     956:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	digitalWrite(load, HIGH);
     95a:	61 e0       	ldi	r22, 0x01	; 1
     95c:	89 81       	ldd	r24, Y+1	; 0x01
}
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	ff 90       	pop	r15
     968:	ef 90       	pop	r14
	{
		shiftOut(data, clock, MSBFIRST, command);
		shiftOut(data, clock, MSBFIRST, value);
	}
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
     96a:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <digitalWrite>

0000096e <_ZN9MaxMatrix12setIntensityEh>:
	
	setIntensity(0x0f);    // the first 0x0f is the value you can set
}

void MaxMatrix::setIntensity(byte intensity)
{
     96e:	46 2f       	mov	r20, r22
	setCommand(max7219_reg_intensity, intensity);
     970:	6a e0       	ldi	r22, 0x0A	; 10
     972:	cc cf       	rjmp	.-104    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>

00000974 <_ZN9MaxMatrix9setColumnEhh>:
	digitalWrite(load, HIGH);
}


void MaxMatrix::setColumn(byte col, byte value)
{
     974:	bf 92       	push	r11
     976:	cf 92       	push	r12
     978:	df 92       	push	r13
     97a:	ef 92       	push	r14
     97c:	ff 92       	push	r15
     97e:	0f 93       	push	r16
     980:	1f 93       	push	r17
     982:	cf 93       	push	r28
     984:	df 93       	push	r29
     986:	ec 01       	movw	r28, r24
     988:	f6 2e       	mov	r15, r22
     98a:	b4 2e       	mov	r11, r20
	int n = col / 8;
     98c:	c6 2e       	mov	r12, r22
     98e:	c6 94       	lsr	r12
     990:	c6 94       	lsr	r12
     992:	c6 94       	lsr	r12
     994:	d1 2c       	mov	r13, r1
     996:	86 2f       	mov	r24, r22
     998:	87 70       	andi	r24, 0x07	; 7
     99a:	e8 2e       	mov	r14, r24
	int c = col % 8;
	digitalWrite(load, LOW);    
     99c:	60 e0       	ldi	r22, 0x00	; 0
     99e:	89 81       	ldd	r24, Y+1	; 0x01
     9a0:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	for (int i=0; i<num; i++) 
     9a4:	00 e0       	ldi	r16, 0x00	; 0
     9a6:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i == n)
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     9a8:	e3 94       	inc	r14
void MaxMatrix::setColumn(byte col, byte value)
{
	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     9aa:	8b 81       	ldd	r24, Y+3	; 0x03
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	08 17       	cp	r16, r24
     9b0:	19 07       	cpc	r17, r25
     9b2:	d4 f4       	brge	.+52     	; 0x9e8 <_ZN9MaxMatrix9setColumnEhh+0x74>
	{
		if (i == n)
     9b4:	0c 15       	cp	r16, r12
     9b6:	1d 05       	cpc	r17, r13
     9b8:	41 f4       	brne	.+16     	; 0x9ca <_ZN9MaxMatrix9setColumnEhh+0x56>
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     9ba:	2e 2d       	mov	r18, r14
     9bc:	41 e0       	ldi	r20, 0x01	; 1
     9be:	6a 81       	ldd	r22, Y+2	; 0x02
     9c0:	88 81       	ld	r24, Y
     9c2:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
			shiftOut(data, clock, MSBFIRST, value);
     9c6:	2b 2d       	mov	r18, r11
     9c8:	07 c0       	rjmp	.+14     	; 0x9d8 <_ZN9MaxMatrix9setColumnEhh+0x64>
		}
		else
		{
			shiftOut(data, clock, MSBFIRST, 0);
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	41 e0       	ldi	r20, 0x01	; 1
     9ce:	6a 81       	ldd	r22, Y+2	; 0x02
     9d0:	88 81       	ld	r24, Y
     9d2:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
			shiftOut(data, clock, MSBFIRST, 0);
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	41 e0       	ldi	r20, 0x01	; 1
     9da:	6a 81       	ldd	r22, Y+2	; 0x02
     9dc:	88 81       	ld	r24, Y
     9de:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
void MaxMatrix::setColumn(byte col, byte value)
{
	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     9e2:	0f 5f       	subi	r16, 0xFF	; 255
     9e4:	1f 4f       	sbci	r17, 0xFF	; 255
     9e6:	e1 cf       	rjmp	.-62     	; 0x9aa <_ZN9MaxMatrix9setColumnEhh+0x36>
		{
			shiftOut(data, clock, MSBFIRST, 0);
			shiftOut(data, clock, MSBFIRST, 0);
		}
	}
	digitalWrite(load, LOW);
     9e8:	60 e0       	ldi	r22, 0x00	; 0
     9ea:	89 81       	ldd	r24, Y+1	; 0x01
     9ec:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	digitalWrite(load, HIGH);
     9f0:	61 e0       	ldi	r22, 0x01	; 1
     9f2:	89 81       	ldd	r24, Y+1	; 0x01
     9f4:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	
	buffer[col] = value;
     9f8:	cf 0d       	add	r28, r15
     9fa:	d1 1d       	adc	r29, r1
     9fc:	bc 82       	std	Y+4, r11	; 0x04
}
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	1f 91       	pop	r17
     a04:	0f 91       	pop	r16
     a06:	ff 90       	pop	r15
     a08:	ef 90       	pop	r14
     a0a:	df 90       	pop	r13
     a0c:	cf 90       	pop	r12
     a0e:	bf 90       	pop	r11
     a10:	08 95       	ret

00000a12 <_ZN9MaxMatrix12setColumnAllEhh>:

void MaxMatrix::setColumnAll(byte col, byte value)
{
     a12:	af 92       	push	r10
     a14:	bf 92       	push	r11
     a16:	cf 92       	push	r12
     a18:	df 92       	push	r13
     a1a:	ef 92       	push	r14
     a1c:	ff 92       	push	r15
     a1e:	0f 93       	push	r16
     a20:	1f 93       	push	r17
     a22:	cf 93       	push	r28
     a24:	df 93       	push	r29
     a26:	ec 01       	movw	r28, r24
     a28:	16 2f       	mov	r17, r22
     a2a:	04 2f       	mov	r16, r20
	digitalWrite(load, LOW);    
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	89 81       	ldd	r24, Y+1	; 0x01
     a30:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
     a34:	a1 2e       	mov	r10, r17
     a36:	b1 2c       	mov	r11, r1
     a38:	7e 01       	movw	r14, r28
	for (int i=0; i<num; i++) 
     a3a:	c1 2c       	mov	r12, r1
     a3c:	d1 2c       	mov	r13, r1
	{
		shiftOut(data, clock, MSBFIRST, col + 1);
     a3e:	1f 5f       	subi	r17, 0xFF	; 255
}

void MaxMatrix::setColumnAll(byte col, byte value)
{
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     a40:	8b 81       	ldd	r24, Y+3	; 0x03
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	c8 16       	cp	r12, r24
     a46:	d9 06       	cpc	r13, r25
     a48:	a4 f4       	brge	.+40     	; 0xa72 <_ZN9MaxMatrix12setColumnAllEhh+0x60>
	{
		shiftOut(data, clock, MSBFIRST, col + 1);
     a4a:	21 2f       	mov	r18, r17
     a4c:	41 e0       	ldi	r20, 0x01	; 1
     a4e:	6a 81       	ldd	r22, Y+2	; 0x02
     a50:	88 81       	ld	r24, Y
     a52:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
		shiftOut(data, clock, MSBFIRST, value);
     a56:	20 2f       	mov	r18, r16
     a58:	41 e0       	ldi	r20, 0x01	; 1
     a5a:	6a 81       	ldd	r22, Y+2	; 0x02
     a5c:	88 81       	ld	r24, Y
     a5e:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
		buffer[col * i] = value;
     a62:	f7 01       	movw	r30, r14
     a64:	04 83       	std	Z+4, r16	; 0x04
}

void MaxMatrix::setColumnAll(byte col, byte value)
{
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     a66:	ff ef       	ldi	r31, 0xFF	; 255
     a68:	cf 1a       	sub	r12, r31
     a6a:	df 0a       	sbc	r13, r31
     a6c:	ea 0c       	add	r14, r10
     a6e:	fb 1c       	adc	r15, r11
     a70:	e7 cf       	rjmp	.-50     	; 0xa40 <_ZN9MaxMatrix12setColumnAllEhh+0x2e>
	{
		shiftOut(data, clock, MSBFIRST, col + 1);
		shiftOut(data, clock, MSBFIRST, value);
		buffer[col * i] = value;
	}
	digitalWrite(load, LOW);
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	89 81       	ldd	r24, Y+1	; 0x01
     a76:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	digitalWrite(load, HIGH);
     a7a:	61 e0       	ldi	r22, 0x01	; 1
     a7c:	89 81       	ldd	r24, Y+1	; 0x01
}
     a7e:	df 91       	pop	r29
     a80:	cf 91       	pop	r28
     a82:	1f 91       	pop	r17
     a84:	0f 91       	pop	r16
     a86:	ff 90       	pop	r15
     a88:	ef 90       	pop	r14
     a8a:	df 90       	pop	r13
     a8c:	cf 90       	pop	r12
     a8e:	bf 90       	pop	r11
     a90:	af 90       	pop	r10
		shiftOut(data, clock, MSBFIRST, col + 1);
		shiftOut(data, clock, MSBFIRST, value);
		buffer[col * i] = value;
	}
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
     a92:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <digitalWrite>

00000a96 <_ZN9MaxMatrix5clearEv>:
{
	setCommand(max7219_reg_intensity, intensity);
}

void MaxMatrix::clear()
{
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	ec 01       	movw	r28, r24
     a9e:	10 e0       	ldi	r17, 0x00	; 0
	for (int i=0; i<8; i++) 
		setColumnAll(i,0);
     aa0:	40 e0       	ldi	r20, 0x00	; 0
     aa2:	61 2f       	mov	r22, r17
     aa4:	ce 01       	movw	r24, r28
     aa6:	b5 df       	rcall	.-150    	; 0xa12 <_ZN9MaxMatrix12setColumnAllEhh>
     aa8:	1f 5f       	subi	r17, 0xFF	; 255
	setCommand(max7219_reg_intensity, intensity);
}

void MaxMatrix::clear()
{
	for (int i=0; i<8; i++) 
     aaa:	18 30       	cpi	r17, 0x08	; 8
     aac:	c9 f7       	brne	.-14     	; 0xaa0 <_ZN9MaxMatrix5clearEv+0xa>
     aae:	fe 01       	movw	r30, r28
     ab0:	34 96       	adiw	r30, 0x04	; 4
     ab2:	cc 5a       	subi	r28, 0xAC	; 172
     ab4:	df 4f       	sbci	r29, 0xFF	; 255
		setColumnAll(i,0);
		
	for (int i=0; i<80; i++)
		buffer[i] = 0;
     ab6:	11 92       	st	Z+, r1
void MaxMatrix::clear()
{
	for (int i=0; i<8; i++) 
		setColumnAll(i,0);
		
	for (int i=0; i<80; i++)
     ab8:	ec 17       	cp	r30, r28
     aba:	fd 07       	cpc	r31, r29
     abc:	e1 f7       	brne	.-8      	; 0xab6 <_ZN9MaxMatrix5clearEv+0x20>
		buffer[i] = 0;
}
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	1f 91       	pop	r17
     ac4:	08 95       	ret

00000ac6 <_ZN9MaxMatrix4initEv>:
	for (int i=0; i<80; i++)
		buffer[i] = 0;
}

void MaxMatrix::init()
{
     ac6:	cf 93       	push	r28
     ac8:	df 93       	push	r29
     aca:	ec 01       	movw	r28, r24
	pinMode(data,  OUTPUT);
     acc:	61 e0       	ldi	r22, 0x01	; 1
     ace:	88 81       	ld	r24, Y
     ad0:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <pinMode>
	pinMode(clock, OUTPUT);
     ad4:	61 e0       	ldi	r22, 0x01	; 1
     ad6:	8a 81       	ldd	r24, Y+2	; 0x02
     ad8:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <pinMode>
	pinMode(load,  OUTPUT);
     adc:	61 e0       	ldi	r22, 0x01	; 1
     ade:	89 81       	ldd	r24, Y+1	; 0x01
     ae0:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <pinMode>
	digitalWrite(clock, HIGH); 
     ae4:	61 e0       	ldi	r22, 0x01	; 1
     ae6:	8a 81       	ldd	r24, Y+2	; 0x02
     ae8:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>

	setCommand(max7219_reg_scanLimit, 0x07);      
     aec:	47 e0       	ldi	r20, 0x07	; 7
     aee:	6b e0       	ldi	r22, 0x0B	; 11
     af0:	ce 01       	movw	r24, r28
     af2:	0c df       	rcall	.-488    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
	setCommand(max7219_reg_decodeMode, 0x00);  // using an led matrix (not digits)
     af4:	40 e0       	ldi	r20, 0x00	; 0
     af6:	69 e0       	ldi	r22, 0x09	; 9
     af8:	ce 01       	movw	r24, r28
     afa:	08 df       	rcall	.-496    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
	setCommand(max7219_reg_shutdown, 0x01);    // not in shutdown mode
     afc:	41 e0       	ldi	r20, 0x01	; 1
     afe:	6c e0       	ldi	r22, 0x0C	; 12
     b00:	ce 01       	movw	r24, r28
     b02:	04 df       	rcall	.-504    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
	setCommand(max7219_reg_displayTest, 0x00); // no display test
     b04:	40 e0       	ldi	r20, 0x00	; 0
     b06:	6f e0       	ldi	r22, 0x0F	; 15
     b08:	ce 01       	movw	r24, r28
	
	// empty registers, turn all LEDs off
	clear();
     b0a:	00 df       	rcall	.-512    	; 0x90c <_ZN9MaxMatrix10setCommandEhh>
     b0c:	ce 01       	movw	r24, r28
	
	setIntensity(0x0f);    // the first 0x0f is the value you can set
     b0e:	c3 df       	rcall	.-122    	; 0xa96 <_ZN9MaxMatrix5clearEv>
     b10:	6f e0       	ldi	r22, 0x0F	; 15
}
     b12:	ce 01       	movw	r24, r28
     b14:	df 91       	pop	r29
	setCommand(max7219_reg_displayTest, 0x00); // no display test
	
	// empty registers, turn all LEDs off
	clear();
	
	setIntensity(0x0f);    // the first 0x0f is the value you can set
     b16:	cf 91       	pop	r28
     b18:	2a cf       	rjmp	.-428    	; 0x96e <_ZN9MaxMatrix12setIntensityEh>

00000b1a <_ZN9MaxMatrix6setDotEhhh>:
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
}

void MaxMatrix::setDot(byte col, byte row, byte value)
{
     b1a:	af 92       	push	r10
     b1c:	bf 92       	push	r11
     b1e:	cf 92       	push	r12
     b20:	df 92       	push	r13
     b22:	ef 92       	push	r14
     b24:	ff 92       	push	r15
     b26:	1f 93       	push	r17
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	ec 01       	movw	r28, r24
     b2e:	e6 2e       	mov	r14, r22
     b30:	f1 2c       	mov	r15, r1
    bitWrite(buffer[col], row, value);
     b32:	fc 01       	movw	r30, r24
     b34:	ee 0d       	add	r30, r14
     b36:	ff 1d       	adc	r31, r15
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	a0 e0       	ldi	r26, 0x00	; 0
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	04 c0       	rjmp	.+8      	; 0xb4a <_ZN9MaxMatrix6setDotEhhh+0x30>
     b42:	88 0f       	add	r24, r24
     b44:	99 1f       	adc	r25, r25
     b46:	aa 1f       	adc	r26, r26
     b48:	bb 1f       	adc	r27, r27
     b4a:	4a 95       	dec	r20
     b4c:	d2 f7       	brpl	.-12     	; 0xb42 <_ZN9MaxMatrix6setDotEhhh+0x28>
     b4e:	22 23       	and	r18, r18
     b50:	19 f0       	breq	.+6      	; 0xb58 <_ZN9MaxMatrix6setDotEhhh+0x3e>
     b52:	24 81       	ldd	r18, Z+4	; 0x04
     b54:	82 2b       	or	r24, r18
     b56:	03 c0       	rjmp	.+6      	; 0xb5e <_ZN9MaxMatrix6setDotEhhh+0x44>
     b58:	80 95       	com	r24
     b5a:	94 81       	ldd	r25, Z+4	; 0x04
     b5c:	89 23       	and	r24, r25
     b5e:	84 83       	std	Z+4, r24	; 0x04

	int n = col / 8;
     b60:	a6 2e       	mov	r10, r22
     b62:	a6 94       	lsr	r10
     b64:	a6 94       	lsr	r10
     b66:	a6 94       	lsr	r10
     b68:	b1 2c       	mov	r11, r1
     b6a:	16 2f       	mov	r17, r22
     b6c:	17 70       	andi	r17, 0x07	; 7
	int c = col % 8;
	digitalWrite(load, LOW);    
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	89 81       	ldd	r24, Y+1	; 0x01
     b72:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	for (int i=0; i<num; i++) 
     b76:	c1 2c       	mov	r12, r1
     b78:	d1 2c       	mov	r13, r1
	{
		if (i == n)
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     b7a:	1f 5f       	subi	r17, 0xFF	; 255
			shiftOut(data, clock, MSBFIRST, buffer[col]);
     b7c:	ec 0e       	add	r14, r28
     b7e:	fd 1e       	adc	r15, r29
     b80:	84 e0       	ldi	r24, 0x04	; 4
     b82:	e8 0e       	add	r14, r24
     b84:	f1 1c       	adc	r15, r1
    bitWrite(buffer[col], row, value);

	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     b86:	8b 81       	ldd	r24, Y+3	; 0x03
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	c8 16       	cp	r12, r24
     b8c:	d9 06       	cpc	r13, r25
     b8e:	e4 f4       	brge	.+56     	; 0xbc8 <_ZN9MaxMatrix6setDotEhhh+0xae>
	{
		if (i == n)
     b90:	ca 14       	cp	r12, r10
     b92:	db 04       	cpc	r13, r11
     b94:	49 f4       	brne	.+18     	; 0xba8 <_ZN9MaxMatrix6setDotEhhh+0x8e>
		{
			shiftOut(data, clock, MSBFIRST, c + 1);
     b96:	21 2f       	mov	r18, r17
     b98:	41 e0       	ldi	r20, 0x01	; 1
     b9a:	6a 81       	ldd	r22, Y+2	; 0x02
     b9c:	88 81       	ld	r24, Y
     b9e:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
			shiftOut(data, clock, MSBFIRST, buffer[col]);
     ba2:	f7 01       	movw	r30, r14
     ba4:	20 81       	ld	r18, Z
     ba6:	07 c0       	rjmp	.+14     	; 0xbb6 <_ZN9MaxMatrix6setDotEhhh+0x9c>
		}
		else
		{
			shiftOut(data, clock, MSBFIRST, 0);
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	41 e0       	ldi	r20, 0x01	; 1
     bac:	6a 81       	ldd	r22, Y+2	; 0x02
     bae:	88 81       	ld	r24, Y
     bb0:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
			shiftOut(data, clock, MSBFIRST, 0);
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	41 e0       	ldi	r20, 0x01	; 1
     bb8:	6a 81       	ldd	r22, Y+2	; 0x02
     bba:	88 81       	ld	r24, Y
     bbc:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
    bitWrite(buffer[col], row, value);

	int n = col / 8;
	int c = col % 8;
	digitalWrite(load, LOW);    
	for (int i=0; i<num; i++) 
     bc0:	ff ef       	ldi	r31, 0xFF	; 255
     bc2:	cf 1a       	sub	r12, r31
     bc4:	df 0a       	sbc	r13, r31
     bc6:	df cf       	rjmp	.-66     	; 0xb86 <_ZN9MaxMatrix6setDotEhhh+0x6c>
		{
			shiftOut(data, clock, MSBFIRST, 0);
			shiftOut(data, clock, MSBFIRST, 0);
		}
	}
	digitalWrite(load, LOW);
     bc8:	60 e0       	ldi	r22, 0x00	; 0
     bca:	89 81       	ldd	r24, Y+1	; 0x01
     bcc:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
	digitalWrite(load, HIGH);
     bd0:	61 e0       	ldi	r22, 0x01	; 1
     bd2:	89 81       	ldd	r24, Y+1	; 0x01
}
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	ff 90       	pop	r15
     bdc:	ef 90       	pop	r14
     bde:	df 90       	pop	r13
     be0:	cf 90       	pop	r12
     be2:	bf 90       	pop	r11
     be4:	af 90       	pop	r10
			shiftOut(data, clock, MSBFIRST, 0);
			shiftOut(data, clock, MSBFIRST, 0);
		}
	}
	digitalWrite(load, LOW);
	digitalWrite(load, HIGH);
     be6:	0c 94 09 17 	jmp	0x2e12	; 0x2e12 <digitalWrite>

00000bea <_ZN9MaxMatrix11writeSpriteEiiPKh>:
}

void MaxMatrix::writeSprite(int x, int y, const byte* sprite)
{
     bea:	2f 92       	push	r2
     bec:	3f 92       	push	r3
     bee:	4f 92       	push	r4
     bf0:	5f 92       	push	r5
     bf2:	6f 92       	push	r6
     bf4:	7f 92       	push	r7
     bf6:	8f 92       	push	r8
     bf8:	9f 92       	push	r9
     bfa:	af 92       	push	r10
     bfc:	bf 92       	push	r11
     bfe:	cf 92       	push	r12
     c00:	df 92       	push	r13
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	4c 01       	movw	r8, r24
     c10:	3a 01       	movw	r6, r20
     c12:	89 01       	movw	r16, r18
	int w = sprite[0];
     c14:	f9 01       	movw	r30, r18
     c16:	20 80       	ld	r2, Z
     c18:	31 2c       	mov	r3, r1
	int h = sprite[1];
     c1a:	41 80       	ldd	r4, Z+1	; 0x01
     c1c:	51 2c       	mov	r5, r1
     c1e:	eb 01       	movw	r28, r22
	
	if (h == 8 && y == 0)
     c20:	79 01       	movw	r14, r18
     c22:	f8 e0       	ldi	r31, 0x08	; 8
     c24:	4f 16       	cp	r4, r31
     c26:	51 04       	cpc	r5, r1
     c28:	29 f5       	brne	.+74     	; 0xc74 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x8a>
     c2a:	45 2b       	or	r20, r21
     c2c:	19 f5       	brne	.+70     	; 0xc74 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x8a>
		for (int i=0; i<w; i++)
     c2e:	c7 01       	movw	r24, r14
     c30:	80 1b       	sub	r24, r16
     c32:	91 0b       	sbc	r25, r17
     c34:	82 15       	cp	r24, r2
     c36:	93 05       	cpc	r25, r3
     c38:	d4 f5       	brge	.+116    	; 0xcae <_ZN9MaxMatrix11writeSpriteEiiPKh+0xc4>
		{
			int c = x + i;
			if (c>=0 && c<80)
     c3a:	c0 35       	cpi	r28, 0x50	; 80
     c3c:	d1 05       	cpc	r29, r1
     c3e:	28 f4       	brcc	.+10     	; 0xc4a <_ZN9MaxMatrix11writeSpriteEiiPKh+0x60>
				setColumn(c, sprite[i+2]);
     c40:	f7 01       	movw	r30, r14
     c42:	42 81       	ldd	r20, Z+2	; 0x02
     c44:	6c 2f       	mov	r22, r28
     c46:	c4 01       	movw	r24, r8
     c48:	95 de       	rcall	.-726    	; 0x974 <_ZN9MaxMatrix9setColumnEhh>
     c4a:	21 96       	adiw	r28, 0x01	; 1
     c4c:	ff ef       	ldi	r31, 0xFF	; 255
     c4e:	ef 1a       	sub	r14, r31
     c50:	ff 0a       	sbc	r15, r31
{
	int w = sprite[0];
	int h = sprite[1];
	
	if (h == 8 && y == 0)
		for (int i=0; i<w; i++)
     c52:	ed cf       	rjmp	.-38     	; 0xc2e <_ZN9MaxMatrix11writeSpriteEiiPKh+0x44>
		for (int i=0; i<w; i++)
			for (int j=0; j<h; j++)
			{
				int c = x + i;
				int r = y + j;
				if (c>=0 && c<80 && r>=0 && r<8)
     c54:	c0 35       	cpi	r28, 0x50	; 80
     c56:	d1 05       	cpc	r29, r1
     c58:	b8 f0       	brcs	.+46     	; 0xc88 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x9e>
			if (c>=0 && c<80)
				setColumn(c, sprite[i+2]);
		}
	else
		for (int i=0; i<w; i++)
			for (int j=0; j<h; j++)
     c5a:	ff ef       	ldi	r31, 0xFF	; 255
     c5c:	af 1a       	sub	r10, r31
     c5e:	bf 0a       	sbc	r11, r31
     c60:	8f ef       	ldi	r24, 0xFF	; 255
     c62:	c8 1a       	sub	r12, r24
     c64:	d8 0a       	sbc	r13, r24
     c66:	a4 14       	cp	r10, r4
     c68:	b5 04       	cpc	r11, r5
     c6a:	a4 f3       	brlt	.-24     	; 0xc54 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x6a>
     c6c:	ef ef       	ldi	r30, 0xFF	; 255
     c6e:	ee 1a       	sub	r14, r30
     c70:	fe 0a       	sbc	r15, r30
     c72:	21 96       	adiw	r28, 0x01	; 1
			int c = x + i;
			if (c>=0 && c<80)
				setColumn(c, sprite[i+2]);
		}
	else
		for (int i=0; i<w; i++)
     c74:	c7 01       	movw	r24, r14
     c76:	80 1b       	sub	r24, r16
     c78:	91 0b       	sbc	r25, r17
     c7a:	82 15       	cp	r24, r2
     c7c:	93 05       	cpc	r25, r3
     c7e:	bc f4       	brge	.+46     	; 0xcae <_ZN9MaxMatrix11writeSpriteEiiPKh+0xc4>
     c80:	63 01       	movw	r12, r6
     c82:	a1 2c       	mov	r10, r1
     c84:	b1 2c       	mov	r11, r1
     c86:	ef cf       	rjmp	.-34     	; 0xc66 <_ZN9MaxMatrix11writeSpriteEiiPKh+0x7c>
			for (int j=0; j<h; j++)
			{
				int c = x + i;
				int r = y + j;
				if (c>=0 && c<80 && r>=0 && r<8)
     c88:	88 e0       	ldi	r24, 0x08	; 8
     c8a:	c8 16       	cp	r12, r24
     c8c:	d1 04       	cpc	r13, r1
     c8e:	28 f7       	brcc	.-54     	; 0xc5a <_ZN9MaxMatrix11writeSpriteEiiPKh+0x70>
					setDot(c, r, bitRead(sprite[i+2], j));
     c90:	f7 01       	movw	r30, r14
     c92:	22 81       	ldd	r18, Z+2	; 0x02
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	0a 2c       	mov	r0, r10
     c98:	02 c0       	rjmp	.+4      	; 0xc9e <_ZN9MaxMatrix11writeSpriteEiiPKh+0xb4>
     c9a:	35 95       	asr	r19
     c9c:	27 95       	ror	r18
     c9e:	0a 94       	dec	r0
     ca0:	e2 f7       	brpl	.-8      	; 0xc9a <_ZN9MaxMatrix11writeSpriteEiiPKh+0xb0>
     ca2:	21 70       	andi	r18, 0x01	; 1
     ca4:	4c 2d       	mov	r20, r12
     ca6:	6c 2f       	mov	r22, r28
     ca8:	c4 01       	movw	r24, r8
     caa:	37 df       	rcall	.-402    	; 0xb1a <_ZN9MaxMatrix6setDotEhhh>
     cac:	d6 cf       	rjmp	.-84     	; 0xc5a <_ZN9MaxMatrix11writeSpriteEiiPKh+0x70>
			}
}
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	1f 91       	pop	r17
     cb4:	0f 91       	pop	r16
     cb6:	ff 90       	pop	r15
     cb8:	ef 90       	pop	r14
     cba:	df 90       	pop	r13
     cbc:	cf 90       	pop	r12
     cbe:	bf 90       	pop	r11
     cc0:	af 90       	pop	r10
     cc2:	9f 90       	pop	r9
     cc4:	8f 90       	pop	r8
     cc6:	7f 90       	pop	r7
     cc8:	6f 90       	pop	r6
     cca:	5f 90       	pop	r5
     ccc:	4f 90       	pop	r4
     cce:	3f 90       	pop	r3
     cd0:	2f 90       	pop	r2
     cd2:	08 95       	ret

00000cd4 <_ZN9MaxMatrix6reloadEv>:

void MaxMatrix::reload()
{
     cd4:	af 92       	push	r10
     cd6:	bf 92       	push	r11
     cd8:	cf 92       	push	r12
     cda:	df 92       	push	r13
     cdc:	ef 92       	push	r14
     cde:	ff 92       	push	r15
     ce0:	1f 93       	push	r17
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	ec 01       	movw	r28, r24
     ce8:	7c 01       	movw	r14, r24
     cea:	11 e0       	ldi	r17, 0x01	; 1
	for (int i=0; i<8; i++)
	{
		int col = i;
		digitalWrite(load, LOW);    
     cec:	60 e0       	ldi	r22, 0x00	; 0
     cee:	89 81       	ldd	r24, Y+1	; 0x01
     cf0:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
     cf4:	67 01       	movw	r12, r14
		for (int j=0; j<num; j++) 
     cf6:	a1 2c       	mov	r10, r1
     cf8:	b1 2c       	mov	r11, r1
     cfa:	8b 81       	ldd	r24, Y+3	; 0x03
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	a8 16       	cp	r10, r24
     d00:	b9 06       	cpc	r11, r25
     d02:	a4 f4       	brge	.+40     	; 0xd2c <_ZN9MaxMatrix6reloadEv+0x58>
		{
			shiftOut(data, clock, MSBFIRST, i + 1);
     d04:	21 2f       	mov	r18, r17
     d06:	41 e0       	ldi	r20, 0x01	; 1
     d08:	6a 81       	ldd	r22, Y+2	; 0x02
     d0a:	88 81       	ld	r24, Y
     d0c:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
			shiftOut(data, clock, MSBFIRST, buffer[col]);
     d10:	f6 01       	movw	r30, r12
     d12:	24 81       	ldd	r18, Z+4	; 0x04
     d14:	41 e0       	ldi	r20, 0x01	; 1
     d16:	6a 81       	ldd	r22, Y+2	; 0x02
     d18:	88 81       	ld	r24, Y
     d1a:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <shiftOut>
{
	for (int i=0; i<8; i++)
	{
		int col = i;
		digitalWrite(load, LOW);    
		for (int j=0; j<num; j++) 
     d1e:	ff ef       	ldi	r31, 0xFF	; 255
     d20:	af 1a       	sub	r10, r31
     d22:	bf 0a       	sbc	r11, r31
     d24:	88 e0       	ldi	r24, 0x08	; 8
     d26:	c8 0e       	add	r12, r24
     d28:	d1 1c       	adc	r13, r1
     d2a:	e7 cf       	rjmp	.-50     	; 0xcfa <_ZN9MaxMatrix6reloadEv+0x26>
		{
			shiftOut(data, clock, MSBFIRST, i + 1);
			shiftOut(data, clock, MSBFIRST, buffer[col]);
			col += 8;
		}
		digitalWrite(load, LOW);
     d2c:	60 e0       	ldi	r22, 0x00	; 0
     d2e:	89 81       	ldd	r24, Y+1	; 0x01
     d30:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
		digitalWrite(load, HIGH);
     d34:	61 e0       	ldi	r22, 0x01	; 1
     d36:	89 81       	ldd	r24, Y+1	; 0x01
     d38:	0e 94 09 17 	call	0x2e12	; 0x2e12 <digitalWrite>
     d3c:	ef ef       	ldi	r30, 0xFF	; 255
     d3e:	ee 1a       	sub	r14, r30
     d40:	fe 0a       	sbc	r15, r30
     d42:	1f 5f       	subi	r17, 0xFF	; 255
			}
}

void MaxMatrix::reload()
{
	for (int i=0; i<8; i++)
     d44:	19 30       	cpi	r17, 0x09	; 9
     d46:	91 f6       	brne	.-92     	; 0xcec <_ZN9MaxMatrix6reloadEv+0x18>
			col += 8;
		}
		digitalWrite(load, LOW);
		digitalWrite(load, HIGH);
	}
}
     d48:	df 91       	pop	r29
     d4a:	cf 91       	pop	r28
     d4c:	1f 91       	pop	r17
     d4e:	ff 90       	pop	r15
     d50:	ef 90       	pop	r14
     d52:	df 90       	pop	r13
     d54:	cf 90       	pop	r12
     d56:	bf 90       	pop	r11
     d58:	af 90       	pop	r10
     d5a:	08 95       	ret

00000d5c <_ZN9MaxMatrix9shiftLeftEbb>:

void MaxMatrix::shiftLeft(bool rotate, bool fill_zero)
{
	byte old = buffer[0];
     d5c:	fc 01       	movw	r30, r24
     d5e:	24 81       	ldd	r18, Z+4	; 0x04
     d60:	34 96       	adiw	r30, 0x04	; 4
     d62:	dc 01       	movw	r26, r24
     d64:	ac 5a       	subi	r26, 0xAC	; 172
     d66:	bf 4f       	sbci	r27, 0xFF	; 255
	int i;
	for (i=0; i<80; i++)
		buffer[i] = buffer[i+1];
     d68:	31 81       	ldd	r19, Z+1	; 0x01
     d6a:	31 93       	st	Z+, r19

void MaxMatrix::shiftLeft(bool rotate, bool fill_zero)
{
	byte old = buffer[0];
	int i;
	for (i=0; i<80; i++)
     d6c:	ea 17       	cp	r30, r26
     d6e:	fb 07       	cpc	r31, r27
     d70:	d9 f7       	brne	.-10     	; 0xd68 <_ZN9MaxMatrix9shiftLeftEbb+0xc>
		buffer[i] = buffer[i+1];
	if (rotate) buffer[num*8-1] = old;
     d72:	66 23       	and	r22, r22
     d74:	49 f0       	breq	.+18     	; 0xd88 <_ZN9MaxMatrix9shiftLeftEbb+0x2c>
     d76:	fc 01       	movw	r30, r24
     d78:	33 81       	ldd	r19, Z+3	; 0x03
     d7a:	48 e0       	ldi	r20, 0x08	; 8
     d7c:	34 9f       	mul	r19, r20
     d7e:	e0 0d       	add	r30, r0
     d80:	f1 1d       	adc	r31, r1
     d82:	11 24       	eor	r1, r1
     d84:	23 83       	std	Z+3, r18	; 0x03
     d86:	0a c0       	rjmp	.+20     	; 0xd9c <_ZN9MaxMatrix9shiftLeftEbb+0x40>
	else if (fill_zero) buffer[num*8-1] = 0;
     d88:	44 23       	and	r20, r20
     d8a:	41 f0       	breq	.+16     	; 0xd9c <_ZN9MaxMatrix9shiftLeftEbb+0x40>
     d8c:	fc 01       	movw	r30, r24
     d8e:	23 81       	ldd	r18, Z+3	; 0x03
     d90:	38 e0       	ldi	r19, 0x08	; 8
     d92:	23 9f       	mul	r18, r19
     d94:	e0 0d       	add	r30, r0
     d96:	f1 1d       	adc	r31, r1
     d98:	11 24       	eor	r1, r1
     d9a:	13 82       	std	Z+3, r1	; 0x03
	
	reload();
     d9c:	9b cf       	rjmp	.-202    	; 0xcd4 <_ZN9MaxMatrix6reloadEv>

00000d9e <_ZN4MQTT15readTemperatureEv>:
MQTT::~MQTT()
{
	delete server;
	delete espClient;
	delete client;
} //~MQTT
     d9e:	86 e3       	ldi	r24, 0x36	; 54
     da0:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <analogRead>
     da4:	bc 01       	movw	r22, r24
     da6:	99 0f       	add	r25, r25
     da8:	88 0b       	sbc	r24, r24
     daa:	99 0b       	sbc	r25, r25
     dac:	53 d7       	rcall	.+3750   	; 0x1c54 <__floatsisf>
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	40 ea       	ldi	r20, 0xA0	; 160
     db4:	50 e4       	ldi	r21, 0x40	; 64
     db6:	da d7       	rcall	.+4020   	; 0x1d6c <__mulsf3>
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	30 ec       	ldi	r19, 0xC0	; 192
     dbc:	4f e7       	ldi	r20, 0x7F	; 127
     dbe:	54 e4       	ldi	r21, 0x44	; 68
     dc0:	df d6       	rcall	.+3518   	; 0x1b80 <__divsf3>
     dc2:	2d ec       	ldi	r18, 0xCD	; 205
     dc4:	3c ec       	ldi	r19, 0xCC	; 204
     dc6:	4c ec       	ldi	r20, 0xCC	; 204
     dc8:	5e e3       	ldi	r21, 0x3E	; 62
     dca:	75 d6       	rcall	.+3306   	; 0x1ab6 <__subsf3>
     dcc:	2a e0       	ldi	r18, 0x0A	; 10
     dce:	37 ed       	ldi	r19, 0xD7	; 215
     dd0:	43 ea       	ldi	r20, 0xA3	; 163
     dd2:	5c e3       	ldi	r21, 0x3C	; 60
     dd4:	d5 c6       	rjmp	.+3498   	; 0x1b80 <__divsf3>
     dd6:	08 95       	ret

00000dd8 <_ZN4MQTT15sendTemperatureEv>:
     dd8:	8f 92       	push	r8
     dda:	9f 92       	push	r9
     ddc:	af 92       	push	r10
     dde:	bf 92       	push	r11
     de0:	cf 92       	push	r12
     de2:	df 92       	push	r13
     de4:	ef 92       	push	r14
     de6:	ff 92       	push	r15
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	cf 93       	push	r28
     dee:	df 93       	push	r29
     df0:	cd b7       	in	r28, 0x3d	; 61
     df2:	de b7       	in	r29, 0x3e	; 62
     df4:	62 97       	sbiw	r28, 0x12	; 18
     df6:	0f b6       	in	r0, 0x3f	; 63
     df8:	f8 94       	cli
     dfa:	de bf       	out	0x3e, r29	; 62
     dfc:	0f be       	out	0x3f, r0	; 63
     dfe:	cd bf       	out	0x3d, r28	; 61
     e00:	8c 01       	movw	r16, r24
     e02:	cd b6       	in	r12, 0x3d	; 61
     e04:	de b6       	in	r13, 0x3e	; 62
     e06:	cb df       	rcall	.-106    	; 0xd9e <_ZN4MQTT15readTemperatureEv>
     e08:	4b 01       	movw	r8, r22
     e0a:	5c 01       	movw	r10, r24
     e0c:	66 e3       	ldi	r22, 0x36	; 54
     e0e:	72 e0       	ldi	r23, 0x02	; 2
     e10:	86 ef       	ldi	r24, 0xF6	; 246
     e12:	94 e0       	ldi	r25, 0x04	; 4
     e14:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
     e18:	c8 01       	movw	r24, r16
     e1a:	c1 df       	rcall	.-126    	; 0xd9e <_ZN4MQTT15readTemperatureEv>
     e1c:	ab 01       	movw	r20, r22
     e1e:	bc 01       	movw	r22, r24
     e20:	22 e0       	ldi	r18, 0x02	; 2
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	86 ef       	ldi	r24, 0xF6	; 246
     e26:	94 e0       	ldi	r25, 0x04	; 4
     e28:	0e 94 67 14 	call	0x28ce	; 0x28ce <_ZN5Print7printlnEdi>
     e2c:	22 e0       	ldi	r18, 0x02	; 2
     e2e:	b5 01       	movw	r22, r10
     e30:	a4 01       	movw	r20, r8
     e32:	ce 01       	movw	r24, r28
     e34:	07 96       	adiw	r24, 0x07	; 7
     e36:	0e 94 3c 18 	call	0x3078	; 0x3078 <_ZN6StringC1Efh>
     e3a:	66 e3       	ldi	r22, 0x36	; 54
     e3c:	72 e0       	ldi	r23, 0x02	; 2
     e3e:	ce 01       	movw	r24, r28
     e40:	01 96       	adiw	r24, 0x01	; 1
     e42:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
     e46:	be 01       	movw	r22, r28
     e48:	69 5f       	subi	r22, 0xF9	; 249
     e4a:	7f 4f       	sbci	r23, 0xFF	; 255
     e4c:	ce 01       	movw	r24, r28
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	0e 94 ab 18 	call	0x3156	; 0x3156 <_ZplRK15StringSumHelperRK6String>
     e54:	bc 01       	movw	r22, r24
     e56:	ce 01       	movw	r24, r28
     e58:	0d 96       	adiw	r24, 0x0d	; 13
     e5a:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <_ZN6StringC1ERKS_>
     e5e:	ce 01       	movw	r24, r28
     e60:	01 96       	adiw	r24, 0x01	; 1
     e62:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
     e66:	ce 01       	movw	r24, r28
     e68:	07 96       	adiw	r24, 0x07	; 7
     e6a:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
     e6e:	49 89       	ldd	r20, Y+17	; 0x11
     e70:	5a 89       	ldd	r21, Y+18	; 0x12
     e72:	4f 5f       	subi	r20, 0xFF	; 255
     e74:	5f 4f       	sbci	r21, 0xFF	; 255
     e76:	8d b7       	in	r24, 0x3d	; 61
     e78:	9e b7       	in	r25, 0x3e	; 62
     e7a:	84 1b       	sub	r24, r20
     e7c:	95 0b       	sbc	r25, r21
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	9e bf       	out	0x3e, r25	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	8d bf       	out	0x3d, r24	; 61
     e88:	ed b7       	in	r30, 0x3d	; 61
     e8a:	fe b7       	in	r31, 0x3e	; 62
     e8c:	31 96       	adiw	r30, 0x01	; 1
     e8e:	7f 01       	movw	r14, r30
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	bf 01       	movw	r22, r30
     e96:	ce 01       	movw	r24, r28
     e98:	0d 96       	adiw	r24, 0x0d	; 13
     e9a:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZNK6String8getBytesEPhjj>
     e9e:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <_ZN4MQTT24TEMPERATURE_SENSOR_TOPICE>
     ea2:	70 91 0b 02 	lds	r23, 0x020B	; 0x80020b <_ZN4MQTT24TEMPERATURE_SENSOR_TOPICE+0x1>
     ea6:	a7 01       	movw	r20, r14
     ea8:	f8 01       	movw	r30, r16
     eaa:	84 81       	ldd	r24, Z+4	; 0x04
     eac:	95 81       	ldd	r25, Z+5	; 0x05
     eae:	0e 94 7f 21 	call	0x42fe	; 0x42fe <_ZN12PubSubClient7publishEPKcS1_>
     eb2:	ce 01       	movw	r24, r28
     eb4:	0d 96       	adiw	r24, 0x0d	; 13
     eb6:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
     eba:	0f b6       	in	r0, 0x3f	; 63
     ebc:	f8 94       	cli
     ebe:	de be       	out	0x3e, r13	; 62
     ec0:	0f be       	out	0x3f, r0	; 63
     ec2:	cd be       	out	0x3d, r12	; 61
     ec4:	62 96       	adiw	r28, 0x12	; 18
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	de bf       	out	0x3e, r29	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	cd bf       	out	0x3d, r28	; 61
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	1f 91       	pop	r17
     ed6:	0f 91       	pop	r16
     ed8:	ff 90       	pop	r15
     eda:	ef 90       	pop	r14
     edc:	df 90       	pop	r13
     ede:	cf 90       	pop	r12
     ee0:	bf 90       	pop	r11
     ee2:	af 90       	pop	r10
     ee4:	9f 90       	pop	r9
     ee6:	8f 90       	pop	r8
     ee8:	08 95       	ret

00000eea <_ZN4MQTT14sendLampStatusEv>:
     eea:	cf 92       	push	r12
     eec:	df 92       	push	r13
     eee:	ef 92       	push	r14
     ef0:	ff 92       	push	r15
     ef2:	0f 93       	push	r16
     ef4:	1f 93       	push	r17
     ef6:	cf 93       	push	r28
     ef8:	df 93       	push	r29
     efa:	cd b7       	in	r28, 0x3d	; 61
     efc:	de b7       	in	r29, 0x3e	; 62
     efe:	62 97       	sbiw	r28, 0x12	; 18
     f00:	0f b6       	in	r0, 0x3f	; 63
     f02:	f8 94       	cli
     f04:	de bf       	out	0x3e, r29	; 62
     f06:	0f be       	out	0x3f, r0	; 63
     f08:	cd bf       	out	0x3d, r28	; 61
     f0a:	7c 01       	movw	r14, r24
     f0c:	0d b7       	in	r16, 0x3d	; 61
     f0e:	1e b7       	in	r17, 0x3e	; 62
     f10:	60 e5       	ldi	r22, 0x50	; 80
     f12:	72 e0       	ldi	r23, 0x02	; 2
     f14:	86 ef       	ldi	r24, 0xF6	; 246
     f16:	94 e0       	ldi	r25, 0x04	; 4
     f18:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
     f1c:	61 b1       	in	r22, 0x01	; 1
     f1e:	61 70       	andi	r22, 0x01	; 1
     f20:	4a e0       	ldi	r20, 0x0A	; 10
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	86 ef       	ldi	r24, 0xF6	; 246
     f28:	94 e0       	ldi	r25, 0x04	; 4
     f2a:	0e 94 78 13 	call	0x26f0	; 0x26f0 <_ZN5Print7printlnEii>
     f2e:	10 99       	sbic	0x02, 0	; 2
     f30:	03 c0       	rjmp	.+6      	; 0xf38 <_ZN4MQTT14sendLampStatusEv+0x4e>
     f32:	6a e4       	ldi	r22, 0x4A	; 74
     f34:	72 e0       	ldi	r23, 0x02	; 2
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <_ZN4MQTT14sendLampStatusEv+0x52>
     f38:	65 e4       	ldi	r22, 0x45	; 69
     f3a:	72 e0       	ldi	r23, 0x02	; 2
     f3c:	ce 01       	movw	r24, r28
     f3e:	07 96       	adiw	r24, 0x07	; 7
     f40:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
     f44:	60 e5       	ldi	r22, 0x50	; 80
     f46:	72 e0       	ldi	r23, 0x02	; 2
     f48:	ce 01       	movw	r24, r28
     f4a:	01 96       	adiw	r24, 0x01	; 1
     f4c:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
     f50:	be 01       	movw	r22, r28
     f52:	69 5f       	subi	r22, 0xF9	; 249
     f54:	7f 4f       	sbci	r23, 0xFF	; 255
     f56:	ce 01       	movw	r24, r28
     f58:	01 96       	adiw	r24, 0x01	; 1
     f5a:	0e 94 ab 18 	call	0x3156	; 0x3156 <_ZplRK15StringSumHelperRK6String>
     f5e:	bc 01       	movw	r22, r24
     f60:	ce 01       	movw	r24, r28
     f62:	0d 96       	adiw	r24, 0x0d	; 13
     f64:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <_ZN6StringC1ERKS_>
     f68:	ce 01       	movw	r24, r28
     f6a:	01 96       	adiw	r24, 0x01	; 1
     f6c:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
     f70:	ce 01       	movw	r24, r28
     f72:	07 96       	adiw	r24, 0x07	; 7
     f74:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
     f78:	49 89       	ldd	r20, Y+17	; 0x11
     f7a:	5a 89       	ldd	r21, Y+18	; 0x12
     f7c:	4f 5f       	subi	r20, 0xFF	; 255
     f7e:	5f 4f       	sbci	r21, 0xFF	; 255
     f80:	8d b7       	in	r24, 0x3d	; 61
     f82:	9e b7       	in	r25, 0x3e	; 62
     f84:	84 1b       	sub	r24, r20
     f86:	95 0b       	sbc	r25, r21
     f88:	0f b6       	in	r0, 0x3f	; 63
     f8a:	f8 94       	cli
     f8c:	9e bf       	out	0x3e, r25	; 62
     f8e:	0f be       	out	0x3f, r0	; 63
     f90:	8d bf       	out	0x3d, r24	; 61
     f92:	ed b7       	in	r30, 0x3d	; 61
     f94:	fe b7       	in	r31, 0x3e	; 62
     f96:	31 96       	adiw	r30, 0x01	; 1
     f98:	6f 01       	movw	r12, r30
     f9a:	20 e0       	ldi	r18, 0x00	; 0
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	bf 01       	movw	r22, r30
     fa0:	ce 01       	movw	r24, r28
     fa2:	0d 96       	adiw	r24, 0x0d	; 13
     fa4:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZNK6String8getBytesEPhjj>
     fa8:	60 91 0c 02 	lds	r22, 0x020C	; 0x80020c <_ZN4MQTT17LAMP_STATUC_TOPICE>
     fac:	70 91 0d 02 	lds	r23, 0x020D	; 0x80020d <_ZN4MQTT17LAMP_STATUC_TOPICE+0x1>
     fb0:	a6 01       	movw	r20, r12
     fb2:	f7 01       	movw	r30, r14
     fb4:	84 81       	ldd	r24, Z+4	; 0x04
     fb6:	95 81       	ldd	r25, Z+5	; 0x05
     fb8:	0e 94 7f 21 	call	0x42fe	; 0x42fe <_ZN12PubSubClient7publishEPKcS1_>
     fbc:	ce 01       	movw	r24, r28
     fbe:	0d 96       	adiw	r24, 0x0d	; 13
     fc0:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	1e bf       	out	0x3e, r17	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	0d bf       	out	0x3d, r16	; 61
     fce:	62 96       	adiw	r28, 0x12	; 18
     fd0:	0f b6       	in	r0, 0x3f	; 63
     fd2:	f8 94       	cli
     fd4:	de bf       	out	0x3e, r29	; 62
     fd6:	0f be       	out	0x3f, r0	; 63
     fd8:	cd bf       	out	0x3d, r28	; 61
     fda:	df 91       	pop	r29
     fdc:	cf 91       	pop	r28
     fde:	1f 91       	pop	r17
     fe0:	0f 91       	pop	r16
     fe2:	ff 90       	pop	r15
     fe4:	ef 90       	pop	r14
     fe6:	df 90       	pop	r13
     fe8:	cf 90       	pop	r12
     fea:	08 95       	ret

00000fec <_ZN4MQTT13sendPwmStatusEv>:
     fec:	cf 92       	push	r12
     fee:	df 92       	push	r13
     ff0:	ef 92       	push	r14
     ff2:	ff 92       	push	r15
     ff4:	0f 93       	push	r16
     ff6:	1f 93       	push	r17
     ff8:	cf 93       	push	r28
     ffa:	df 93       	push	r29
     ffc:	cd b7       	in	r28, 0x3d	; 61
     ffe:	de b7       	in	r29, 0x3e	; 62
    1000:	62 97       	sbiw	r28, 0x12	; 18
    1002:	0f b6       	in	r0, 0x3f	; 63
    1004:	f8 94       	cli
    1006:	de bf       	out	0x3e, r29	; 62
    1008:	0f be       	out	0x3f, r0	; 63
    100a:	cd bf       	out	0x3d, r28	; 61
    100c:	6c 01       	movw	r12, r24
    100e:	ed b6       	in	r14, 0x3d	; 61
    1010:	fe b6       	in	r15, 0x3e	; 62
    1012:	6e e5       	ldi	r22, 0x5E	; 94
    1014:	72 e0       	ldi	r23, 0x02	; 2
    1016:	86 ef       	ldi	r24, 0xF6	; 246
    1018:	94 e0       	ldi	r25, 0x04	; 4
    101a:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    101e:	60 91 d2 04 	lds	r22, 0x04D2	; 0x8004d2 <__data_end>
    1022:	70 91 d3 04 	lds	r23, 0x04D3	; 0x8004d3 <__data_end+0x1>
    1026:	4a e0       	ldi	r20, 0x0A	; 10
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	86 ef       	ldi	r24, 0xF6	; 246
    102c:	94 e0       	ldi	r25, 0x04	; 4
    102e:	0e 94 78 13 	call	0x26f0	; 0x26f0 <_ZN5Print7printlnEii>
    1032:	60 91 d2 04 	lds	r22, 0x04D2	; 0x8004d2 <__data_end>
    1036:	70 91 d3 04 	lds	r23, 0x04D3	; 0x8004d3 <__data_end+0x1>
    103a:	4a e0       	ldi	r20, 0x0A	; 10
    103c:	ce 01       	movw	r24, r28
    103e:	07 96       	adiw	r24, 0x07	; 7
    1040:	0e 94 11 18 	call	0x3022	; 0x3022 <_ZN6StringC1Eih>
    1044:	6b e6       	ldi	r22, 0x6B	; 107
    1046:	72 e0       	ldi	r23, 0x02	; 2
    1048:	ce 01       	movw	r24, r28
    104a:	01 96       	adiw	r24, 0x01	; 1
    104c:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    1050:	be 01       	movw	r22, r28
    1052:	69 5f       	subi	r22, 0xF9	; 249
    1054:	7f 4f       	sbci	r23, 0xFF	; 255
    1056:	ce 01       	movw	r24, r28
    1058:	01 96       	adiw	r24, 0x01	; 1
    105a:	0e 94 ab 18 	call	0x3156	; 0x3156 <_ZplRK15StringSumHelperRK6String>
    105e:	bc 01       	movw	r22, r24
    1060:	ce 01       	movw	r24, r28
    1062:	0d 96       	adiw	r24, 0x0d	; 13
    1064:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <_ZN6StringC1ERKS_>
    1068:	ce 01       	movw	r24, r28
    106a:	01 96       	adiw	r24, 0x01	; 1
    106c:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    1070:	ce 01       	movw	r24, r28
    1072:	07 96       	adiw	r24, 0x07	; 7
    1074:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    1078:	49 89       	ldd	r20, Y+17	; 0x11
    107a:	5a 89       	ldd	r21, Y+18	; 0x12
    107c:	4f 5f       	subi	r20, 0xFF	; 255
    107e:	5f 4f       	sbci	r21, 0xFF	; 255
    1080:	8d b7       	in	r24, 0x3d	; 61
    1082:	9e b7       	in	r25, 0x3e	; 62
    1084:	84 1b       	sub	r24, r20
    1086:	95 0b       	sbc	r25, r21
    1088:	0f b6       	in	r0, 0x3f	; 63
    108a:	f8 94       	cli
    108c:	9e bf       	out	0x3e, r25	; 62
    108e:	0f be       	out	0x3f, r0	; 63
    1090:	8d bf       	out	0x3d, r24	; 61
    1092:	0d b7       	in	r16, 0x3d	; 61
    1094:	1e b7       	in	r17, 0x3e	; 62
    1096:	0f 5f       	subi	r16, 0xFF	; 255
    1098:	1f 4f       	sbci	r17, 0xFF	; 255
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	b8 01       	movw	r22, r16
    10a0:	ce 01       	movw	r24, r28
    10a2:	0d 96       	adiw	r24, 0x0d	; 13
    10a4:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZNK6String8getBytesEPhjj>
    10a8:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <_ZN4MQTT16PWM_STATUS_TOPICE>
    10ac:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <_ZN4MQTT16PWM_STATUS_TOPICE+0x1>
    10b0:	a8 01       	movw	r20, r16
    10b2:	f6 01       	movw	r30, r12
    10b4:	84 81       	ldd	r24, Z+4	; 0x04
    10b6:	95 81       	ldd	r25, Z+5	; 0x05
    10b8:	0e 94 7f 21 	call	0x42fe	; 0x42fe <_ZN12PubSubClient7publishEPKcS1_>
    10bc:	ce 01       	movw	r24, r28
    10be:	0d 96       	adiw	r24, 0x0d	; 13
    10c0:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    10c4:	0f b6       	in	r0, 0x3f	; 63
    10c6:	f8 94       	cli
    10c8:	fe be       	out	0x3e, r15	; 62
    10ca:	0f be       	out	0x3f, r0	; 63
    10cc:	ed be       	out	0x3d, r14	; 61
    10ce:	62 96       	adiw	r28, 0x12	; 18
    10d0:	0f b6       	in	r0, 0x3f	; 63
    10d2:	f8 94       	cli
    10d4:	de bf       	out	0x3e, r29	; 62
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	cd bf       	out	0x3d, r28	; 61
    10da:	df 91       	pop	r29
    10dc:	cf 91       	pop	r28
    10de:	1f 91       	pop	r17
    10e0:	0f 91       	pop	r16
    10e2:	ff 90       	pop	r15
    10e4:	ef 90       	pop	r14
    10e6:	df 90       	pop	r13
    10e8:	cf 90       	pop	r12
    10ea:	08 95       	ret

000010ec <_ZN4MQTT20sendScrollTextStatusEv>:
    10ec:	cf 92       	push	r12
    10ee:	df 92       	push	r13
    10f0:	ef 92       	push	r14
    10f2:	ff 92       	push	r15
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
    1100:	62 97       	sbiw	r28, 0x12	; 18
    1102:	0f b6       	in	r0, 0x3f	; 63
    1104:	f8 94       	cli
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	0f be       	out	0x3f, r0	; 63
    110a:	cd bf       	out	0x3d, r28	; 61
    110c:	7c 01       	movw	r14, r24
    110e:	0d b7       	in	r16, 0x3d	; 61
    1110:	1e b7       	in	r17, 0x3e	; 62
    1112:	62 e7       	ldi	r22, 0x72	; 114
    1114:	72 e0       	ldi	r23, 0x02	; 2
    1116:	86 ef       	ldi	r24, 0xF6	; 246
    1118:	94 e0       	ldi	r25, 0x04	; 4
    111a:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    111e:	60 91 ea 04 	lds	r22, 0x04EA	; 0x8004ea <_ZN10ScrollText6enableE>
    1122:	70 e0       	ldi	r23, 0x00	; 0
    1124:	4a e0       	ldi	r20, 0x0A	; 10
    1126:	ce 01       	movw	r24, r28
    1128:	01 96       	adiw	r24, 0x01	; 1
    112a:	0e 94 11 18 	call	0x3022	; 0x3022 <_ZN6StringC1Eih>
    112e:	64 ee       	ldi	r22, 0xE4	; 228
    1130:	74 e0       	ldi	r23, 0x04	; 4
    1132:	ce 01       	movw	r24, r28
    1134:	07 96       	adiw	r24, 0x07	; 7
    1136:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <_ZN6StringC1ERKS_>
    113a:	6f ec       	ldi	r22, 0xCF	; 207
    113c:	72 e0       	ldi	r23, 0x02	; 2
    113e:	ce 01       	movw	r24, r28
    1140:	07 96       	adiw	r24, 0x07	; 7
    1142:	0e 94 bc 18 	call	0x3178	; 0x3178 <_ZplRK15StringSumHelperPKc>
    1146:	be 01       	movw	r22, r28
    1148:	6f 5f       	subi	r22, 0xFF	; 255
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	0e 94 ab 18 	call	0x3156	; 0x3156 <_ZplRK15StringSumHelperRK6String>
    1150:	bc 01       	movw	r22, r24
    1152:	86 ef       	ldi	r24, 0xF6	; 246
    1154:	94 e0       	ldi	r25, 0x04	; 4
    1156:	0e 94 9e 12 	call	0x253c	; 0x253c <_ZN5Print7printlnERK6String>
    115a:	ce 01       	movw	r24, r28
    115c:	07 96       	adiw	r24, 0x07	; 7
    115e:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    1162:	ce 01       	movw	r24, r28
    1164:	01 96       	adiw	r24, 0x01	; 1
    1166:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    116a:	80 91 ea 04 	lds	r24, 0x04EA	; 0x8004ea <_ZN10ScrollText6enableE>
    116e:	81 11       	cpse	r24, r1
    1170:	03 c0       	rjmp	.+6      	; 0x1178 <_ZN4MQTT20sendScrollTextStatusEv+0x8c>
    1172:	6a e4       	ldi	r22, 0x4A	; 74
    1174:	72 e0       	ldi	r23, 0x02	; 2
    1176:	02 c0       	rjmp	.+4      	; 0x117c <_ZN4MQTT20sendScrollTextStatusEv+0x90>
    1178:	65 e4       	ldi	r22, 0x45	; 69
    117a:	72 e0       	ldi	r23, 0x02	; 2
    117c:	ce 01       	movw	r24, r28
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    1184:	60 e8       	ldi	r22, 0x80	; 128
    1186:	72 e0       	ldi	r23, 0x02	; 2
    1188:	ce 01       	movw	r24, r28
    118a:	07 96       	adiw	r24, 0x07	; 7
    118c:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    1190:	64 ee       	ldi	r22, 0xE4	; 228
    1192:	74 e0       	ldi	r23, 0x04	; 4
    1194:	ce 01       	movw	r24, r28
    1196:	07 96       	adiw	r24, 0x07	; 7
    1198:	0e 94 ab 18 	call	0x3156	; 0x3156 <_ZplRK15StringSumHelperRK6String>
    119c:	6f ec       	ldi	r22, 0xCF	; 207
    119e:	72 e0       	ldi	r23, 0x02	; 2
    11a0:	0e 94 bc 18 	call	0x3178	; 0x3178 <_ZplRK15StringSumHelperPKc>
    11a4:	be 01       	movw	r22, r28
    11a6:	6f 5f       	subi	r22, 0xFF	; 255
    11a8:	7f 4f       	sbci	r23, 0xFF	; 255
    11aa:	0e 94 ab 18 	call	0x3156	; 0x3156 <_ZplRK15StringSumHelperRK6String>
    11ae:	bc 01       	movw	r22, r24
    11b0:	ce 01       	movw	r24, r28
    11b2:	0d 96       	adiw	r24, 0x0d	; 13
    11b4:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <_ZN6StringC1ERKS_>
    11b8:	ce 01       	movw	r24, r28
    11ba:	07 96       	adiw	r24, 0x07	; 7
    11bc:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    11c0:	ce 01       	movw	r24, r28
    11c2:	01 96       	adiw	r24, 0x01	; 1
    11c4:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    11c8:	49 89       	ldd	r20, Y+17	; 0x11
    11ca:	5a 89       	ldd	r21, Y+18	; 0x12
    11cc:	4f 5f       	subi	r20, 0xFF	; 255
    11ce:	5f 4f       	sbci	r21, 0xFF	; 255
    11d0:	8d b7       	in	r24, 0x3d	; 61
    11d2:	9e b7       	in	r25, 0x3e	; 62
    11d4:	84 1b       	sub	r24, r20
    11d6:	95 0b       	sbc	r25, r21
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	f8 94       	cli
    11dc:	9e bf       	out	0x3e, r25	; 62
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	8d bf       	out	0x3d, r24	; 61
    11e2:	ed b7       	in	r30, 0x3d	; 61
    11e4:	fe b7       	in	r31, 0x3e	; 62
    11e6:	31 96       	adiw	r30, 0x01	; 1
    11e8:	6f 01       	movw	r12, r30
    11ea:	20 e0       	ldi	r18, 0x00	; 0
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	bf 01       	movw	r22, r30
    11f0:	ce 01       	movw	r24, r28
    11f2:	0d 96       	adiw	r24, 0x0d	; 13
    11f4:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZNK6String8getBytesEPhjj>
    11f8:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <_ZN4MQTT23SCROLLTEXT_STATUS_TOPICE>
    11fc:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <_ZN4MQTT23SCROLLTEXT_STATUS_TOPICE+0x1>
    1200:	a6 01       	movw	r20, r12
    1202:	f7 01       	movw	r30, r14
    1204:	84 81       	ldd	r24, Z+4	; 0x04
    1206:	95 81       	ldd	r25, Z+5	; 0x05
    1208:	0e 94 7f 21 	call	0x42fe	; 0x42fe <_ZN12PubSubClient7publishEPKcS1_>
    120c:	ce 01       	movw	r24, r28
    120e:	0d 96       	adiw	r24, 0x0d	; 13
    1210:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    1214:	0f b6       	in	r0, 0x3f	; 63
    1216:	f8 94       	cli
    1218:	1e bf       	out	0x3e, r17	; 62
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	0d bf       	out	0x3d, r16	; 61
    121e:	62 96       	adiw	r28, 0x12	; 18
    1220:	0f b6       	in	r0, 0x3f	; 63
    1222:	f8 94       	cli
    1224:	de bf       	out	0x3e, r29	; 62
    1226:	0f be       	out	0x3f, r0	; 63
    1228:	cd bf       	out	0x3d, r28	; 61
    122a:	df 91       	pop	r29
    122c:	cf 91       	pop	r28
    122e:	1f 91       	pop	r17
    1230:	0f 91       	pop	r16
    1232:	ff 90       	pop	r15
    1234:	ef 90       	pop	r14
    1236:	df 90       	pop	r13
    1238:	cf 90       	pop	r12
    123a:	08 95       	ret

0000123c <_ZN4MQTT13reconnectWifiEv>:
    123c:	cf 93       	push	r28
    123e:	df 93       	push	r29
    1240:	ec 01       	movw	r28, r24
    1242:	6e e8       	ldi	r22, 0x8E	; 142
    1244:	72 e0       	ldi	r23, 0x02	; 2
    1246:	86 ef       	ldi	r24, 0xF6	; 246
    1248:	94 e0       	ldi	r25, 0x04	; 4
    124a:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    124e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1250:	9f 85       	ldd	r25, Y+15	; 0x0f
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	e9 f0       	breq	.+58     	; 0x1290 <_ZN4MQTT13reconnectWifiEv+0x54>
    1256:	6e ea       	ldi	r22, 0xAE	; 174
    1258:	72 e0       	ldi	r23, 0x02	; 2
    125a:	86 ef       	ldi	r24, 0xF6	; 246
    125c:	94 e0       	ldi	r25, 0x04	; 4
    125e:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    1262:	61 ed       	ldi	r22, 0xD1	; 209
    1264:	72 e0       	ldi	r23, 0x02	; 2
    1266:	86 ef       	ldi	r24, 0xF6	; 246
    1268:	94 e0       	ldi	r25, 0x04	; 4
    126a:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    126e:	43 ee       	ldi	r20, 0xE3	; 227
    1270:	52 e0       	ldi	r21, 0x02	; 2
    1272:	61 ed       	ldi	r22, 0xD1	; 209
    1274:	72 e0       	ldi	r23, 0x02	; 2
    1276:	8f e3       	ldi	r24, 0x3F	; 63
    1278:	96 e0       	ldi	r25, 0x06	; 6
    127a:	0e 94 73 22 	call	0x44e6	; 0x44e6 <_ZN12WiFiEspClass5beginEPKcS1_>
    127e:	9f 87       	std	Y+15, r25	; 0x0f
    1280:	8e 87       	std	Y+14, r24	; 0x0e
    1282:	64 ef       	ldi	r22, 0xF4	; 244
    1284:	71 e0       	ldi	r23, 0x01	; 1
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    128e:	df cf       	rjmp	.-66     	; 0x124e <_ZN4MQTT13reconnectWifiEv+0x12>
    1290:	6e ee       	ldi	r22, 0xEE	; 238
    1292:	72 e0       	ldi	r23, 0x02	; 2
    1294:	86 ef       	ldi	r24, 0xF6	; 246
    1296:	94 e0       	ldi	r25, 0x04	; 4
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	0c 94 ae 12 	jmp	0x255c	; 0x255c <_ZN5Print7printlnEPKc>

000012a0 <_ZN4MQTT8InitWiFiEv>:
    12a0:	cf 93       	push	r28
    12a2:	df 93       	push	r29
    12a4:	ec 01       	movw	r28, r24
    12a6:	26 e0       	ldi	r18, 0x06	; 6
    12a8:	40 e0       	ldi	r20, 0x00	; 0
    12aa:	5b e4       	ldi	r21, 0x4B	; 75
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	83 e9       	ldi	r24, 0x93	; 147
    12b2:	95 e0       	ldi	r25, 0x05	; 5
    12b4:	c5 d6       	rcall	.+3466   	; 0x2040 <_ZN14HardwareSerial5beginEmh>
    12b6:	83 e9       	ldi	r24, 0x93	; 147
    12b8:	95 e0       	ldi	r25, 0x05	; 5
    12ba:	0e 94 60 22 	call	0x44c0	; 0x44c0 <_ZN12WiFiEspClass4initEP6Stream>
    12be:	8f e3       	ldi	r24, 0x3F	; 63
    12c0:	96 e0       	ldi	r25, 0x06	; 6
    12c2:	0e 94 81 22 	call	0x4502	; 0x4502 <_ZN12WiFiEspClass6statusEv>
    12c6:	8f 3f       	cpi	r24, 0xFF	; 255
    12c8:	39 f4       	brne	.+14     	; 0x12d8 <_ZN4MQTT8InitWiFiEv+0x38>
    12ca:	66 e0       	ldi	r22, 0x06	; 6
    12cc:	73 e0       	ldi	r23, 0x03	; 3
    12ce:	86 ef       	ldi	r24, 0xF6	; 246
    12d0:	94 e0       	ldi	r25, 0x04	; 4
    12d2:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    12d6:	ff cf       	rjmp	.-2      	; 0x12d6 <_ZN4MQTT8InitWiFiEv+0x36>
    12d8:	ce 01       	movw	r24, r28
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	ae cf       	rjmp	.-164    	; 0x123c <_ZN4MQTT13reconnectWifiEv>

000012e0 <_ZN4MQTT15reconnectClientEv>:
    12e0:	0f 93       	push	r16
    12e2:	1f 93       	push	r17
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	00 d0       	rcall	.+0      	; 0x12ea <_ZN4MQTT15reconnectClientEv+0xa>
    12ea:	00 d0       	rcall	.+0      	; 0x12ec <_ZN4MQTT15reconnectClientEv+0xc>
    12ec:	cd b7       	in	r28, 0x3d	; 61
    12ee:	de b7       	in	r29, 0x3e	; 62
    12f0:	8c 01       	movw	r16, r24
    12f2:	f8 01       	movw	r30, r16
    12f4:	84 81       	ldd	r24, Z+4	; 0x04
    12f6:	95 81       	ldd	r25, Z+5	; 0x05
    12f8:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    12fc:	81 11       	cpse	r24, r1
    12fe:	78 c0       	rjmp	.+240    	; 0x13f0 <_ZN4MQTT15reconnectClientEv+0x110>
    1300:	66 e2       	ldi	r22, 0x26	; 38
    1302:	73 e0       	ldi	r23, 0x03	; 3
    1304:	86 ef       	ldi	r24, 0xF6	; 246
    1306:	94 e0       	ldi	r25, 0x04	; 4
    1308:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    130c:	f8 01       	movw	r30, r16
    130e:	60 81       	ld	r22, Z
    1310:	71 81       	ldd	r23, Z+1	; 0x01
    1312:	86 ef       	ldi	r24, 0xF6	; 246
    1314:	94 e0       	ldi	r25, 0x04	; 4
    1316:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    131a:	65 e3       	ldi	r22, 0x35	; 53
    131c:	73 e0       	ldi	r23, 0x03	; 3
    131e:	ce 01       	movw	r24, r28
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    1326:	69 81       	ldd	r22, Y+1	; 0x01
    1328:	7a 81       	ldd	r23, Y+2	; 0x02
    132a:	f8 01       	movw	r30, r16
    132c:	84 81       	ldd	r24, Z+4	; 0x04
    132e:	95 81       	ldd	r25, Z+5	; 0x05
    1330:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <_ZN12PubSubClient7connectEPKc>
    1334:	88 23       	and	r24, r24
    1336:	c9 f1       	breq	.+114    	; 0x13aa <_ZN4MQTT15reconnectClientEv+0xca>
    1338:	6b e4       	ldi	r22, 0x4B	; 75
    133a:	73 e0       	ldi	r23, 0x03	; 3
    133c:	86 ef       	ldi	r24, 0xF6	; 246
    133e:	94 e0       	ldi	r25, 0x04	; 4
    1340:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    1344:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <_ZN4MQTT15ARDUINO_FAN_SUBE>
    1348:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <_ZN4MQTT15ARDUINO_FAN_SUBE+0x1>
    134c:	41 e0       	ldi	r20, 0x01	; 1
    134e:	f8 01       	movw	r30, r16
    1350:	84 81       	ldd	r24, Z+4	; 0x04
    1352:	95 81       	ldd	r25, Z+5	; 0x05
    1354:	0e 94 a2 21 	call	0x4344	; 0x4344 <_ZN12PubSubClient9subscribeEPKch>
    1358:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <_ZN10ScrollText15SCROLL_TEXT_SUBE>
    135c:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <_ZN10ScrollText15SCROLL_TEXT_SUBE+0x1>
    1360:	41 e0       	ldi	r20, 0x01	; 1
    1362:	f8 01       	movw	r30, r16
    1364:	84 81       	ldd	r24, Z+4	; 0x04
    1366:	95 81       	ldd	r25, Z+5	; 0x05
    1368:	0e 94 a2 21 	call	0x4344	; 0x4344 <_ZN12PubSubClient9subscribeEPKch>
    136c:	60 91 14 02 	lds	r22, 0x0214	; 0x800214 <_ZN4MQTT16ARDUINO_LAMP_SUBE>
    1370:	70 91 15 02 	lds	r23, 0x0215	; 0x800215 <_ZN4MQTT16ARDUINO_LAMP_SUBE+0x1>
    1374:	41 e0       	ldi	r20, 0x01	; 1
    1376:	f8 01       	movw	r30, r16
    1378:	84 81       	ldd	r24, Z+4	; 0x04
    137a:	95 81       	ldd	r25, Z+5	; 0x05
    137c:	0e 94 a2 21 	call	0x4344	; 0x4344 <_ZN12PubSubClient9subscribeEPKch>
    1380:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <_ZN4MQTT19ARDUINO_COUNTER_SUBE>
    1384:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <_ZN4MQTT19ARDUINO_COUNTER_SUBE+0x1>
    1388:	41 e0       	ldi	r20, 0x01	; 1
    138a:	f8 01       	movw	r30, r16
    138c:	84 81       	ldd	r24, Z+4	; 0x04
    138e:	95 81       	ldd	r25, Z+5	; 0x05
    1390:	0e 94 a2 21 	call	0x4344	; 0x4344 <_ZN12PubSubClient9subscribeEPKch>
    1394:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <_ZN4MQTT17ARDUINO_LOCK_DOORE>
    1398:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <_ZN4MQTT17ARDUINO_LOCK_DOORE+0x1>
    139c:	41 e0       	ldi	r20, 0x01	; 1
    139e:	f8 01       	movw	r30, r16
    13a0:	84 81       	ldd	r24, Z+4	; 0x04
    13a2:	95 81       	ldd	r25, Z+5	; 0x05
    13a4:	0e 94 a2 21 	call	0x4344	; 0x4344 <_ZN12PubSubClient9subscribeEPKch>
    13a8:	1e c0       	rjmp	.+60     	; 0x13e6 <_ZN4MQTT15reconnectClientEv+0x106>
    13aa:	62 e5       	ldi	r22, 0x52	; 82
    13ac:	73 e0       	ldi	r23, 0x03	; 3
    13ae:	86 ef       	ldi	r24, 0xF6	; 246
    13b0:	94 e0       	ldi	r25, 0x04	; 4
    13b2:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    13b6:	f8 01       	movw	r30, r16
    13b8:	84 81       	ldd	r24, Z+4	; 0x04
    13ba:	95 81       	ldd	r25, Z+5	; 0x05
    13bc:	0e 94 fe 21 	call	0x43fc	; 0x43fc <_ZN12PubSubClient5stateEv>
    13c0:	4a e0       	ldi	r20, 0x0A	; 10
    13c2:	50 e0       	ldi	r21, 0x00	; 0
    13c4:	bc 01       	movw	r22, r24
    13c6:	86 ef       	ldi	r24, 0xF6	; 246
    13c8:	94 e0       	ldi	r25, 0x04	; 4
    13ca:	0e 94 72 13 	call	0x26e4	; 0x26e4 <_ZN5Print5printEii>
    13ce:	63 e6       	ldi	r22, 0x63	; 99
    13d0:	73 e0       	ldi	r23, 0x03	; 3
    13d2:	86 ef       	ldi	r24, 0xF6	; 246
    13d4:	94 e0       	ldi	r25, 0x04	; 4
    13d6:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    13da:	68 ee       	ldi	r22, 0xE8	; 232
    13dc:	73 e0       	ldi	r23, 0x03	; 3
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    13e6:	ce 01       	movw	r24, r28
    13e8:	01 96       	adiw	r24, 0x01	; 1
    13ea:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    13ee:	81 cf       	rjmp	.-254    	; 0x12f2 <_ZN4MQTT15reconnectClientEv+0x12>
    13f0:	26 96       	adiw	r28, 0x06	; 6
    13f2:	0f b6       	in	r0, 0x3f	; 63
    13f4:	f8 94       	cli
    13f6:	de bf       	out	0x3e, r29	; 62
    13f8:	0f be       	out	0x3f, r0	; 63
    13fa:	cd bf       	out	0x3d, r28	; 61
    13fc:	df 91       	pop	r29
    13fe:	cf 91       	pop	r28
    1400:	1f 91       	pop	r17
    1402:	0f 91       	pop	r16
    1404:	08 95       	ret

00001406 <_ZN4MQTTC1Ev>:
    1406:	0f 93       	push	r16
    1408:	1f 93       	push	r17
    140a:	cf 93       	push	r28
    140c:	df 93       	push	r29
    140e:	ec 01       	movw	r28, r24
    1410:	8d e7       	ldi	r24, 0x7D	; 125
    1412:	93 e0       	ldi	r25, 0x03	; 3
    1414:	99 83       	std	Y+1, r25	; 0x01
    1416:	88 83       	st	Y, r24
    1418:	1e 82       	std	Y+6, r1	; 0x06
    141a:	1f 82       	std	Y+7, r1	; 0x07
    141c:	18 86       	std	Y+8, r1	; 0x08
    141e:	19 86       	std	Y+9, r1	; 0x09
    1420:	1a 86       	std	Y+10, r1	; 0x0a
    1422:	1b 86       	std	Y+11, r1	; 0x0b
    1424:	1c 86       	std	Y+12, r1	; 0x0c
    1426:	1d 86       	std	Y+13, r1	; 0x0d
    1428:	1f 86       	std	Y+15, r1	; 0x0f
    142a:	1e 86       	std	Y+14, r1	; 0x0e
    142c:	18 8a       	std	Y+16, r1	; 0x10
    142e:	83 e0       	ldi	r24, 0x03	; 3
    1430:	89 8b       	std	Y+17, r24	; 0x11
    1432:	ce 01       	movw	r24, r28
    1434:	35 df       	rcall	.-406    	; 0x12a0 <_ZN4MQTT8InitWiFiEv>
    1436:	8d e0       	ldi	r24, 0x0D	; 13
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	f0 d7       	rcall	.+4064   	; 0x241c <_Znwj>
    143c:	8c 01       	movw	r16, r24
    143e:	0e 94 e7 23 	call	0x47ce	; 0x47ce <_ZN13WiFiEspClientC1Ev>
    1442:	1b 83       	std	Y+3, r17	; 0x03
    1444:	0a 83       	std	Y+2, r16	; 0x02
    1446:	89 e2       	ldi	r24, 0x29	; 41
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	e8 d7       	rcall	.+4048   	; 0x241c <_Znwj>
    144c:	8c 01       	movw	r16, r24
    144e:	6a 81       	ldd	r22, Y+2	; 0x02
    1450:	7b 81       	ldd	r23, Y+3	; 0x03
    1452:	0e 94 28 22 	call	0x4450	; 0x4450 <_ZN12PubSubClientC1ER6Client>
    1456:	1d 83       	std	Y+5, r17	; 0x05
    1458:	0c 83       	std	Y+4, r16	; 0x04
    145a:	63 e0       	ldi	r22, 0x03	; 3
    145c:	70 e0       	ldi	r23, 0x00	; 0
    145e:	c8 01       	movw	r24, r16
    1460:	0e 94 51 22 	call	0x44a2	; 0x44a2 <_ZN12PubSubClient16setSocketTimeoutEj>
    1464:	68 81       	ld	r22, Y
    1466:	79 81       	ldd	r23, Y+1	; 0x01
    1468:	4b e5       	ldi	r20, 0x5B	; 91
    146a:	57 e0       	ldi	r21, 0x07	; 7
    146c:	8c 81       	ldd	r24, Y+4	; 0x04
    146e:	9d 81       	ldd	r25, Y+5	; 0x05
    1470:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <_ZN12PubSubClient9setServerEPKcj>
    1474:	8f e3       	ldi	r24, 0x3F	; 63
    1476:	96 e0       	ldi	r25, 0x06	; 6
    1478:	0e 94 81 22 	call	0x4502	; 0x4502 <_ZN12WiFiEspClass6statusEv>
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	9f 87       	std	Y+15, r25	; 0x0f
    1480:	8e 87       	std	Y+14, r24	; 0x0e
    1482:	01 97       	sbiw	r24, 0x01	; 1
    1484:	11 f0       	breq	.+4      	; 0x148a <_ZN4MQTTC1Ev+0x84>
    1486:	ce 01       	movw	r24, r28
    1488:	d9 de       	rcall	.-590    	; 0x123c <_ZN4MQTT13reconnectWifiEv>
    148a:	8c 81       	ldd	r24, Y+4	; 0x04
    148c:	9d 81       	ldd	r25, Y+5	; 0x05
    148e:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    1492:	81 11       	cpse	r24, r1
    1494:	02 c0       	rjmp	.+4      	; 0x149a <_ZN4MQTTC1Ev+0x94>
    1496:	ce 01       	movw	r24, r28
    1498:	23 df       	rcall	.-442    	; 0x12e0 <_ZN4MQTT15reconnectClientEv>
    149a:	62 ee       	ldi	r22, 0xE2	; 226
    149c:	7a e0       	ldi	r23, 0x0A	; 10
    149e:	8c 81       	ldd	r24, Y+4	; 0x04
    14a0:	9d 81       	ldd	r25, Y+5	; 0x05
    14a2:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <_ZN12PubSubClient11setCallbackEPFvPcPhjE>
    14a6:	1e 82       	std	Y+6, r1	; 0x06
    14a8:	1f 82       	std	Y+7, r1	; 0x07
    14aa:	18 86       	std	Y+8, r1	; 0x08
    14ac:	19 86       	std	Y+9, r1	; 0x09
    14ae:	df 91       	pop	r29
    14b0:	cf 91       	pop	r28
    14b2:	1f 91       	pop	r17
    14b4:	0f 91       	pop	r16
    14b6:	08 95       	ret

000014b8 <_ZN4MQTT6updateEv>:
    14b8:	0f 93       	push	r16
    14ba:	1f 93       	push	r17
    14bc:	cf 93       	push	r28
    14be:	df 93       	push	r29
    14c0:	ec 01       	movw	r28, r24
    14c2:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    14c6:	0e 81       	ldd	r16, Y+6	; 0x06
    14c8:	1f 81       	ldd	r17, Y+7	; 0x07
    14ca:	28 85       	ldd	r18, Y+8	; 0x08
    14cc:	39 85       	ldd	r19, Y+9	; 0x09
    14ce:	ab 01       	movw	r20, r22
    14d0:	bc 01       	movw	r22, r24
    14d2:	40 1b       	sub	r20, r16
    14d4:	51 0b       	sbc	r21, r17
    14d6:	62 0b       	sbc	r22, r18
    14d8:	73 0b       	sbc	r23, r19
    14da:	88 89       	ldd	r24, Y+16	; 0x10
    14dc:	49 38       	cpi	r20, 0x89	; 137
    14de:	53 41       	sbci	r21, 0x13	; 19
    14e0:	61 05       	cpc	r22, r1
    14e2:	71 05       	cpc	r23, r1
    14e4:	10 f4       	brcc	.+4      	; 0x14ea <_ZN4MQTT6updateEv+0x32>
    14e6:	88 23       	and	r24, r24
    14e8:	11 f1       	breq	.+68     	; 0x152e <_ZN4MQTT6updateEv+0x76>
    14ea:	8f 5f       	subi	r24, 0xFF	; 255
    14ec:	88 8b       	std	Y+16, r24	; 0x10
    14ee:	81 30       	cpi	r24, 0x01	; 1
    14f0:	11 f4       	brne	.+4      	; 0x14f6 <_ZN4MQTT6updateEv+0x3e>
    14f2:	ce 01       	movw	r24, r28
    14f4:	fb dd       	rcall	.-1034   	; 0x10ec <_ZN4MQTT20sendScrollTextStatusEv>
    14f6:	88 89       	ldd	r24, Y+16	; 0x10
    14f8:	82 30       	cpi	r24, 0x02	; 2
    14fa:	11 f4       	brne	.+4      	; 0x1500 <_ZN4MQTT6updateEv+0x48>
    14fc:	ce 01       	movw	r24, r28
    14fe:	76 dd       	rcall	.-1300   	; 0xfec <_ZN4MQTT13sendPwmStatusEv>
    1500:	88 89       	ldd	r24, Y+16	; 0x10
    1502:	83 30       	cpi	r24, 0x03	; 3
    1504:	11 f4       	brne	.+4      	; 0x150a <_ZN4MQTT6updateEv+0x52>
    1506:	ce 01       	movw	r24, r28
    1508:	f0 dc       	rcall	.-1568   	; 0xeea <_ZN4MQTT14sendLampStatusEv>
    150a:	88 89       	ldd	r24, Y+16	; 0x10
    150c:	84 30       	cpi	r24, 0x04	; 4
    150e:	19 f4       	brne	.+6      	; 0x1516 <_ZN4MQTT6updateEv+0x5e>
    1510:	ce 01       	movw	r24, r28
    1512:	62 dc       	rcall	.-1852   	; 0xdd8 <_ZN4MQTT15sendTemperatureEv>
    1514:	18 8a       	std	Y+16, r1	; 0x10
    1516:	6a e0       	ldi	r22, 0x0A	; 10
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	80 e0       	ldi	r24, 0x00	; 0
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    1522:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    1526:	6e 83       	std	Y+6, r22	; 0x06
    1528:	7f 83       	std	Y+7, r23	; 0x07
    152a:	88 87       	std	Y+8, r24	; 0x08
    152c:	99 87       	std	Y+9, r25	; 0x09
    152e:	8a 81       	ldd	r24, Y+2	; 0x02
    1530:	9b 81       	ldd	r25, Y+3	; 0x03
    1532:	dc 01       	movw	r26, r24
    1534:	ed 91       	ld	r30, X+
    1536:	fc 91       	ld	r31, X
    1538:	00 84       	ldd	r0, Z+8	; 0x08
    153a:	f1 85       	ldd	r31, Z+9	; 0x09
    153c:	e0 2d       	mov	r30, r0
    153e:	19 95       	eicall
    1540:	89 2b       	or	r24, r25
    1542:	69 f0       	breq	.+26     	; 0x155e <_ZN4MQTT6updateEv+0xa6>
    1544:	8c 81       	ldd	r24, Y+4	; 0x04
    1546:	9d 81       	ldd	r25, Y+5	; 0x05
    1548:	0e 94 8d 1f 	call	0x3f1a	; 0x3f1a <_ZN12PubSubClient4loopEv>
    154c:	8a 81       	ldd	r24, Y+2	; 0x02
    154e:	9b 81       	ldd	r25, Y+3	; 0x03
    1550:	dc 01       	movw	r26, r24
    1552:	ed 91       	ld	r30, X+
    1554:	fc 91       	ld	r31, X
    1556:	06 80       	ldd	r0, Z+6	; 0x06
    1558:	f7 81       	ldd	r31, Z+7	; 0x07
    155a:	e0 2d       	mov	r30, r0
    155c:	19 95       	eicall
    155e:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    1562:	0a 85       	ldd	r16, Y+10	; 0x0a
    1564:	1b 85       	ldd	r17, Y+11	; 0x0b
    1566:	2c 85       	ldd	r18, Y+12	; 0x0c
    1568:	3d 85       	ldd	r19, Y+13	; 0x0d
    156a:	dc 01       	movw	r26, r24
    156c:	cb 01       	movw	r24, r22
    156e:	80 1b       	sub	r24, r16
    1570:	91 0b       	sbc	r25, r17
    1572:	a2 0b       	sbc	r26, r18
    1574:	b3 0b       	sbc	r27, r19
    1576:	81 3d       	cpi	r24, 0xD1	; 209
    1578:	97 40       	sbci	r25, 0x07	; 7
    157a:	a1 05       	cpc	r26, r1
    157c:	b1 05       	cpc	r27, r1
    157e:	98 f0       	brcs	.+38     	; 0x15a6 <_ZN4MQTT6updateEv+0xee>
    1580:	8f e3       	ldi	r24, 0x3F	; 63
    1582:	96 e0       	ldi	r25, 0x06	; 6
    1584:	0e 94 81 22 	call	0x4502	; 0x4502 <_ZN12WiFiEspClass6statusEv>
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	9f 87       	std	Y+15, r25	; 0x0f
    158c:	8e 87       	std	Y+14, r24	; 0x0e
    158e:	01 97       	sbiw	r24, 0x01	; 1
    1590:	11 f0       	breq	.+4      	; 0x1596 <_ZN4MQTT6updateEv+0xde>
    1592:	ce 01       	movw	r24, r28
    1594:	53 de       	rcall	.-858    	; 0x123c <_ZN4MQTT13reconnectWifiEv>
    1596:	ce 01       	movw	r24, r28
    1598:	a3 de       	rcall	.-698    	; 0x12e0 <_ZN4MQTT15reconnectClientEv>
    159a:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    159e:	6a 87       	std	Y+10, r22	; 0x0a
    15a0:	7b 87       	std	Y+11, r23	; 0x0b
    15a2:	8c 87       	std	Y+12, r24	; 0x0c
    15a4:	9d 87       	std	Y+13, r25	; 0x0d
    15a6:	df 91       	pop	r29
    15a8:	cf 91       	pop	r28
    15aa:	1f 91       	pop	r17
    15ac:	0f 91       	pop	r16
    15ae:	08 95       	ret

000015b0 <_GLOBAL__sub_I__ZN4MQTT9pwm_valueE>:
    15b0:	0f 93       	push	r16
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0,0,0,0);
    15b2:	00 e0       	ldi	r16, 0x00	; 0
    15b4:	20 e0       	ldi	r18, 0x00	; 0
    15b6:	40 e0       	ldi	r20, 0x00	; 0
    15b8:	60 e0       	ldi	r22, 0x00	; 0
    15ba:	84 ed       	ldi	r24, 0xD4	; 212
    15bc:	94 e0       	ldi	r25, 0x04	; 4
    15be:	17 d7       	rcall	.+3630   	; 0x23ee <_ZN9IPAddressC1Ehhhh>
    15c0:	0f 91       	pop	r16
    15c2:	08 95       	ret

000015c4 <_ZN4MQTT8callbackEPcPhj>:

		}
		
	}
}
void MQTT::callback(char* topic, byte* payload, unsigned int length){
    15c4:	af 92       	push	r10
    15c6:	bf 92       	push	r11
    15c8:	cf 92       	push	r12
    15ca:	df 92       	push	r13
    15cc:	ef 92       	push	r14
    15ce:	ff 92       	push	r15
    15d0:	0f 93       	push	r16
    15d2:	1f 93       	push	r17
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	cd b7       	in	r28, 0x3d	; 61
    15da:	de b7       	in	r29, 0x3e	; 62
    15dc:	62 97       	sbiw	r28, 0x12	; 18
    15de:	0f b6       	in	r0, 0x3f	; 63
    15e0:	f8 94       	cli
    15e2:	de bf       	out	0x3e, r29	; 62
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	cd bf       	out	0x3d, r28	; 61
    15e8:	8c 01       	movw	r16, r24
    15ea:	5b 01       	movw	r10, r22
    15ec:	6a 01       	movw	r12, r20
	String msg;
    15ee:	6f e8       	ldi	r22, 0x8F	; 143
    15f0:	74 e0       	ldi	r23, 0x04	; 4
    15f2:	ce 01       	movw	r24, r28
    15f4:	0d 96       	adiw	r24, 0x0d	; 13
    15f6:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
	
	msg.reserve(length);
    15fa:	b6 01       	movw	r22, r12
    15fc:	ce 01       	movw	r24, r28
    15fe:	0d 96       	adiw	r24, 0x0d	; 13
    1600:	0e 94 91 17 	call	0x2f22	; 0x2f22 <_ZN6String7reserveEj>
	
	if(Serial.availableForWrite()){
    1604:	86 ef       	ldi	r24, 0xF6	; 246
    1606:	94 e0       	ldi	r25, 0x04	; 4
    1608:	42 d4       	rcall	.+2180   	; 0x1e8e <_ZN14HardwareSerial17availableForWriteEv>
    160a:	89 2b       	or	r24, r25
    160c:	11 f1       	breq	.+68     	; 0x1652 <_ZN4MQTT8callbackEPcPhj+0x8e>
		Serial.print("Message arrived [");
    160e:	6a e8       	ldi	r22, 0x8A	; 138
    1610:	73 e0       	ldi	r23, 0x03	; 3
    1612:	86 ef       	ldi	r24, 0xF6	; 246
    1614:	94 e0       	ldi	r25, 0x04	; 4
    1616:	77 d7       	rcall	.+3822   	; 0x2506 <_ZN5Print5printEPKc>
		Serial.print(topic);
    1618:	b8 01       	movw	r22, r16
    161a:	86 ef       	ldi	r24, 0xF6	; 246
    161c:	94 e0       	ldi	r25, 0x04	; 4
    161e:	73 d7       	rcall	.+3814   	; 0x2506 <_ZN5Print5printEPKc>
		Serial.print("] ");
    1620:	6f e5       	ldi	r22, 0x5F	; 95
    1622:	74 e0       	ldi	r23, 0x04	; 4
    1624:	86 ef       	ldi	r24, 0xF6	; 246
    1626:	94 e0       	ldi	r25, 0x04	; 4
    1628:	6e d7       	rcall	.+3804   	; 0x2506 <_ZN5Print5printEPKc>
    162a:	75 01       	movw	r14, r10
    162c:	ca 0c       	add	r12, r10
    162e:	db 1c       	adc	r13, r11
		for (int i=0;i<length;i++) {
    1630:	ce 14       	cp	r12, r14
    1632:	df 04       	cpc	r13, r15
    1634:	41 f0       	breq	.+16     	; 0x1646 <_ZN4MQTT8callbackEPcPhj+0x82>
			msg += (char)payload[i];
    1636:	f7 01       	movw	r30, r14
    1638:	61 91       	ld	r22, Z+
    163a:	7f 01       	movw	r14, r30

	// if there's not enough memory for the concatenated value, the string
	// will be left unchanged (but this isn't signalled in any way)
	String & operator += (const String &rhs)	{concat(rhs); return (*this);}
	String & operator += (const char *cstr)		{concat(cstr); return (*this);}
	String & operator += (char c)			{concat(c); return (*this);}
    163c:	ce 01       	movw	r24, r28
    163e:	0d 96       	adiw	r24, 0x0d	; 13
    1640:	0e 94 98 18 	call	0x3130	; 0x3130 <_ZN6String6concatEc>
	
	if(Serial.availableForWrite()){
		Serial.print("Message arrived [");
		Serial.print(topic);
		Serial.print("] ");
		for (int i=0;i<length;i++) {
    1644:	f5 cf       	rjmp	.-22     	; 0x1630 <_ZN4MQTT8callbackEPcPhj+0x6c>
			msg += (char)payload[i];
		}
		Serial.println(msg);
    1646:	be 01       	movw	r22, r28
    1648:	63 5f       	subi	r22, 0xF3	; 243
    164a:	7f 4f       	sbci	r23, 0xFF	; 255
    164c:	86 ef       	ldi	r24, 0xF6	; 246
    164e:	94 e0       	ldi	r25, 0x04	; 4
    1650:	75 d7       	rcall	.+3818   	; 0x253c <_ZN5Print7printlnERK6String>
	}

	if(strcmp(topic, MQTT::ARDUINO_FAN_SUB) == 0){//Si el topico es para el ventilador
    1652:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <_ZN4MQTT15ARDUINO_FAN_SUBE>
    1656:	70 91 17 02 	lds	r23, 0x0217	; 0x800217 <_ZN4MQTT15ARDUINO_FAN_SUBE+0x1>
    165a:	c8 01       	movw	r24, r16
    165c:	0e 94 c0 30 	call	0x6180	; 0x6180 <strcmp>
    1660:	89 2b       	or	r24, r25
    1662:	59 f4       	brne	.+22     	; 0x167a <_ZN4MQTT8callbackEPcPhj+0xb6>
		MQTT::pwm_value = msg.toInt();
    1664:	ce 01       	movw	r24, r28
    1666:	0d 96       	adiw	r24, 0x0d	; 13
    1668:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <_ZNK6String5toIntEv>
    166c:	70 93 d3 04 	sts	0x04D3, r23	; 0x8004d3 <__data_end+0x1>
    1670:	60 93 d2 04 	sts	0x04D2, r22	; 0x8004d2 <__data_end>
		analogWrite(PWM_MOTOR, MQTT::pwm_value);
    1674:	82 e0       	ldi	r24, 0x02	; 2
    1676:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <analogWrite>
	}
	if(strcmp(topic, ScrollText::SCROLL_TEXT_SUB) == 0){//Si el topico es para mostrar texto
    167a:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <_ZN10ScrollText15SCROLL_TEXT_SUBE>
    167e:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <_ZN10ScrollText15SCROLL_TEXT_SUBE+0x1>
    1682:	c8 01       	movw	r24, r16
    1684:	0e 94 c0 30 	call	0x6180	; 0x6180 <strcmp>
    1688:	89 2b       	or	r24, r25
    168a:	09 f0       	breq	.+2      	; 0x168e <_ZN4MQTT8callbackEPcPhj+0xca>
    168c:	6a c0       	rjmp	.+212    	; 0x1762 <_ZN4MQTT8callbackEPcPhj+0x19e>
		
		if(msg.indexOf("True") > 0){
    168e:	65 e4       	ldi	r22, 0x45	; 69
    1690:	72 e0       	ldi	r23, 0x02	; 2
    1692:	ce 01       	movw	r24, r28
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    169a:	be 01       	movw	r22, r28
    169c:	6f 5f       	subi	r22, 0xFF	; 255
    169e:	7f 4f       	sbci	r23, 0xFF	; 255
    16a0:	ce 01       	movw	r24, r28
    16a2:	0d 96       	adiw	r24, 0x0d	; 13
    16a4:	0e 94 3e 19 	call	0x327c	; 0x327c <_ZNK6String7indexOfERKS_>
    16a8:	7c 01       	movw	r14, r24
    16aa:	ce 01       	movw	r24, r28
    16ac:	01 96       	adiw	r24, 0x01	; 1
    16ae:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
			msg.replace("True", "");
    16b2:	6f e8       	ldi	r22, 0x8F	; 143
    16b4:	74 e0       	ldi	r23, 0x04	; 4
    16b6:	ce 01       	movw	r24, r28
    16b8:	01 96       	adiw	r24, 0x01	; 1
		MQTT::pwm_value = msg.toInt();
		analogWrite(PWM_MOTOR, MQTT::pwm_value);
	}
	if(strcmp(topic, ScrollText::SCROLL_TEXT_SUB) == 0){//Si el topico es para mostrar texto
		
		if(msg.indexOf("True") > 0){
    16ba:	1e 14       	cp	r1, r14
    16bc:	1f 04       	cpc	r1, r15
    16be:	f4 f4       	brge	.+60     	; 0x16fc <_ZN4MQTT8callbackEPcPhj+0x138>
			msg.replace("True", "");
    16c0:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    16c4:	65 e4       	ldi	r22, 0x45	; 69
    16c6:	72 e0       	ldi	r23, 0x02	; 2
    16c8:	ce 01       	movw	r24, r28
    16ca:	07 96       	adiw	r24, 0x07	; 7
    16cc:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    16d0:	ae 01       	movw	r20, r28
    16d2:	4f 5f       	subi	r20, 0xFF	; 255
    16d4:	5f 4f       	sbci	r21, 0xFF	; 255
    16d6:	be 01       	movw	r22, r28
    16d8:	69 5f       	subi	r22, 0xF9	; 249
    16da:	7f 4f       	sbci	r23, 0xFF	; 255
    16dc:	ce 01       	movw	r24, r28
    16de:	0d 96       	adiw	r24, 0x0d	; 13
    16e0:	0e 94 8f 19 	call	0x331e	; 0x331e <_ZN6String7replaceERKS_S1_>
    16e4:	ce 01       	movw	r24, r28
    16e6:	07 96       	adiw	r24, 0x07	; 7
    16e8:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    16ec:	ce 01       	movw	r24, r28
    16ee:	01 96       	adiw	r24, 0x01	; 1
    16f0:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
			ScrollText::enable = true;
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	80 93 ea 04 	sts	0x04EA, r24	; 0x8004ea <_ZN10ScrollText6enableE>
    16fa:	1c c0       	rjmp	.+56     	; 0x1734 <_ZN4MQTT8callbackEPcPhj+0x170>
		}
		else{
			msg.replace("False", "");
    16fc:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    1700:	6a e4       	ldi	r22, 0x4A	; 74
    1702:	72 e0       	ldi	r23, 0x02	; 2
    1704:	ce 01       	movw	r24, r28
    1706:	07 96       	adiw	r24, 0x07	; 7
    1708:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
    170c:	ae 01       	movw	r20, r28
    170e:	4f 5f       	subi	r20, 0xFF	; 255
    1710:	5f 4f       	sbci	r21, 0xFF	; 255
    1712:	be 01       	movw	r22, r28
    1714:	69 5f       	subi	r22, 0xF9	; 249
    1716:	7f 4f       	sbci	r23, 0xFF	; 255
    1718:	ce 01       	movw	r24, r28
    171a:	0d 96       	adiw	r24, 0x0d	; 13
    171c:	0e 94 8f 19 	call	0x331e	; 0x331e <_ZN6String7replaceERKS_S1_>
    1720:	ce 01       	movw	r24, r28
    1722:	07 96       	adiw	r24, 0x07	; 7
    1724:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
    1728:	ce 01       	movw	r24, r28
    172a:	01 96       	adiw	r24, 0x01	; 1
    172c:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
			ScrollText::enable = false;
    1730:	10 92 ea 04 	sts	0x04EA, r1	; 0x8004ea <_ZN10ScrollText6enableE>
		}
		msg.trim();
    1734:	ce 01       	movw	r24, r28
    1736:	0d 96       	adiw	r24, 0x0d	; 13
    1738:	0e 94 87 1a 	call	0x350e	; 0x350e <_ZN6String4trimEv>
		ScrollText::msgToShow = msg;
    173c:	be 01       	movw	r22, r28
    173e:	63 5f       	subi	r22, 0xF3	; 243
    1740:	7f 4f       	sbci	r23, 0xFF	; 255
    1742:	84 ee       	ldi	r24, 0xE4	; 228
    1744:	94 e0       	ldi	r25, 0x04	; 4
    1746:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <_ZN6StringaSERKS_>
		ScrollText::msg_aux = msg;
    174a:	be 01       	movw	r22, r28
    174c:	63 5f       	subi	r22, 0xF3	; 243
    174e:	7f 4f       	sbci	r23, 0xFF	; 255
    1750:	8e ed       	ldi	r24, 0xDE	; 222
    1752:	94 e0       	ldi	r25, 0x04	; 4
    1754:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <_ZN6StringaSERKS_>
    1758:	60 e2       	ldi	r22, 0x20	; 32
    175a:	8e ed       	ldi	r24, 0xDE	; 222
    175c:	94 e0       	ldi	r25, 0x04	; 4
    175e:	0e 94 98 18 	call	0x3130	; 0x3130 <_ZN6String6concatEc>
		ScrollText::msg_aux += ' ';
	}
	if(strcmp(topic, MQTT::ARDUINO_LAMP_SUB) == 0){
    1762:	60 91 14 02 	lds	r22, 0x0214	; 0x800214 <_ZN4MQTT16ARDUINO_LAMP_SUBE>
    1766:	70 91 15 02 	lds	r23, 0x0215	; 0x800215 <_ZN4MQTT16ARDUINO_LAMP_SUBE+0x1>
    176a:	c8 01       	movw	r24, r16
    176c:	0e 94 c0 30 	call	0x6180	; 0x6180 <strcmp>
    1770:	89 2b       	or	r24, r25
    1772:	59 f4       	brne	.+22     	; 0x178a <_ZN4MQTT8callbackEPcPhj+0x1c6>
		if(msg.equals("False")){
    1774:	6a e4       	ldi	r22, 0x4A	; 74
    1776:	72 e0       	ldi	r23, 0x02	; 2
    1778:	ce 01       	movw	r24, r28
    177a:	0d 96       	adiw	r24, 0x0d	; 13
    177c:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_ZNK6String6equalsEPKc>
    1780:	88 23       	and	r24, r24
    1782:	11 f0       	breq	.+4      	; 0x1788 <_ZN4MQTT8callbackEPcPhj+0x1c4>
			PORTA |= 1 << PA0;
    1784:	10 9a       	sbi	0x02, 0	; 2
    1786:	01 c0       	rjmp	.+2      	; 0x178a <_ZN4MQTT8callbackEPcPhj+0x1c6>
		}
		else{
			PORTA &= ~(1 << PA0);
    1788:	10 98       	cbi	0x02, 0	; 2
		}
	}
	if(strcmp(topic, MQTT::ARDUINO_COUNTER_SUB) == 0){
    178a:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <_ZN4MQTT19ARDUINO_COUNTER_SUBE>
    178e:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <_ZN4MQTT19ARDUINO_COUNTER_SUBE+0x1>
    1792:	c8 01       	movw	r24, r16
    1794:	0e 94 c0 30 	call	0x6180	; 0x6180 <strcmp>
    1798:	89 2b       	or	r24, r25
    179a:	c9 f4       	brne	.+50     	; 0x17ce <_ZN4MQTT8callbackEPcPhj+0x20a>
		if(msg.equals("True")){
    179c:	65 e4       	ldi	r22, 0x45	; 69
    179e:	72 e0       	ldi	r23, 0x02	; 2
    17a0:	ce 01       	movw	r24, r28
    17a2:	0d 96       	adiw	r24, 0x0d	; 13
    17a4:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_ZNK6String6equalsEPKc>
    17a8:	88 23       	and	r24, r24
    17aa:	49 f0       	breq	.+18     	; 0x17be <_ZN4MQTT8callbackEPcPhj+0x1fa>
			PORTA |= 1 << PA1;
    17ac:	11 9a       	sbi	0x02, 1	; 2
			delay(1);
    17ae:	61 e0       	ldi	r22, 0x01	; 1
    17b0:	70 e0       	ldi	r23, 0x00	; 0
    17b2:	80 e0       	ldi	r24, 0x00	; 0
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
			PORTA &= ~(1 << PA1);
    17ba:	11 98       	cbi	0x02, 1	; 2
    17bc:	08 c0       	rjmp	.+16     	; 0x17ce <_ZN4MQTT8callbackEPcPhj+0x20a>
	
		}
		else{

			PORTA |= 1 << PA2;
    17be:	12 9a       	sbi	0x02, 2	; 2
			delay(1);
    17c0:	61 e0       	ldi	r22, 0x01	; 1
    17c2:	70 e0       	ldi	r23, 0x00	; 0
    17c4:	80 e0       	ldi	r24, 0x00	; 0
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
			PORTA &= ~(1 << PA2);
    17cc:	12 98       	cbi	0x02, 2	; 2
		}
	}
	
	if(strcmp(topic, ARDUINO_LOCK_DOOR) == 0){
    17ce:	60 91 08 02 	lds	r22, 0x0208	; 0x800208 <_ZN4MQTT17ARDUINO_LOCK_DOORE>
    17d2:	70 91 09 02 	lds	r23, 0x0209	; 0x800209 <_ZN4MQTT17ARDUINO_LOCK_DOORE+0x1>
    17d6:	c8 01       	movw	r24, r16
    17d8:	0e 94 c0 30 	call	0x6180	; 0x6180 <strcmp>
    17dc:	89 2b       	or	r24, r25
    17de:	99 f4       	brne	.+38     	; 0x1806 <_ZN4MQTT8callbackEPcPhj+0x242>
		msg.trim();
    17e0:	ce 01       	movw	r24, r28
    17e2:	0d 96       	adiw	r24, 0x0d	; 13
    17e4:	0e 94 87 1a 	call	0x350e	; 0x350e <_ZN6String4trimEv>
		if(msg.equals(ARDUINO_LOCK_PASSWORD))
    17e8:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <_ZN4MQTT21ARDUINO_LOCK_PASSWORDE>
    17ec:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <_ZN4MQTT21ARDUINO_LOCK_PASSWORDE+0x1>
    17f0:	ce 01       	movw	r24, r28
    17f2:	0d 96       	adiw	r24, 0x0d	; 13
    17f4:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_ZNK6String6equalsEPKc>
    17f8:	88 23       	and	r24, r24
    17fa:	19 f0       	breq	.+6      	; 0x1802 <_ZN4MQTT8callbackEPcPhj+0x23e>
		{
			PORTA |= 1 << PA3;
    17fc:	13 9a       	sbi	0x02, 3	; 2
			PORTA &= ~(1 << PA4);
    17fe:	14 98       	cbi	0x02, 4	; 2
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <_ZN4MQTT8callbackEPcPhj+0x242>
		}
		else{
			PORTA |= 1 << PA4;
    1802:	14 9a       	sbi	0x02, 4	; 2
			PORTA &= ~(1 << PA3);
    1804:	13 98       	cbi	0x02, 3	; 2
		}
		
	}
}
void MQTT::callback(char* topic, byte* payload, unsigned int length){
	String msg;
    1806:	ce 01       	movw	r24, r28
    1808:	0d 96       	adiw	r24, 0x0d	; 13
    180a:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>
	
	

	
	
}
    180e:	62 96       	adiw	r28, 0x12	; 18
    1810:	0f b6       	in	r0, 0x3f	; 63
    1812:	f8 94       	cli
    1814:	de bf       	out	0x3e, r29	; 62
    1816:	0f be       	out	0x3f, r0	; 63
    1818:	cd bf       	out	0x3d, r28	; 61
    181a:	df 91       	pop	r29
    181c:	cf 91       	pop	r28
    181e:	1f 91       	pop	r17
    1820:	0f 91       	pop	r16
    1822:	ff 90       	pop	r15
    1824:	ef 90       	pop	r14
    1826:	df 90       	pop	r13
    1828:	cf 90       	pop	r12
    182a:	bf 90       	pop	r11
    182c:	af 90       	pop	r10
    182e:	08 95       	ret

00001830 <_ZN10ScrollTextC1Ehhhh>:
		s++;
	}
}
ScrollText::~ScrollText(){
	
	delete m;
    1830:	bf 92       	push	r11
    1832:	cf 92       	push	r12
    1834:	df 92       	push	r13
    1836:	ef 92       	push	r14
    1838:	ff 92       	push	r15
    183a:	0f 93       	push	r16
    183c:	1f 93       	push	r17
    183e:	cf 93       	push	r28
    1840:	df 93       	push	r29
    1842:	ec 01       	movw	r28, r24
    1844:	c6 2e       	mov	r12, r22
    1846:	d4 2e       	mov	r13, r20
    1848:	b2 2e       	mov	r11, r18
    184a:	18 8a       	std	Y+16, r1	; 0x10
    184c:	19 8a       	std	Y+17, r1	; 0x11
    184e:	1a 8a       	std	Y+18, r1	; 0x12
    1850:	1b 8a       	std	Y+19, r1	; 0x13
    1852:	84 e5       	ldi	r24, 0x54	; 84
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	e2 d5       	rcall	.+3012   	; 0x241c <_Znwj>
    1858:	7c 01       	movw	r14, r24
    185a:	2b 2d       	mov	r18, r11
    185c:	4d 2d       	mov	r20, r13
    185e:	6c 2d       	mov	r22, r12
    1860:	45 d8       	rcall	.-3958   	; 0x8ec <_ZN9MaxMatrixC1Ehhhh>
    1862:	f9 82       	std	Y+1, r15	; 0x01
    1864:	e8 82       	st	Y, r14
    1866:	c7 01       	movw	r24, r14
    1868:	2e d9       	rcall	.-3492   	; 0xac6 <_ZN9MaxMatrix4initEv>
    186a:	bc 82       	std	Y+4, r11	; 0x04
    186c:	ca 82       	std	Y+2, r12	; 0x02
    186e:	db 82       	std	Y+3, r13	; 0x03
    1870:	0d 83       	std	Y+5, r16	; 0x05
    1872:	62 e3       	ldi	r22, 0x32	; 50
    1874:	70 e0       	ldi	r23, 0x00	; 0
    1876:	84 ee       	ldi	r24, 0xE4	; 228
    1878:	94 e0       	ldi	r25, 0x04	; 4
    187a:	0e 94 91 17 	call	0x2f22	; 0x2f22 <_ZN6String7reserveEj>
    187e:	62 e3       	ldi	r22, 0x32	; 50
    1880:	70 e0       	ldi	r23, 0x00	; 0
    1882:	8e ed       	ldi	r24, 0xDE	; 222
    1884:	94 e0       	ldi	r25, 0x04	; 4
    1886:	df 91       	pop	r29
    1888:	cf 91       	pop	r28
    188a:	1f 91       	pop	r17
    188c:	0f 91       	pop	r16
    188e:	ff 90       	pop	r15
    1890:	ef 90       	pop	r14
    1892:	df 90       	pop	r13
    1894:	cf 90       	pop	r12
    1896:	bf 90       	pop	r11
    1898:	0c 94 91 17 	jmp	0x2f22	; 0x2f22 <_ZN6String7reserveEj>

0000189c <_ZN10ScrollText25printCharWithShiftPerTickEc>:
    189c:	0f 93       	push	r16
    189e:	1f 93       	push	r17
    18a0:	cf 93       	push	r28
    18a2:	df 93       	push	r29
    18a4:	ec 01       	movw	r28, r24
    18a6:	80 91 db 04 	lds	r24, 0x04DB	; 0x8004db <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    18aa:	81 11       	cpse	r24, r1
    18ac:	27 c0       	rjmp	.+78     	; 0x18fc <_ZN10ScrollText25printCharWithShiftPerTickEc+0x60>
    18ae:	60 32       	cpi	r22, 0x20	; 32
    18b0:	08 f4       	brcc	.+2      	; 0x18b4 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x18>
    18b2:	42 c0       	rjmp	.+132    	; 0x1938 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x9c>
    18b4:	60 52       	subi	r22, 0x20	; 32
    18b6:	87 e0       	ldi	r24, 0x07	; 7
    18b8:	68 9f       	mul	r22, r24
    18ba:	b0 01       	movw	r22, r0
    18bc:	11 24       	eor	r1, r1
    18be:	6a 5d       	subi	r22, 0xDA	; 218
    18c0:	7d 4f       	sbci	r23, 0xFD	; 253
    18c2:	47 e0       	ldi	r20, 0x07	; 7
    18c4:	50 e0       	ldi	r21, 0x00	; 0
    18c6:	8e 01       	movw	r16, r28
    18c8:	0a 5f       	subi	r16, 0xFA	; 250
    18ca:	1f 4f       	sbci	r17, 0xFF	; 255
    18cc:	c8 01       	movw	r24, r16
    18ce:	0e 94 86 30 	call	0x610c	; 0x610c <memcpy_P>
    18d2:	6d 81       	ldd	r22, Y+5	; 0x05
    18d4:	98 e0       	ldi	r25, 0x08	; 8
    18d6:	69 9f       	mul	r22, r25
    18d8:	b0 01       	movw	r22, r0
    18da:	11 24       	eor	r1, r1
    18dc:	98 01       	movw	r18, r16
    18de:	40 e0       	ldi	r20, 0x00	; 0
    18e0:	50 e0       	ldi	r21, 0x00	; 0
    18e2:	88 81       	ld	r24, Y
    18e4:	99 81       	ldd	r25, Y+1	; 0x01
    18e6:	81 d9       	rcall	.-3326   	; 0xbea <_ZN9MaxMatrix11writeSpriteEiiPKh>
    18e8:	8d 81       	ldd	r24, Y+5	; 0x05
    18ea:	6e 81       	ldd	r22, Y+6	; 0x06
    18ec:	98 e0       	ldi	r25, 0x08	; 8
    18ee:	89 9f       	mul	r24, r25
    18f0:	60 0d       	add	r22, r0
    18f2:	11 24       	eor	r1, r1
    18f4:	40 e0       	ldi	r20, 0x00	; 0
    18f6:	88 81       	ld	r24, Y
    18f8:	99 81       	ldd	r25, Y+1	; 0x01
    18fa:	3c d8       	rcall	.-3976   	; 0x974 <_ZN9MaxMatrix9setColumnEhh>
    18fc:	2e 81       	ldd	r18, Y+6	; 0x06
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	28 17       	cp	r18, r24
    1908:	39 07       	cpc	r19, r25
    190a:	74 f0       	brlt	.+28     	; 0x1928 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x8c>
    190c:	40 e0       	ldi	r20, 0x00	; 0
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	88 81       	ld	r24, Y
    1912:	99 81       	ldd	r25, Y+1	; 0x01
    1914:	23 da       	rcall	.-3002   	; 0xd5c <_ZN9MaxMatrix9shiftLeftEbb>
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	80 93 db 04 	sts	0x04DB, r24	; 0x8004db <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    191c:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1920:	8f 5f       	subi	r24, 0xFF	; 255
    1922:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1926:	04 c0       	rjmp	.+8      	; 0x1930 <_ZN10ScrollText25printCharWithShiftPerTickEc+0x94>
    1928:	10 92 db 04 	sts	0x04DB, r1	; 0x8004db <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    192c:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <_ZZN10ScrollText25printCharWithShiftPerTickEcE1i>
    1930:	90 91 db 04 	lds	r25, 0x04DB	; 0x8004db <_ZZN10ScrollText25printCharWithShiftPerTickEcE14selectedStatus>
    1934:	81 e0       	ldi	r24, 0x01	; 1
    1936:	89 27       	eor	r24, r25
    1938:	df 91       	pop	r29
    193a:	cf 91       	pop	r28
    193c:	1f 91       	pop	r17
    193e:	0f 91       	pop	r16
    1940:	08 95       	ret

00001942 <_ZN10ScrollText27printStringWithShiftPerTickEPKc>:
    1942:	20 91 ea 04 	lds	r18, 0x04EA	; 0x8004ea <_ZN10ScrollText6enableE>
    1946:	22 23       	and	r18, r18
    1948:	29 f1       	breq	.+74     	; 0x1994 <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x52>
    194a:	20 91 eb 04 	lds	r18, 0x04EB	; 0x8004eb <_ZN10ScrollText8finishedE>
    194e:	21 11       	cpse	r18, r1
    1950:	29 c0       	rjmp	.+82     	; 0x19a4 <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x62>
    1952:	20 91 dc 04 	lds	r18, 0x04DC	; 0x8004dc <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1956:	30 91 dd 04 	lds	r19, 0x04DD	; 0x8004dd <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    195a:	fb 01       	movw	r30, r22
    195c:	e2 0f       	add	r30, r18
    195e:	f3 1f       	adc	r31, r19
    1960:	60 81       	ld	r22, Z
    1962:	66 23       	and	r22, r22
    1964:	79 f0       	breq	.+30     	; 0x1984 <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x42>
    1966:	9a df       	rcall	.-204    	; 0x189c <_ZN10ScrollText25printCharWithShiftPerTickEc>
    1968:	88 23       	and	r24, r24
    196a:	49 f0       	breq	.+18     	; 0x197e <_ZN10ScrollText27printStringWithShiftPerTickEPKc+0x3c>
    196c:	80 91 dc 04 	lds	r24, 0x04DC	; 0x8004dc <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1970:	90 91 dd 04 	lds	r25, 0x04DD	; 0x8004dd <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1974:	01 96       	adiw	r24, 0x01	; 1
    1976:	90 93 dd 04 	sts	0x04DD, r25	; 0x8004dd <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    197a:	80 93 dc 04 	sts	0x04DC, r24	; 0x8004dc <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    197e:	10 92 eb 04 	sts	0x04EB, r1	; 0x8004eb <_ZN10ScrollText8finishedE>
    1982:	08 95       	ret
    1984:	81 e0       	ldi	r24, 0x01	; 1
    1986:	80 93 eb 04 	sts	0x04EB, r24	; 0x8004eb <_ZN10ScrollText8finishedE>
    198a:	10 92 dd 04 	sts	0x04DD, r1	; 0x8004dd <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    198e:	10 92 dc 04 	sts	0x04DC, r1	; 0x8004dc <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    1992:	08 95       	ret
    1994:	10 92 dd 04 	sts	0x04DD, r1	; 0x8004dd <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i+0x1>
    1998:	10 92 dc 04 	sts	0x04DC, r1	; 0x8004dc <_ZZN10ScrollText27printStringWithShiftPerTickEPKcE1i>
    199c:	fc 01       	movw	r30, r24
    199e:	80 81       	ld	r24, Z
    19a0:	91 81       	ldd	r25, Z+1	; 0x01
    19a2:	79 c8       	rjmp	.-3854   	; 0xa96 <_ZN9MaxMatrix5clearEv>
    19a4:	08 95       	ret

000019a6 <_ZN10ScrollText6updateEv>:
    19a6:	0f 93       	push	r16
    19a8:	1f 93       	push	r17
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	ec 01       	movw	r28, r24
    19b0:	e8 d7       	rcall	.+4048   	; 0x2982 <millis>
    19b2:	08 89       	ldd	r16, Y+16	; 0x10
    19b4:	19 89       	ldd	r17, Y+17	; 0x11
    19b6:	2a 89       	ldd	r18, Y+18	; 0x12
    19b8:	3b 89       	ldd	r19, Y+19	; 0x13
    19ba:	ab 01       	movw	r20, r22
    19bc:	bc 01       	movw	r22, r24
    19be:	40 1b       	sub	r20, r16
    19c0:	51 0b       	sbc	r21, r17
    19c2:	62 0b       	sbc	r22, r18
    19c4:	73 0b       	sbc	r23, r19
    19c6:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <_ZN10ScrollText9msPerTickE>
    19ca:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <_ZN10ScrollText9msPerTickE+0x1>
    19ce:	09 2e       	mov	r0, r25
    19d0:	00 0c       	add	r0, r0
    19d2:	aa 0b       	sbc	r26, r26
    19d4:	bb 0b       	sbc	r27, r27
    19d6:	84 17       	cp	r24, r20
    19d8:	95 07       	cpc	r25, r21
    19da:	a6 07       	cpc	r26, r22
    19dc:	b7 07       	cpc	r27, r23
    19de:	80 f4       	brcc	.+32     	; 0x1a00 <_ZN10ScrollText6updateEv+0x5a>
    19e0:	60 91 de 04 	lds	r22, 0x04DE	; 0x8004de <_ZN10ScrollText7msg_auxE>
    19e4:	70 91 df 04 	lds	r23, 0x04DF	; 0x8004df <_ZN10ScrollText7msg_auxE+0x1>
    19e8:	ce 01       	movw	r24, r28
    19ea:	ab df       	rcall	.-170    	; 0x1942 <_ZN10ScrollText27printStringWithShiftPerTickEPKc>
    19ec:	ca d7       	rcall	.+3988   	; 0x2982 <millis>
    19ee:	68 8b       	std	Y+16, r22	; 0x10
    19f0:	79 8b       	std	Y+17, r23	; 0x11
    19f2:	8a 8b       	std	Y+18, r24	; 0x12
    19f4:	9b 8b       	std	Y+19, r25	; 0x13
    19f6:	80 91 eb 04 	lds	r24, 0x04EB	; 0x8004eb <_ZN10ScrollText8finishedE>
    19fa:	81 11       	cpse	r24, r1
    19fc:	10 92 eb 04 	sts	0x04EB, r1	; 0x8004eb <_ZN10ScrollText8finishedE>
    1a00:	df 91       	pop	r29
    1a02:	cf 91       	pop	r28
    1a04:	1f 91       	pop	r17
    1a06:	0f 91       	pop	r16
    1a08:	08 95       	ret

00001a0a <_GLOBAL__sub_I__ZN10ScrollText15SCROLL_TEXT_SUBE>:

char* ScrollText::SCROLL_TEXT_SUB = "ScrollText";
int ScrollText::msPerTick = 50;
bool ScrollText::finished = false;
bool ScrollText::enable = false;
String ScrollText::msgToShow = "MSG";
    1a0a:	68 e1       	ldi	r22, 0x18	; 24
    1a0c:	74 e0       	ldi	r23, 0x04	; 4
    1a0e:	84 ee       	ldi	r24, 0xE4	; 228
    1a10:	94 e0       	ldi	r25, 0x04	; 4
    1a12:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>
String ScrollText::msg_aux;
    1a16:	6f e8       	ldi	r22, 0x8F	; 143
    1a18:	74 e0       	ldi	r23, 0x04	; 4
    1a1a:	8e ed       	ldi	r24, 0xDE	; 222
    1a1c:	94 e0       	ldi	r25, 0x04	; 4
    1a1e:	0c 94 cb 17 	jmp	0x2f96	; 0x2f96 <_ZN6StringC1EPKc>

00001a22 <_GLOBAL__sub_D__ZN10ScrollText15SCROLL_TEXT_SUBE>:
    1a22:	8e ed       	ldi	r24, 0xDE	; 222
    1a24:	94 e0       	ldi	r25, 0x04	; 4
    1a26:	0e 94 5d 17 	call	0x2eba	; 0x2eba <_ZN6StringD1Ev>

char* ScrollText::SCROLL_TEXT_SUB = "ScrollText";
int ScrollText::msPerTick = 50;
bool ScrollText::finished = false;
bool ScrollText::enable = false;
String ScrollText::msgToShow = "MSG";
    1a2a:	84 ee       	ldi	r24, 0xE4	; 228
    1a2c:	94 e0       	ldi	r25, 0x04	; 4
    1a2e:	0c 94 5d 17 	jmp	0x2eba	; 0x2eba <_ZN6StringD1Ev>

00001a32 <setup>:
MQTT *mqtt;
ScrollText *scrollText;



void setup() {
    1a32:	0f 93       	push	r16
    1a34:	cf 93       	push	r28
    1a36:	df 93       	push	r29
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1a38:	26 e0       	ldi	r18, 0x06	; 6
    1a3a:	40 e0       	ldi	r20, 0x00	; 0
    1a3c:	5b e4       	ldi	r21, 0x4B	; 75
    1a3e:	60 e0       	ldi	r22, 0x00	; 0
    1a40:	70 e0       	ldi	r23, 0x00	; 0
    1a42:	86 ef       	ldi	r24, 0xF6	; 246
    1a44:	94 e0       	ldi	r25, 0x04	; 4
    1a46:	fc d2       	rcall	.+1528   	; 0x2040 <_ZN14HardwareSerial5beginEmh>
	//log para el ESP8266
	Serial.begin(19200);
	DDRA = 1 << PA0 | 1 << PA1 | 1 << PA2 | 1 << PA3 | 1 << PA4;
    1a48:	8f e1       	ldi	r24, 0x1F	; 31
    1a4a:	81 b9       	out	0x01, r24	; 1
	PORTA |= (1 << PA5);
    1a4c:	15 9a       	sbi	0x02, 5	; 2
	mqtt = new MQTT();
    1a4e:	82 e1       	ldi	r24, 0x12	; 18
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	e4 d4       	rcall	.+2504   	; 0x241c <_Znwj>
    1a54:	ec 01       	movw	r28, r24
    1a56:	d7 dc       	rcall	.-1618   	; 0x1406 <_ZN4MQTTC1Ev>
    1a58:	d0 93 ef 04 	sts	0x04EF, r29	; 0x8004ef <mqtt+0x1>
    1a5c:	c0 93 ee 04 	sts	0x04EE, r28	; 0x8004ee <mqtt>
	scrollText = new ScrollText(51, 53, 52, 4);
    1a60:	84 e1       	ldi	r24, 0x14	; 20
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	db d4       	rcall	.+2486   	; 0x241c <_Znwj>
    1a66:	ec 01       	movw	r28, r24
    1a68:	04 e0       	ldi	r16, 0x04	; 4
    1a6a:	24 e3       	ldi	r18, 0x34	; 52
    1a6c:	45 e3       	ldi	r20, 0x35	; 53
    1a6e:	63 e3       	ldi	r22, 0x33	; 51
    1a70:	df de       	rcall	.-578    	; 0x1830 <_ZN10ScrollTextC1Ehhhh>
    1a72:	d0 93 ed 04 	sts	0x04ED, r29	; 0x8004ed <scrollText+0x1>
    1a76:	c0 93 ec 04 	sts	0x04EC, r28	; 0x8004ec <scrollText>
    1a7a:	df 91       	pop	r29
	
}
    1a7c:	cf 91       	pop	r28
    1a7e:	0f 91       	pop	r16
    1a80:	08 95       	ret

00001a82 <loop>:
    1a82:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <mqtt>
void loop() {
	mqtt->update();
    1a86:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <mqtt+0x1>
    1a8a:	16 dd       	rcall	.-1492   	; 0x14b8 <_ZN4MQTT6updateEv>
	scrollText->update();
    1a8c:	80 91 ec 04 	lds	r24, 0x04EC	; 0x8004ec <scrollText>
    1a90:	90 91 ed 04 	lds	r25, 0x04ED	; 0x8004ed <scrollText+0x1>
    1a94:	88 df       	rcall	.-240    	; 0x19a6 <_ZN10ScrollText6updateEv>
	
	
	if(!(PINA & (1 << PA5))){
    1a96:	05 99       	sbic	0x00, 5	; 0
    1a98:	03 c0       	rjmp	.+6      	; 0x1aa0 <loop+0x1e>
		PORTA &= ~(1 << PA4) & ~(1 << PA3);
    1a9a:	82 b1       	in	r24, 0x02	; 2
    1a9c:	87 7e       	andi	r24, 0xE7	; 231
    1a9e:	82 b9       	out	0x02, r24	; 2
    1aa0:	08 95       	ret

00001aa2 <_GLOBAL__sub_I_mqtt>:
	}
    1aa2:	0f 93       	push	r16
    1aa4:	00 e0       	ldi	r16, 0x00	; 0
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	40 e0       	ldi	r20, 0x00	; 0
    1aaa:	60 e0       	ldi	r22, 0x00	; 0
    1aac:	80 ef       	ldi	r24, 0xF0	; 240
    1aae:	94 e0       	ldi	r25, 0x04	; 4
    1ab0:	9e d4       	rcall	.+2364   	; 0x23ee <_ZN9IPAddressC1Ehhhh>
    1ab2:	0f 91       	pop	r16
    1ab4:	08 95       	ret

00001ab6 <__subsf3>:
    1ab6:	50 58       	subi	r21, 0x80	; 128

00001ab8 <__addsf3>:
    1ab8:	bb 27       	eor	r27, r27
    1aba:	aa 27       	eor	r26, r26
    1abc:	0e d0       	rcall	.+28     	; 0x1ada <__addsf3x>
    1abe:	1c c1       	rjmp	.+568    	; 0x1cf8 <__fp_round>
    1ac0:	0d d1       	rcall	.+538    	; 0x1cdc <__fp_pscA>
    1ac2:	30 f0       	brcs	.+12     	; 0x1ad0 <__addsf3+0x18>
    1ac4:	12 d1       	rcall	.+548    	; 0x1cea <__fp_pscB>
    1ac6:	20 f0       	brcs	.+8      	; 0x1ad0 <__addsf3+0x18>
    1ac8:	31 f4       	brne	.+12     	; 0x1ad6 <__addsf3+0x1e>
    1aca:	9f 3f       	cpi	r25, 0xFF	; 255
    1acc:	11 f4       	brne	.+4      	; 0x1ad2 <__addsf3+0x1a>
    1ace:	1e f4       	brtc	.+6      	; 0x1ad6 <__addsf3+0x1e>
    1ad0:	02 c1       	rjmp	.+516    	; 0x1cd6 <__fp_nan>
    1ad2:	0e f4       	brtc	.+2      	; 0x1ad6 <__addsf3+0x1e>
    1ad4:	e0 95       	com	r30
    1ad6:	e7 fb       	bst	r30, 7
    1ad8:	f8 c0       	rjmp	.+496    	; 0x1cca <__fp_inf>

00001ada <__addsf3x>:
    1ada:	e9 2f       	mov	r30, r25
    1adc:	1e d1       	rcall	.+572    	; 0x1d1a <__fp_split3>
    1ade:	80 f3       	brcs	.-32     	; 0x1ac0 <__addsf3+0x8>
    1ae0:	ba 17       	cp	r27, r26
    1ae2:	62 07       	cpc	r22, r18
    1ae4:	73 07       	cpc	r23, r19
    1ae6:	84 07       	cpc	r24, r20
    1ae8:	95 07       	cpc	r25, r21
    1aea:	18 f0       	brcs	.+6      	; 0x1af2 <__addsf3x+0x18>
    1aec:	71 f4       	brne	.+28     	; 0x1b0a <__addsf3x+0x30>
    1aee:	9e f5       	brtc	.+102    	; 0x1b56 <__addsf3x+0x7c>
    1af0:	36 c1       	rjmp	.+620    	; 0x1d5e <__fp_zero>
    1af2:	0e f4       	brtc	.+2      	; 0x1af6 <__addsf3x+0x1c>
    1af4:	e0 95       	com	r30
    1af6:	0b 2e       	mov	r0, r27
    1af8:	ba 2f       	mov	r27, r26
    1afa:	a0 2d       	mov	r26, r0
    1afc:	0b 01       	movw	r0, r22
    1afe:	b9 01       	movw	r22, r18
    1b00:	90 01       	movw	r18, r0
    1b02:	0c 01       	movw	r0, r24
    1b04:	ca 01       	movw	r24, r20
    1b06:	a0 01       	movw	r20, r0
    1b08:	11 24       	eor	r1, r1
    1b0a:	ff 27       	eor	r31, r31
    1b0c:	59 1b       	sub	r21, r25
    1b0e:	99 f0       	breq	.+38     	; 0x1b36 <__addsf3x+0x5c>
    1b10:	59 3f       	cpi	r21, 0xF9	; 249
    1b12:	50 f4       	brcc	.+20     	; 0x1b28 <__addsf3x+0x4e>
    1b14:	50 3e       	cpi	r21, 0xE0	; 224
    1b16:	68 f1       	brcs	.+90     	; 0x1b72 <__addsf3x+0x98>
    1b18:	1a 16       	cp	r1, r26
    1b1a:	f0 40       	sbci	r31, 0x00	; 0
    1b1c:	a2 2f       	mov	r26, r18
    1b1e:	23 2f       	mov	r18, r19
    1b20:	34 2f       	mov	r19, r20
    1b22:	44 27       	eor	r20, r20
    1b24:	58 5f       	subi	r21, 0xF8	; 248
    1b26:	f3 cf       	rjmp	.-26     	; 0x1b0e <__addsf3x+0x34>
    1b28:	46 95       	lsr	r20
    1b2a:	37 95       	ror	r19
    1b2c:	27 95       	ror	r18
    1b2e:	a7 95       	ror	r26
    1b30:	f0 40       	sbci	r31, 0x00	; 0
    1b32:	53 95       	inc	r21
    1b34:	c9 f7       	brne	.-14     	; 0x1b28 <__addsf3x+0x4e>
    1b36:	7e f4       	brtc	.+30     	; 0x1b56 <__addsf3x+0x7c>
    1b38:	1f 16       	cp	r1, r31
    1b3a:	ba 0b       	sbc	r27, r26
    1b3c:	62 0b       	sbc	r22, r18
    1b3e:	73 0b       	sbc	r23, r19
    1b40:	84 0b       	sbc	r24, r20
    1b42:	ba f0       	brmi	.+46     	; 0x1b72 <__addsf3x+0x98>
    1b44:	91 50       	subi	r25, 0x01	; 1
    1b46:	a1 f0       	breq	.+40     	; 0x1b70 <__addsf3x+0x96>
    1b48:	ff 0f       	add	r31, r31
    1b4a:	bb 1f       	adc	r27, r27
    1b4c:	66 1f       	adc	r22, r22
    1b4e:	77 1f       	adc	r23, r23
    1b50:	88 1f       	adc	r24, r24
    1b52:	c2 f7       	brpl	.-16     	; 0x1b44 <__addsf3x+0x6a>
    1b54:	0e c0       	rjmp	.+28     	; 0x1b72 <__addsf3x+0x98>
    1b56:	ba 0f       	add	r27, r26
    1b58:	62 1f       	adc	r22, r18
    1b5a:	73 1f       	adc	r23, r19
    1b5c:	84 1f       	adc	r24, r20
    1b5e:	48 f4       	brcc	.+18     	; 0x1b72 <__addsf3x+0x98>
    1b60:	87 95       	ror	r24
    1b62:	77 95       	ror	r23
    1b64:	67 95       	ror	r22
    1b66:	b7 95       	ror	r27
    1b68:	f7 95       	ror	r31
    1b6a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b6c:	08 f0       	brcs	.+2      	; 0x1b70 <__addsf3x+0x96>
    1b6e:	b3 cf       	rjmp	.-154    	; 0x1ad6 <__addsf3+0x1e>
    1b70:	93 95       	inc	r25
    1b72:	88 0f       	add	r24, r24
    1b74:	08 f0       	brcs	.+2      	; 0x1b78 <__addsf3x+0x9e>
    1b76:	99 27       	eor	r25, r25
    1b78:	ee 0f       	add	r30, r30
    1b7a:	97 95       	ror	r25
    1b7c:	87 95       	ror	r24
    1b7e:	08 95       	ret

00001b80 <__divsf3>:
    1b80:	0c d0       	rcall	.+24     	; 0x1b9a <__divsf3x>
    1b82:	ba c0       	rjmp	.+372    	; 0x1cf8 <__fp_round>
    1b84:	b2 d0       	rcall	.+356    	; 0x1cea <__fp_pscB>
    1b86:	40 f0       	brcs	.+16     	; 0x1b98 <__divsf3+0x18>
    1b88:	a9 d0       	rcall	.+338    	; 0x1cdc <__fp_pscA>
    1b8a:	30 f0       	brcs	.+12     	; 0x1b98 <__divsf3+0x18>
    1b8c:	21 f4       	brne	.+8      	; 0x1b96 <__divsf3+0x16>
    1b8e:	5f 3f       	cpi	r21, 0xFF	; 255
    1b90:	19 f0       	breq	.+6      	; 0x1b98 <__divsf3+0x18>
    1b92:	9b c0       	rjmp	.+310    	; 0x1cca <__fp_inf>
    1b94:	51 11       	cpse	r21, r1
    1b96:	e4 c0       	rjmp	.+456    	; 0x1d60 <__fp_szero>
    1b98:	9e c0       	rjmp	.+316    	; 0x1cd6 <__fp_nan>

00001b9a <__divsf3x>:
    1b9a:	bf d0       	rcall	.+382    	; 0x1d1a <__fp_split3>
    1b9c:	98 f3       	brcs	.-26     	; 0x1b84 <__divsf3+0x4>

00001b9e <__divsf3_pse>:
    1b9e:	99 23       	and	r25, r25
    1ba0:	c9 f3       	breq	.-14     	; 0x1b94 <__divsf3+0x14>
    1ba2:	55 23       	and	r21, r21
    1ba4:	b1 f3       	breq	.-20     	; 0x1b92 <__divsf3+0x12>
    1ba6:	95 1b       	sub	r25, r21
    1ba8:	55 0b       	sbc	r21, r21
    1baa:	bb 27       	eor	r27, r27
    1bac:	aa 27       	eor	r26, r26
    1bae:	62 17       	cp	r22, r18
    1bb0:	73 07       	cpc	r23, r19
    1bb2:	84 07       	cpc	r24, r20
    1bb4:	38 f0       	brcs	.+14     	; 0x1bc4 <__divsf3_pse+0x26>
    1bb6:	9f 5f       	subi	r25, 0xFF	; 255
    1bb8:	5f 4f       	sbci	r21, 0xFF	; 255
    1bba:	22 0f       	add	r18, r18
    1bbc:	33 1f       	adc	r19, r19
    1bbe:	44 1f       	adc	r20, r20
    1bc0:	aa 1f       	adc	r26, r26
    1bc2:	a9 f3       	breq	.-22     	; 0x1bae <__divsf3_pse+0x10>
    1bc4:	33 d0       	rcall	.+102    	; 0x1c2c <__divsf3_pse+0x8e>
    1bc6:	0e 2e       	mov	r0, r30
    1bc8:	3a f0       	brmi	.+14     	; 0x1bd8 <__divsf3_pse+0x3a>
    1bca:	e0 e8       	ldi	r30, 0x80	; 128
    1bcc:	30 d0       	rcall	.+96     	; 0x1c2e <__divsf3_pse+0x90>
    1bce:	91 50       	subi	r25, 0x01	; 1
    1bd0:	50 40       	sbci	r21, 0x00	; 0
    1bd2:	e6 95       	lsr	r30
    1bd4:	00 1c       	adc	r0, r0
    1bd6:	ca f7       	brpl	.-14     	; 0x1bca <__divsf3_pse+0x2c>
    1bd8:	29 d0       	rcall	.+82     	; 0x1c2c <__divsf3_pse+0x8e>
    1bda:	fe 2f       	mov	r31, r30
    1bdc:	27 d0       	rcall	.+78     	; 0x1c2c <__divsf3_pse+0x8e>
    1bde:	66 0f       	add	r22, r22
    1be0:	77 1f       	adc	r23, r23
    1be2:	88 1f       	adc	r24, r24
    1be4:	bb 1f       	adc	r27, r27
    1be6:	26 17       	cp	r18, r22
    1be8:	37 07       	cpc	r19, r23
    1bea:	48 07       	cpc	r20, r24
    1bec:	ab 07       	cpc	r26, r27
    1bee:	b0 e8       	ldi	r27, 0x80	; 128
    1bf0:	09 f0       	breq	.+2      	; 0x1bf4 <__divsf3_pse+0x56>
    1bf2:	bb 0b       	sbc	r27, r27
    1bf4:	80 2d       	mov	r24, r0
    1bf6:	bf 01       	movw	r22, r30
    1bf8:	ff 27       	eor	r31, r31
    1bfa:	93 58       	subi	r25, 0x83	; 131
    1bfc:	5f 4f       	sbci	r21, 0xFF	; 255
    1bfe:	2a f0       	brmi	.+10     	; 0x1c0a <__divsf3_pse+0x6c>
    1c00:	9e 3f       	cpi	r25, 0xFE	; 254
    1c02:	51 05       	cpc	r21, r1
    1c04:	68 f0       	brcs	.+26     	; 0x1c20 <__divsf3_pse+0x82>
    1c06:	61 c0       	rjmp	.+194    	; 0x1cca <__fp_inf>
    1c08:	ab c0       	rjmp	.+342    	; 0x1d60 <__fp_szero>
    1c0a:	5f 3f       	cpi	r21, 0xFF	; 255
    1c0c:	ec f3       	brlt	.-6      	; 0x1c08 <__divsf3_pse+0x6a>
    1c0e:	98 3e       	cpi	r25, 0xE8	; 232
    1c10:	dc f3       	brlt	.-10     	; 0x1c08 <__divsf3_pse+0x6a>
    1c12:	86 95       	lsr	r24
    1c14:	77 95       	ror	r23
    1c16:	67 95       	ror	r22
    1c18:	b7 95       	ror	r27
    1c1a:	f7 95       	ror	r31
    1c1c:	9f 5f       	subi	r25, 0xFF	; 255
    1c1e:	c9 f7       	brne	.-14     	; 0x1c12 <__divsf3_pse+0x74>
    1c20:	88 0f       	add	r24, r24
    1c22:	91 1d       	adc	r25, r1
    1c24:	96 95       	lsr	r25
    1c26:	87 95       	ror	r24
    1c28:	97 f9       	bld	r25, 7
    1c2a:	08 95       	ret
    1c2c:	e1 e0       	ldi	r30, 0x01	; 1
    1c2e:	66 0f       	add	r22, r22
    1c30:	77 1f       	adc	r23, r23
    1c32:	88 1f       	adc	r24, r24
    1c34:	bb 1f       	adc	r27, r27
    1c36:	62 17       	cp	r22, r18
    1c38:	73 07       	cpc	r23, r19
    1c3a:	84 07       	cpc	r24, r20
    1c3c:	ba 07       	cpc	r27, r26
    1c3e:	20 f0       	brcs	.+8      	; 0x1c48 <__divsf3_pse+0xaa>
    1c40:	62 1b       	sub	r22, r18
    1c42:	73 0b       	sbc	r23, r19
    1c44:	84 0b       	sbc	r24, r20
    1c46:	ba 0b       	sbc	r27, r26
    1c48:	ee 1f       	adc	r30, r30
    1c4a:	88 f7       	brcc	.-30     	; 0x1c2e <__divsf3_pse+0x90>
    1c4c:	e0 95       	com	r30
    1c4e:	08 95       	ret

00001c50 <__floatunsisf>:
    1c50:	e8 94       	clt
    1c52:	09 c0       	rjmp	.+18     	; 0x1c66 <__floatsisf+0x12>

00001c54 <__floatsisf>:
    1c54:	97 fb       	bst	r25, 7
    1c56:	3e f4       	brtc	.+14     	; 0x1c66 <__floatsisf+0x12>
    1c58:	90 95       	com	r25
    1c5a:	80 95       	com	r24
    1c5c:	70 95       	com	r23
    1c5e:	61 95       	neg	r22
    1c60:	7f 4f       	sbci	r23, 0xFF	; 255
    1c62:	8f 4f       	sbci	r24, 0xFF	; 255
    1c64:	9f 4f       	sbci	r25, 0xFF	; 255
    1c66:	99 23       	and	r25, r25
    1c68:	a9 f0       	breq	.+42     	; 0x1c94 <__floatsisf+0x40>
    1c6a:	f9 2f       	mov	r31, r25
    1c6c:	96 e9       	ldi	r25, 0x96	; 150
    1c6e:	bb 27       	eor	r27, r27
    1c70:	93 95       	inc	r25
    1c72:	f6 95       	lsr	r31
    1c74:	87 95       	ror	r24
    1c76:	77 95       	ror	r23
    1c78:	67 95       	ror	r22
    1c7a:	b7 95       	ror	r27
    1c7c:	f1 11       	cpse	r31, r1
    1c7e:	f8 cf       	rjmp	.-16     	; 0x1c70 <__floatsisf+0x1c>
    1c80:	fa f4       	brpl	.+62     	; 0x1cc0 <__floatsisf+0x6c>
    1c82:	bb 0f       	add	r27, r27
    1c84:	11 f4       	brne	.+4      	; 0x1c8a <__floatsisf+0x36>
    1c86:	60 ff       	sbrs	r22, 0
    1c88:	1b c0       	rjmp	.+54     	; 0x1cc0 <__floatsisf+0x6c>
    1c8a:	6f 5f       	subi	r22, 0xFF	; 255
    1c8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1c90:	9f 4f       	sbci	r25, 0xFF	; 255
    1c92:	16 c0       	rjmp	.+44     	; 0x1cc0 <__floatsisf+0x6c>
    1c94:	88 23       	and	r24, r24
    1c96:	11 f0       	breq	.+4      	; 0x1c9c <__floatsisf+0x48>
    1c98:	96 e9       	ldi	r25, 0x96	; 150
    1c9a:	11 c0       	rjmp	.+34     	; 0x1cbe <__floatsisf+0x6a>
    1c9c:	77 23       	and	r23, r23
    1c9e:	21 f0       	breq	.+8      	; 0x1ca8 <__floatsisf+0x54>
    1ca0:	9e e8       	ldi	r25, 0x8E	; 142
    1ca2:	87 2f       	mov	r24, r23
    1ca4:	76 2f       	mov	r23, r22
    1ca6:	05 c0       	rjmp	.+10     	; 0x1cb2 <__floatsisf+0x5e>
    1ca8:	66 23       	and	r22, r22
    1caa:	71 f0       	breq	.+28     	; 0x1cc8 <__floatsisf+0x74>
    1cac:	96 e8       	ldi	r25, 0x86	; 134
    1cae:	86 2f       	mov	r24, r22
    1cb0:	70 e0       	ldi	r23, 0x00	; 0
    1cb2:	60 e0       	ldi	r22, 0x00	; 0
    1cb4:	2a f0       	brmi	.+10     	; 0x1cc0 <__floatsisf+0x6c>
    1cb6:	9a 95       	dec	r25
    1cb8:	66 0f       	add	r22, r22
    1cba:	77 1f       	adc	r23, r23
    1cbc:	88 1f       	adc	r24, r24
    1cbe:	da f7       	brpl	.-10     	; 0x1cb6 <__floatsisf+0x62>
    1cc0:	88 0f       	add	r24, r24
    1cc2:	96 95       	lsr	r25
    1cc4:	87 95       	ror	r24
    1cc6:	97 f9       	bld	r25, 7
    1cc8:	08 95       	ret

00001cca <__fp_inf>:
    1cca:	97 f9       	bld	r25, 7
    1ccc:	9f 67       	ori	r25, 0x7F	; 127
    1cce:	80 e8       	ldi	r24, 0x80	; 128
    1cd0:	70 e0       	ldi	r23, 0x00	; 0
    1cd2:	60 e0       	ldi	r22, 0x00	; 0
    1cd4:	08 95       	ret

00001cd6 <__fp_nan>:
    1cd6:	9f ef       	ldi	r25, 0xFF	; 255
    1cd8:	80 ec       	ldi	r24, 0xC0	; 192
    1cda:	08 95       	ret

00001cdc <__fp_pscA>:
    1cdc:	00 24       	eor	r0, r0
    1cde:	0a 94       	dec	r0
    1ce0:	16 16       	cp	r1, r22
    1ce2:	17 06       	cpc	r1, r23
    1ce4:	18 06       	cpc	r1, r24
    1ce6:	09 06       	cpc	r0, r25
    1ce8:	08 95       	ret

00001cea <__fp_pscB>:
    1cea:	00 24       	eor	r0, r0
    1cec:	0a 94       	dec	r0
    1cee:	12 16       	cp	r1, r18
    1cf0:	13 06       	cpc	r1, r19
    1cf2:	14 06       	cpc	r1, r20
    1cf4:	05 06       	cpc	r0, r21
    1cf6:	08 95       	ret

00001cf8 <__fp_round>:
    1cf8:	09 2e       	mov	r0, r25
    1cfa:	03 94       	inc	r0
    1cfc:	00 0c       	add	r0, r0
    1cfe:	11 f4       	brne	.+4      	; 0x1d04 <__fp_round+0xc>
    1d00:	88 23       	and	r24, r24
    1d02:	52 f0       	brmi	.+20     	; 0x1d18 <__fp_round+0x20>
    1d04:	bb 0f       	add	r27, r27
    1d06:	40 f4       	brcc	.+16     	; 0x1d18 <__fp_round+0x20>
    1d08:	bf 2b       	or	r27, r31
    1d0a:	11 f4       	brne	.+4      	; 0x1d10 <__fp_round+0x18>
    1d0c:	60 ff       	sbrs	r22, 0
    1d0e:	04 c0       	rjmp	.+8      	; 0x1d18 <__fp_round+0x20>
    1d10:	6f 5f       	subi	r22, 0xFF	; 255
    1d12:	7f 4f       	sbci	r23, 0xFF	; 255
    1d14:	8f 4f       	sbci	r24, 0xFF	; 255
    1d16:	9f 4f       	sbci	r25, 0xFF	; 255
    1d18:	08 95       	ret

00001d1a <__fp_split3>:
    1d1a:	57 fd       	sbrc	r21, 7
    1d1c:	90 58       	subi	r25, 0x80	; 128
    1d1e:	44 0f       	add	r20, r20
    1d20:	55 1f       	adc	r21, r21
    1d22:	59 f0       	breq	.+22     	; 0x1d3a <__fp_splitA+0x10>
    1d24:	5f 3f       	cpi	r21, 0xFF	; 255
    1d26:	71 f0       	breq	.+28     	; 0x1d44 <__fp_splitA+0x1a>
    1d28:	47 95       	ror	r20

00001d2a <__fp_splitA>:
    1d2a:	88 0f       	add	r24, r24
    1d2c:	97 fb       	bst	r25, 7
    1d2e:	99 1f       	adc	r25, r25
    1d30:	61 f0       	breq	.+24     	; 0x1d4a <__fp_splitA+0x20>
    1d32:	9f 3f       	cpi	r25, 0xFF	; 255
    1d34:	79 f0       	breq	.+30     	; 0x1d54 <__fp_splitA+0x2a>
    1d36:	87 95       	ror	r24
    1d38:	08 95       	ret
    1d3a:	12 16       	cp	r1, r18
    1d3c:	13 06       	cpc	r1, r19
    1d3e:	14 06       	cpc	r1, r20
    1d40:	55 1f       	adc	r21, r21
    1d42:	f2 cf       	rjmp	.-28     	; 0x1d28 <__fp_split3+0xe>
    1d44:	46 95       	lsr	r20
    1d46:	f1 df       	rcall	.-30     	; 0x1d2a <__fp_splitA>
    1d48:	08 c0       	rjmp	.+16     	; 0x1d5a <__fp_splitA+0x30>
    1d4a:	16 16       	cp	r1, r22
    1d4c:	17 06       	cpc	r1, r23
    1d4e:	18 06       	cpc	r1, r24
    1d50:	99 1f       	adc	r25, r25
    1d52:	f1 cf       	rjmp	.-30     	; 0x1d36 <__fp_splitA+0xc>
    1d54:	86 95       	lsr	r24
    1d56:	71 05       	cpc	r23, r1
    1d58:	61 05       	cpc	r22, r1
    1d5a:	08 94       	sec
    1d5c:	08 95       	ret

00001d5e <__fp_zero>:
    1d5e:	e8 94       	clt

00001d60 <__fp_szero>:
    1d60:	bb 27       	eor	r27, r27
    1d62:	66 27       	eor	r22, r22
    1d64:	77 27       	eor	r23, r23
    1d66:	cb 01       	movw	r24, r22
    1d68:	97 f9       	bld	r25, 7
    1d6a:	08 95       	ret

00001d6c <__mulsf3>:
    1d6c:	0b d0       	rcall	.+22     	; 0x1d84 <__mulsf3x>
    1d6e:	c4 cf       	rjmp	.-120    	; 0x1cf8 <__fp_round>
    1d70:	b5 df       	rcall	.-150    	; 0x1cdc <__fp_pscA>
    1d72:	28 f0       	brcs	.+10     	; 0x1d7e <__mulsf3+0x12>
    1d74:	ba df       	rcall	.-140    	; 0x1cea <__fp_pscB>
    1d76:	18 f0       	brcs	.+6      	; 0x1d7e <__mulsf3+0x12>
    1d78:	95 23       	and	r25, r21
    1d7a:	09 f0       	breq	.+2      	; 0x1d7e <__mulsf3+0x12>
    1d7c:	a6 cf       	rjmp	.-180    	; 0x1cca <__fp_inf>
    1d7e:	ab cf       	rjmp	.-170    	; 0x1cd6 <__fp_nan>
    1d80:	11 24       	eor	r1, r1
    1d82:	ee cf       	rjmp	.-36     	; 0x1d60 <__fp_szero>

00001d84 <__mulsf3x>:
    1d84:	ca df       	rcall	.-108    	; 0x1d1a <__fp_split3>
    1d86:	a0 f3       	brcs	.-24     	; 0x1d70 <__mulsf3+0x4>

00001d88 <__mulsf3_pse>:
    1d88:	95 9f       	mul	r25, r21
    1d8a:	d1 f3       	breq	.-12     	; 0x1d80 <__mulsf3+0x14>
    1d8c:	95 0f       	add	r25, r21
    1d8e:	50 e0       	ldi	r21, 0x00	; 0
    1d90:	55 1f       	adc	r21, r21
    1d92:	62 9f       	mul	r22, r18
    1d94:	f0 01       	movw	r30, r0
    1d96:	72 9f       	mul	r23, r18
    1d98:	bb 27       	eor	r27, r27
    1d9a:	f0 0d       	add	r31, r0
    1d9c:	b1 1d       	adc	r27, r1
    1d9e:	63 9f       	mul	r22, r19
    1da0:	aa 27       	eor	r26, r26
    1da2:	f0 0d       	add	r31, r0
    1da4:	b1 1d       	adc	r27, r1
    1da6:	aa 1f       	adc	r26, r26
    1da8:	64 9f       	mul	r22, r20
    1daa:	66 27       	eor	r22, r22
    1dac:	b0 0d       	add	r27, r0
    1dae:	a1 1d       	adc	r26, r1
    1db0:	66 1f       	adc	r22, r22
    1db2:	82 9f       	mul	r24, r18
    1db4:	22 27       	eor	r18, r18
    1db6:	b0 0d       	add	r27, r0
    1db8:	a1 1d       	adc	r26, r1
    1dba:	62 1f       	adc	r22, r18
    1dbc:	73 9f       	mul	r23, r19
    1dbe:	b0 0d       	add	r27, r0
    1dc0:	a1 1d       	adc	r26, r1
    1dc2:	62 1f       	adc	r22, r18
    1dc4:	83 9f       	mul	r24, r19
    1dc6:	a0 0d       	add	r26, r0
    1dc8:	61 1d       	adc	r22, r1
    1dca:	22 1f       	adc	r18, r18
    1dcc:	74 9f       	mul	r23, r20
    1dce:	33 27       	eor	r19, r19
    1dd0:	a0 0d       	add	r26, r0
    1dd2:	61 1d       	adc	r22, r1
    1dd4:	23 1f       	adc	r18, r19
    1dd6:	84 9f       	mul	r24, r20
    1dd8:	60 0d       	add	r22, r0
    1dda:	21 1d       	adc	r18, r1
    1ddc:	82 2f       	mov	r24, r18
    1dde:	76 2f       	mov	r23, r22
    1de0:	6a 2f       	mov	r22, r26
    1de2:	11 24       	eor	r1, r1
    1de4:	9f 57       	subi	r25, 0x7F	; 127
    1de6:	50 40       	sbci	r21, 0x00	; 0
    1de8:	8a f0       	brmi	.+34     	; 0x1e0c <__mulsf3_pse+0x84>
    1dea:	e1 f0       	breq	.+56     	; 0x1e24 <__mulsf3_pse+0x9c>
    1dec:	88 23       	and	r24, r24
    1dee:	4a f0       	brmi	.+18     	; 0x1e02 <__mulsf3_pse+0x7a>
    1df0:	ee 0f       	add	r30, r30
    1df2:	ff 1f       	adc	r31, r31
    1df4:	bb 1f       	adc	r27, r27
    1df6:	66 1f       	adc	r22, r22
    1df8:	77 1f       	adc	r23, r23
    1dfa:	88 1f       	adc	r24, r24
    1dfc:	91 50       	subi	r25, 0x01	; 1
    1dfe:	50 40       	sbci	r21, 0x00	; 0
    1e00:	a9 f7       	brne	.-22     	; 0x1dec <__mulsf3_pse+0x64>
    1e02:	9e 3f       	cpi	r25, 0xFE	; 254
    1e04:	51 05       	cpc	r21, r1
    1e06:	70 f0       	brcs	.+28     	; 0x1e24 <__mulsf3_pse+0x9c>
    1e08:	60 cf       	rjmp	.-320    	; 0x1cca <__fp_inf>
    1e0a:	aa cf       	rjmp	.-172    	; 0x1d60 <__fp_szero>
    1e0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1e0e:	ec f3       	brlt	.-6      	; 0x1e0a <__mulsf3_pse+0x82>
    1e10:	98 3e       	cpi	r25, 0xE8	; 232
    1e12:	dc f3       	brlt	.-10     	; 0x1e0a <__mulsf3_pse+0x82>
    1e14:	86 95       	lsr	r24
    1e16:	77 95       	ror	r23
    1e18:	67 95       	ror	r22
    1e1a:	b7 95       	ror	r27
    1e1c:	f7 95       	ror	r31
    1e1e:	e7 95       	ror	r30
    1e20:	9f 5f       	subi	r25, 0xFF	; 255
    1e22:	c1 f7       	brne	.-16     	; 0x1e14 <__mulsf3_pse+0x8c>
    1e24:	fe 2b       	or	r31, r30
    1e26:	88 0f       	add	r24, r24
    1e28:	91 1d       	adc	r25, r1
    1e2a:	96 95       	lsr	r25
    1e2c:	87 95       	ror	r24
    1e2e:	97 f9       	bld	r25, 7
    1e30:	08 95       	ret

00001e32 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    1e32:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    1e34:	91 8d       	ldd	r25, Z+25	; 0x19
    1e36:	22 8d       	ldd	r18, Z+26	; 0x1a
    1e38:	89 2f       	mov	r24, r25
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	80 5c       	subi	r24, 0xC0	; 192
    1e3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e40:	82 1b       	sub	r24, r18
    1e42:	91 09       	sbc	r25, r1
}
    1e44:	8f 73       	andi	r24, 0x3F	; 63
    1e46:	99 27       	eor	r25, r25
    1e48:	08 95       	ret

00001e4a <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    1e4a:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    1e4c:	91 8d       	ldd	r25, Z+25	; 0x19
    1e4e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e50:	98 17       	cp	r25, r24
    1e52:	31 f0       	breq	.+12     	; 0x1e60 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    1e54:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e56:	e8 0f       	add	r30, r24
    1e58:	f1 1d       	adc	r31, r1
    1e5a:	85 8d       	ldd	r24, Z+29	; 0x1d
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1e60:	8f ef       	ldi	r24, 0xFF	; 255
    1e62:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    1e64:	08 95       	ret

00001e66 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    1e66:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    1e68:	91 8d       	ldd	r25, Z+25	; 0x19
    1e6a:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e6c:	98 17       	cp	r25, r24
    1e6e:	61 f0       	breq	.+24     	; 0x1e88 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    1e70:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e72:	df 01       	movw	r26, r30
    1e74:	a8 0f       	add	r26, r24
    1e76:	b1 1d       	adc	r27, r1
    1e78:	5d 96       	adiw	r26, 0x1d	; 29
    1e7a:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    1e7c:	92 8d       	ldd	r25, Z+26	; 0x1a
    1e7e:	9f 5f       	subi	r25, 0xFF	; 255
    1e80:	9f 73       	andi	r25, 0x3F	; 63
    1e82:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1e88:	8f ef       	ldi	r24, 0xFF	; 255
    1e8a:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    1e8c:	08 95       	ret

00001e8e <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    1e8e:	fc 01       	movw	r30, r24
    1e90:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    1e92:	44 8d       	ldd	r20, Z+28	; 0x1c
    1e94:	25 2f       	mov	r18, r21
    1e96:	30 e0       	ldi	r19, 0x00	; 0
    1e98:	84 2f       	mov	r24, r20
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    1e9c:	82 1b       	sub	r24, r18
    1e9e:	93 0b       	sbc	r25, r19
    1ea0:	54 17       	cp	r21, r20
    1ea2:	10 f0       	brcs	.+4      	; 0x1ea8 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    1ea4:	cf 96       	adiw	r24, 0x3f	; 63
    1ea6:	08 95       	ret
  return tail - head - 1;
    1ea8:	01 97       	sbiw	r24, 0x01	; 1
}
    1eaa:	08 95       	ret

00001eac <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1eac:	83 ee       	ldi	r24, 0xE3	; 227
    1eae:	90 e1       	ldi	r25, 0x10	; 16
    1eb0:	89 2b       	or	r24, r25
    1eb2:	39 f0       	breq	.+14     	; 0x1ec2 <_Z14serialEventRunv+0x16>
    1eb4:	80 e0       	ldi	r24, 0x00	; 0
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	89 2b       	or	r24, r25
    1eba:	19 f0       	breq	.+6      	; 0x1ec2 <_Z14serialEventRunv+0x16>
    1ebc:	84 d1       	rcall	.+776    	; 0x21c6 <_Z17Serial0_availablev>
    1ebe:	81 11       	cpse	r24, r1
    1ec0:	24 c0       	rjmp	.+72     	; 0x1f0a <_Z14serialEventRunv+0x5e>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    1ec2:	88 e7       	ldi	r24, 0x78	; 120
    1ec4:	91 e1       	ldi	r25, 0x11	; 17
    1ec6:	89 2b       	or	r24, r25
    1ec8:	39 f0       	breq	.+14     	; 0x1ed8 <_Z14serialEventRunv+0x2c>
    1eca:	80 e0       	ldi	r24, 0x00	; 0
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	89 2b       	or	r24, r25
    1ed0:	19 f0       	breq	.+6      	; 0x1ed8 <_Z14serialEventRunv+0x2c>
    1ed2:	0e d2       	rcall	.+1052   	; 0x22f0 <_Z17Serial1_availablev>
    1ed4:	81 11       	cpse	r24, r1
    1ed6:	1c c0       	rjmp	.+56     	; 0x1f10 <_Z14serialEventRunv+0x64>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    1ed8:	80 e0       	ldi	r24, 0x00	; 0
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	89 2b       	or	r24, r25
    1ede:	41 f0       	breq	.+16     	; 0x1ef0 <_Z14serialEventRunv+0x44>
    1ee0:	80 e0       	ldi	r24, 0x00	; 0
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	89 2b       	or	r24, r25
    1ee6:	21 f0       	breq	.+8      	; 0x1ef0 <_Z14serialEventRunv+0x44>
    1ee8:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1eec:	81 11       	cpse	r24, r1
    1eee:	13 c0       	rjmp	.+38     	; 0x1f16 <_Z14serialEventRunv+0x6a>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    1ef0:	80 e0       	ldi	r24, 0x00	; 0
    1ef2:	90 e0       	ldi	r25, 0x00	; 0
    1ef4:	89 2b       	or	r24, r25
    1ef6:	a1 f0       	breq	.+40     	; 0x1f20 <_Z14serialEventRunv+0x74>
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	89 2b       	or	r24, r25
    1efe:	81 f0       	breq	.+32     	; 0x1f20 <_Z14serialEventRunv+0x74>
    1f00:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1f04:	81 11       	cpse	r24, r1
    1f06:	0a c0       	rjmp	.+20     	; 0x1f1c <_Z14serialEventRunv+0x70>
    1f08:	08 95       	ret
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1f0a:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1f0e:	d9 cf       	rjmp	.-78     	; 0x1ec2 <_Z14serialEventRunv+0x16>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    1f10:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1f14:	e1 cf       	rjmp	.-62     	; 0x1ed8 <_Z14serialEventRunv+0x2c>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    1f16:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1f1a:	ea cf       	rjmp	.-44     	; 0x1ef0 <_Z14serialEventRunv+0x44>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    1f1c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    1f20:	08 95       	ret

00001f22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    1f22:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    1f24:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f26:	df 01       	movw	r26, r30
    1f28:	a8 0f       	add	r26, r24
    1f2a:	b1 1d       	adc	r27, r1
    1f2c:	a3 5a       	subi	r26, 0xA3	; 163
    1f2e:	bf 4f       	sbci	r27, 0xFF	; 255
    1f30:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    1f32:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	01 96       	adiw	r24, 0x01	; 1
    1f38:	8f 73       	andi	r24, 0x3F	; 63
    1f3a:	99 27       	eor	r25, r25
    1f3c:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    1f3e:	a6 89       	ldd	r26, Z+22	; 0x16
    1f40:	b7 89       	ldd	r27, Z+23	; 0x17
    1f42:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    1f44:	a0 89       	ldd	r26, Z+16	; 0x10
    1f46:	b1 89       	ldd	r27, Z+17	; 0x11
    1f48:	8c 91       	ld	r24, X
    1f4a:	83 70       	andi	r24, 0x03	; 3
    1f4c:	80 64       	ori	r24, 0x40	; 64
    1f4e:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    1f50:	93 8d       	ldd	r25, Z+27	; 0x1b
    1f52:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f54:	98 13       	cpse	r25, r24
    1f56:	06 c0       	rjmp	.+12     	; 0x1f64 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    1f58:	02 88       	ldd	r0, Z+18	; 0x12
    1f5a:	f3 89       	ldd	r31, Z+19	; 0x13
    1f5c:	e0 2d       	mov	r30, r0
    1f5e:	80 81       	ld	r24, Z
    1f60:	8f 7d       	andi	r24, 0xDF	; 223
    1f62:	80 83       	st	Z, r24
    1f64:	08 95       	ret

00001f66 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    1f66:	ef 92       	push	r14
    1f68:	ff 92       	push	r15
    1f6a:	0f 93       	push	r16
    1f6c:	1f 93       	push	r17
    1f6e:	cf 93       	push	r28
    1f70:	df 93       	push	r29
    1f72:	ec 01       	movw	r28, r24
  _written = true;
    1f74:	81 e0       	ldi	r24, 0x01	; 1
    1f76:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    1f78:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1f7a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f7c:	98 13       	cpse	r25, r24
    1f7e:	05 c0       	rjmp	.+10     	; 0x1f8a <_ZN14HardwareSerial5writeEh+0x24>
    1f80:	e8 89       	ldd	r30, Y+16	; 0x10
    1f82:	f9 89       	ldd	r31, Y+17	; 0x11
    1f84:	80 81       	ld	r24, Z
    1f86:	85 fd       	sbrc	r24, 5
    1f88:	25 c0       	rjmp	.+74     	; 0x1fd4 <_ZN14HardwareSerial5writeEh+0x6e>
    1f8a:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    1f8c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1f8e:	10 e0       	ldi	r17, 0x00	; 0
    1f90:	0f 5f       	subi	r16, 0xFF	; 255
    1f92:	1f 4f       	sbci	r17, 0xFF	; 255
    1f94:	0f 73       	andi	r16, 0x3F	; 63
    1f96:	11 27       	eor	r17, r17
    1f98:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    1f9a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f9c:	e8 12       	cpse	r14, r24
    1f9e:	0b c0       	rjmp	.+22     	; 0x1fb6 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
    1fa0:	0f b6       	in	r0, 0x3f	; 63
    1fa2:	07 fc       	sbrc	r0, 7
    1fa4:	fa cf       	rjmp	.-12     	; 0x1f9a <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    1fa6:	e8 89       	ldd	r30, Y+16	; 0x10
    1fa8:	f9 89       	ldd	r31, Y+17	; 0x11
    1faa:	80 81       	ld	r24, Z
    1fac:	85 ff       	sbrs	r24, 5
    1fae:	f5 cf       	rjmp	.-22     	; 0x1f9a <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    1fb0:	ce 01       	movw	r24, r28
    1fb2:	b7 df       	rcall	.-146    	; 0x1f22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1fb4:	f2 cf       	rjmp	.-28     	; 0x1f9a <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    1fb6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1fb8:	fe 01       	movw	r30, r28
    1fba:	e8 0f       	add	r30, r24
    1fbc:	f1 1d       	adc	r31, r1
    1fbe:	e3 5a       	subi	r30, 0xA3	; 163
    1fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc2:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1fc4:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1fc6:	f8 94       	cli
    _tx_buffer_head = i;
    1fc8:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    1fca:	ea 89       	ldd	r30, Y+18	; 0x12
    1fcc:	fb 89       	ldd	r31, Y+19	; 0x13
    1fce:	80 81       	ld	r24, Z
    1fd0:	80 62       	ori	r24, 0x20	; 32
    1fd2:	0a c0       	rjmp	.+20     	; 0x1fe8 <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1fd4:	9f b7       	in	r25, 0x3f	; 63
    1fd6:	f8 94       	cli
      *_udr = c;
    1fd8:	ee 89       	ldd	r30, Y+22	; 0x16
    1fda:	ff 89       	ldd	r31, Y+23	; 0x17
    1fdc:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    1fde:	e8 89       	ldd	r30, Y+16	; 0x10
    1fe0:	f9 89       	ldd	r31, Y+17	; 0x11
    1fe2:	80 81       	ld	r24, Z
    1fe4:	83 70       	andi	r24, 0x03	; 3
    1fe6:	80 64       	ori	r24, 0x40	; 64
    1fe8:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1fea:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    1fec:	81 e0       	ldi	r24, 0x01	; 1
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	df 91       	pop	r29
    1ff2:	cf 91       	pop	r28
    1ff4:	1f 91       	pop	r17
    1ff6:	0f 91       	pop	r16
    1ff8:	ff 90       	pop	r15
    1ffa:	ef 90       	pop	r14
    1ffc:	08 95       	ret

00001ffe <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    1ffe:	cf 93       	push	r28
    2000:	df 93       	push	r29
    2002:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    2004:	88 8d       	ldd	r24, Y+24	; 0x18
    2006:	88 23       	and	r24, r24
    2008:	c1 f0       	breq	.+48     	; 0x203a <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    200a:	ea 89       	ldd	r30, Y+18	; 0x12
    200c:	fb 89       	ldd	r31, Y+19	; 0x13
    200e:	80 81       	ld	r24, Z
    2010:	85 fd       	sbrc	r24, 5
    2012:	05 c0       	rjmp	.+10     	; 0x201e <_ZN14HardwareSerial5flushEv+0x20>
    2014:	a8 89       	ldd	r26, Y+16	; 0x10
    2016:	b9 89       	ldd	r27, Y+17	; 0x11
    2018:	8c 91       	ld	r24, X
    201a:	86 fd       	sbrc	r24, 6
    201c:	0e c0       	rjmp	.+28     	; 0x203a <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    201e:	0f b6       	in	r0, 0x3f	; 63
    2020:	07 fc       	sbrc	r0, 7
    2022:	f5 cf       	rjmp	.-22     	; 0x200e <_ZN14HardwareSerial5flushEv+0x10>
    2024:	80 81       	ld	r24, Z
    2026:	85 ff       	sbrs	r24, 5
    2028:	f2 cf       	rjmp	.-28     	; 0x200e <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    202a:	a8 89       	ldd	r26, Y+16	; 0x10
    202c:	b9 89       	ldd	r27, Y+17	; 0x11
    202e:	8c 91       	ld	r24, X
    2030:	85 ff       	sbrs	r24, 5
    2032:	ed cf       	rjmp	.-38     	; 0x200e <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    2034:	ce 01       	movw	r24, r28
    2036:	75 df       	rcall	.-278    	; 0x1f22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2038:	e8 cf       	rjmp	.-48     	; 0x200a <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    203a:	df 91       	pop	r29
    203c:	cf 91       	pop	r28
    203e:	08 95       	ret

00002040 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    2040:	cf 92       	push	r12
    2042:	df 92       	push	r13
    2044:	ef 92       	push	r14
    2046:	ff 92       	push	r15
    2048:	1f 93       	push	r17
    204a:	cf 93       	push	r28
    204c:	df 93       	push	r29
    204e:	ec 01       	movw	r28, r24
    2050:	6a 01       	movw	r12, r20
    2052:	7b 01       	movw	r14, r22
    2054:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    2056:	60 e2       	ldi	r22, 0x20	; 32
    2058:	71 ea       	ldi	r23, 0xA1	; 161
    205a:	87 e0       	ldi	r24, 0x07	; 7
    205c:	90 e0       	ldi	r25, 0x00	; 0
    205e:	a7 01       	movw	r20, r14
    2060:	96 01       	movw	r18, r12
    2062:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <__udivmodsi4>
    2066:	da 01       	movw	r26, r20
    2068:	c9 01       	movw	r24, r18
    206a:	01 97       	sbiw	r24, 0x01	; 1
    206c:	a1 09       	sbc	r26, r1
    206e:	b1 09       	sbc	r27, r1
    2070:	b6 95       	lsr	r27
    2072:	a7 95       	ror	r26
    2074:	97 95       	ror	r25
    2076:	87 95       	ror	r24
    2078:	9c 01       	movw	r18, r24
  *_ucsra = 1 << U2X0;
    207a:	e8 89       	ldd	r30, Y+16	; 0x10
    207c:	f9 89       	ldd	r31, Y+17	; 0x11
    207e:	82 e0       	ldi	r24, 0x02	; 2
    2080:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2082:	21 15       	cp	r18, r1
    2084:	80 e1       	ldi	r24, 0x10	; 16
    2086:	38 07       	cpc	r19, r24
    2088:	a8 f0       	brcs	.+42     	; 0x20b4 <_ZN14HardwareSerial5beginEmh+0x74>
  {
    *_ucsra = 0;
    208a:	e8 89       	ldd	r30, Y+16	; 0x10
    208c:	f9 89       	ldd	r31, Y+17	; 0x11
    208e:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    2090:	60 e9       	ldi	r22, 0x90	; 144
    2092:	70 ed       	ldi	r23, 0xD0	; 208
    2094:	83 e0       	ldi	r24, 0x03	; 3
    2096:	90 e0       	ldi	r25, 0x00	; 0
    2098:	a7 01       	movw	r20, r14
    209a:	96 01       	movw	r18, r12
    209c:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <__udivmodsi4>
    20a0:	da 01       	movw	r26, r20
    20a2:	c9 01       	movw	r24, r18
    20a4:	01 97       	sbiw	r24, 0x01	; 1
    20a6:	a1 09       	sbc	r26, r1
    20a8:	b1 09       	sbc	r27, r1
    20aa:	b6 95       	lsr	r27
    20ac:	a7 95       	ror	r26
    20ae:	97 95       	ror	r25
    20b0:	87 95       	ror	r24
    20b2:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    20b4:	ec 85       	ldd	r30, Y+12	; 0x0c
    20b6:	fd 85       	ldd	r31, Y+13	; 0x0d
    20b8:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    20ba:	ee 85       	ldd	r30, Y+14	; 0x0e
    20bc:	ff 85       	ldd	r31, Y+15	; 0x0f
    20be:	20 83       	st	Z, r18

  _written = false;
    20c0:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    20c2:	ec 89       	ldd	r30, Y+20	; 0x14
    20c4:	fd 89       	ldd	r31, Y+21	; 0x15
    20c6:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    20c8:	ea 89       	ldd	r30, Y+18	; 0x12
    20ca:	fb 89       	ldd	r31, Y+19	; 0x13
    20cc:	80 81       	ld	r24, Z
    20ce:	80 61       	ori	r24, 0x10	; 16
    20d0:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    20d2:	ea 89       	ldd	r30, Y+18	; 0x12
    20d4:	fb 89       	ldd	r31, Y+19	; 0x13
    20d6:	80 81       	ld	r24, Z
    20d8:	88 60       	ori	r24, 0x08	; 8
    20da:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    20dc:	ea 89       	ldd	r30, Y+18	; 0x12
    20de:	fb 89       	ldd	r31, Y+19	; 0x13
    20e0:	80 81       	ld	r24, Z
    20e2:	80 68       	ori	r24, 0x80	; 128
    20e4:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    20e6:	ea 89       	ldd	r30, Y+18	; 0x12
    20e8:	fb 89       	ldd	r31, Y+19	; 0x13
    20ea:	80 81       	ld	r24, Z
    20ec:	8f 7d       	andi	r24, 0xDF	; 223
    20ee:	80 83       	st	Z, r24
}
    20f0:	df 91       	pop	r29
    20f2:	cf 91       	pop	r28
    20f4:	1f 91       	pop	r17
    20f6:	ff 90       	pop	r15
    20f8:	ef 90       	pop	r14
    20fa:	df 90       	pop	r13
    20fc:	cf 90       	pop	r12
    20fe:	08 95       	ret

00002100 <_ZN5Print17availableForWriteEv>:
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
    2100:	80 e0       	ldi	r24, 0x00	; 0
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	08 95       	ret

00002106 <_ZN5Print5flushEv>:
    size_t println(unsigned long, int = DEC);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    2106:	08 95       	ret

00002108 <__vector_25>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    2108:	1f 92       	push	r1
    210a:	0f 92       	push	r0
    210c:	0f b6       	in	r0, 0x3f	; 63
    210e:	0f 92       	push	r0
    2110:	11 24       	eor	r1, r1
    2112:	0b b6       	in	r0, 0x3b	; 59
    2114:	0f 92       	push	r0
    2116:	2f 93       	push	r18
    2118:	8f 93       	push	r24
    211a:	9f 93       	push	r25
    211c:	ef 93       	push	r30
    211e:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    2120:	e0 91 06 05 	lds	r30, 0x0506	; 0x800506 <Serial+0x10>
    2124:	f0 91 07 05 	lds	r31, 0x0507	; 0x800507 <Serial+0x11>
    2128:	80 81       	ld	r24, Z
    212a:	e0 91 0c 05 	lds	r30, 0x050C	; 0x80050c <Serial+0x16>
    212e:	f0 91 0d 05 	lds	r31, 0x050D	; 0x80050d <Serial+0x17>
    2132:	82 fd       	sbrc	r24, 2
    2134:	12 c0       	rjmp	.+36     	; 0x215a <__vector_25+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    2136:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    2138:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <Serial+0x19>
    213c:	8f 5f       	subi	r24, 0xFF	; 255
    213e:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    2140:	20 91 10 05 	lds	r18, 0x0510	; 0x800510 <Serial+0x1a>
    2144:	82 17       	cp	r24, r18
    2146:	51 f0       	breq	.+20     	; 0x215c <__vector_25+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    2148:	e0 91 0f 05 	lds	r30, 0x050F	; 0x80050f <Serial+0x19>
    214c:	f0 e0       	ldi	r31, 0x00	; 0
    214e:	ea 50       	subi	r30, 0x0A	; 10
    2150:	fb 4f       	sbci	r31, 0xFB	; 251
    2152:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    2154:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <Serial+0x19>
    2158:	01 c0       	rjmp	.+2      	; 0x215c <__vector_25+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    215a:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    215c:	ff 91       	pop	r31
    215e:	ef 91       	pop	r30
    2160:	9f 91       	pop	r25
    2162:	8f 91       	pop	r24
    2164:	2f 91       	pop	r18
    2166:	0f 90       	pop	r0
    2168:	0b be       	out	0x3b, r0	; 59
    216a:	0f 90       	pop	r0
    216c:	0f be       	out	0x3f, r0	; 63
    216e:	0f 90       	pop	r0
    2170:	1f 90       	pop	r1
    2172:	18 95       	reti

00002174 <__vector_26>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    2174:	1f 92       	push	r1
    2176:	0f 92       	push	r0
    2178:	0f b6       	in	r0, 0x3f	; 63
    217a:	0f 92       	push	r0
    217c:	11 24       	eor	r1, r1
    217e:	0b b6       	in	r0, 0x3b	; 59
    2180:	0f 92       	push	r0
    2182:	2f 93       	push	r18
    2184:	3f 93       	push	r19
    2186:	4f 93       	push	r20
    2188:	5f 93       	push	r21
    218a:	6f 93       	push	r22
    218c:	7f 93       	push	r23
    218e:	8f 93       	push	r24
    2190:	9f 93       	push	r25
    2192:	af 93       	push	r26
    2194:	bf 93       	push	r27
    2196:	ef 93       	push	r30
    2198:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    219a:	86 ef       	ldi	r24, 0xF6	; 246
    219c:	94 e0       	ldi	r25, 0x04	; 4
    219e:	c1 de       	rcall	.-638    	; 0x1f22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    21a0:	ff 91       	pop	r31
    21a2:	ef 91       	pop	r30
    21a4:	bf 91       	pop	r27
    21a6:	af 91       	pop	r26
    21a8:	9f 91       	pop	r25
    21aa:	8f 91       	pop	r24
    21ac:	7f 91       	pop	r23
    21ae:	6f 91       	pop	r22
    21b0:	5f 91       	pop	r21
    21b2:	4f 91       	pop	r20
    21b4:	3f 91       	pop	r19
    21b6:	2f 91       	pop	r18
    21b8:	0f 90       	pop	r0
    21ba:	0b be       	out	0x3b, r0	; 59
    21bc:	0f 90       	pop	r0
    21be:	0f be       	out	0x3f, r0	; 63
    21c0:	0f 90       	pop	r0
    21c2:	1f 90       	pop	r1
    21c4:	18 95       	reti

000021c6 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    21c6:	86 ef       	ldi	r24, 0xF6	; 246
    21c8:	94 e0       	ldi	r25, 0x04	; 4
    21ca:	33 de       	rcall	.-922    	; 0x1e32 <_ZN14HardwareSerial9availableEv>
    21cc:	21 e0       	ldi	r18, 0x01	; 1
    21ce:	89 2b       	or	r24, r25
    21d0:	09 f4       	brne	.+2      	; 0x21d4 <_Z17Serial0_availablev+0xe>
    21d2:	20 e0       	ldi	r18, 0x00	; 0
}
    21d4:	82 2f       	mov	r24, r18
    21d6:	08 95       	ret

000021d8 <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    21d8:	e6 ef       	ldi	r30, 0xF6	; 246
    21da:	f4 e0       	ldi	r31, 0x04	; 4
    21dc:	13 82       	std	Z+3, r1	; 0x03
    21de:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    21e0:	88 ee       	ldi	r24, 0xE8	; 232
    21e2:	93 e0       	ldi	r25, 0x03	; 3
    21e4:	a0 e0       	ldi	r26, 0x00	; 0
    21e6:	b0 e0       	ldi	r27, 0x00	; 0
    21e8:	84 83       	std	Z+4, r24	; 0x04
    21ea:	95 83       	std	Z+5, r25	; 0x05
    21ec:	a6 83       	std	Z+6, r26	; 0x06
    21ee:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    21f0:	8b e2       	ldi	r24, 0x2B	; 43
    21f2:	94 e0       	ldi	r25, 0x04	; 4
    21f4:	91 83       	std	Z+1, r25	; 0x01
    21f6:	80 83       	st	Z, r24
    21f8:	85 ec       	ldi	r24, 0xC5	; 197
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	95 87       	std	Z+13, r25	; 0x0d
    21fe:	84 87       	std	Z+12, r24	; 0x0c
    2200:	84 ec       	ldi	r24, 0xC4	; 196
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	97 87       	std	Z+15, r25	; 0x0f
    2206:	86 87       	std	Z+14, r24	; 0x0e
    2208:	80 ec       	ldi	r24, 0xC0	; 192
    220a:	90 e0       	ldi	r25, 0x00	; 0
    220c:	91 8b       	std	Z+17, r25	; 0x11
    220e:	80 8b       	std	Z+16, r24	; 0x10
    2210:	81 ec       	ldi	r24, 0xC1	; 193
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	93 8b       	std	Z+19, r25	; 0x13
    2216:	82 8b       	std	Z+18, r24	; 0x12
    2218:	82 ec       	ldi	r24, 0xC2	; 194
    221a:	90 e0       	ldi	r25, 0x00	; 0
    221c:	95 8b       	std	Z+21, r25	; 0x15
    221e:	84 8b       	std	Z+20, r24	; 0x14
    2220:	86 ec       	ldi	r24, 0xC6	; 198
    2222:	90 e0       	ldi	r25, 0x00	; 0
    2224:	97 8b       	std	Z+23, r25	; 0x17
    2226:	86 8b       	std	Z+22, r24	; 0x16
    2228:	11 8e       	std	Z+25, r1	; 0x19
    222a:	12 8e       	std	Z+26, r1	; 0x1a
    222c:	13 8e       	std	Z+27, r1	; 0x1b
    222e:	14 8e       	std	Z+28, r1	; 0x1c
    2230:	08 95       	ret

00002232 <__vector_36>:
#elif defined(USART1_RX_vect)
ISR(USART1_RX_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    2232:	1f 92       	push	r1
    2234:	0f 92       	push	r0
    2236:	0f b6       	in	r0, 0x3f	; 63
    2238:	0f 92       	push	r0
    223a:	11 24       	eor	r1, r1
    223c:	0b b6       	in	r0, 0x3b	; 59
    223e:	0f 92       	push	r0
    2240:	2f 93       	push	r18
    2242:	8f 93       	push	r24
    2244:	9f 93       	push	r25
    2246:	ef 93       	push	r30
    2248:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    224a:	e0 91 a3 05 	lds	r30, 0x05A3	; 0x8005a3 <Serial1+0x10>
    224e:	f0 91 a4 05 	lds	r31, 0x05A4	; 0x8005a4 <Serial1+0x11>
    2252:	80 81       	ld	r24, Z
    2254:	e0 91 a9 05 	lds	r30, 0x05A9	; 0x8005a9 <Serial1+0x16>
    2258:	f0 91 aa 05 	lds	r31, 0x05AA	; 0x8005aa <Serial1+0x17>
    225c:	82 fd       	sbrc	r24, 2
    225e:	12 c0       	rjmp	.+36     	; 0x2284 <__vector_36+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    2260:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    2262:	80 91 ac 05 	lds	r24, 0x05AC	; 0x8005ac <Serial1+0x19>
    2266:	8f 5f       	subi	r24, 0xFF	; 255
    2268:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    226a:	20 91 ad 05 	lds	r18, 0x05AD	; 0x8005ad <Serial1+0x1a>
    226e:	82 17       	cp	r24, r18
    2270:	51 f0       	breq	.+20     	; 0x2286 <__vector_36+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    2272:	e0 91 ac 05 	lds	r30, 0x05AC	; 0x8005ac <Serial1+0x19>
    2276:	f0 e0       	ldi	r31, 0x00	; 0
    2278:	ed 56       	subi	r30, 0x6D	; 109
    227a:	fa 4f       	sbci	r31, 0xFA	; 250
    227c:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    227e:	80 93 ac 05 	sts	0x05AC, r24	; 0x8005ac <Serial1+0x19>
    2282:	01 c0       	rjmp	.+2      	; 0x2286 <__vector_36+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    2284:	80 81       	ld	r24, Z
  Serial1._rx_complete_irq();
}
    2286:	ff 91       	pop	r31
    2288:	ef 91       	pop	r30
    228a:	9f 91       	pop	r25
    228c:	8f 91       	pop	r24
    228e:	2f 91       	pop	r18
    2290:	0f 90       	pop	r0
    2292:	0b be       	out	0x3b, r0	; 59
    2294:	0f 90       	pop	r0
    2296:	0f be       	out	0x3f, r0	; 63
    2298:	0f 90       	pop	r0
    229a:	1f 90       	pop	r1
    229c:	18 95       	reti

0000229e <__vector_37>:
#elif defined(USART1_UDRE_vect)
ISR(USART1_UDRE_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    229e:	1f 92       	push	r1
    22a0:	0f 92       	push	r0
    22a2:	0f b6       	in	r0, 0x3f	; 63
    22a4:	0f 92       	push	r0
    22a6:	11 24       	eor	r1, r1
    22a8:	0b b6       	in	r0, 0x3b	; 59
    22aa:	0f 92       	push	r0
    22ac:	2f 93       	push	r18
    22ae:	3f 93       	push	r19
    22b0:	4f 93       	push	r20
    22b2:	5f 93       	push	r21
    22b4:	6f 93       	push	r22
    22b6:	7f 93       	push	r23
    22b8:	8f 93       	push	r24
    22ba:	9f 93       	push	r25
    22bc:	af 93       	push	r26
    22be:	bf 93       	push	r27
    22c0:	ef 93       	push	r30
    22c2:	ff 93       	push	r31
  Serial1._tx_udr_empty_irq();
    22c4:	83 e9       	ldi	r24, 0x93	; 147
    22c6:	95 e0       	ldi	r25, 0x05	; 5
    22c8:	2c de       	rcall	.-936    	; 0x1f22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    22ca:	ff 91       	pop	r31
    22cc:	ef 91       	pop	r30
    22ce:	bf 91       	pop	r27
    22d0:	af 91       	pop	r26
    22d2:	9f 91       	pop	r25
    22d4:	8f 91       	pop	r24
    22d6:	7f 91       	pop	r23
    22d8:	6f 91       	pop	r22
    22da:	5f 91       	pop	r21
    22dc:	4f 91       	pop	r20
    22de:	3f 91       	pop	r19
    22e0:	2f 91       	pop	r18
    22e2:	0f 90       	pop	r0
    22e4:	0b be       	out	0x3b, r0	; 59
    22e6:	0f 90       	pop	r0
    22e8:	0f be       	out	0x3f, r0	; 63
    22ea:	0f 90       	pop	r0
    22ec:	1f 90       	pop	r1
    22ee:	18 95       	reti

000022f0 <_Z17Serial1_availablev>:
HardwareSerial Serial1(&UBRR1H, &UBRR1L, &UCSR1A, &UCSR1B, &UCSR1C, &UDR1);

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
    22f0:	83 e9       	ldi	r24, 0x93	; 147
    22f2:	95 e0       	ldi	r25, 0x05	; 5
    22f4:	9e dd       	rcall	.-1220   	; 0x1e32 <_ZN14HardwareSerial9availableEv>
    22f6:	21 e0       	ldi	r18, 0x01	; 1
    22f8:	89 2b       	or	r24, r25
    22fa:	09 f4       	brne	.+2      	; 0x22fe <_Z17Serial1_availablev+0xe>
    22fc:	20 e0       	ldi	r18, 0x00	; 0
}
    22fe:	82 2f       	mov	r24, r18
    2300:	08 95       	ret

00002302 <_GLOBAL__sub_I___vector_36>:
    2302:	e3 e9       	ldi	r30, 0x93	; 147
    2304:	f5 e0       	ldi	r31, 0x05	; 5
    2306:	13 82       	std	Z+3, r1	; 0x03
    2308:	12 82       	std	Z+2, r1	; 0x02
    230a:	88 ee       	ldi	r24, 0xE8	; 232
    230c:	93 e0       	ldi	r25, 0x03	; 3
    230e:	a0 e0       	ldi	r26, 0x00	; 0
    2310:	b0 e0       	ldi	r27, 0x00	; 0
    2312:	84 83       	std	Z+4, r24	; 0x04
    2314:	95 83       	std	Z+5, r25	; 0x05
    2316:	a6 83       	std	Z+6, r26	; 0x06
    2318:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    231a:	8b e2       	ldi	r24, 0x2B	; 43
    231c:	94 e0       	ldi	r25, 0x04	; 4
    231e:	91 83       	std	Z+1, r25	; 0x01
    2320:	80 83       	st	Z, r24
    2322:	8d ec       	ldi	r24, 0xCD	; 205
    2324:	90 e0       	ldi	r25, 0x00	; 0
    2326:	95 87       	std	Z+13, r25	; 0x0d
    2328:	84 87       	std	Z+12, r24	; 0x0c
    232a:	8c ec       	ldi	r24, 0xCC	; 204
    232c:	90 e0       	ldi	r25, 0x00	; 0
    232e:	97 87       	std	Z+15, r25	; 0x0f
    2330:	86 87       	std	Z+14, r24	; 0x0e
    2332:	88 ec       	ldi	r24, 0xC8	; 200
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	91 8b       	std	Z+17, r25	; 0x11
    2338:	80 8b       	std	Z+16, r24	; 0x10
    233a:	89 ec       	ldi	r24, 0xC9	; 201
    233c:	90 e0       	ldi	r25, 0x00	; 0
    233e:	93 8b       	std	Z+19, r25	; 0x13
    2340:	82 8b       	std	Z+18, r24	; 0x12
    2342:	8a ec       	ldi	r24, 0xCA	; 202
    2344:	90 e0       	ldi	r25, 0x00	; 0
    2346:	95 8b       	std	Z+21, r25	; 0x15
    2348:	84 8b       	std	Z+20, r24	; 0x14
    234a:	8e ec       	ldi	r24, 0xCE	; 206
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	97 8b       	std	Z+23, r25	; 0x17
    2350:	86 8b       	std	Z+22, r24	; 0x16
    2352:	11 8e       	std	Z+25, r1	; 0x19
    2354:	12 8e       	std	Z+26, r1	; 0x1a
    2356:	13 8e       	std	Z+27, r1	; 0x1b
    2358:	14 8e       	std	Z+28, r1	; 0x1c
    235a:	08 95       	ret

0000235c <_ZNK9IPAddress7printToER5Print>:
{
    return memcmp(addr, _address.bytes, sizeof(_address.bytes)) == 0;
}

size_t IPAddress::printTo(Print& p) const
{
    235c:	8f 92       	push	r8
    235e:	9f 92       	push	r9
    2360:	af 92       	push	r10
    2362:	bf 92       	push	r11
    2364:	cf 92       	push	r12
    2366:	df 92       	push	r13
    2368:	ef 92       	push	r14
    236a:	ff 92       	push	r15
    236c:	0f 93       	push	r16
    236e:	1f 93       	push	r17
    2370:	cf 93       	push	r28
    2372:	df 93       	push	r29
    2374:	7c 01       	movw	r14, r24
    2376:	8b 01       	movw	r16, r22
    2378:	4c 01       	movw	r8, r24
    237a:	82 e0       	ldi	r24, 0x02	; 2
    237c:	88 0e       	add	r8, r24
    237e:	91 1c       	adc	r9, r1
    2380:	57 01       	movw	r10, r14
    2382:	e5 e0       	ldi	r30, 0x05	; 5
    2384:	ae 0e       	add	r10, r30
    2386:	b1 1c       	adc	r11, r1
    size_t n = 0;
    2388:	c0 e0       	ldi	r28, 0x00	; 0
    238a:	d0 e0       	ldi	r29, 0x00	; 0
    for (int i =0; i < 3; i++)
    {
        n += p.print(_address.bytes[i], DEC);
    238c:	f4 01       	movw	r30, r8
    238e:	61 91       	ld	r22, Z+
    2390:	4f 01       	movw	r8, r30
    2392:	4a e0       	ldi	r20, 0x0A	; 10
    2394:	50 e0       	ldi	r21, 0x00	; 0
    2396:	c8 01       	movw	r24, r16
    2398:	45 d1       	rcall	.+650    	; 0x2624 <_ZN5Print5printEhi>
    239a:	6c 01       	movw	r12, r24
        n += p.print('.');
    239c:	6e e2       	ldi	r22, 0x2E	; 46
    239e:	c8 01       	movw	r24, r16
    23a0:	b3 d0       	rcall	.+358    	; 0x2508 <_ZN5Print5printEc>
    23a2:	8c 0d       	add	r24, r12
    23a4:	9d 1d       	adc	r25, r13
    23a6:	c8 0f       	add	r28, r24
    23a8:	d9 1f       	adc	r29, r25
}

size_t IPAddress::printTo(Print& p) const
{
    size_t n = 0;
    for (int i =0; i < 3; i++)
    23aa:	8a 14       	cp	r8, r10
    23ac:	9b 04       	cpc	r9, r11
    23ae:	71 f7       	brne	.-36     	; 0x238c <_ZNK9IPAddress7printToER5Print+0x30>
    {
        n += p.print(_address.bytes[i], DEC);
        n += p.print('.');
    }
    n += p.print(_address.bytes[3], DEC);
    23b0:	4a e0       	ldi	r20, 0x0A	; 10
    23b2:	50 e0       	ldi	r21, 0x00	; 0
    23b4:	f7 01       	movw	r30, r14
    23b6:	65 81       	ldd	r22, Z+5	; 0x05
    23b8:	c8 01       	movw	r24, r16
    23ba:	34 d1       	rcall	.+616    	; 0x2624 <_ZN5Print5printEhi>
    return n;
}
    23bc:	8c 0f       	add	r24, r28
    23be:	9d 1f       	adc	r25, r29
    23c0:	df 91       	pop	r29
    23c2:	cf 91       	pop	r28
    23c4:	1f 91       	pop	r17
    23c6:	0f 91       	pop	r16
    23c8:	ff 90       	pop	r15
    23ca:	ef 90       	pop	r14
    23cc:	df 90       	pop	r13
    23ce:	cf 90       	pop	r12
    23d0:	bf 90       	pop	r11
    23d2:	af 90       	pop	r10
    23d4:	9f 90       	pop	r9
    23d6:	8f 90       	pop	r8
    23d8:	08 95       	ret

000023da <_ZN9IPAddressC1Ev>:
*/

#include <Arduino.h>
#include <IPAddress.h>

IPAddress::IPAddress()
    23da:	2d e3       	ldi	r18, 0x3D	; 61
    23dc:	34 e0       	ldi	r19, 0x04	; 4
    23de:	fc 01       	movw	r30, r24
    23e0:	31 83       	std	Z+1, r19	; 0x01
    23e2:	20 83       	st	Z, r18
{
    _address.dword = 0;
    23e4:	12 82       	std	Z+2, r1	; 0x02
    23e6:	13 82       	std	Z+3, r1	; 0x03
    23e8:	14 82       	std	Z+4, r1	; 0x04
    23ea:	15 82       	std	Z+5, r1	; 0x05
    23ec:	08 95       	ret

000023ee <_ZN9IPAddressC1Ehhhh>:
}

IPAddress::IPAddress(uint8_t first_octet, uint8_t second_octet, uint8_t third_octet, uint8_t fourth_octet)
    23ee:	0f 93       	push	r16
    23f0:	fc 01       	movw	r30, r24
    23f2:	8d e3       	ldi	r24, 0x3D	; 61
    23f4:	94 e0       	ldi	r25, 0x04	; 4
    23f6:	91 83       	std	Z+1, r25	; 0x01
    23f8:	80 83       	st	Z, r24
{
    _address.bytes[0] = first_octet;
    23fa:	62 83       	std	Z+2, r22	; 0x02
    _address.bytes[1] = second_octet;
    23fc:	43 83       	std	Z+3, r20	; 0x03
    _address.bytes[2] = third_octet;
    23fe:	24 83       	std	Z+4, r18	; 0x04
    _address.bytes[3] = fourth_octet;
    2400:	05 83       	std	Z+5, r16	; 0x05
}
    2402:	0f 91       	pop	r16
    2404:	08 95       	ret

00002406 <initVariant>:
    2406:	08 95       	ret

00002408 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    2408:	27 d3       	rcall	.+1614   	; 0x2a58 <init>

	initVariant();
    240a:	fd df       	rcall	.-6      	; 0x2406 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    240c:	12 db       	rcall	.-2524   	; 0x1a32 <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    240e:	c6 e5       	ldi	r28, 0x56	; 86
    2410:	df e0       	ldi	r29, 0x0F	; 15
#endif
	
	setup();
    
	for (;;) {
		loop();
    2412:	37 db       	rcall	.-2450   	; 0x1a82 <loop>
		if (serialEventRun) serialEventRun();
    2414:	20 97       	sbiw	r28, 0x00	; 0
    2416:	e9 f3       	breq	.-6      	; 0x2412 <main+0xa>
    2418:	49 dd       	rcall	.-1390   	; 0x1eac <_Z14serialEventRunv>
    241a:	fb cf       	rjmp	.-10     	; 0x2412 <main+0xa>

0000241c <_Znwj>:
    241c:	0c 94 3a 2e 	jmp	0x5c74	; 0x5c74 <malloc>

00002420 <_Znaj>:
void *operator new(size_t size) {
  return malloc(size);
}

void *operator new[](size_t size) {
  return malloc(size);
    2420:	0c 94 3a 2e 	jmp	0x5c74	; 0x5c74 <malloc>

00002424 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    2424:	cf 92       	push	r12
    2426:	df 92       	push	r13
    2428:	ef 92       	push	r14
    242a:	ff 92       	push	r15
    242c:	0f 93       	push	r16
    242e:	1f 93       	push	r17
    2430:	cf 93       	push	r28
    2432:	df 93       	push	r29
    2434:	6c 01       	movw	r12, r24
    2436:	7a 01       	movw	r14, r20
    2438:	8b 01       	movw	r16, r22
    243a:	c0 e0       	ldi	r28, 0x00	; 0
    243c:	d0 e0       	ldi	r29, 0x00	; 0
    243e:	ce 15       	cp	r28, r14
    2440:	df 05       	cpc	r29, r15
    2442:	81 f0       	breq	.+32     	; 0x2464 <_ZN5Print5writeEPKhj+0x40>
    2444:	d8 01       	movw	r26, r16
    2446:	6d 91       	ld	r22, X+
    2448:	8d 01       	movw	r16, r26
    244a:	d6 01       	movw	r26, r12
    244c:	ed 91       	ld	r30, X+
    244e:	fc 91       	ld	r31, X
    2450:	01 90       	ld	r0, Z+
    2452:	f0 81       	ld	r31, Z
    2454:	e0 2d       	mov	r30, r0
    2456:	c6 01       	movw	r24, r12
    2458:	19 95       	eicall
    245a:	89 2b       	or	r24, r25
    245c:	11 f0       	breq	.+4      	; 0x2462 <_ZN5Print5writeEPKhj+0x3e>
    245e:	21 96       	adiw	r28, 0x01	; 1
    2460:	ee cf       	rjmp	.-36     	; 0x243e <_ZN5Print5writeEPKhj+0x1a>
    2462:	7e 01       	movw	r14, r28
    2464:	c7 01       	movw	r24, r14
    2466:	df 91       	pop	r29
    2468:	cf 91       	pop	r28
    246a:	1f 91       	pop	r17
    246c:	0f 91       	pop	r16
    246e:	ff 90       	pop	r15
    2470:	ef 90       	pop	r14
    2472:	df 90       	pop	r13
    2474:	cf 90       	pop	r12
    2476:	08 95       	ret

00002478 <_ZN5Print5writeEPKc>:
    2478:	61 15       	cp	r22, r1
    247a:	71 05       	cpc	r23, r1
    247c:	79 f0       	breq	.+30     	; 0x249c <_ZN5Print5writeEPKc+0x24>
    247e:	fb 01       	movw	r30, r22
    2480:	01 90       	ld	r0, Z+
    2482:	00 20       	and	r0, r0
    2484:	e9 f7       	brne	.-6      	; 0x2480 <_ZN5Print5writeEPKc+0x8>
    2486:	31 97       	sbiw	r30, 0x01	; 1
    2488:	af 01       	movw	r20, r30
    248a:	46 1b       	sub	r20, r22
    248c:	57 0b       	sbc	r21, r23
    248e:	dc 01       	movw	r26, r24
    2490:	ed 91       	ld	r30, X+
    2492:	fc 91       	ld	r31, X
    2494:	02 80       	ldd	r0, Z+2	; 0x02
    2496:	f3 81       	ldd	r31, Z+3	; 0x03
    2498:	e0 2d       	mov	r30, r0
    249a:	19 94       	eijmp
    249c:	80 e0       	ldi	r24, 0x00	; 0
    249e:	90 e0       	ldi	r25, 0x00	; 0
    24a0:	08 95       	ret

000024a2 <_ZN5Print5printEPK19__FlashStringHelper>:
    24a2:	ef 92       	push	r14
    24a4:	ff 92       	push	r15
    24a6:	0f 93       	push	r16
    24a8:	1f 93       	push	r17
    24aa:	cf 93       	push	r28
    24ac:	df 93       	push	r29
    24ae:	8c 01       	movw	r16, r24
    24b0:	7b 01       	movw	r14, r22
    24b2:	c0 e0       	ldi	r28, 0x00	; 0
    24b4:	d0 e0       	ldi	r29, 0x00	; 0
    24b6:	f7 01       	movw	r30, r14
    24b8:	ec 0f       	add	r30, r28
    24ba:	fd 1f       	adc	r31, r29
    24bc:	64 91       	lpm	r22, Z
    24be:	66 23       	and	r22, r22
    24c0:	61 f0       	breq	.+24     	; 0x24da <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    24c2:	d8 01       	movw	r26, r16
    24c4:	ed 91       	ld	r30, X+
    24c6:	fc 91       	ld	r31, X
    24c8:	01 90       	ld	r0, Z+
    24ca:	f0 81       	ld	r31, Z
    24cc:	e0 2d       	mov	r30, r0
    24ce:	c8 01       	movw	r24, r16
    24d0:	19 95       	eicall
    24d2:	89 2b       	or	r24, r25
    24d4:	11 f0       	breq	.+4      	; 0x24da <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    24d6:	21 96       	adiw	r28, 0x01	; 1
    24d8:	ee cf       	rjmp	.-36     	; 0x24b6 <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    24da:	ce 01       	movw	r24, r28
    24dc:	df 91       	pop	r29
    24de:	cf 91       	pop	r28
    24e0:	1f 91       	pop	r17
    24e2:	0f 91       	pop	r16
    24e4:	ff 90       	pop	r15
    24e6:	ef 90       	pop	r14
    24e8:	08 95       	ret

000024ea <_ZN5Print5printERK6String>:
    24ea:	db 01       	movw	r26, r22
    24ec:	14 96       	adiw	r26, 0x04	; 4
    24ee:	4d 91       	ld	r20, X+
    24f0:	5c 91       	ld	r21, X
    24f2:	15 97       	sbiw	r26, 0x05	; 5
    24f4:	6d 91       	ld	r22, X+
    24f6:	7c 91       	ld	r23, X
    24f8:	dc 01       	movw	r26, r24
    24fa:	ed 91       	ld	r30, X+
    24fc:	fc 91       	ld	r31, X
    24fe:	02 80       	ldd	r0, Z+2	; 0x02
    2500:	f3 81       	ldd	r31, Z+3	; 0x03
    2502:	e0 2d       	mov	r30, r0
    2504:	19 94       	eijmp

00002506 <_ZN5Print5printEPKc>:
    2506:	b8 cf       	rjmp	.-144    	; 0x2478 <_ZN5Print5writeEPKc>

00002508 <_ZN5Print5printEc>:
    2508:	dc 01       	movw	r26, r24
    250a:	ed 91       	ld	r30, X+
    250c:	fc 91       	ld	r31, X
    250e:	01 90       	ld	r0, Z+
    2510:	f0 81       	ld	r31, Z
    2512:	e0 2d       	mov	r30, r0
    2514:	19 94       	eijmp

00002516 <_ZN5Print7printlnEv>:
    2516:	6d e8       	ldi	r22, 0x8D	; 141
    2518:	74 e0       	ldi	r23, 0x04	; 4
    251a:	ae cf       	rjmp	.-164    	; 0x2478 <_ZN5Print5writeEPKc>

0000251c <_ZN5Print7printlnEPK19__FlashStringHelper>:
    251c:	0f 93       	push	r16
    251e:	1f 93       	push	r17
    2520:	cf 93       	push	r28
    2522:	df 93       	push	r29
    2524:	ec 01       	movw	r28, r24
    2526:	bd df       	rcall	.-134    	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    2528:	8c 01       	movw	r16, r24
    252a:	ce 01       	movw	r24, r28
    252c:	f4 df       	rcall	.-24     	; 0x2516 <_ZN5Print7printlnEv>
    252e:	80 0f       	add	r24, r16
    2530:	91 1f       	adc	r25, r17
    2532:	df 91       	pop	r29
    2534:	cf 91       	pop	r28
    2536:	1f 91       	pop	r17
    2538:	0f 91       	pop	r16
    253a:	08 95       	ret

0000253c <_ZN5Print7printlnERK6String>:
    253c:	0f 93       	push	r16
    253e:	1f 93       	push	r17
    2540:	cf 93       	push	r28
    2542:	df 93       	push	r29
    2544:	ec 01       	movw	r28, r24
    2546:	d1 df       	rcall	.-94     	; 0x24ea <_ZN5Print5printERK6String>
    2548:	8c 01       	movw	r16, r24
    254a:	ce 01       	movw	r24, r28
    254c:	e4 df       	rcall	.-56     	; 0x2516 <_ZN5Print7printlnEv>
    254e:	80 0f       	add	r24, r16
    2550:	91 1f       	adc	r25, r17
    2552:	df 91       	pop	r29
    2554:	cf 91       	pop	r28
    2556:	1f 91       	pop	r17
    2558:	0f 91       	pop	r16
    255a:	08 95       	ret

0000255c <_ZN5Print7printlnEPKc>:
    255c:	0f 93       	push	r16
    255e:	1f 93       	push	r17
    2560:	cf 93       	push	r28
    2562:	df 93       	push	r29
    2564:	ec 01       	movw	r28, r24
    2566:	88 df       	rcall	.-240    	; 0x2478 <_ZN5Print5writeEPKc>
    2568:	8c 01       	movw	r16, r24
    256a:	ce 01       	movw	r24, r28
    256c:	d4 df       	rcall	.-88     	; 0x2516 <_ZN5Print7printlnEv>
    256e:	80 0f       	add	r24, r16
    2570:	91 1f       	adc	r25, r17
    2572:	df 91       	pop	r29
    2574:	cf 91       	pop	r28
    2576:	1f 91       	pop	r17
    2578:	0f 91       	pop	r16
    257a:	08 95       	ret

0000257c <_ZN5Print11printNumberEmh>:
    257c:	8f 92       	push	r8
    257e:	9f 92       	push	r9
    2580:	af 92       	push	r10
    2582:	bf 92       	push	r11
    2584:	ef 92       	push	r14
    2586:	ff 92       	push	r15
    2588:	0f 93       	push	r16
    258a:	1f 93       	push	r17
    258c:	cf 93       	push	r28
    258e:	df 93       	push	r29
    2590:	cd b7       	in	r28, 0x3d	; 61
    2592:	de b7       	in	r29, 0x3e	; 62
    2594:	a1 97       	sbiw	r28, 0x21	; 33
    2596:	0f b6       	in	r0, 0x3f	; 63
    2598:	f8 94       	cli
    259a:	de bf       	out	0x3e, r29	; 62
    259c:	0f be       	out	0x3f, r0	; 63
    259e:	cd bf       	out	0x3d, r28	; 61
    25a0:	7c 01       	movw	r14, r24
    25a2:	fa 01       	movw	r30, r20
    25a4:	cb 01       	movw	r24, r22
    25a6:	19 a2       	std	Y+33, r1	; 0x21
    25a8:	22 30       	cpi	r18, 0x02	; 2
    25aa:	08 f4       	brcc	.+2      	; 0x25ae <_ZN5Print11printNumberEmh+0x32>
    25ac:	2a e0       	ldi	r18, 0x0A	; 10
    25ae:	8e 01       	movw	r16, r28
    25b0:	0f 5d       	subi	r16, 0xDF	; 223
    25b2:	1f 4f       	sbci	r17, 0xFF	; 255
    25b4:	82 2e       	mov	r8, r18
    25b6:	91 2c       	mov	r9, r1
    25b8:	a1 2c       	mov	r10, r1
    25ba:	b1 2c       	mov	r11, r1
    25bc:	bf 01       	movw	r22, r30
    25be:	a5 01       	movw	r20, r10
    25c0:	94 01       	movw	r18, r8
    25c2:	0e 94 d8 2d 	call	0x5bb0	; 0x5bb0 <__udivmodsi4>
    25c6:	f9 01       	movw	r30, r18
    25c8:	ca 01       	movw	r24, r20
    25ca:	01 50       	subi	r16, 0x01	; 1
    25cc:	11 09       	sbc	r17, r1
    25ce:	6a 30       	cpi	r22, 0x0A	; 10
    25d0:	10 f4       	brcc	.+4      	; 0x25d6 <_ZN5Print11printNumberEmh+0x5a>
    25d2:	60 5d       	subi	r22, 0xD0	; 208
    25d4:	01 c0       	rjmp	.+2      	; 0x25d8 <_ZN5Print11printNumberEmh+0x5c>
    25d6:	69 5c       	subi	r22, 0xC9	; 201
    25d8:	d8 01       	movw	r26, r16
    25da:	6c 93       	st	X, r22
    25dc:	23 2b       	or	r18, r19
    25de:	24 2b       	or	r18, r20
    25e0:	25 2b       	or	r18, r21
    25e2:	61 f7       	brne	.-40     	; 0x25bc <_ZN5Print11printNumberEmh+0x40>
    25e4:	b8 01       	movw	r22, r16
    25e6:	c7 01       	movw	r24, r14
    25e8:	47 df       	rcall	.-370    	; 0x2478 <_ZN5Print5writeEPKc>
    25ea:	a1 96       	adiw	r28, 0x21	; 33
    25ec:	0f b6       	in	r0, 0x3f	; 63
    25ee:	f8 94       	cli
    25f0:	de bf       	out	0x3e, r29	; 62
    25f2:	0f be       	out	0x3f, r0	; 63
    25f4:	cd bf       	out	0x3d, r28	; 61
    25f6:	df 91       	pop	r29
    25f8:	cf 91       	pop	r28
    25fa:	1f 91       	pop	r17
    25fc:	0f 91       	pop	r16
    25fe:	ff 90       	pop	r15
    2600:	ef 90       	pop	r14
    2602:	bf 90       	pop	r11
    2604:	af 90       	pop	r10
    2606:	9f 90       	pop	r9
    2608:	8f 90       	pop	r8
    260a:	08 95       	ret

0000260c <_ZN5Print5printEmi>:
    260c:	21 15       	cp	r18, r1
    260e:	31 05       	cpc	r19, r1
    2610:	41 f4       	brne	.+16     	; 0x2622 <_ZN5Print5printEmi+0x16>
    2612:	dc 01       	movw	r26, r24
    2614:	ed 91       	ld	r30, X+
    2616:	fc 91       	ld	r31, X
    2618:	01 90       	ld	r0, Z+
    261a:	f0 81       	ld	r31, Z
    261c:	e0 2d       	mov	r30, r0
    261e:	64 2f       	mov	r22, r20
    2620:	19 94       	eijmp
    2622:	ac cf       	rjmp	.-168    	; 0x257c <_ZN5Print11printNumberEmh>

00002624 <_ZN5Print5printEhi>:
    2624:	9a 01       	movw	r18, r20
    2626:	46 2f       	mov	r20, r22
    2628:	50 e0       	ldi	r21, 0x00	; 0
    262a:	60 e0       	ldi	r22, 0x00	; 0
    262c:	70 e0       	ldi	r23, 0x00	; 0
    262e:	ee cf       	rjmp	.-36     	; 0x260c <_ZN5Print5printEmi>

00002630 <_ZN5Print7printlnEhi>:
    2630:	0f 93       	push	r16
    2632:	1f 93       	push	r17
    2634:	cf 93       	push	r28
    2636:	df 93       	push	r29
    2638:	ec 01       	movw	r28, r24
    263a:	f4 df       	rcall	.-24     	; 0x2624 <_ZN5Print5printEhi>
    263c:	8c 01       	movw	r16, r24
    263e:	ce 01       	movw	r24, r28
    2640:	6a df       	rcall	.-300    	; 0x2516 <_ZN5Print7printlnEv>
    2642:	80 0f       	add	r24, r16
    2644:	91 1f       	adc	r25, r17
    2646:	df 91       	pop	r29
    2648:	cf 91       	pop	r28
    264a:	1f 91       	pop	r17
    264c:	0f 91       	pop	r16
    264e:	08 95       	ret

00002650 <_ZN5Print5printEji>:
    2650:	9a 01       	movw	r18, r20
    2652:	ab 01       	movw	r20, r22
    2654:	60 e0       	ldi	r22, 0x00	; 0
    2656:	70 e0       	ldi	r23, 0x00	; 0
    2658:	d9 cf       	rjmp	.-78     	; 0x260c <_ZN5Print5printEmi>

0000265a <_ZN5Print5printEli>:
    265a:	cf 92       	push	r12
    265c:	df 92       	push	r13
    265e:	ef 92       	push	r14
    2660:	ff 92       	push	r15
    2662:	0f 93       	push	r16
    2664:	1f 93       	push	r17
    2666:	cf 93       	push	r28
    2668:	df 93       	push	r29
    266a:	21 15       	cp	r18, r1
    266c:	31 05       	cpc	r19, r1
    266e:	81 f4       	brne	.+32     	; 0x2690 <_ZN5Print5printEli+0x36>
    2670:	dc 01       	movw	r26, r24
    2672:	ed 91       	ld	r30, X+
    2674:	fc 91       	ld	r31, X
    2676:	01 90       	ld	r0, Z+
    2678:	f0 81       	ld	r31, Z
    267a:	e0 2d       	mov	r30, r0
    267c:	64 2f       	mov	r22, r20
    267e:	df 91       	pop	r29
    2680:	cf 91       	pop	r28
    2682:	1f 91       	pop	r17
    2684:	0f 91       	pop	r16
    2686:	ff 90       	pop	r15
    2688:	ef 90       	pop	r14
    268a:	df 90       	pop	r13
    268c:	cf 90       	pop	r12
    268e:	19 94       	eijmp
    2690:	2a 30       	cpi	r18, 0x0A	; 10
    2692:	31 05       	cpc	r19, r1
    2694:	f1 f4       	brne	.+60     	; 0x26d2 <_ZN5Print5printEli+0x78>
    2696:	77 ff       	sbrs	r23, 7
    2698:	1b c0       	rjmp	.+54     	; 0x26d0 <_ZN5Print5printEli+0x76>
    269a:	6a 01       	movw	r12, r20
    269c:	7b 01       	movw	r14, r22
    269e:	ec 01       	movw	r28, r24
    26a0:	6d e2       	ldi	r22, 0x2D	; 45
    26a2:	32 df       	rcall	.-412    	; 0x2508 <_ZN5Print5printEc>
    26a4:	8c 01       	movw	r16, r24
    26a6:	44 27       	eor	r20, r20
    26a8:	55 27       	eor	r21, r21
    26aa:	ba 01       	movw	r22, r20
    26ac:	4c 19       	sub	r20, r12
    26ae:	5d 09       	sbc	r21, r13
    26b0:	6e 09       	sbc	r22, r14
    26b2:	7f 09       	sbc	r23, r15
    26b4:	2a e0       	ldi	r18, 0x0A	; 10
    26b6:	ce 01       	movw	r24, r28
    26b8:	61 df       	rcall	.-318    	; 0x257c <_ZN5Print11printNumberEmh>
    26ba:	80 0f       	add	r24, r16
    26bc:	91 1f       	adc	r25, r17
    26be:	df 91       	pop	r29
    26c0:	cf 91       	pop	r28
    26c2:	1f 91       	pop	r17
    26c4:	0f 91       	pop	r16
    26c6:	ff 90       	pop	r15
    26c8:	ef 90       	pop	r14
    26ca:	df 90       	pop	r13
    26cc:	cf 90       	pop	r12
    26ce:	08 95       	ret
    26d0:	2a e0       	ldi	r18, 0x0A	; 10
    26d2:	df 91       	pop	r29
    26d4:	cf 91       	pop	r28
    26d6:	1f 91       	pop	r17
    26d8:	0f 91       	pop	r16
    26da:	ff 90       	pop	r15
    26dc:	ef 90       	pop	r14
    26de:	df 90       	pop	r13
    26e0:	cf 90       	pop	r12
    26e2:	4c cf       	rjmp	.-360    	; 0x257c <_ZN5Print11printNumberEmh>

000026e4 <_ZN5Print5printEii>:
    26e4:	9a 01       	movw	r18, r20
    26e6:	ab 01       	movw	r20, r22
    26e8:	77 0f       	add	r23, r23
    26ea:	66 0b       	sbc	r22, r22
    26ec:	77 0b       	sbc	r23, r23
    26ee:	b5 cf       	rjmp	.-150    	; 0x265a <_ZN5Print5printEli>

000026f0 <_ZN5Print7printlnEii>:
    26f0:	0f 93       	push	r16
    26f2:	1f 93       	push	r17
    26f4:	cf 93       	push	r28
    26f6:	df 93       	push	r29
    26f8:	ec 01       	movw	r28, r24
    26fa:	f4 df       	rcall	.-24     	; 0x26e4 <_ZN5Print5printEii>
    26fc:	8c 01       	movw	r16, r24
    26fe:	ce 01       	movw	r24, r28
    2700:	0a df       	rcall	.-492    	; 0x2516 <_ZN5Print7printlnEv>
    2702:	80 0f       	add	r24, r16
    2704:	91 1f       	adc	r25, r17
    2706:	df 91       	pop	r29
    2708:	cf 91       	pop	r28
    270a:	1f 91       	pop	r17
    270c:	0f 91       	pop	r16
    270e:	08 95       	ret

00002710 <_ZN5Print7printlnEli>:
    2710:	0f 93       	push	r16
    2712:	1f 93       	push	r17
    2714:	cf 93       	push	r28
    2716:	df 93       	push	r29
    2718:	ec 01       	movw	r28, r24
    271a:	9f df       	rcall	.-194    	; 0x265a <_ZN5Print5printEli>
    271c:	8c 01       	movw	r16, r24
    271e:	ce 01       	movw	r24, r28
    2720:	fa de       	rcall	.-524    	; 0x2516 <_ZN5Print7printlnEv>
    2722:	80 0f       	add	r24, r16
    2724:	91 1f       	adc	r25, r17
    2726:	df 91       	pop	r29
    2728:	cf 91       	pop	r28
    272a:	1f 91       	pop	r17
    272c:	0f 91       	pop	r16
    272e:	08 95       	ret

00002730 <_ZN5Print10printFloatEdh>:
    2730:	7f 92       	push	r7
    2732:	8f 92       	push	r8
    2734:	9f 92       	push	r9
    2736:	af 92       	push	r10
    2738:	bf 92       	push	r11
    273a:	cf 92       	push	r12
    273c:	df 92       	push	r13
    273e:	ef 92       	push	r14
    2740:	ff 92       	push	r15
    2742:	0f 93       	push	r16
    2744:	1f 93       	push	r17
    2746:	cf 93       	push	r28
    2748:	df 93       	push	r29
    274a:	8c 01       	movw	r16, r24
    274c:	6a 01       	movw	r12, r20
    274e:	7b 01       	movw	r14, r22
    2750:	72 2e       	mov	r7, r18
    2752:	9a 01       	movw	r18, r20
    2754:	ab 01       	movw	r20, r22
    2756:	c7 01       	movw	r24, r14
    2758:	b6 01       	movw	r22, r12
    275a:	0e 94 d4 2d 	call	0x5ba8	; 0x5ba8 <__unordsf2>
    275e:	88 23       	and	r24, r24
    2760:	19 f0       	breq	.+6      	; 0x2768 <_ZN5Print10printFloatEdh+0x38>
    2762:	6f e3       	ldi	r22, 0x3F	; 63
    2764:	74 e0       	ldi	r23, 0x04	; 4
    2766:	27 c0       	rjmp	.+78     	; 0x27b6 <_ZN5Print10printFloatEdh+0x86>
    2768:	46 01       	movw	r8, r12
    276a:	57 01       	movw	r10, r14
    276c:	e8 94       	clt
    276e:	b7 f8       	bld	r11, 7
    2770:	2f ef       	ldi	r18, 0xFF	; 255
    2772:	3f ef       	ldi	r19, 0xFF	; 255
    2774:	4f e7       	ldi	r20, 0x7F	; 127
    2776:	5f e7       	ldi	r21, 0x7F	; 127
    2778:	c5 01       	movw	r24, r10
    277a:	b4 01       	movw	r22, r8
    277c:	0e 94 d4 2d 	call	0x5ba8	; 0x5ba8 <__unordsf2>
    2780:	81 11       	cpse	r24, r1
    2782:	0d c0       	rjmp	.+26     	; 0x279e <_ZN5Print10printFloatEdh+0x6e>
    2784:	2f ef       	ldi	r18, 0xFF	; 255
    2786:	3f ef       	ldi	r19, 0xFF	; 255
    2788:	4f e7       	ldi	r20, 0x7F	; 127
    278a:	5f e7       	ldi	r21, 0x7F	; 127
    278c:	c5 01       	movw	r24, r10
    278e:	b4 01       	movw	r22, r8
    2790:	0e 94 79 2d 	call	0x5af2	; 0x5af2 <__cmpsf2>
    2794:	18 16       	cp	r1, r24
    2796:	1c f4       	brge	.+6      	; 0x279e <_ZN5Print10printFloatEdh+0x6e>
    2798:	63 e4       	ldi	r22, 0x43	; 67
    279a:	74 e0       	ldi	r23, 0x04	; 4
    279c:	0c c0       	rjmp	.+24     	; 0x27b6 <_ZN5Print10printFloatEdh+0x86>
    279e:	2f ef       	ldi	r18, 0xFF	; 255
    27a0:	3f ef       	ldi	r19, 0xFF	; 255
    27a2:	4f e7       	ldi	r20, 0x7F	; 127
    27a4:	5f e4       	ldi	r21, 0x4F	; 79
    27a6:	c7 01       	movw	r24, r14
    27a8:	b6 01       	movw	r22, r12
    27aa:	0e 94 d0 2d 	call	0x5ba0	; 0x5ba0 <__gesf2>
    27ae:	18 16       	cp	r1, r24
    27b0:	8c f4       	brge	.+34     	; 0x27d4 <_ZN5Print10printFloatEdh+0xa4>
    27b2:	67 e4       	ldi	r22, 0x47	; 71
    27b4:	74 e0       	ldi	r23, 0x04	; 4
    27b6:	c8 01       	movw	r24, r16
    27b8:	df 91       	pop	r29
    27ba:	cf 91       	pop	r28
    27bc:	1f 91       	pop	r17
    27be:	0f 91       	pop	r16
    27c0:	ff 90       	pop	r15
    27c2:	ef 90       	pop	r14
    27c4:	df 90       	pop	r13
    27c6:	cf 90       	pop	r12
    27c8:	bf 90       	pop	r11
    27ca:	af 90       	pop	r10
    27cc:	9f 90       	pop	r9
    27ce:	8f 90       	pop	r8
    27d0:	7f 90       	pop	r7
    27d2:	52 ce       	rjmp	.-860    	; 0x2478 <_ZN5Print5writeEPKc>
    27d4:	2f ef       	ldi	r18, 0xFF	; 255
    27d6:	3f ef       	ldi	r19, 0xFF	; 255
    27d8:	4f e7       	ldi	r20, 0x7F	; 127
    27da:	5f ec       	ldi	r21, 0xCF	; 207
    27dc:	c7 01       	movw	r24, r14
    27de:	b6 01       	movw	r22, r12
    27e0:	0e 94 79 2d 	call	0x5af2	; 0x5af2 <__cmpsf2>
    27e4:	87 fd       	sbrc	r24, 7
    27e6:	e5 cf       	rjmp	.-54     	; 0x27b2 <_ZN5Print10printFloatEdh+0x82>
    27e8:	20 e0       	ldi	r18, 0x00	; 0
    27ea:	30 e0       	ldi	r19, 0x00	; 0
    27ec:	a9 01       	movw	r20, r18
    27ee:	c7 01       	movw	r24, r14
    27f0:	b6 01       	movw	r22, r12
    27f2:	0e 94 79 2d 	call	0x5af2	; 0x5af2 <__cmpsf2>
    27f6:	87 ff       	sbrs	r24, 7
    27f8:	09 c0       	rjmp	.+18     	; 0x280c <_ZN5Print10printFloatEdh+0xdc>
    27fa:	6d e2       	ldi	r22, 0x2D	; 45
    27fc:	c8 01       	movw	r24, r16
    27fe:	84 de       	rcall	.-760    	; 0x2508 <_ZN5Print5printEc>
    2800:	ec 01       	movw	r28, r24
    2802:	f7 fa       	bst	r15, 7
    2804:	f0 94       	com	r15
    2806:	f7 f8       	bld	r15, 7
    2808:	f0 94       	com	r15
    280a:	02 c0       	rjmp	.+4      	; 0x2810 <_ZN5Print10printFloatEdh+0xe0>
    280c:	c0 e0       	ldi	r28, 0x00	; 0
    280e:	d0 e0       	ldi	r29, 0x00	; 0
    2810:	b1 2c       	mov	r11, r1
    2812:	60 e0       	ldi	r22, 0x00	; 0
    2814:	70 e0       	ldi	r23, 0x00	; 0
    2816:	80 e0       	ldi	r24, 0x00	; 0
    2818:	9f e3       	ldi	r25, 0x3F	; 63
    281a:	7b 14       	cp	r7, r11
    281c:	39 f0       	breq	.+14     	; 0x282c <_ZN5Print10printFloatEdh+0xfc>
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	40 e2       	ldi	r20, 0x20	; 32
    2824:	51 e4       	ldi	r21, 0x41	; 65
    2826:	ac d9       	rcall	.-3240   	; 0x1b80 <__divsf3>
    2828:	b3 94       	inc	r11
    282a:	f7 cf       	rjmp	.-18     	; 0x281a <_ZN5Print10printFloatEdh+0xea>
    282c:	a7 01       	movw	r20, r14
    282e:	96 01       	movw	r18, r12
    2830:	43 d9       	rcall	.-3450   	; 0x1ab8 <__addsf3>
    2832:	6b 01       	movw	r12, r22
    2834:	7c 01       	movw	r14, r24
    2836:	0e 94 7d 2d 	call	0x5afa	; 0x5afa <__fixunssfsi>
    283a:	4b 01       	movw	r8, r22
    283c:	5c 01       	movw	r10, r24
    283e:	2a e0       	ldi	r18, 0x0A	; 10
    2840:	ab 01       	movw	r20, r22
    2842:	bc 01       	movw	r22, r24
    2844:	c8 01       	movw	r24, r16
    2846:	9a de       	rcall	.-716    	; 0x257c <_ZN5Print11printNumberEmh>
    2848:	c8 0f       	add	r28, r24
    284a:	d9 1f       	adc	r29, r25
    284c:	77 20       	and	r7, r7
    284e:	81 f1       	breq	.+96     	; 0x28b0 <_ZN5Print10printFloatEdh+0x180>
    2850:	c5 01       	movw	r24, r10
    2852:	b4 01       	movw	r22, r8
    2854:	fd d9       	rcall	.-3078   	; 0x1c50 <__floatunsisf>
    2856:	9b 01       	movw	r18, r22
    2858:	ac 01       	movw	r20, r24
    285a:	c7 01       	movw	r24, r14
    285c:	b6 01       	movw	r22, r12
    285e:	2b d9       	rcall	.-3498   	; 0x1ab6 <__subsf3>
    2860:	6b 01       	movw	r12, r22
    2862:	7c 01       	movw	r14, r24
    2864:	6e e2       	ldi	r22, 0x2E	; 46
    2866:	c8 01       	movw	r24, r16
    2868:	4f de       	rcall	.-866    	; 0x2508 <_ZN5Print5printEc>
    286a:	c8 0f       	add	r28, r24
    286c:	d9 1f       	adc	r29, r25
    286e:	20 e0       	ldi	r18, 0x00	; 0
    2870:	30 e0       	ldi	r19, 0x00	; 0
    2872:	40 e2       	ldi	r20, 0x20	; 32
    2874:	51 e4       	ldi	r21, 0x41	; 65
    2876:	c7 01       	movw	r24, r14
    2878:	b6 01       	movw	r22, r12
    287a:	78 da       	rcall	.-2832   	; 0x1d6c <__mulsf3>
    287c:	4b 01       	movw	r8, r22
    287e:	5c 01       	movw	r10, r24
    2880:	0e 94 7d 2d 	call	0x5afa	; 0x5afa <__fixunssfsi>
    2884:	6b 01       	movw	r12, r22
    2886:	7c 01       	movw	r14, r24
    2888:	4a e0       	ldi	r20, 0x0A	; 10
    288a:	50 e0       	ldi	r21, 0x00	; 0
    288c:	c8 01       	movw	r24, r16
    288e:	e0 de       	rcall	.-576    	; 0x2650 <_ZN5Print5printEji>
    2890:	c8 0f       	add	r28, r24
    2892:	d9 1f       	adc	r29, r25
    2894:	b6 01       	movw	r22, r12
    2896:	80 e0       	ldi	r24, 0x00	; 0
    2898:	90 e0       	ldi	r25, 0x00	; 0
    289a:	da d9       	rcall	.-3148   	; 0x1c50 <__floatunsisf>
    289c:	9b 01       	movw	r18, r22
    289e:	ac 01       	movw	r20, r24
    28a0:	c5 01       	movw	r24, r10
    28a2:	b4 01       	movw	r22, r8
    28a4:	08 d9       	rcall	.-3568   	; 0x1ab6 <__subsf3>
    28a6:	6b 01       	movw	r12, r22
    28a8:	7c 01       	movw	r14, r24
    28aa:	7a 94       	dec	r7
    28ac:	71 10       	cpse	r7, r1
    28ae:	df cf       	rjmp	.-66     	; 0x286e <_ZN5Print10printFloatEdh+0x13e>
    28b0:	ce 01       	movw	r24, r28
    28b2:	df 91       	pop	r29
    28b4:	cf 91       	pop	r28
    28b6:	1f 91       	pop	r17
    28b8:	0f 91       	pop	r16
    28ba:	ff 90       	pop	r15
    28bc:	ef 90       	pop	r14
    28be:	df 90       	pop	r13
    28c0:	cf 90       	pop	r12
    28c2:	bf 90       	pop	r11
    28c4:	af 90       	pop	r10
    28c6:	9f 90       	pop	r9
    28c8:	8f 90       	pop	r8
    28ca:	7f 90       	pop	r7
    28cc:	08 95       	ret

000028ce <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
    28ce:	0f 93       	push	r16
    28d0:	1f 93       	push	r17
    28d2:	cf 93       	push	r28
    28d4:	df 93       	push	r29
    28d6:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    28d8:	2b df       	rcall	.-426    	; 0x2730 <_ZN5Print10printFloatEdh>
    28da:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
    28dc:	ce 01       	movw	r24, r28
    28de:	1b de       	rcall	.-970    	; 0x2516 <_ZN5Print7printlnEv>
  return n;
}
    28e0:	80 0f       	add	r24, r16
    28e2:	91 1f       	adc	r25, r17
    28e4:	df 91       	pop	r29
    28e6:	cf 91       	pop	r28
    28e8:	1f 91       	pop	r17
    28ea:	0f 91       	pop	r16
    28ec:	08 95       	ret

000028ee <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    28ee:	1f 92       	push	r1
    28f0:	0f 92       	push	r0
    28f2:	0f b6       	in	r0, 0x3f	; 63
    28f4:	0f 92       	push	r0
    28f6:	11 24       	eor	r1, r1
    28f8:	2f 93       	push	r18
    28fa:	3f 93       	push	r19
    28fc:	8f 93       	push	r24
    28fe:	9f 93       	push	r25
    2900:	af 93       	push	r26
    2902:	bf 93       	push	r27
    2904:	80 91 31 06 	lds	r24, 0x0631	; 0x800631 <timer0_millis>
    2908:	90 91 32 06 	lds	r25, 0x0632	; 0x800632 <timer0_millis+0x1>
    290c:	a0 91 33 06 	lds	r26, 0x0633	; 0x800633 <timer0_millis+0x2>
    2910:	b0 91 34 06 	lds	r27, 0x0634	; 0x800634 <timer0_millis+0x3>
    2914:	30 91 30 06 	lds	r19, 0x0630	; 0x800630 <timer0_fract>
    2918:	28 e1       	ldi	r18, 0x18	; 24
    291a:	23 0f       	add	r18, r19
    291c:	2d 37       	cpi	r18, 0x7D	; 125
    291e:	20 f4       	brcc	.+8      	; 0x2928 <__vector_23+0x3a>
    2920:	08 96       	adiw	r24, 0x08	; 8
    2922:	a1 1d       	adc	r26, r1
    2924:	b1 1d       	adc	r27, r1
    2926:	05 c0       	rjmp	.+10     	; 0x2932 <__vector_23+0x44>
    2928:	2b e9       	ldi	r18, 0x9B	; 155
    292a:	23 0f       	add	r18, r19
    292c:	09 96       	adiw	r24, 0x09	; 9
    292e:	a1 1d       	adc	r26, r1
    2930:	b1 1d       	adc	r27, r1
    2932:	20 93 30 06 	sts	0x0630, r18	; 0x800630 <timer0_fract>
    2936:	80 93 31 06 	sts	0x0631, r24	; 0x800631 <timer0_millis>
    293a:	90 93 32 06 	sts	0x0632, r25	; 0x800632 <timer0_millis+0x1>
    293e:	a0 93 33 06 	sts	0x0633, r26	; 0x800633 <timer0_millis+0x2>
    2942:	b0 93 34 06 	sts	0x0634, r27	; 0x800634 <timer0_millis+0x3>
    2946:	80 91 35 06 	lds	r24, 0x0635	; 0x800635 <timer0_overflow_count>
    294a:	90 91 36 06 	lds	r25, 0x0636	; 0x800636 <timer0_overflow_count+0x1>
    294e:	a0 91 37 06 	lds	r26, 0x0637	; 0x800637 <timer0_overflow_count+0x2>
    2952:	b0 91 38 06 	lds	r27, 0x0638	; 0x800638 <timer0_overflow_count+0x3>
    2956:	01 96       	adiw	r24, 0x01	; 1
    2958:	a1 1d       	adc	r26, r1
    295a:	b1 1d       	adc	r27, r1
    295c:	80 93 35 06 	sts	0x0635, r24	; 0x800635 <timer0_overflow_count>
    2960:	90 93 36 06 	sts	0x0636, r25	; 0x800636 <timer0_overflow_count+0x1>
    2964:	a0 93 37 06 	sts	0x0637, r26	; 0x800637 <timer0_overflow_count+0x2>
    2968:	b0 93 38 06 	sts	0x0638, r27	; 0x800638 <timer0_overflow_count+0x3>
    296c:	bf 91       	pop	r27
    296e:	af 91       	pop	r26
    2970:	9f 91       	pop	r25
    2972:	8f 91       	pop	r24
    2974:	3f 91       	pop	r19
    2976:	2f 91       	pop	r18
    2978:	0f 90       	pop	r0
    297a:	0f be       	out	0x3f, r0	; 63
    297c:	0f 90       	pop	r0
    297e:	1f 90       	pop	r1
    2980:	18 95       	reti

00002982 <millis>:
    2982:	2f b7       	in	r18, 0x3f	; 63
    2984:	f8 94       	cli
    2986:	60 91 31 06 	lds	r22, 0x0631	; 0x800631 <timer0_millis>
    298a:	70 91 32 06 	lds	r23, 0x0632	; 0x800632 <timer0_millis+0x1>
    298e:	80 91 33 06 	lds	r24, 0x0633	; 0x800633 <timer0_millis+0x2>
    2992:	90 91 34 06 	lds	r25, 0x0634	; 0x800634 <timer0_millis+0x3>
    2996:	2f bf       	out	0x3f, r18	; 63
    2998:	08 95       	ret

0000299a <micros>:
    299a:	3f b7       	in	r19, 0x3f	; 63
    299c:	f8 94       	cli
    299e:	80 91 35 06 	lds	r24, 0x0635	; 0x800635 <timer0_overflow_count>
    29a2:	90 91 36 06 	lds	r25, 0x0636	; 0x800636 <timer0_overflow_count+0x1>
    29a6:	a0 91 37 06 	lds	r26, 0x0637	; 0x800637 <timer0_overflow_count+0x2>
    29aa:	b0 91 38 06 	lds	r27, 0x0638	; 0x800638 <timer0_overflow_count+0x3>
    29ae:	26 b5       	in	r18, 0x26	; 38
    29b0:	a8 9b       	sbis	0x15, 0	; 21
    29b2:	05 c0       	rjmp	.+10     	; 0x29be <micros+0x24>
    29b4:	2f 3f       	cpi	r18, 0xFF	; 255
    29b6:	19 f0       	breq	.+6      	; 0x29be <micros+0x24>
    29b8:	01 96       	adiw	r24, 0x01	; 1
    29ba:	a1 1d       	adc	r26, r1
    29bc:	b1 1d       	adc	r27, r1
    29be:	3f bf       	out	0x3f, r19	; 63
    29c0:	ba 2f       	mov	r27, r26
    29c2:	a9 2f       	mov	r26, r25
    29c4:	98 2f       	mov	r25, r24
    29c6:	88 27       	eor	r24, r24
    29c8:	82 0f       	add	r24, r18
    29ca:	91 1d       	adc	r25, r1
    29cc:	a1 1d       	adc	r26, r1
    29ce:	b1 1d       	adc	r27, r1
    29d0:	bc 01       	movw	r22, r24
    29d2:	cd 01       	movw	r24, r26
    29d4:	45 e0       	ldi	r20, 0x05	; 5
    29d6:	66 0f       	add	r22, r22
    29d8:	77 1f       	adc	r23, r23
    29da:	88 1f       	adc	r24, r24
    29dc:	99 1f       	adc	r25, r25
    29de:	4a 95       	dec	r20
    29e0:	d1 f7       	brne	.-12     	; 0x29d6 <micros+0x3c>
    29e2:	08 95       	ret

000029e4 <delay>:
    29e4:	8f 92       	push	r8
    29e6:	9f 92       	push	r9
    29e8:	af 92       	push	r10
    29ea:	bf 92       	push	r11
    29ec:	cf 92       	push	r12
    29ee:	df 92       	push	r13
    29f0:	ef 92       	push	r14
    29f2:	ff 92       	push	r15
    29f4:	6b 01       	movw	r12, r22
    29f6:	7c 01       	movw	r14, r24
    29f8:	d0 df       	rcall	.-96     	; 0x299a <micros>
    29fa:	4b 01       	movw	r8, r22
    29fc:	5c 01       	movw	r10, r24
    29fe:	c1 14       	cp	r12, r1
    2a00:	d1 04       	cpc	r13, r1
    2a02:	e1 04       	cpc	r14, r1
    2a04:	f1 04       	cpc	r15, r1
    2a06:	f9 f0       	breq	.+62     	; 0x2a46 <delay+0x62>
    2a08:	0e 94 b4 24 	call	0x4968	; 0x4968 <yield>
    2a0c:	c6 df       	rcall	.-116    	; 0x299a <micros>
    2a0e:	dc 01       	movw	r26, r24
    2a10:	cb 01       	movw	r24, r22
    2a12:	88 19       	sub	r24, r8
    2a14:	99 09       	sbc	r25, r9
    2a16:	aa 09       	sbc	r26, r10
    2a18:	bb 09       	sbc	r27, r11
    2a1a:	88 3e       	cpi	r24, 0xE8	; 232
    2a1c:	93 40       	sbci	r25, 0x03	; 3
    2a1e:	a1 05       	cpc	r26, r1
    2a20:	b1 05       	cpc	r27, r1
    2a22:	68 f3       	brcs	.-38     	; 0x29fe <delay+0x1a>
    2a24:	21 e0       	ldi	r18, 0x01	; 1
    2a26:	c2 1a       	sub	r12, r18
    2a28:	d1 08       	sbc	r13, r1
    2a2a:	e1 08       	sbc	r14, r1
    2a2c:	f1 08       	sbc	r15, r1
    2a2e:	88 ee       	ldi	r24, 0xE8	; 232
    2a30:	88 0e       	add	r8, r24
    2a32:	83 e0       	ldi	r24, 0x03	; 3
    2a34:	98 1e       	adc	r9, r24
    2a36:	a1 1c       	adc	r10, r1
    2a38:	b1 1c       	adc	r11, r1
    2a3a:	c1 14       	cp	r12, r1
    2a3c:	d1 04       	cpc	r13, r1
    2a3e:	e1 04       	cpc	r14, r1
    2a40:	f1 04       	cpc	r15, r1
    2a42:	21 f7       	brne	.-56     	; 0x2a0c <delay+0x28>
    2a44:	dc cf       	rjmp	.-72     	; 0x29fe <delay+0x1a>
    2a46:	ff 90       	pop	r15
    2a48:	ef 90       	pop	r14
    2a4a:	df 90       	pop	r13
    2a4c:	cf 90       	pop	r12
    2a4e:	bf 90       	pop	r11
    2a50:	af 90       	pop	r10
    2a52:	9f 90       	pop	r9
    2a54:	8f 90       	pop	r8
    2a56:	08 95       	ret

00002a58 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    2a58:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    2a5a:	84 b5       	in	r24, 0x24	; 36
    2a5c:	82 60       	ori	r24, 0x02	; 2
    2a5e:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    2a60:	84 b5       	in	r24, 0x24	; 36
    2a62:	81 60       	ori	r24, 0x01	; 1
    2a64:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    2a66:	85 b5       	in	r24, 0x25	; 37
    2a68:	82 60       	ori	r24, 0x02	; 2
    2a6a:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    2a6c:	85 b5       	in	r24, 0x25	; 37
    2a6e:	81 60       	ori	r24, 0x01	; 1
    2a70:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    2a72:	ee e6       	ldi	r30, 0x6E	; 110
    2a74:	f0 e0       	ldi	r31, 0x00	; 0
    2a76:	80 81       	ld	r24, Z
    2a78:	81 60       	ori	r24, 0x01	; 1
    2a7a:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    2a7c:	e1 e8       	ldi	r30, 0x81	; 129
    2a7e:	f0 e0       	ldi	r31, 0x00	; 0
    2a80:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    2a82:	80 81       	ld	r24, Z
    2a84:	82 60       	ori	r24, 0x02	; 2
    2a86:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    2a88:	e0 e8       	ldi	r30, 0x80	; 128
    2a8a:	f0 e0       	ldi	r31, 0x00	; 0
    2a8c:	80 81       	ld	r24, Z
    2a8e:	81 60       	ori	r24, 0x01	; 1
    2a90:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    2a92:	e1 eb       	ldi	r30, 0xB1	; 177
    2a94:	f0 e0       	ldi	r31, 0x00	; 0
    2a96:	80 81       	ld	r24, Z
    2a98:	84 60       	ori	r24, 0x04	; 4
    2a9a:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    2a9c:	e0 eb       	ldi	r30, 0xB0	; 176
    2a9e:	f0 e0       	ldi	r31, 0x00	; 0
    2aa0:	80 81       	ld	r24, Z
    2aa2:	81 60       	ori	r24, 0x01	; 1
    2aa4:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    2aa6:	e1 e9       	ldi	r30, 0x91	; 145
    2aa8:	f0 e0       	ldi	r31, 0x00	; 0
    2aaa:	80 81       	ld	r24, Z
    2aac:	82 60       	ori	r24, 0x02	; 2
    2aae:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    2ab0:	80 81       	ld	r24, Z
    2ab2:	81 60       	ori	r24, 0x01	; 1
    2ab4:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    2ab6:	e0 e9       	ldi	r30, 0x90	; 144
    2ab8:	f0 e0       	ldi	r31, 0x00	; 0
    2aba:	80 81       	ld	r24, Z
    2abc:	81 60       	ori	r24, 0x01	; 1
    2abe:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    2ac0:	e1 ea       	ldi	r30, 0xA1	; 161
    2ac2:	f0 e0       	ldi	r31, 0x00	; 0
    2ac4:	80 81       	ld	r24, Z
    2ac6:	82 60       	ori	r24, 0x02	; 2
    2ac8:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    2aca:	80 81       	ld	r24, Z
    2acc:	81 60       	ori	r24, 0x01	; 1
    2ace:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    2ad0:	e0 ea       	ldi	r30, 0xA0	; 160
    2ad2:	f0 e0       	ldi	r31, 0x00	; 0
    2ad4:	80 81       	ld	r24, Z
    2ad6:	81 60       	ori	r24, 0x01	; 1
    2ad8:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    2ada:	e1 e2       	ldi	r30, 0x21	; 33
    2adc:	f1 e0       	ldi	r31, 0x01	; 1
    2ade:	80 81       	ld	r24, Z
    2ae0:	82 60       	ori	r24, 0x02	; 2
    2ae2:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    2ae4:	80 81       	ld	r24, Z
    2ae6:	81 60       	ori	r24, 0x01	; 1
    2ae8:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    2aea:	e0 e2       	ldi	r30, 0x20	; 32
    2aec:	f1 e0       	ldi	r31, 0x01	; 1
    2aee:	80 81       	ld	r24, Z
    2af0:	81 60       	ori	r24, 0x01	; 1
    2af2:	80 83       	st	Z, r24
	#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz
		sbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz
		sbi(ADCSRA, ADPS2);
    2af4:	ea e7       	ldi	r30, 0x7A	; 122
    2af6:	f0 e0       	ldi	r31, 0x00	; 0
    2af8:	80 81       	ld	r24, Z
    2afa:	84 60       	ori	r24, 0x04	; 4
    2afc:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS1);
    2afe:	80 81       	ld	r24, Z
    2b00:	8d 7f       	andi	r24, 0xFD	; 253
    2b02:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS0);
    2b04:	80 81       	ld	r24, Z
    2b06:	8e 7f       	andi	r24, 0xFE	; 254
    2b08:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    2b0a:	80 81       	ld	r24, Z
    2b0c:	80 68       	ori	r24, 0x80	; 128
    2b0e:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    2b10:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    2b14:	08 95       	ret

00002b16 <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
    2b16:	86 33       	cpi	r24, 0x36	; 54
    2b18:	08 f0       	brcs	.+2      	; 0x2b1c <analogRead+0x6>
    2b1a:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
    2b1c:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
    2b20:	28 2f       	mov	r18, r24
    2b22:	28 70       	andi	r18, 0x08	; 8
    2b24:	97 7f       	andi	r25, 0xF7	; 247
    2b26:	92 2b       	or	r25, r18
    2b28:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
    2b2c:	20 91 1c 02 	lds	r18, 0x021C	; 0x80021c <analog_reference>
    2b30:	90 e4       	ldi	r25, 0x40	; 64
    2b32:	29 9f       	mul	r18, r25
    2b34:	90 01       	movw	r18, r0
    2b36:	11 24       	eor	r1, r1
    2b38:	87 70       	andi	r24, 0x07	; 7
    2b3a:	82 2b       	or	r24, r18
    2b3c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
    2b40:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
    2b44:	80 64       	ori	r24, 0x40	; 64
    2b46:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
    2b4a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
    2b4e:	86 fd       	sbrc	r24, 6
    2b50:	fc cf       	rjmp	.-8      	; 0x2b4a <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
    2b52:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
	high = ADCH;
    2b56:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
    2b5a:	90 e0       	ldi	r25, 0x00	; 0
}
    2b5c:	92 2b       	or	r25, r18
    2b5e:	08 95       	ret

00002b60 <analogWrite>:
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
    2b60:	1f 93       	push	r17
    2b62:	cf 93       	push	r28
    2b64:	df 93       	push	r29
    2b66:	18 2f       	mov	r17, r24
    2b68:	eb 01       	movw	r28, r22
	// We need to make sure the PWM output is enabled for those pins
	// that support it, as we turn it off when digitally reading or
	// writing with them.  Also, make sure the pin is in output mode
	// for consistenty with Wiring, which doesn't require a pinMode
	// call for the analog output pins.
	pinMode(pin, OUTPUT);
    2b6a:	61 e0       	ldi	r22, 0x01	; 1
    2b6c:	16 d1       	rcall	.+556    	; 0x2d9a <pinMode>
	if (val == 0)
    2b6e:	20 97       	sbiw	r28, 0x00	; 0
    2b70:	11 f4       	brne	.+4      	; 0x2b76 <analogWrite+0x16>
	{
		digitalWrite(pin, LOW);
    2b72:	60 e0       	ldi	r22, 0x00	; 0
    2b74:	04 c0       	rjmp	.+8      	; 0x2b7e <analogWrite+0x1e>
	}
	else if (val == 255)
    2b76:	cf 3f       	cpi	r28, 0xFF	; 255
    2b78:	d1 05       	cpc	r29, r1
    2b7a:	31 f4       	brne	.+12     	; 0x2b88 <analogWrite+0x28>
	{
		digitalWrite(pin, HIGH);
    2b7c:	61 e0       	ldi	r22, 0x01	; 1
    2b7e:	81 2f       	mov	r24, r17
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    2b80:	df 91       	pop	r29
    2b82:	cf 91       	pop	r28
	{
		digitalWrite(pin, LOW);
	}
	else if (val == 255)
	{
		digitalWrite(pin, HIGH);
    2b84:	1f 91       	pop	r17
    2b86:	45 c1       	rjmp	.+650    	; 0x2e12 <digitalWrite>
	}
	else
	{
		switch(digitalPinToTimer(pin))
    2b88:	e1 2f       	mov	r30, r17
    2b8a:	f0 e0       	ldi	r31, 0x00	; 0
    2b8c:	e1 54       	subi	r30, 0x41	; 65
    2b8e:	fb 4f       	sbci	r31, 0xFB	; 251
    2b90:	e4 91       	lpm	r30, Z
    2b92:	8e 2f       	mov	r24, r30
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	fc 01       	movw	r30, r24
    2b98:	31 97       	sbiw	r30, 0x01	; 1
    2b9a:	e2 31       	cpi	r30, 0x12	; 18
    2b9c:	f1 05       	cpc	r31, r1
    2b9e:	08 f0       	brcs	.+2      	; 0x2ba2 <analogWrite+0x42>
    2ba0:	9d c0       	rjmp	.+314    	; 0x2cdc <analogWrite+0x17c>
    2ba2:	88 27       	eor	r24, r24
    2ba4:	ee 58       	subi	r30, 0x8E	; 142
    2ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba8:	8f 4f       	sbci	r24, 0xFF	; 255
    2baa:	0c 94 fa 2d 	jmp	0x5bf4	; 0x5bf4 <__tablejump2__>
			#endif

			#if defined(TCCR0A) && defined(COM0A1)
			case TIMER0A:
				// connect pwm to pin on timer 0, channel A
				sbi(TCCR0A, COM0A1);
    2bae:	84 b5       	in	r24, 0x24	; 36
    2bb0:	80 68       	ori	r24, 0x80	; 128
    2bb2:	84 bd       	out	0x24, r24	; 36
				OCR0A = val; // set pwm duty
    2bb4:	c7 bd       	out	0x27, r28	; 39
				break;
    2bb6:	97 c0       	rjmp	.+302    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR0A) && defined(COM0B1)
			case TIMER0B:
				// connect pwm to pin on timer 0, channel B
				sbi(TCCR0A, COM0B1);
    2bb8:	84 b5       	in	r24, 0x24	; 36
    2bba:	80 62       	ori	r24, 0x20	; 32
    2bbc:	84 bd       	out	0x24, r24	; 36
				OCR0B = val; // set pwm duty
    2bbe:	c8 bd       	out	0x28, r28	; 40
				break;
    2bc0:	92 c0       	rjmp	.+292    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR1A) && defined(COM1A1)
			case TIMER1A:
				// connect pwm to pin on timer 1, channel A
				sbi(TCCR1A, COM1A1);
    2bc2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2bc6:	80 68       	ori	r24, 0x80	; 128
    2bc8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
				OCR1A = val; // set pwm duty
    2bcc:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    2bd0:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
				break;
    2bd4:	88 c0       	rjmp	.+272    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR1A) && defined(COM1B1)
			case TIMER1B:
				// connect pwm to pin on timer 1, channel B
				sbi(TCCR1A, COM1B1);
    2bd6:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2bda:	80 62       	ori	r24, 0x20	; 32
    2bdc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
				OCR1B = val; // set pwm duty
    2be0:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
    2be4:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
				break;
    2be8:	7e c0       	rjmp	.+252    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR1A) && defined(COM1C1)
			case TIMER1C:
				// connect pwm to pin on timer 1, channel C
				sbi(TCCR1A, COM1C1);
    2bea:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2bee:	88 60       	ori	r24, 0x08	; 8
    2bf0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
				OCR1C = val; // set pwm duty
    2bf4:	d0 93 8d 00 	sts	0x008D, r29	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
    2bf8:	c0 93 8c 00 	sts	0x008C, r28	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
				break;
    2bfc:	74 c0       	rjmp	.+232    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR2A) && defined(COM2A1)
			case TIMER2A:
				// connect pwm to pin on timer 2, channel A
				sbi(TCCR2A, COM2A1);
    2bfe:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2c02:	80 68       	ori	r24, 0x80	; 128
    2c04:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
				OCR2A = val; // set pwm duty
    2c08:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
				break;
    2c0c:	6c c0       	rjmp	.+216    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR2A) && defined(COM2B1)
			case TIMER2B:
				// connect pwm to pin on timer 2, channel B
				sbi(TCCR2A, COM2B1);
    2c0e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2c12:	80 62       	ori	r24, 0x20	; 32
    2c14:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
				OCR2B = val; // set pwm duty
    2c18:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
				break;
    2c1c:	64 c0       	rjmp	.+200    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR3A) && defined(COM3A1)
			case TIMER3A:
				// connect pwm to pin on timer 3, channel A
				sbi(TCCR3A, COM3A1);
    2c1e:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2c22:	80 68       	ori	r24, 0x80	; 128
    2c24:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
				OCR3A = val; // set pwm duty
    2c28:	d0 93 99 00 	sts	0x0099, r29	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    2c2c:	c0 93 98 00 	sts	0x0098, r28	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
				break;
    2c30:	5a c0       	rjmp	.+180    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR3A) && defined(COM3B1)
			case TIMER3B:
				// connect pwm to pin on timer 3, channel B
				sbi(TCCR3A, COM3B1);
    2c32:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2c36:	80 62       	ori	r24, 0x20	; 32
    2c38:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
				OCR3B = val; // set pwm duty
    2c3c:	d0 93 9b 00 	sts	0x009B, r29	; 0x80009b <__TEXT_REGION_LENGTH__+0x70009b>
    2c40:	c0 93 9a 00 	sts	0x009A, r28	; 0x80009a <__TEXT_REGION_LENGTH__+0x70009a>
				break;
    2c44:	50 c0       	rjmp	.+160    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR3A) && defined(COM3C1)
			case TIMER3C:
				// connect pwm to pin on timer 3, channel C
				sbi(TCCR3A, COM3C1);
    2c46:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2c4a:	88 60       	ori	r24, 0x08	; 8
    2c4c:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
				OCR3C = val; // set pwm duty
    2c50:	d0 93 9d 00 	sts	0x009D, r29	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
    2c54:	c0 93 9c 00 	sts	0x009C, r28	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>
				break;
    2c58:	46 c0       	rjmp	.+140    	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR4A)
			case TIMER4A:
				//connect pwm to pin on timer 4, channel A
				sbi(TCCR4A, COM4A1);
    2c5a:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2c5e:	80 68       	ori	r24, 0x80	; 128
    2c60:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				#if defined(COM4A0)		// only used on 32U4
				cbi(TCCR4A, COM4A0);
    2c64:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2c68:	8f 7b       	andi	r24, 0xBF	; 191
    2c6a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				#endif
				OCR4A = val;	// set pwm duty
    2c6e:	d0 93 a9 00 	sts	0x00A9, r29	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
    2c72:	c0 93 a8 00 	sts	0x00A8, r28	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
				break;
    2c76:	37 c0       	rjmp	.+110    	; 0x2ce6 <analogWrite+0x186>
			#endif
			
			#if defined(TCCR4A) && defined(COM4B1)
			case TIMER4B:
				// connect pwm to pin on timer 4, channel B
				sbi(TCCR4A, COM4B1);
    2c78:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2c7c:	80 62       	ori	r24, 0x20	; 32
    2c7e:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				OCR4B = val; // set pwm duty
    2c82:	d0 93 ab 00 	sts	0x00AB, r29	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
    2c86:	c0 93 aa 00 	sts	0x00AA, r28	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
				break;
    2c8a:	2d c0       	rjmp	.+90     	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR4A) && defined(COM4C1)
			case TIMER4C:
				// connect pwm to pin on timer 4, channel C
				sbi(TCCR4A, COM4C1);
    2c8c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2c90:	88 60       	ori	r24, 0x08	; 8
    2c92:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
				OCR4C = val; // set pwm duty
    2c96:	d0 93 ad 00 	sts	0x00AD, r29	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
    2c9a:	c0 93 ac 00 	sts	0x00AC, r28	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
				break;
    2c9e:	23 c0       	rjmp	.+70     	; 0x2ce6 <analogWrite+0x186>

							
			#if defined(TCCR5A) && defined(COM5A1)
			case TIMER5A:
				// connect pwm to pin on timer 5, channel A
				sbi(TCCR5A, COM5A1);
    2ca0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2ca4:	80 68       	ori	r24, 0x80	; 128
    2ca6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
				OCR5A = val; // set pwm duty
    2caa:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
    2cae:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
				break;
    2cb2:	19 c0       	rjmp	.+50     	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR5A) && defined(COM5B1)
			case TIMER5B:
				// connect pwm to pin on timer 5, channel B
				sbi(TCCR5A, COM5B1);
    2cb4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2cb8:	80 62       	ori	r24, 0x20	; 32
    2cba:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
				OCR5B = val; // set pwm duty
    2cbe:	d0 93 2b 01 	sts	0x012B, r29	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
    2cc2:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
				break;
    2cc6:	0f c0       	rjmp	.+30     	; 0x2ce6 <analogWrite+0x186>
			#endif

			#if defined(TCCR5A) && defined(COM5C1)
			case TIMER5C:
				// connect pwm to pin on timer 5, channel C
				sbi(TCCR5A, COM5C1);
    2cc8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2ccc:	88 60       	ori	r24, 0x08	; 8
    2cce:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
				OCR5C = val; // set pwm duty
    2cd2:	d0 93 2d 01 	sts	0x012D, r29	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
    2cd6:	c0 93 2c 01 	sts	0x012C, r28	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
				break;
    2cda:	05 c0       	rjmp	.+10     	; 0x2ce6 <analogWrite+0x186>
			#endif

			case NOT_ON_TIMER:
			default:
				if (val < 128) {
    2cdc:	c0 38       	cpi	r28, 0x80	; 128
    2cde:	d1 05       	cpc	r29, r1
    2ce0:	0c f0       	brlt	.+2      	; 0x2ce4 <analogWrite+0x184>
    2ce2:	4c cf       	rjmp	.-360    	; 0x2b7c <analogWrite+0x1c>
    2ce4:	46 cf       	rjmp	.-372    	; 0x2b72 <analogWrite+0x12>
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    2ce6:	df 91       	pop	r29
    2ce8:	cf 91       	pop	r28
    2cea:	1f 91       	pop	r17
    2cec:	08 95       	ret

00002cee <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    2cee:	90 e0       	ldi	r25, 0x00	; 0
    2cf0:	fc 01       	movw	r30, r24
    2cf2:	31 97       	sbiw	r30, 0x01	; 1
    2cf4:	e2 31       	cpi	r30, 0x12	; 18
    2cf6:	f1 05       	cpc	r31, r1
    2cf8:	08 f0       	brcs	.+2      	; 0x2cfc <turnOffPWM+0xe>
    2cfa:	4e c0       	rjmp	.+156    	; 0x2d98 <turnOffPWM+0xaa>
    2cfc:	88 27       	eor	r24, r24
    2cfe:	ec 57       	subi	r30, 0x7C	; 124
    2d00:	ff 4f       	sbci	r31, 0xFF	; 255
    2d02:	8f 4f       	sbci	r24, 0xFF	; 255
    2d04:	0c 94 fa 2d 	jmp	0x5bf4	; 0x5bf4 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    2d08:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d0c:	8f 77       	andi	r24, 0x7F	; 127
    2d0e:	03 c0       	rjmp	.+6      	; 0x2d16 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    2d10:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d14:	8f 7d       	andi	r24, 0xDF	; 223
    2d16:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d1a:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    2d1c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    2d20:	87 7f       	andi	r24, 0xF7	; 247
    2d22:	f9 cf       	rjmp	.-14     	; 0x2d16 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    2d24:	84 b5       	in	r24, 0x24	; 36
    2d26:	8f 77       	andi	r24, 0x7F	; 127
    2d28:	02 c0       	rjmp	.+4      	; 0x2d2e <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    2d2a:	84 b5       	in	r24, 0x24	; 36
    2d2c:	8f 7d       	andi	r24, 0xDF	; 223
    2d2e:	84 bd       	out	0x24, r24	; 36
    2d30:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    2d32:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2d36:	8f 77       	andi	r24, 0x7F	; 127
    2d38:	03 c0       	rjmp	.+6      	; 0x2d40 <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    2d3a:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2d3e:	8f 7d       	andi	r24, 0xDF	; 223
    2d40:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    2d44:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    2d46:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2d4a:	8f 77       	andi	r24, 0x7F	; 127
    2d4c:	07 c0       	rjmp	.+14     	; 0x2d5c <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    2d4e:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2d52:	8f 7d       	andi	r24, 0xDF	; 223
    2d54:	03 c0       	rjmp	.+6      	; 0x2d5c <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    2d56:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2d5a:	87 7f       	andi	r24, 0xF7	; 247
    2d5c:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    2d60:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    2d62:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2d66:	8f 77       	andi	r24, 0x7F	; 127
    2d68:	07 c0       	rjmp	.+14     	; 0x2d78 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    2d6a:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2d6e:	8f 7d       	andi	r24, 0xDF	; 223
    2d70:	03 c0       	rjmp	.+6      	; 0x2d78 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    2d72:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2d76:	87 7f       	andi	r24, 0xF7	; 247
    2d78:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    2d7c:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    2d7e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2d82:	8f 77       	andi	r24, 0x7F	; 127
    2d84:	07 c0       	rjmp	.+14     	; 0x2d94 <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    2d86:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2d8a:	8f 7d       	andi	r24, 0xDF	; 223
    2d8c:	03 c0       	rjmp	.+6      	; 0x2d94 <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    2d8e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2d92:	87 7f       	andi	r24, 0xF7	; 247
    2d94:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    2d98:	08 95       	ret

00002d9a <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    2d9a:	cf 93       	push	r28
    2d9c:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	fc 01       	movw	r30, r24
    2da2:	eb 5f       	subi	r30, 0xFB	; 251
    2da4:	fa 4f       	sbci	r31, 0xFA	; 250
    2da6:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    2da8:	fc 01       	movw	r30, r24
    2daa:	e5 5b       	subi	r30, 0xB5	; 181
    2dac:	fa 4f       	sbci	r31, 0xFA	; 250
    2dae:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    2db0:	88 23       	and	r24, r24
    2db2:	61 f1       	breq	.+88     	; 0x2e0c <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    2db4:	90 e0       	ldi	r25, 0x00	; 0
    2db6:	88 0f       	add	r24, r24
    2db8:	99 1f       	adc	r25, r25
    2dba:	fc 01       	movw	r30, r24
    2dbc:	e5 55       	subi	r30, 0x55	; 85
    2dbe:	fa 4f       	sbci	r31, 0xFA	; 250
    2dc0:	c5 91       	lpm	r28, Z+
    2dc2:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    2dc4:	fc 01       	movw	r30, r24
    2dc6:	ef 56       	subi	r30, 0x6F	; 111
    2dc8:	fa 4f       	sbci	r31, 0xFA	; 250
    2dca:	a5 91       	lpm	r26, Z+
    2dcc:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    2dce:	61 11       	cpse	r22, r1
    2dd0:	09 c0       	rjmp	.+18     	; 0x2de4 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    2dd2:	9f b7       	in	r25, 0x3f	; 63
                cli();
    2dd4:	f8 94       	cli
		*reg &= ~bit;
    2dd6:	88 81       	ld	r24, Y
    2dd8:	20 95       	com	r18
    2dda:	82 23       	and	r24, r18
    2ddc:	88 83       	st	Y, r24
		*out &= ~bit;
    2dde:	ec 91       	ld	r30, X
    2de0:	2e 23       	and	r18, r30
    2de2:	0b c0       	rjmp	.+22     	; 0x2dfa <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    2de4:	62 30       	cpi	r22, 0x02	; 2
    2de6:	61 f4       	brne	.+24     	; 0x2e00 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    2de8:	9f b7       	in	r25, 0x3f	; 63
                cli();
    2dea:	f8 94       	cli
		*reg &= ~bit;
    2dec:	88 81       	ld	r24, Y
    2dee:	32 2f       	mov	r19, r18
    2df0:	30 95       	com	r19
    2df2:	83 23       	and	r24, r19
    2df4:	88 83       	st	Y, r24
		*out |= bit;
    2df6:	ec 91       	ld	r30, X
    2df8:	2e 2b       	or	r18, r30
    2dfa:	2c 93       	st	X, r18
		SREG = oldSREG;
    2dfc:	9f bf       	out	0x3f, r25	; 63
    2dfe:	06 c0       	rjmp	.+12     	; 0x2e0c <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    2e00:	8f b7       	in	r24, 0x3f	; 63
                cli();
    2e02:	f8 94       	cli
		*reg |= bit;
    2e04:	e8 81       	ld	r30, Y
    2e06:	2e 2b       	or	r18, r30
    2e08:	28 83       	st	Y, r18
		SREG = oldSREG;
    2e0a:	8f bf       	out	0x3f, r24	; 63
	}
}
    2e0c:	df 91       	pop	r29
    2e0e:	cf 91       	pop	r28
    2e10:	08 95       	ret

00002e12 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    2e12:	1f 93       	push	r17
    2e14:	cf 93       	push	r28
    2e16:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    2e18:	28 2f       	mov	r18, r24
    2e1a:	30 e0       	ldi	r19, 0x00	; 0
    2e1c:	f9 01       	movw	r30, r18
    2e1e:	e1 54       	subi	r30, 0x41	; 65
    2e20:	fb 4f       	sbci	r31, 0xFB	; 251
    2e22:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    2e24:	f9 01       	movw	r30, r18
    2e26:	eb 5f       	subi	r30, 0xFB	; 251
    2e28:	fa 4f       	sbci	r31, 0xFA	; 250
    2e2a:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    2e2c:	f9 01       	movw	r30, r18
    2e2e:	e5 5b       	subi	r30, 0xB5	; 181
    2e30:	fa 4f       	sbci	r31, 0xFA	; 250
    2e32:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    2e34:	cc 23       	and	r28, r28
    2e36:	b9 f0       	breq	.+46     	; 0x2e66 <digitalWrite+0x54>
    2e38:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    2e3a:	81 11       	cpse	r24, r1
    2e3c:	58 df       	rcall	.-336    	; 0x2cee <turnOffPWM>

	out = portOutputRegister(port);
    2e3e:	ec 2f       	mov	r30, r28
    2e40:	f0 e0       	ldi	r31, 0x00	; 0
    2e42:	ee 0f       	add	r30, r30
    2e44:	ff 1f       	adc	r31, r31
    2e46:	ef 56       	subi	r30, 0x6F	; 111
    2e48:	fa 4f       	sbci	r31, 0xFA	; 250
    2e4a:	a5 91       	lpm	r26, Z+
    2e4c:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    2e4e:	9f b7       	in	r25, 0x3f	; 63
	cli();
    2e50:	f8 94       	cli

	if (val == LOW) {
    2e52:	11 11       	cpse	r17, r1
    2e54:	04 c0       	rjmp	.+8      	; 0x2e5e <digitalWrite+0x4c>
		*out &= ~bit;
    2e56:	8c 91       	ld	r24, X
    2e58:	d0 95       	com	r29
    2e5a:	d8 23       	and	r29, r24
    2e5c:	02 c0       	rjmp	.+4      	; 0x2e62 <digitalWrite+0x50>
	} else {
		*out |= bit;
    2e5e:	ec 91       	ld	r30, X
    2e60:	de 2b       	or	r29, r30
    2e62:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    2e64:	9f bf       	out	0x3f, r25	; 63
}
    2e66:	df 91       	pop	r29
    2e68:	cf 91       	pop	r28
    2e6a:	1f 91       	pop	r17
    2e6c:	08 95       	ret

00002e6e <shiftOut>:
	}
	return value;
}

void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)
{
    2e6e:	ff 92       	push	r15
    2e70:	0f 93       	push	r16
    2e72:	1f 93       	push	r17
    2e74:	cf 93       	push	r28
    2e76:	df 93       	push	r29
    2e78:	08 2f       	mov	r16, r24
    2e7a:	16 2f       	mov	r17, r22
    2e7c:	f4 2e       	mov	r15, r20
    2e7e:	c2 2f       	mov	r28, r18
    2e80:	d8 e0       	ldi	r29, 0x08	; 8
	uint8_t i;

	for (i = 0; i < 8; i++)  {
		if (bitOrder == LSBFIRST) {
			digitalWrite(dataPin, val & 1);
    2e82:	6c 2f       	mov	r22, r28
void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)
{
	uint8_t i;

	for (i = 0; i < 8; i++)  {
		if (bitOrder == LSBFIRST) {
    2e84:	f1 10       	cpse	r15, r1
    2e86:	05 c0       	rjmp	.+10     	; 0x2e92 <shiftOut+0x24>
			digitalWrite(dataPin, val & 1);
    2e88:	61 70       	andi	r22, 0x01	; 1
    2e8a:	80 2f       	mov	r24, r16
    2e8c:	c2 df       	rcall	.-124    	; 0x2e12 <digitalWrite>
			val >>= 1;
    2e8e:	c6 95       	lsr	r28
    2e90:	06 c0       	rjmp	.+12     	; 0x2e9e <shiftOut+0x30>
		} else {	
			digitalWrite(dataPin, (val & 128) != 0);
    2e92:	66 1f       	adc	r22, r22
    2e94:	66 27       	eor	r22, r22
    2e96:	66 1f       	adc	r22, r22
    2e98:	80 2f       	mov	r24, r16
    2e9a:	bb df       	rcall	.-138    	; 0x2e12 <digitalWrite>
			val <<= 1;
    2e9c:	cc 0f       	add	r28, r28
		}
			
		digitalWrite(clockPin, HIGH);
    2e9e:	61 e0       	ldi	r22, 0x01	; 1
    2ea0:	81 2f       	mov	r24, r17
    2ea2:	b7 df       	rcall	.-146    	; 0x2e12 <digitalWrite>
		digitalWrite(clockPin, LOW);		
    2ea4:	60 e0       	ldi	r22, 0x00	; 0
    2ea6:	81 2f       	mov	r24, r17
    2ea8:	b4 df       	rcall	.-152    	; 0x2e12 <digitalWrite>
    2eaa:	d1 50       	subi	r29, 0x01	; 1
    2eac:	51 f7       	brne	.-44     	; 0x2e82 <shiftOut+0x14>

void shiftOut(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val)
{
	uint8_t i;

	for (i = 0; i < 8; i++)  {
    2eae:	df 91       	pop	r29
		}
			
		digitalWrite(clockPin, HIGH);
		digitalWrite(clockPin, LOW);		
	}
}
    2eb0:	cf 91       	pop	r28
    2eb2:	1f 91       	pop	r17
    2eb4:	0f 91       	pop	r16
    2eb6:	ff 90       	pop	r15
    2eb8:	08 95       	ret

00002eba <_ZN6StringD1Ev>:
    2eba:	fc 01       	movw	r30, r24
{
	if (!buffer) return;
	for (char *p = buffer; *p; p++) {
		*p = toupper(*p);
	}
}
    2ebc:	80 81       	ld	r24, Z
    2ebe:	91 81       	ldd	r25, Z+1	; 0x01
    2ec0:	00 97       	sbiw	r24, 0x00	; 0
    2ec2:	11 f0       	breq	.+4      	; 0x2ec8 <_ZN6StringD1Ev+0xe>
    2ec4:	0c 94 d2 2e 	jmp	0x5da4	; 0x5da4 <free>
    2ec8:	08 95       	ret

00002eca <_ZN6String10invalidateEv>:
    2eca:	cf 93       	push	r28
    2ecc:	df 93       	push	r29
    2ece:	ec 01       	movw	r28, r24
    2ed0:	88 81       	ld	r24, Y
    2ed2:	99 81       	ldd	r25, Y+1	; 0x01
    2ed4:	00 97       	sbiw	r24, 0x00	; 0
    2ed6:	11 f0       	breq	.+4      	; 0x2edc <_ZN6String10invalidateEv+0x12>
    2ed8:	0e 94 d2 2e 	call	0x5da4	; 0x5da4 <free>
    2edc:	19 82       	std	Y+1, r1	; 0x01
    2ede:	18 82       	st	Y, r1
    2ee0:	1d 82       	std	Y+5, r1	; 0x05
    2ee2:	1c 82       	std	Y+4, r1	; 0x04
    2ee4:	1b 82       	std	Y+3, r1	; 0x03
    2ee6:	1a 82       	std	Y+2, r1	; 0x02
    2ee8:	df 91       	pop	r29
    2eea:	cf 91       	pop	r28
    2eec:	08 95       	ret

00002eee <_ZN6String12changeBufferEj>:
    2eee:	0f 93       	push	r16
    2ef0:	1f 93       	push	r17
    2ef2:	cf 93       	push	r28
    2ef4:	df 93       	push	r29
    2ef6:	ec 01       	movw	r28, r24
    2ef8:	8b 01       	movw	r16, r22
    2efa:	6f 5f       	subi	r22, 0xFF	; 255
    2efc:	7f 4f       	sbci	r23, 0xFF	; 255
    2efe:	88 81       	ld	r24, Y
    2f00:	99 81       	ldd	r25, Y+1	; 0x01
    2f02:	0e 94 5b 2f 	call	0x5eb6	; 0x5eb6 <realloc>
    2f06:	00 97       	sbiw	r24, 0x00	; 0
    2f08:	31 f0       	breq	.+12     	; 0x2f16 <_ZN6String12changeBufferEj+0x28>
    2f0a:	99 83       	std	Y+1, r25	; 0x01
    2f0c:	88 83       	st	Y, r24
    2f0e:	1b 83       	std	Y+3, r17	; 0x03
    2f10:	0a 83       	std	Y+2, r16	; 0x02
    2f12:	81 e0       	ldi	r24, 0x01	; 1
    2f14:	01 c0       	rjmp	.+2      	; 0x2f18 <_ZN6String12changeBufferEj+0x2a>
    2f16:	80 e0       	ldi	r24, 0x00	; 0
    2f18:	df 91       	pop	r29
    2f1a:	cf 91       	pop	r28
    2f1c:	1f 91       	pop	r17
    2f1e:	0f 91       	pop	r16
    2f20:	08 95       	ret

00002f22 <_ZN6String7reserveEj>:
    2f22:	cf 93       	push	r28
    2f24:	df 93       	push	r29
    2f26:	ec 01       	movw	r28, r24
    2f28:	88 81       	ld	r24, Y
    2f2a:	99 81       	ldd	r25, Y+1	; 0x01
    2f2c:	89 2b       	or	r24, r25
    2f2e:	29 f0       	breq	.+10     	; 0x2f3a <_ZN6String7reserveEj+0x18>
    2f30:	8a 81       	ldd	r24, Y+2	; 0x02
    2f32:	9b 81       	ldd	r25, Y+3	; 0x03
    2f34:	86 17       	cp	r24, r22
    2f36:	97 07       	cpc	r25, r23
    2f38:	58 f4       	brcc	.+22     	; 0x2f50 <_ZN6String7reserveEj+0x2e>
    2f3a:	ce 01       	movw	r24, r28
    2f3c:	d8 df       	rcall	.-80     	; 0x2eee <_ZN6String12changeBufferEj>
    2f3e:	88 23       	and	r24, r24
    2f40:	41 f0       	breq	.+16     	; 0x2f52 <_ZN6String7reserveEj+0x30>
    2f42:	8c 81       	ldd	r24, Y+4	; 0x04
    2f44:	9d 81       	ldd	r25, Y+5	; 0x05
    2f46:	89 2b       	or	r24, r25
    2f48:	19 f4       	brne	.+6      	; 0x2f50 <_ZN6String7reserveEj+0x2e>
    2f4a:	e8 81       	ld	r30, Y
    2f4c:	f9 81       	ldd	r31, Y+1	; 0x01
    2f4e:	10 82       	st	Z, r1
    2f50:	81 e0       	ldi	r24, 0x01	; 1
    2f52:	df 91       	pop	r29
    2f54:	cf 91       	pop	r28
    2f56:	08 95       	ret

00002f58 <_ZN6String4copyEPKcj>:
    2f58:	ef 92       	push	r14
    2f5a:	ff 92       	push	r15
    2f5c:	0f 93       	push	r16
    2f5e:	1f 93       	push	r17
    2f60:	cf 93       	push	r28
    2f62:	df 93       	push	r29
    2f64:	ec 01       	movw	r28, r24
    2f66:	7b 01       	movw	r14, r22
    2f68:	8a 01       	movw	r16, r20
    2f6a:	ba 01       	movw	r22, r20
    2f6c:	da df       	rcall	.-76     	; 0x2f22 <_ZN6String7reserveEj>
    2f6e:	81 11       	cpse	r24, r1
    2f70:	03 c0       	rjmp	.+6      	; 0x2f78 <_ZN6String4copyEPKcj+0x20>
    2f72:	ce 01       	movw	r24, r28
    2f74:	aa df       	rcall	.-172    	; 0x2eca <_ZN6String10invalidateEv>
    2f76:	07 c0       	rjmp	.+14     	; 0x2f86 <_ZN6String4copyEPKcj+0x2e>
    2f78:	1d 83       	std	Y+5, r17	; 0x05
    2f7a:	0c 83       	std	Y+4, r16	; 0x04
    2f7c:	b7 01       	movw	r22, r14
    2f7e:	88 81       	ld	r24, Y
    2f80:	99 81       	ldd	r25, Y+1	; 0x01
    2f82:	0e 94 c9 30 	call	0x6192	; 0x6192 <strcpy>
    2f86:	ce 01       	movw	r24, r28
    2f88:	df 91       	pop	r29
    2f8a:	cf 91       	pop	r28
    2f8c:	1f 91       	pop	r17
    2f8e:	0f 91       	pop	r16
    2f90:	ff 90       	pop	r15
    2f92:	ef 90       	pop	r14
    2f94:	08 95       	ret

00002f96 <_ZN6StringC1EPKc>:
    2f96:	fc 01       	movw	r30, r24
    2f98:	11 82       	std	Z+1, r1	; 0x01
    2f9a:	10 82       	st	Z, r1
    2f9c:	13 82       	std	Z+3, r1	; 0x03
    2f9e:	12 82       	std	Z+2, r1	; 0x02
    2fa0:	15 82       	std	Z+5, r1	; 0x05
    2fa2:	14 82       	std	Z+4, r1	; 0x04
    2fa4:	61 15       	cp	r22, r1
    2fa6:	71 05       	cpc	r23, r1
    2fa8:	49 f0       	breq	.+18     	; 0x2fbc <_ZN6StringC1EPKc+0x26>
    2faa:	fb 01       	movw	r30, r22
    2fac:	01 90       	ld	r0, Z+
    2fae:	00 20       	and	r0, r0
    2fb0:	e9 f7       	brne	.-6      	; 0x2fac <_ZN6StringC1EPKc+0x16>
    2fb2:	31 97       	sbiw	r30, 0x01	; 1
    2fb4:	af 01       	movw	r20, r30
    2fb6:	46 1b       	sub	r20, r22
    2fb8:	57 0b       	sbc	r21, r23
    2fba:	ce cf       	rjmp	.-100    	; 0x2f58 <_ZN6String4copyEPKcj>
    2fbc:	08 95       	ret

00002fbe <_ZN6StringaSERKS_>:
    2fbe:	cf 93       	push	r28
    2fc0:	df 93       	push	r29
    2fc2:	ec 01       	movw	r28, r24
    2fc4:	fb 01       	movw	r30, r22
    2fc6:	86 17       	cp	r24, r22
    2fc8:	97 07       	cpc	r25, r23
    2fca:	51 f0       	breq	.+20     	; 0x2fe0 <_ZN6StringaSERKS_+0x22>
    2fcc:	60 81       	ld	r22, Z
    2fce:	71 81       	ldd	r23, Z+1	; 0x01
    2fd0:	61 15       	cp	r22, r1
    2fd2:	71 05       	cpc	r23, r1
    2fd4:	21 f0       	breq	.+8      	; 0x2fde <_ZN6StringaSERKS_+0x20>
    2fd6:	44 81       	ldd	r20, Z+4	; 0x04
    2fd8:	55 81       	ldd	r21, Z+5	; 0x05
    2fda:	be df       	rcall	.-132    	; 0x2f58 <_ZN6String4copyEPKcj>
    2fdc:	01 c0       	rjmp	.+2      	; 0x2fe0 <_ZN6StringaSERKS_+0x22>
    2fde:	75 df       	rcall	.-278    	; 0x2eca <_ZN6String10invalidateEv>
    2fe0:	ce 01       	movw	r24, r28
    2fe2:	df 91       	pop	r29
    2fe4:	cf 91       	pop	r28
    2fe6:	08 95       	ret

00002fe8 <_ZN6StringC1ERKS_>:
    2fe8:	fc 01       	movw	r30, r24
    2fea:	11 82       	std	Z+1, r1	; 0x01
    2fec:	10 82       	st	Z, r1
    2fee:	13 82       	std	Z+3, r1	; 0x03
    2ff0:	12 82       	std	Z+2, r1	; 0x02
    2ff2:	15 82       	std	Z+5, r1	; 0x05
    2ff4:	14 82       	std	Z+4, r1	; 0x04
    2ff6:	e3 cf       	rjmp	.-58     	; 0x2fbe <_ZN6StringaSERKS_>

00002ff8 <_ZN6StringaSEPKc>:
    2ff8:	cf 93       	push	r28
    2ffa:	df 93       	push	r29
    2ffc:	ec 01       	movw	r28, r24
    2ffe:	61 15       	cp	r22, r1
    3000:	71 05       	cpc	r23, r1
    3002:	51 f0       	breq	.+20     	; 0x3018 <_ZN6StringaSEPKc+0x20>
    3004:	fb 01       	movw	r30, r22
    3006:	01 90       	ld	r0, Z+
    3008:	00 20       	and	r0, r0
    300a:	e9 f7       	brne	.-6      	; 0x3006 <_ZN6StringaSEPKc+0xe>
    300c:	31 97       	sbiw	r30, 0x01	; 1
    300e:	af 01       	movw	r20, r30
    3010:	46 1b       	sub	r20, r22
    3012:	57 0b       	sbc	r21, r23
    3014:	a1 df       	rcall	.-190    	; 0x2f58 <_ZN6String4copyEPKcj>
    3016:	01 c0       	rjmp	.+2      	; 0x301a <_ZN6StringaSEPKc+0x22>
    3018:	58 df       	rcall	.-336    	; 0x2eca <_ZN6String10invalidateEv>
    301a:	ce 01       	movw	r24, r28
    301c:	df 91       	pop	r29
    301e:	cf 91       	pop	r28
    3020:	08 95       	ret

00003022 <_ZN6StringC1Eih>:
    3022:	0f 93       	push	r16
    3024:	1f 93       	push	r17
    3026:	cf 93       	push	r28
    3028:	df 93       	push	r29
    302a:	cd b7       	in	r28, 0x3d	; 61
    302c:	de b7       	in	r29, 0x3e	; 62
    302e:	62 97       	sbiw	r28, 0x12	; 18
    3030:	0f b6       	in	r0, 0x3f	; 63
    3032:	f8 94       	cli
    3034:	de bf       	out	0x3e, r29	; 62
    3036:	0f be       	out	0x3f, r0	; 63
    3038:	cd bf       	out	0x3d, r28	; 61
    303a:	8c 01       	movw	r16, r24
    303c:	cb 01       	movw	r24, r22
    303e:	f8 01       	movw	r30, r16
    3040:	11 82       	std	Z+1, r1	; 0x01
    3042:	10 82       	st	Z, r1
    3044:	13 82       	std	Z+3, r1	; 0x03
    3046:	12 82       	std	Z+2, r1	; 0x02
    3048:	15 82       	std	Z+5, r1	; 0x05
    304a:	14 82       	std	Z+4, r1	; 0x04
    304c:	50 e0       	ldi	r21, 0x00	; 0
    304e:	be 01       	movw	r22, r28
    3050:	6f 5f       	subi	r22, 0xFF	; 255
    3052:	7f 4f       	sbci	r23, 0xFF	; 255
    3054:	0e 94 04 31 	call	0x6208	; 0x6208 <itoa>
    3058:	be 01       	movw	r22, r28
    305a:	6f 5f       	subi	r22, 0xFF	; 255
    305c:	7f 4f       	sbci	r23, 0xFF	; 255
    305e:	c8 01       	movw	r24, r16
    3060:	cb df       	rcall	.-106    	; 0x2ff8 <_ZN6StringaSEPKc>
    3062:	62 96       	adiw	r28, 0x12	; 18
    3064:	0f b6       	in	r0, 0x3f	; 63
    3066:	f8 94       	cli
    3068:	de bf       	out	0x3e, r29	; 62
    306a:	0f be       	out	0x3f, r0	; 63
    306c:	cd bf       	out	0x3d, r28	; 61
    306e:	df 91       	pop	r29
    3070:	cf 91       	pop	r28
    3072:	1f 91       	pop	r17
    3074:	0f 91       	pop	r16
    3076:	08 95       	ret

00003078 <_ZN6StringC1Efh>:
    3078:	ef 92       	push	r14
    307a:	ff 92       	push	r15
    307c:	0f 93       	push	r16
    307e:	1f 93       	push	r17
    3080:	cf 93       	push	r28
    3082:	df 93       	push	r29
    3084:	cd b7       	in	r28, 0x3d	; 61
    3086:	de b7       	in	r29, 0x3e	; 62
    3088:	a1 97       	sbiw	r28, 0x21	; 33
    308a:	0f b6       	in	r0, 0x3f	; 63
    308c:	f8 94       	cli
    308e:	de bf       	out	0x3e, r29	; 62
    3090:	0f be       	out	0x3f, r0	; 63
    3092:	cd bf       	out	0x3d, r28	; 61
    3094:	7c 01       	movw	r14, r24
    3096:	cb 01       	movw	r24, r22
    3098:	ba 01       	movw	r22, r20
    309a:	f7 01       	movw	r30, r14
    309c:	11 82       	std	Z+1, r1	; 0x01
    309e:	10 82       	st	Z, r1
    30a0:	13 82       	std	Z+3, r1	; 0x03
    30a2:	12 82       	std	Z+2, r1	; 0x02
    30a4:	15 82       	std	Z+5, r1	; 0x05
    30a6:	14 82       	std	Z+4, r1	; 0x04
    30a8:	42 e0       	ldi	r20, 0x02	; 2
    30aa:	42 0f       	add	r20, r18
    30ac:	8e 01       	movw	r16, r28
    30ae:	0f 5f       	subi	r16, 0xFF	; 255
    30b0:	1f 4f       	sbci	r17, 0xFF	; 255
    30b2:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <dtostrf>
    30b6:	bc 01       	movw	r22, r24
    30b8:	c7 01       	movw	r24, r14
    30ba:	9e df       	rcall	.-196    	; 0x2ff8 <_ZN6StringaSEPKc>
    30bc:	a1 96       	adiw	r28, 0x21	; 33
    30be:	0f b6       	in	r0, 0x3f	; 63
    30c0:	f8 94       	cli
    30c2:	de bf       	out	0x3e, r29	; 62
    30c4:	0f be       	out	0x3f, r0	; 63
    30c6:	cd bf       	out	0x3d, r28	; 61
    30c8:	df 91       	pop	r29
    30ca:	cf 91       	pop	r28
    30cc:	1f 91       	pop	r17
    30ce:	0f 91       	pop	r16
    30d0:	ff 90       	pop	r15
    30d2:	ef 90       	pop	r14
    30d4:	08 95       	ret

000030d6 <_ZN6String6concatEPKcj>:
    30d6:	ef 92       	push	r14
    30d8:	ff 92       	push	r15
    30da:	0f 93       	push	r16
    30dc:	1f 93       	push	r17
    30de:	cf 93       	push	r28
    30e0:	df 93       	push	r29
    30e2:	61 15       	cp	r22, r1
    30e4:	71 05       	cpc	r23, r1
    30e6:	11 f4       	brne	.+4      	; 0x30ec <_ZN6String6concatEPKcj+0x16>
    30e8:	80 e0       	ldi	r24, 0x00	; 0
    30ea:	1b c0       	rjmp	.+54     	; 0x3122 <_ZN6String6concatEPKcj+0x4c>
    30ec:	41 15       	cp	r20, r1
    30ee:	51 05       	cpc	r21, r1
    30f0:	b9 f0       	breq	.+46     	; 0x3120 <_ZN6String6concatEPKcj+0x4a>
    30f2:	7b 01       	movw	r14, r22
    30f4:	ec 01       	movw	r28, r24
    30f6:	8c 81       	ldd	r24, Y+4	; 0x04
    30f8:	9d 81       	ldd	r25, Y+5	; 0x05
    30fa:	8a 01       	movw	r16, r20
    30fc:	08 0f       	add	r16, r24
    30fe:	19 1f       	adc	r17, r25
    3100:	b8 01       	movw	r22, r16
    3102:	ce 01       	movw	r24, r28
    3104:	0e df       	rcall	.-484    	; 0x2f22 <_ZN6String7reserveEj>
    3106:	88 23       	and	r24, r24
    3108:	79 f3       	breq	.-34     	; 0x30e8 <_ZN6String6concatEPKcj+0x12>
    310a:	28 81       	ld	r18, Y
    310c:	39 81       	ldd	r19, Y+1	; 0x01
    310e:	8c 81       	ldd	r24, Y+4	; 0x04
    3110:	9d 81       	ldd	r25, Y+5	; 0x05
    3112:	b7 01       	movw	r22, r14
    3114:	82 0f       	add	r24, r18
    3116:	93 1f       	adc	r25, r19
    3118:	0e 94 c9 30 	call	0x6192	; 0x6192 <strcpy>
    311c:	1d 83       	std	Y+5, r17	; 0x05
    311e:	0c 83       	std	Y+4, r16	; 0x04
    3120:	81 e0       	ldi	r24, 0x01	; 1
    3122:	df 91       	pop	r29
    3124:	cf 91       	pop	r28
    3126:	1f 91       	pop	r17
    3128:	0f 91       	pop	r16
    312a:	ff 90       	pop	r15
    312c:	ef 90       	pop	r14
    312e:	08 95       	ret

00003130 <_ZN6String6concatEc>:
    3130:	cf 93       	push	r28
    3132:	df 93       	push	r29
    3134:	1f 92       	push	r1
    3136:	1f 92       	push	r1
    3138:	cd b7       	in	r28, 0x3d	; 61
    313a:	de b7       	in	r29, 0x3e	; 62
    313c:	69 83       	std	Y+1, r22	; 0x01
    313e:	1a 82       	std	Y+2, r1	; 0x02
    3140:	41 e0       	ldi	r20, 0x01	; 1
    3142:	50 e0       	ldi	r21, 0x00	; 0
    3144:	be 01       	movw	r22, r28
    3146:	6f 5f       	subi	r22, 0xFF	; 255
    3148:	7f 4f       	sbci	r23, 0xFF	; 255
    314a:	c5 df       	rcall	.-118    	; 0x30d6 <_ZN6String6concatEPKcj>
    314c:	0f 90       	pop	r0
    314e:	0f 90       	pop	r0
    3150:	df 91       	pop	r29
    3152:	cf 91       	pop	r28
    3154:	08 95       	ret

00003156 <_ZplRK15StringSumHelperRK6String>:
    3156:	cf 93       	push	r28
    3158:	df 93       	push	r29
    315a:	ec 01       	movw	r28, r24
    315c:	fb 01       	movw	r30, r22
    315e:	44 81       	ldd	r20, Z+4	; 0x04
    3160:	55 81       	ldd	r21, Z+5	; 0x05
    3162:	60 81       	ld	r22, Z
    3164:	71 81       	ldd	r23, Z+1	; 0x01
    3166:	b7 df       	rcall	.-146    	; 0x30d6 <_ZN6String6concatEPKcj>
    3168:	81 11       	cpse	r24, r1
    316a:	02 c0       	rjmp	.+4      	; 0x3170 <_ZplRK15StringSumHelperRK6String+0x1a>
    316c:	ce 01       	movw	r24, r28
    316e:	ad de       	rcall	.-678    	; 0x2eca <_ZN6String10invalidateEv>
    3170:	ce 01       	movw	r24, r28
    3172:	df 91       	pop	r29
    3174:	cf 91       	pop	r28
    3176:	08 95       	ret

00003178 <_ZplRK15StringSumHelperPKc>:
    3178:	cf 93       	push	r28
    317a:	df 93       	push	r29
    317c:	ec 01       	movw	r28, r24
    317e:	61 15       	cp	r22, r1
    3180:	71 05       	cpc	r23, r1
    3182:	59 f0       	breq	.+22     	; 0x319a <_ZplRK15StringSumHelperPKc+0x22>
    3184:	fb 01       	movw	r30, r22
    3186:	01 90       	ld	r0, Z+
    3188:	00 20       	and	r0, r0
    318a:	e9 f7       	brne	.-6      	; 0x3186 <_ZplRK15StringSumHelperPKc+0xe>
    318c:	31 97       	sbiw	r30, 0x01	; 1
    318e:	af 01       	movw	r20, r30
    3190:	46 1b       	sub	r20, r22
    3192:	57 0b       	sbc	r21, r23
    3194:	a0 df       	rcall	.-192    	; 0x30d6 <_ZN6String6concatEPKcj>
    3196:	81 11       	cpse	r24, r1
    3198:	02 c0       	rjmp	.+4      	; 0x319e <_ZplRK15StringSumHelperPKc+0x26>
    319a:	ce 01       	movw	r24, r28
    319c:	96 de       	rcall	.-724    	; 0x2eca <_ZN6String10invalidateEv>
    319e:	ce 01       	movw	r24, r28
    31a0:	df 91       	pop	r29
    31a2:	cf 91       	pop	r28
    31a4:	08 95       	ret

000031a6 <_ZNK6String6equalsEPKc>:
    31a6:	fc 01       	movw	r30, r24
    31a8:	24 81       	ldd	r18, Z+4	; 0x04
    31aa:	35 81       	ldd	r19, Z+5	; 0x05
    31ac:	23 2b       	or	r18, r19
    31ae:	31 f4       	brne	.+12     	; 0x31bc <_ZNK6String6equalsEPKc+0x16>
    31b0:	21 e0       	ldi	r18, 0x01	; 1
    31b2:	61 15       	cp	r22, r1
    31b4:	71 05       	cpc	r23, r1
    31b6:	a1 f0       	breq	.+40     	; 0x31e0 <_ZNK6String6equalsEPKc+0x3a>
    31b8:	fb 01       	movw	r30, r22
    31ba:	08 c0       	rjmp	.+16     	; 0x31cc <_ZNK6String6equalsEPKc+0x26>
    31bc:	fc 01       	movw	r30, r24
    31be:	80 81       	ld	r24, Z
    31c0:	91 81       	ldd	r25, Z+1	; 0x01
    31c2:	61 15       	cp	r22, r1
    31c4:	71 05       	cpc	r23, r1
    31c6:	31 f4       	brne	.+12     	; 0x31d4 <_ZNK6String6equalsEPKc+0x2e>
    31c8:	21 e0       	ldi	r18, 0x01	; 1
    31ca:	fc 01       	movw	r30, r24
    31cc:	80 81       	ld	r24, Z
    31ce:	88 23       	and	r24, r24
    31d0:	39 f0       	breq	.+14     	; 0x31e0 <_ZNK6String6equalsEPKc+0x3a>
    31d2:	05 c0       	rjmp	.+10     	; 0x31de <_ZNK6String6equalsEPKc+0x38>
    31d4:	0e 94 c0 30 	call	0x6180	; 0x6180 <strcmp>
    31d8:	21 e0       	ldi	r18, 0x01	; 1
    31da:	89 2b       	or	r24, r25
    31dc:	09 f0       	breq	.+2      	; 0x31e0 <_ZNK6String6equalsEPKc+0x3a>
    31de:	20 e0       	ldi	r18, 0x00	; 0
    31e0:	82 2f       	mov	r24, r18
    31e2:	08 95       	ret

000031e4 <_ZNK6String8getBytesEPhjj>:
    31e4:	0f 93       	push	r16
    31e6:	1f 93       	push	r17
    31e8:	cf 93       	push	r28
    31ea:	df 93       	push	r29
    31ec:	41 15       	cp	r20, r1
    31ee:	51 05       	cpc	r21, r1
    31f0:	19 f1       	breq	.+70     	; 0x3238 <_ZNK6String8getBytesEPhjj+0x54>
    31f2:	61 15       	cp	r22, r1
    31f4:	71 05       	cpc	r23, r1
    31f6:	01 f1       	breq	.+64     	; 0x3238 <_ZNK6String8getBytesEPhjj+0x54>
    31f8:	dc 01       	movw	r26, r24
    31fa:	14 96       	adiw	r26, 0x04	; 4
    31fc:	ed 91       	ld	r30, X+
    31fe:	fc 91       	ld	r31, X
    3200:	15 97       	sbiw	r26, 0x05	; 5
    3202:	2e 17       	cp	r18, r30
    3204:	3f 07       	cpc	r19, r31
    3206:	18 f0       	brcs	.+6      	; 0x320e <_ZNK6String8getBytesEPhjj+0x2a>
    3208:	fb 01       	movw	r30, r22
    320a:	10 82       	st	Z, r1
    320c:	15 c0       	rjmp	.+42     	; 0x3238 <_ZNK6String8getBytesEPhjj+0x54>
    320e:	e2 1b       	sub	r30, r18
    3210:	f3 0b       	sbc	r31, r19
    3212:	ea 01       	movw	r28, r20
    3214:	21 97       	sbiw	r28, 0x01	; 1
    3216:	ec 17       	cp	r30, r28
    3218:	fd 07       	cpc	r31, r29
    321a:	08 f4       	brcc	.+2      	; 0x321e <_ZNK6String8getBytesEPhjj+0x3a>
    321c:	ef 01       	movw	r28, r30
    321e:	8b 01       	movw	r16, r22
    3220:	fc 01       	movw	r30, r24
    3222:	60 81       	ld	r22, Z
    3224:	71 81       	ldd	r23, Z+1	; 0x01
    3226:	62 0f       	add	r22, r18
    3228:	73 1f       	adc	r23, r19
    322a:	ae 01       	movw	r20, r28
    322c:	c8 01       	movw	r24, r16
    322e:	0e 94 d0 30 	call	0x61a0	; 0x61a0 <strncpy>
    3232:	c0 0f       	add	r28, r16
    3234:	d1 1f       	adc	r29, r17
    3236:	18 82       	st	Y, r1
    3238:	df 91       	pop	r29
    323a:	cf 91       	pop	r28
    323c:	1f 91       	pop	r17
    323e:	0f 91       	pop	r16
    3240:	08 95       	ret

00003242 <_ZNK6String7indexOfERKS_j>:
    3242:	cf 93       	push	r28
    3244:	df 93       	push	r29
    3246:	fc 01       	movw	r30, r24
    3248:	24 81       	ldd	r18, Z+4	; 0x04
    324a:	35 81       	ldd	r19, Z+5	; 0x05
    324c:	42 17       	cp	r20, r18
    324e:	53 07       	cpc	r21, r19
    3250:	80 f4       	brcc	.+32     	; 0x3272 <_ZNK6String7indexOfERKS_j+0x30>
    3252:	fb 01       	movw	r30, r22
    3254:	dc 01       	movw	r26, r24
    3256:	cd 91       	ld	r28, X+
    3258:	dc 91       	ld	r29, X
    325a:	60 81       	ld	r22, Z
    325c:	71 81       	ldd	r23, Z+1	; 0x01
    325e:	ce 01       	movw	r24, r28
    3260:	84 0f       	add	r24, r20
    3262:	95 1f       	adc	r25, r21
    3264:	0e 94 ea 30 	call	0x61d4	; 0x61d4 <strstr>
    3268:	00 97       	sbiw	r24, 0x00	; 0
    326a:	19 f0       	breq	.+6      	; 0x3272 <_ZNK6String7indexOfERKS_j+0x30>
    326c:	8c 1b       	sub	r24, r28
    326e:	9d 0b       	sbc	r25, r29
    3270:	02 c0       	rjmp	.+4      	; 0x3276 <_ZNK6String7indexOfERKS_j+0x34>
    3272:	8f ef       	ldi	r24, 0xFF	; 255
    3274:	9f ef       	ldi	r25, 0xFF	; 255
    3276:	df 91       	pop	r29
    3278:	cf 91       	pop	r28
    327a:	08 95       	ret

0000327c <_ZNK6String7indexOfERKS_>:
    327c:	40 e0       	ldi	r20, 0x00	; 0
    327e:	50 e0       	ldi	r21, 0x00	; 0
    3280:	e0 cf       	rjmp	.-64     	; 0x3242 <_ZNK6String7indexOfERKS_j>

00003282 <_ZNK6String11lastIndexOfERKS_j>:
    3282:	af 92       	push	r10
    3284:	bf 92       	push	r11
    3286:	cf 92       	push	r12
    3288:	df 92       	push	r13
    328a:	ef 92       	push	r14
    328c:	ff 92       	push	r15
    328e:	0f 93       	push	r16
    3290:	1f 93       	push	r17
    3292:	cf 93       	push	r28
    3294:	df 93       	push	r29
    3296:	7b 01       	movw	r14, r22
    3298:	8a 01       	movw	r16, r20
    329a:	fb 01       	movw	r30, r22
    329c:	44 81       	ldd	r20, Z+4	; 0x04
    329e:	55 81       	ldd	r21, Z+5	; 0x05
    32a0:	41 15       	cp	r20, r1
    32a2:	51 05       	cpc	r21, r1
    32a4:	61 f1       	breq	.+88     	; 0x32fe <_ZNK6String11lastIndexOfERKS_j+0x7c>
    32a6:	fc 01       	movw	r30, r24
    32a8:	24 81       	ldd	r18, Z+4	; 0x04
    32aa:	35 81       	ldd	r19, Z+5	; 0x05
    32ac:	21 15       	cp	r18, r1
    32ae:	31 05       	cpc	r19, r1
    32b0:	31 f1       	breq	.+76     	; 0x32fe <_ZNK6String11lastIndexOfERKS_j+0x7c>
    32b2:	24 17       	cp	r18, r20
    32b4:	35 07       	cpc	r19, r21
    32b6:	18 f1       	brcs	.+70     	; 0x32fe <_ZNK6String11lastIndexOfERKS_j+0x7c>
    32b8:	02 17       	cp	r16, r18
    32ba:	13 07       	cpc	r17, r19
    32bc:	18 f0       	brcs	.+6      	; 0x32c4 <_ZNK6String11lastIndexOfERKS_j+0x42>
    32be:	89 01       	movw	r16, r18
    32c0:	01 50       	subi	r16, 0x01	; 1
    32c2:	11 09       	sbc	r17, r1
    32c4:	fc 01       	movw	r30, r24
    32c6:	a0 80       	ld	r10, Z
    32c8:	b1 80       	ldd	r11, Z+1	; 0x01
    32ca:	c5 01       	movw	r24, r10
    32cc:	df ef       	ldi	r29, 0xFF	; 255
    32ce:	cf ef       	ldi	r28, 0xFF	; 255
    32d0:	65 01       	movw	r12, r10
    32d2:	c0 0e       	add	r12, r16
    32d4:	d1 1e       	adc	r13, r17
    32d6:	c8 16       	cp	r12, r24
    32d8:	d9 06       	cpc	r13, r25
    32da:	a0 f0       	brcs	.+40     	; 0x3304 <_ZNK6String11lastIndexOfERKS_j+0x82>
    32dc:	f7 01       	movw	r30, r14
    32de:	60 81       	ld	r22, Z
    32e0:	71 81       	ldd	r23, Z+1	; 0x01
    32e2:	0e 94 ea 30 	call	0x61d4	; 0x61d4 <strstr>
    32e6:	00 97       	sbiw	r24, 0x00	; 0
    32e8:	69 f0       	breq	.+26     	; 0x3304 <_ZNK6String11lastIndexOfERKS_j+0x82>
    32ea:	9c 01       	movw	r18, r24
    32ec:	2a 19       	sub	r18, r10
    32ee:	3b 09       	sbc	r19, r11
    32f0:	02 17       	cp	r16, r18
    32f2:	13 07       	cpc	r17, r19
    32f4:	10 f0       	brcs	.+4      	; 0x32fa <_ZNK6String11lastIndexOfERKS_j+0x78>
    32f6:	d2 2f       	mov	r29, r18
    32f8:	c3 2f       	mov	r28, r19
    32fa:	01 96       	adiw	r24, 0x01	; 1
    32fc:	ec cf       	rjmp	.-40     	; 0x32d6 <_ZNK6String11lastIndexOfERKS_j+0x54>
    32fe:	8f ef       	ldi	r24, 0xFF	; 255
    3300:	9f ef       	ldi	r25, 0xFF	; 255
    3302:	02 c0       	rjmp	.+4      	; 0x3308 <_ZNK6String11lastIndexOfERKS_j+0x86>
    3304:	8d 2f       	mov	r24, r29
    3306:	9c 2f       	mov	r25, r28
    3308:	df 91       	pop	r29
    330a:	cf 91       	pop	r28
    330c:	1f 91       	pop	r17
    330e:	0f 91       	pop	r16
    3310:	ff 90       	pop	r15
    3312:	ef 90       	pop	r14
    3314:	df 90       	pop	r13
    3316:	cf 90       	pop	r12
    3318:	bf 90       	pop	r11
    331a:	af 90       	pop	r10
    331c:	08 95       	ret

0000331e <_ZN6String7replaceERKS_S1_>:
    331e:	2f 92       	push	r2
    3320:	3f 92       	push	r3
    3322:	4f 92       	push	r4
    3324:	5f 92       	push	r5
    3326:	6f 92       	push	r6
    3328:	7f 92       	push	r7
    332a:	8f 92       	push	r8
    332c:	9f 92       	push	r9
    332e:	af 92       	push	r10
    3330:	bf 92       	push	r11
    3332:	cf 92       	push	r12
    3334:	df 92       	push	r13
    3336:	ef 92       	push	r14
    3338:	ff 92       	push	r15
    333a:	0f 93       	push	r16
    333c:	1f 93       	push	r17
    333e:	cf 93       	push	r28
    3340:	df 93       	push	r29
    3342:	fc 01       	movw	r30, r24
    3344:	44 80       	ldd	r4, Z+4	; 0x04
    3346:	55 80       	ldd	r5, Z+5	; 0x05
    3348:	41 14       	cp	r4, r1
    334a:	51 04       	cpc	r5, r1
    334c:	09 f4       	brne	.+2      	; 0x3350 <_ZN6String7replaceERKS_S1_+0x32>
    334e:	cc c0       	rjmp	.+408    	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    3350:	fb 01       	movw	r30, r22
    3352:	84 80       	ldd	r8, Z+4	; 0x04
    3354:	95 80       	ldd	r9, Z+5	; 0x05
    3356:	81 14       	cp	r8, r1
    3358:	91 04       	cpc	r9, r1
    335a:	09 f4       	brne	.+2      	; 0x335e <_ZN6String7replaceERKS_S1_+0x40>
    335c:	c5 c0       	rjmp	.+394    	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    335e:	7a 01       	movw	r14, r20
    3360:	6b 01       	movw	r12, r22
    3362:	8c 01       	movw	r16, r24
    3364:	fa 01       	movw	r30, r20
    3366:	64 80       	ldd	r6, Z+4	; 0x04
    3368:	75 80       	ldd	r7, Z+5	; 0x05
    336a:	68 18       	sub	r6, r8
    336c:	79 08       	sbc	r7, r9
    336e:	fc 01       	movw	r30, r24
    3370:	c0 81       	ld	r28, Z
    3372:	d1 81       	ldd	r29, Z+1	; 0x01
    3374:	61 14       	cp	r6, r1
    3376:	71 04       	cpc	r7, r1
    3378:	b9 f4       	brne	.+46     	; 0x33a8 <_ZN6String7replaceERKS_S1_+0x8a>
    337a:	f6 01       	movw	r30, r12
    337c:	60 81       	ld	r22, Z
    337e:	71 81       	ldd	r23, Z+1	; 0x01
    3380:	ce 01       	movw	r24, r28
    3382:	0e 94 ea 30 	call	0x61d4	; 0x61d4 <strstr>
    3386:	ec 01       	movw	r28, r24
    3388:	00 97       	sbiw	r24, 0x00	; 0
    338a:	09 f4       	brne	.+2      	; 0x338e <_ZN6String7replaceERKS_S1_+0x70>
    338c:	ad c0       	rjmp	.+346    	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    338e:	f7 01       	movw	r30, r14
    3390:	60 81       	ld	r22, Z
    3392:	71 81       	ldd	r23, Z+1	; 0x01
    3394:	44 81       	ldd	r20, Z+4	; 0x04
    3396:	55 81       	ldd	r21, Z+5	; 0x05
    3398:	0e 94 9f 30 	call	0x613e	; 0x613e <memcpy>
    339c:	f7 01       	movw	r30, r14
    339e:	84 81       	ldd	r24, Z+4	; 0x04
    33a0:	95 81       	ldd	r25, Z+5	; 0x05
    33a2:	c8 0f       	add	r28, r24
    33a4:	d9 1f       	adc	r29, r25
    33a6:	e9 cf       	rjmp	.-46     	; 0x337a <_ZN6String7replaceERKS_S1_+0x5c>
    33a8:	77 fe       	sbrs	r7, 7
    33aa:	44 c0       	rjmp	.+136    	; 0x3434 <_ZN6String7replaceERKS_S1_+0x116>
    33ac:	5e 01       	movw	r10, r28
    33ae:	f6 01       	movw	r30, r12
    33b0:	60 81       	ld	r22, Z
    33b2:	71 81       	ldd	r23, Z+1	; 0x01
    33b4:	c5 01       	movw	r24, r10
    33b6:	0e 94 ea 30 	call	0x61d4	; 0x61d4 <strstr>
    33ba:	2c 01       	movw	r4, r24
    33bc:	00 97       	sbiw	r24, 0x00	; 0
    33be:	21 f1       	breq	.+72     	; 0x3408 <_ZN6String7replaceERKS_S1_+0xea>
    33c0:	4c 01       	movw	r8, r24
    33c2:	8a 18       	sub	r8, r10
    33c4:	9b 08       	sbc	r9, r11
    33c6:	a4 01       	movw	r20, r8
    33c8:	b5 01       	movw	r22, r10
    33ca:	ce 01       	movw	r24, r28
    33cc:	0e 94 9f 30 	call	0x613e	; 0x613e <memcpy>
    33d0:	c8 0d       	add	r28, r8
    33d2:	d9 1d       	adc	r29, r9
    33d4:	f7 01       	movw	r30, r14
    33d6:	60 81       	ld	r22, Z
    33d8:	71 81       	ldd	r23, Z+1	; 0x01
    33da:	44 81       	ldd	r20, Z+4	; 0x04
    33dc:	55 81       	ldd	r21, Z+5	; 0x05
    33de:	ce 01       	movw	r24, r28
    33e0:	0e 94 9f 30 	call	0x613e	; 0x613e <memcpy>
    33e4:	f7 01       	movw	r30, r14
    33e6:	84 81       	ldd	r24, Z+4	; 0x04
    33e8:	95 81       	ldd	r25, Z+5	; 0x05
    33ea:	c8 0f       	add	r28, r24
    33ec:	d9 1f       	adc	r29, r25
    33ee:	f6 01       	movw	r30, r12
    33f0:	a4 80       	ldd	r10, Z+4	; 0x04
    33f2:	b5 80       	ldd	r11, Z+5	; 0x05
    33f4:	a4 0c       	add	r10, r4
    33f6:	b5 1c       	adc	r11, r5
    33f8:	f8 01       	movw	r30, r16
    33fa:	84 81       	ldd	r24, Z+4	; 0x04
    33fc:	95 81       	ldd	r25, Z+5	; 0x05
    33fe:	86 0d       	add	r24, r6
    3400:	97 1d       	adc	r25, r7
    3402:	95 83       	std	Z+5, r25	; 0x05
    3404:	84 83       	std	Z+4, r24	; 0x04
    3406:	d3 cf       	rjmp	.-90     	; 0x33ae <_ZN6String7replaceERKS_S1_+0x90>
    3408:	b5 01       	movw	r22, r10
    340a:	ce 01       	movw	r24, r28
    340c:	df 91       	pop	r29
    340e:	cf 91       	pop	r28
    3410:	1f 91       	pop	r17
    3412:	0f 91       	pop	r16
    3414:	ff 90       	pop	r15
    3416:	ef 90       	pop	r14
    3418:	df 90       	pop	r13
    341a:	cf 90       	pop	r12
    341c:	bf 90       	pop	r11
    341e:	af 90       	pop	r10
    3420:	9f 90       	pop	r9
    3422:	8f 90       	pop	r8
    3424:	7f 90       	pop	r7
    3426:	6f 90       	pop	r6
    3428:	5f 90       	pop	r5
    342a:	4f 90       	pop	r4
    342c:	3f 90       	pop	r3
    342e:	2f 90       	pop	r2
    3430:	0c 94 c9 30 	jmp	0x6192	; 0x6192 <strcpy>
    3434:	fb 01       	movw	r30, r22
    3436:	20 80       	ld	r2, Z
    3438:	31 80       	ldd	r3, Z+1	; 0x01
    343a:	52 01       	movw	r10, r4
    343c:	b1 01       	movw	r22, r2
    343e:	ce 01       	movw	r24, r28
    3440:	0e 94 ea 30 	call	0x61d4	; 0x61d4 <strstr>
    3444:	00 97       	sbiw	r24, 0x00	; 0
    3446:	31 f0       	breq	.+12     	; 0x3454 <_ZN6String7replaceERKS_S1_+0x136>
    3448:	ec 01       	movw	r28, r24
    344a:	c8 0d       	add	r28, r8
    344c:	d9 1d       	adc	r29, r9
    344e:	a6 0c       	add	r10, r6
    3450:	b7 1c       	adc	r11, r7
    3452:	f4 cf       	rjmp	.-24     	; 0x343c <_ZN6String7replaceERKS_S1_+0x11e>
    3454:	a4 14       	cp	r10, r4
    3456:	b5 04       	cpc	r11, r5
    3458:	09 f4       	brne	.+2      	; 0x345c <_ZN6String7replaceERKS_S1_+0x13e>
    345a:	46 c0       	rjmp	.+140    	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    345c:	f8 01       	movw	r30, r16
    345e:	82 81       	ldd	r24, Z+2	; 0x02
    3460:	93 81       	ldd	r25, Z+3	; 0x03
    3462:	8a 15       	cp	r24, r10
    3464:	9b 05       	cpc	r25, r11
    3466:	28 f4       	brcc	.+10     	; 0x3472 <_ZN6String7replaceERKS_S1_+0x154>
    3468:	b5 01       	movw	r22, r10
    346a:	c8 01       	movw	r24, r16
    346c:	40 dd       	rcall	.-1408   	; 0x2eee <_ZN6String12changeBufferEj>
    346e:	88 23       	and	r24, r24
    3470:	d9 f1       	breq	.+118    	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    3472:	f8 01       	movw	r30, r16
    3474:	44 81       	ldd	r20, Z+4	; 0x04
    3476:	55 81       	ldd	r21, Z+5	; 0x05
    3478:	41 50       	subi	r20, 0x01	; 1
    347a:	51 09       	sbc	r21, r1
    347c:	57 fd       	sbrc	r21, 7
    347e:	34 c0       	rjmp	.+104    	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    3480:	b6 01       	movw	r22, r12
    3482:	c8 01       	movw	r24, r16
    3484:	fe de       	rcall	.-516    	; 0x3282 <_ZNK6String11lastIndexOfERKS_j>
    3486:	ec 01       	movw	r28, r24
    3488:	97 fd       	sbrc	r25, 7
    348a:	2e c0       	rjmp	.+92     	; 0x34e8 <_ZN6String7replaceERKS_S1_+0x1ca>
    348c:	f6 01       	movw	r30, r12
    348e:	24 81       	ldd	r18, Z+4	; 0x04
    3490:	35 81       	ldd	r19, Z+5	; 0x05
    3492:	28 0f       	add	r18, r24
    3494:	39 1f       	adc	r19, r25
    3496:	f8 01       	movw	r30, r16
    3498:	80 81       	ld	r24, Z
    349a:	91 81       	ldd	r25, Z+1	; 0x01
    349c:	82 0f       	add	r24, r18
    349e:	93 1f       	adc	r25, r19
    34a0:	44 81       	ldd	r20, Z+4	; 0x04
    34a2:	55 81       	ldd	r21, Z+5	; 0x05
    34a4:	42 1b       	sub	r20, r18
    34a6:	53 0b       	sbc	r21, r19
    34a8:	bc 01       	movw	r22, r24
    34aa:	86 0d       	add	r24, r6
    34ac:	97 1d       	adc	r25, r7
    34ae:	0e 94 a8 30 	call	0x6150	; 0x6150 <memmove>
    34b2:	f8 01       	movw	r30, r16
    34b4:	84 81       	ldd	r24, Z+4	; 0x04
    34b6:	95 81       	ldd	r25, Z+5	; 0x05
    34b8:	86 0d       	add	r24, r6
    34ba:	97 1d       	adc	r25, r7
    34bc:	95 83       	std	Z+5, r25	; 0x05
    34be:	84 83       	std	Z+4, r24	; 0x04
    34c0:	20 81       	ld	r18, Z
    34c2:	31 81       	ldd	r19, Z+1	; 0x01
    34c4:	f9 01       	movw	r30, r18
    34c6:	e8 0f       	add	r30, r24
    34c8:	f9 1f       	adc	r31, r25
    34ca:	10 82       	st	Z, r1
    34cc:	f8 01       	movw	r30, r16
    34ce:	80 81       	ld	r24, Z
    34d0:	91 81       	ldd	r25, Z+1	; 0x01
    34d2:	f7 01       	movw	r30, r14
    34d4:	60 81       	ld	r22, Z
    34d6:	71 81       	ldd	r23, Z+1	; 0x01
    34d8:	44 81       	ldd	r20, Z+4	; 0x04
    34da:	55 81       	ldd	r21, Z+5	; 0x05
    34dc:	8c 0f       	add	r24, r28
    34de:	9d 1f       	adc	r25, r29
    34e0:	0e 94 9f 30 	call	0x613e	; 0x613e <memcpy>
    34e4:	ae 01       	movw	r20, r28
    34e6:	c8 cf       	rjmp	.-112    	; 0x3478 <_ZN6String7replaceERKS_S1_+0x15a>
    34e8:	df 91       	pop	r29
    34ea:	cf 91       	pop	r28
    34ec:	1f 91       	pop	r17
    34ee:	0f 91       	pop	r16
    34f0:	ff 90       	pop	r15
    34f2:	ef 90       	pop	r14
    34f4:	df 90       	pop	r13
    34f6:	cf 90       	pop	r12
    34f8:	bf 90       	pop	r11
    34fa:	af 90       	pop	r10
    34fc:	9f 90       	pop	r9
    34fe:	8f 90       	pop	r8
    3500:	7f 90       	pop	r7
    3502:	6f 90       	pop	r6
    3504:	5f 90       	pop	r5
    3506:	4f 90       	pop	r4
    3508:	3f 90       	pop	r3
    350a:	2f 90       	pop	r2
    350c:	08 95       	ret

0000350e <_ZN6String4trimEv>:

void String::trim(void)
{
    350e:	af 92       	push	r10
    3510:	bf 92       	push	r11
    3512:	cf 92       	push	r12
    3514:	df 92       	push	r13
    3516:	ef 92       	push	r14
    3518:	ff 92       	push	r15
    351a:	0f 93       	push	r16
    351c:	1f 93       	push	r17
    351e:	cf 93       	push	r28
    3520:	df 93       	push	r29
	if (!buffer || len == 0) return;
    3522:	dc 01       	movw	r26, r24
    3524:	cd 90       	ld	r12, X+
    3526:	dc 90       	ld	r13, X
    3528:	11 97       	sbiw	r26, 0x01	; 1
    352a:	c1 14       	cp	r12, r1
    352c:	d1 04       	cpc	r13, r1
    352e:	09 f4       	brne	.+2      	; 0x3532 <_ZN6String4trimEv+0x24>
    3530:	3f c0       	rjmp	.+126    	; 0x35b0 <_ZN6String4trimEv+0xa2>
    3532:	14 96       	adiw	r26, 0x04	; 4
    3534:	cd 91       	ld	r28, X+
    3536:	dc 91       	ld	r29, X
    3538:	15 97       	sbiw	r26, 0x05	; 5
    353a:	20 97       	sbiw	r28, 0x00	; 0
    353c:	c9 f1       	breq	.+114    	; 0x35b0 <_ZN6String4trimEv+0xa2>
    353e:	8c 01       	movw	r16, r24
    3540:	76 01       	movw	r14, r12
    3542:	57 01       	movw	r10, r14
    3544:	bf ef       	ldi	r27, 0xFF	; 255
    3546:	ab 1a       	sub	r10, r27
    3548:	bb 0a       	sbc	r11, r27
	char *begin = buffer;
	while (isspace(*begin)) begin++;
    354a:	f7 01       	movw	r30, r14
    354c:	80 81       	ld	r24, Z
    354e:	90 e0       	ldi	r25, 0x00	; 0
    3550:	0e 94 7e 30 	call	0x60fc	; 0x60fc <isspace>
    3554:	89 2b       	or	r24, r25
    3556:	11 f0       	breq	.+4      	; 0x355c <_ZN6String4trimEv+0x4e>
    3558:	75 01       	movw	r14, r10
    355a:	f3 cf       	rjmp	.-26     	; 0x3542 <_ZN6String4trimEv+0x34>
	char *end = buffer + len - 1;
    355c:	21 97       	sbiw	r28, 0x01	; 1
    355e:	cc 0d       	add	r28, r12
    3560:	dd 1d       	adc	r29, r13
	while (isspace(*end) && end >= begin) end--;
    3562:	88 81       	ld	r24, Y
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	0e 94 7e 30 	call	0x60fc	; 0x60fc <isspace>
    356a:	89 2b       	or	r24, r25
    356c:	29 f0       	breq	.+10     	; 0x3578 <_ZN6String4trimEv+0x6a>
    356e:	ce 15       	cp	r28, r14
    3570:	df 05       	cpc	r29, r15
    3572:	10 f0       	brcs	.+4      	; 0x3578 <_ZN6String4trimEv+0x6a>
    3574:	21 97       	sbiw	r28, 0x01	; 1
    3576:	f5 cf       	rjmp	.-22     	; 0x3562 <_ZN6String4trimEv+0x54>
	len = end + 1 - begin;
    3578:	ae 01       	movw	r20, r28
    357a:	4f 5f       	subi	r20, 0xFF	; 255
    357c:	5f 4f       	sbci	r21, 0xFF	; 255
    357e:	4e 19       	sub	r20, r14
    3580:	5f 09       	sbc	r21, r15
    3582:	d8 01       	movw	r26, r16
    3584:	15 96       	adiw	r26, 0x05	; 5
    3586:	5c 93       	st	X, r21
    3588:	4e 93       	st	-X, r20
    358a:	14 97       	sbiw	r26, 0x04	; 4
	if (begin > buffer) memcpy(buffer, begin, len);
    358c:	ce 14       	cp	r12, r14
    358e:	df 04       	cpc	r13, r15
    3590:	20 f4       	brcc	.+8      	; 0x359a <_ZN6String4trimEv+0x8c>
    3592:	b7 01       	movw	r22, r14
    3594:	c6 01       	movw	r24, r12
    3596:	0e 94 9f 30 	call	0x613e	; 0x613e <memcpy>
	buffer[len] = 0;
    359a:	d8 01       	movw	r26, r16
    359c:	ed 91       	ld	r30, X+
    359e:	fc 91       	ld	r31, X
    35a0:	11 97       	sbiw	r26, 0x01	; 1
    35a2:	14 96       	adiw	r26, 0x04	; 4
    35a4:	8d 91       	ld	r24, X+
    35a6:	9c 91       	ld	r25, X
    35a8:	15 97       	sbiw	r26, 0x05	; 5
    35aa:	e8 0f       	add	r30, r24
    35ac:	f9 1f       	adc	r31, r25
    35ae:	10 82       	st	Z, r1
}
    35b0:	df 91       	pop	r29
    35b2:	cf 91       	pop	r28
    35b4:	1f 91       	pop	r17
    35b6:	0f 91       	pop	r16
    35b8:	ff 90       	pop	r15
    35ba:	ef 90       	pop	r14
    35bc:	df 90       	pop	r13
    35be:	cf 90       	pop	r12
    35c0:	bf 90       	pop	r11
    35c2:	af 90       	pop	r10
    35c4:	08 95       	ret

000035c6 <_ZNK6String5toIntEv>:
/*  Parsing / Conversion                     */
/*********************************************/

long String::toInt(void) const
{
	if (buffer) return atol(buffer);
    35c6:	fc 01       	movw	r30, r24
    35c8:	80 81       	ld	r24, Z
    35ca:	91 81       	ldd	r25, Z+1	; 0x01
    35cc:	00 97       	sbiw	r24, 0x00	; 0
    35ce:	11 f0       	breq	.+4      	; 0x35d4 <_ZNK6String5toIntEv+0xe>
    35d0:	0c 94 58 30 	jmp	0x60b0	; 0x60b0 <atol>
	return 0;
}
    35d4:	60 e0       	ldi	r22, 0x00	; 0
    35d6:	70 e0       	ldi	r23, 0x00	; 0
    35d8:	cb 01       	movw	r24, r22
    35da:	08 95       	ret

000035dc <_ZN12PubSubClient5writeEh>:
    return this->bufferSize;
}
PubSubClient& PubSubClient::setKeepAlive(uint16_t keepAlive) {
    this->keepAlive = keepAlive;
    return *this;
}
    35dc:	1f 93       	push	r17
    35de:	cf 93       	push	r28
    35e0:	df 93       	push	r29
    35e2:	ec 01       	movw	r28, r24
    35e4:	16 2f       	mov	r17, r22
    35e6:	cd d9       	rcall	.-3174   	; 0x2982 <millis>
    35e8:	68 8b       	std	Y+16, r22	; 0x10
    35ea:	79 8b       	std	Y+17, r23	; 0x11
    35ec:	8a 8b       	std	Y+18, r24	; 0x12
    35ee:	9b 8b       	std	Y+19, r25	; 0x13
    35f0:	8c 81       	ldd	r24, Y+4	; 0x04
    35f2:	9d 81       	ldd	r25, Y+5	; 0x05
    35f4:	dc 01       	movw	r26, r24
    35f6:	ed 91       	ld	r30, X+
    35f8:	fc 91       	ld	r31, X
    35fa:	01 90       	ld	r0, Z+
    35fc:	f0 81       	ld	r31, Z
    35fe:	e0 2d       	mov	r30, r0
    3600:	61 2f       	mov	r22, r17
    3602:	df 91       	pop	r29
    3604:	cf 91       	pop	r28
    3606:	1f 91       	pop	r17
    3608:	19 94       	eijmp

0000360a <_ZN12PubSubClient5writeEPKhj>:
    360a:	ef 92       	push	r14
    360c:	ff 92       	push	r15
    360e:	0f 93       	push	r16
    3610:	1f 93       	push	r17
    3612:	cf 93       	push	r28
    3614:	df 93       	push	r29
    3616:	ec 01       	movw	r28, r24
    3618:	8b 01       	movw	r16, r22
    361a:	7a 01       	movw	r14, r20
    361c:	b2 d9       	rcall	.-3228   	; 0x2982 <millis>
    361e:	68 8b       	std	Y+16, r22	; 0x10
    3620:	79 8b       	std	Y+17, r23	; 0x11
    3622:	8a 8b       	std	Y+18, r24	; 0x12
    3624:	9b 8b       	std	Y+19, r25	; 0x13
    3626:	8c 81       	ldd	r24, Y+4	; 0x04
    3628:	9d 81       	ldd	r25, Y+5	; 0x05
    362a:	dc 01       	movw	r26, r24
    362c:	ed 91       	ld	r30, X+
    362e:	fc 91       	ld	r31, X
    3630:	02 80       	ldd	r0, Z+2	; 0x02
    3632:	f3 81       	ldd	r31, Z+3	; 0x03
    3634:	e0 2d       	mov	r30, r0
    3636:	a7 01       	movw	r20, r14
    3638:	b8 01       	movw	r22, r16
    363a:	df 91       	pop	r29
    363c:	cf 91       	pop	r28
    363e:	1f 91       	pop	r17
    3640:	0f 91       	pop	r16
    3642:	ff 90       	pop	r15
    3644:	ef 90       	pop	r14
    3646:	19 94       	eijmp

00003648 <_ZN12PubSubClient8readByteEPh>:
    3648:	8f 92       	push	r8
    364a:	9f 92       	push	r9
    364c:	af 92       	push	r10
    364e:	bf 92       	push	r11
    3650:	cf 92       	push	r12
    3652:	df 92       	push	r13
    3654:	ef 92       	push	r14
    3656:	ff 92       	push	r15
    3658:	0f 93       	push	r16
    365a:	1f 93       	push	r17
    365c:	cf 93       	push	r28
    365e:	df 93       	push	r29
    3660:	ec 01       	movw	r28, r24
    3662:	8b 01       	movw	r16, r22
    3664:	8e d9       	rcall	.-3300   	; 0x2982 <millis>
    3666:	4b 01       	movw	r8, r22
    3668:	5c 01       	movw	r10, r24
    366a:	8c 81       	ldd	r24, Y+4	; 0x04
    366c:	9d 81       	ldd	r25, Y+5	; 0x05
    366e:	dc 01       	movw	r26, r24
    3670:	ed 91       	ld	r30, X+
    3672:	fc 91       	ld	r31, X
    3674:	00 84       	ldd	r0, Z+8	; 0x08
    3676:	f1 85       	ldd	r31, Z+9	; 0x09
    3678:	e0 2d       	mov	r30, r0
    367a:	19 95       	eicall
    367c:	89 2b       	or	r24, r25
    367e:	b1 f4       	brne	.+44     	; 0x36ac <_ZN12PubSubClient8readByteEPh+0x64>
    3680:	0e 94 b4 24 	call	0x4968	; 0x4968 <yield>
    3684:	7e d9       	rcall	.-3332   	; 0x2982 <millis>
    3686:	2c 85       	ldd	r18, Y+12	; 0x0c
    3688:	3d 85       	ldd	r19, Y+13	; 0x0d
    368a:	6b 01       	movw	r12, r22
    368c:	7c 01       	movw	r14, r24
    368e:	c8 18       	sub	r12, r8
    3690:	d9 08       	sbc	r13, r9
    3692:	ea 08       	sbc	r14, r10
    3694:	fb 08       	sbc	r15, r11
    3696:	a8 ee       	ldi	r26, 0xE8	; 232
    3698:	b3 e0       	ldi	r27, 0x03	; 3
    369a:	0e 94 02 2e 	call	0x5c04	; 0x5c04 <__umulhisi3>
    369e:	c6 16       	cp	r12, r22
    36a0:	d7 06       	cpc	r13, r23
    36a2:	e8 06       	cpc	r14, r24
    36a4:	f9 06       	cpc	r15, r25
    36a6:	08 f3       	brcs	.-62     	; 0x366a <_ZN12PubSubClient8readByteEPh+0x22>
    36a8:	80 e0       	ldi	r24, 0x00	; 0
    36aa:	0c c0       	rjmp	.+24     	; 0x36c4 <_ZN12PubSubClient8readByteEPh+0x7c>
    36ac:	8c 81       	ldd	r24, Y+4	; 0x04
    36ae:	9d 81       	ldd	r25, Y+5	; 0x05
    36b0:	dc 01       	movw	r26, r24
    36b2:	ed 91       	ld	r30, X+
    36b4:	fc 91       	ld	r31, X
    36b6:	02 84       	ldd	r0, Z+10	; 0x0a
    36b8:	f3 85       	ldd	r31, Z+11	; 0x0b
    36ba:	e0 2d       	mov	r30, r0
    36bc:	19 95       	eicall
    36be:	f8 01       	movw	r30, r16
    36c0:	80 83       	st	Z, r24
    36c2:	81 e0       	ldi	r24, 0x01	; 1
    36c4:	df 91       	pop	r29
    36c6:	cf 91       	pop	r28
    36c8:	1f 91       	pop	r17
    36ca:	0f 91       	pop	r16
    36cc:	ff 90       	pop	r15
    36ce:	ef 90       	pop	r14
    36d0:	df 90       	pop	r13
    36d2:	cf 90       	pop	r12
    36d4:	bf 90       	pop	r11
    36d6:	af 90       	pop	r10
    36d8:	9f 90       	pop	r9
    36da:	8f 90       	pop	r8
    36dc:	08 95       	ret

000036de <_ZN12PubSubClient8readByteEPhPj>:
    36de:	0f 93       	push	r16
    36e0:	1f 93       	push	r17
    36e2:	cf 93       	push	r28
    36e4:	df 93       	push	r29
    36e6:	8a 01       	movw	r16, r20
    36e8:	fa 01       	movw	r30, r20
    36ea:	c0 81       	ld	r28, Z
    36ec:	d1 81       	ldd	r29, Z+1	; 0x01
    36ee:	6c 0f       	add	r22, r28
    36f0:	7d 1f       	adc	r23, r29
    36f2:	aa df       	rcall	.-172    	; 0x3648 <_ZN12PubSubClient8readByteEPh>
    36f4:	88 23       	and	r24, r24
    36f6:	21 f0       	breq	.+8      	; 0x3700 <_ZN12PubSubClient8readByteEPhPj+0x22>
    36f8:	21 96       	adiw	r28, 0x01	; 1
    36fa:	f8 01       	movw	r30, r16
    36fc:	d1 83       	std	Z+1, r29	; 0x01
    36fe:	c0 83       	st	Z, r28
    3700:	df 91       	pop	r29
    3702:	cf 91       	pop	r28
    3704:	1f 91       	pop	r17
    3706:	0f 91       	pop	r16
    3708:	08 95       	ret

0000370a <_ZN12PubSubClient10readPacketEPh>:
    370a:	2f 92       	push	r2
    370c:	3f 92       	push	r3
    370e:	4f 92       	push	r4
    3710:	5f 92       	push	r5
    3712:	6f 92       	push	r6
    3714:	7f 92       	push	r7
    3716:	8f 92       	push	r8
    3718:	9f 92       	push	r9
    371a:	af 92       	push	r10
    371c:	bf 92       	push	r11
    371e:	cf 92       	push	r12
    3720:	df 92       	push	r13
    3722:	ef 92       	push	r14
    3724:	ff 92       	push	r15
    3726:	0f 93       	push	r16
    3728:	1f 93       	push	r17
    372a:	cf 93       	push	r28
    372c:	df 93       	push	r29
    372e:	cd b7       	in	r28, 0x3d	; 61
    3730:	de b7       	in	r29, 0x3e	; 62
    3732:	2c 97       	sbiw	r28, 0x0c	; 12
    3734:	0f b6       	in	r0, 0x3f	; 63
    3736:	f8 94       	cli
    3738:	de bf       	out	0x3e, r29	; 62
    373a:	0f be       	out	0x3f, r0	; 63
    373c:	cd bf       	out	0x3d, r28	; 61
    373e:	8c 01       	movw	r16, r24
    3740:	1b 01       	movw	r2, r22
    3742:	1a 82       	std	Y+2, r1	; 0x02
    3744:	19 82       	std	Y+1, r1	; 0x01
    3746:	dc 01       	movw	r26, r24
    3748:	16 96       	adiw	r26, 0x06	; 6
    374a:	6d 91       	ld	r22, X+
    374c:	7c 91       	ld	r23, X
    374e:	17 97       	sbiw	r26, 0x07	; 7
    3750:	ae 01       	movw	r20, r28
    3752:	4f 5f       	subi	r20, 0xFF	; 255
    3754:	5f 4f       	sbci	r21, 0xFF	; 255
    3756:	c3 df       	rcall	.-122    	; 0x36de <_ZN12PubSubClient8readByteEPhPj>
    3758:	88 23       	and	r24, r24
    375a:	01 f1       	breq	.+64     	; 0x379c <_ZN12PubSubClient10readPacketEPh+0x92>
    375c:	d8 01       	movw	r26, r16
    375e:	16 96       	adiw	r26, 0x06	; 6
    3760:	ed 91       	ld	r30, X+
    3762:	fc 91       	ld	r31, X
    3764:	17 97       	sbiw	r26, 0x07	; 7
    3766:	70 80       	ld	r7, Z
    3768:	1b 82       	std	Y+3, r1	; 0x03
    376a:	81 2c       	mov	r8, r1
    376c:	91 2c       	mov	r9, r1
    376e:	54 01       	movw	r10, r8
    3770:	c1 2c       	mov	r12, r1
    3772:	d1 2c       	mov	r13, r1
    3774:	76 01       	movw	r14, r12
    3776:	c3 94       	inc	r12
    3778:	89 81       	ldd	r24, Y+1	; 0x01
    377a:	9a 81       	ldd	r25, Y+2	; 0x02
    377c:	05 97       	sbiw	r24, 0x05	; 5
    377e:	91 f4       	brne	.+36     	; 0x37a4 <_ZN12PubSubClient10readPacketEPh+0x9a>
    3780:	8f ef       	ldi	r24, 0xFF	; 255
    3782:	9f ef       	ldi	r25, 0xFF	; 255
    3784:	f8 01       	movw	r30, r16
    3786:	90 a7       	std	Z+40, r25	; 0x28
    3788:	87 a3       	std	Z+39, r24	; 0x27
    378a:	84 81       	ldd	r24, Z+4	; 0x04
    378c:	95 81       	ldd	r25, Z+5	; 0x05
    378e:	dc 01       	movw	r26, r24
    3790:	ed 91       	ld	r30, X+
    3792:	fc 91       	ld	r31, X
    3794:	04 88       	ldd	r0, Z+20	; 0x14
    3796:	f5 89       	ldd	r31, Z+21	; 0x15
    3798:	e0 2d       	mov	r30, r0
    379a:	19 95       	eicall
    379c:	60 e0       	ldi	r22, 0x00	; 0
    379e:	70 e0       	ldi	r23, 0x00	; 0
    37a0:	cb 01       	movw	r24, r22
    37a2:	fa c0       	rjmp	.+500    	; 0x3998 <_ZN12PubSubClient10readPacketEPh+0x28e>
    37a4:	be 01       	movw	r22, r28
    37a6:	6d 5f       	subi	r22, 0xFD	; 253
    37a8:	7f 4f       	sbci	r23, 0xFF	; 255
    37aa:	c8 01       	movw	r24, r16
    37ac:	4d df       	rcall	.-358    	; 0x3648 <_ZN12PubSubClient8readByteEPh>
    37ae:	88 23       	and	r24, r24
    37b0:	a9 f3       	breq	.-22     	; 0x379c <_ZN12PubSubClient10readPacketEPh+0x92>
    37b2:	f8 01       	movw	r30, r16
    37b4:	46 81       	ldd	r20, Z+6	; 0x06
    37b6:	57 81       	ldd	r21, Z+7	; 0x07
    37b8:	89 81       	ldd	r24, Y+1	; 0x01
    37ba:	9a 81       	ldd	r25, Y+2	; 0x02
    37bc:	9c 01       	movw	r18, r24
    37be:	2f 5f       	subi	r18, 0xFF	; 255
    37c0:	3f 4f       	sbci	r19, 0xFF	; 255
    37c2:	3a 83       	std	Y+2, r19	; 0x02
    37c4:	29 83       	std	Y+1, r18	; 0x01
    37c6:	2b 81       	ldd	r18, Y+3	; 0x03
    37c8:	fa 01       	movw	r30, r20
    37ca:	e8 0f       	add	r30, r24
    37cc:	f9 1f       	adc	r31, r25
    37ce:	20 83       	st	Z, r18
    37d0:	eb 81       	ldd	r30, Y+3	; 0x03
    37d2:	ae 2f       	mov	r26, r30
    37d4:	af 77       	andi	r26, 0x7F	; 127
    37d6:	b0 e0       	ldi	r27, 0x00	; 0
    37d8:	a7 01       	movw	r20, r14
    37da:	96 01       	movw	r18, r12
    37dc:	0e 94 11 2e 	call	0x5c22	; 0x5c22 <__muluhisi3>
    37e0:	86 0e       	add	r8, r22
    37e2:	97 1e       	adc	r9, r23
    37e4:	a8 1e       	adc	r10, r24
    37e6:	b9 1e       	adc	r11, r25
    37e8:	37 e0       	ldi	r19, 0x07	; 7
    37ea:	cc 0c       	add	r12, r12
    37ec:	dd 1c       	adc	r13, r13
    37ee:	ee 1c       	adc	r14, r14
    37f0:	ff 1c       	adc	r15, r15
    37f2:	3a 95       	dec	r19
    37f4:	d1 f7       	brne	.-12     	; 0x37ea <_ZN12PubSubClient10readPacketEPh+0xe0>
    37f6:	e7 fd       	sbrc	r30, 7
    37f8:	bf cf       	rjmp	.-130    	; 0x3778 <_ZN12PubSubClient10readPacketEPh+0x6e>
    37fa:	f7 2d       	mov	r31, r7
    37fc:	f0 7f       	andi	r31, 0xF0	; 240
    37fe:	fc 83       	std	Y+4, r31	; 0x04
    3800:	89 81       	ldd	r24, Y+1	; 0x01
    3802:	81 50       	subi	r24, 0x01	; 1
    3804:	d1 01       	movw	r26, r2
    3806:	8c 93       	st	X, r24
    3808:	f0 33       	cpi	r31, 0x30	; 48
    380a:	89 f5       	brne	.+98     	; 0x386e <_ZN12PubSubClient10readPacketEPh+0x164>
    380c:	f8 01       	movw	r30, r16
    380e:	66 81       	ldd	r22, Z+6	; 0x06
    3810:	77 81       	ldd	r23, Z+7	; 0x07
    3812:	ae 01       	movw	r20, r28
    3814:	4f 5f       	subi	r20, 0xFF	; 255
    3816:	5f 4f       	sbci	r21, 0xFF	; 255
    3818:	c8 01       	movw	r24, r16
    381a:	61 df       	rcall	.-318    	; 0x36de <_ZN12PubSubClient8readByteEPhPj>
    381c:	88 23       	and	r24, r24
    381e:	09 f4       	brne	.+2      	; 0x3822 <_ZN12PubSubClient10readPacketEPh+0x118>
    3820:	bd cf       	rjmp	.-134    	; 0x379c <_ZN12PubSubClient10readPacketEPh+0x92>
    3822:	d8 01       	movw	r26, r16
    3824:	16 96       	adiw	r26, 0x06	; 6
    3826:	6d 91       	ld	r22, X+
    3828:	7c 91       	ld	r23, X
    382a:	17 97       	sbiw	r26, 0x07	; 7
    382c:	ae 01       	movw	r20, r28
    382e:	4f 5f       	subi	r20, 0xFF	; 255
    3830:	5f 4f       	sbci	r21, 0xFF	; 255
    3832:	c8 01       	movw	r24, r16
    3834:	54 df       	rcall	.-344    	; 0x36de <_ZN12PubSubClient8readByteEPhPj>
    3836:	88 23       	and	r24, r24
    3838:	09 f4       	brne	.+2      	; 0x383c <_ZN12PubSubClient10readPacketEPh+0x132>
    383a:	b0 cf       	rjmp	.-160    	; 0x379c <_ZN12PubSubClient10readPacketEPh+0x92>
    383c:	d8 01       	movw	r26, r16
    383e:	16 96       	adiw	r26, 0x06	; 6
    3840:	ed 91       	ld	r30, X+
    3842:	fc 91       	ld	r31, X
    3844:	17 97       	sbiw	r26, 0x07	; 7
    3846:	d1 01       	movw	r26, r2
    3848:	8c 91       	ld	r24, X
    384a:	df 01       	movw	r26, r30
    384c:	a8 0f       	add	r26, r24
    384e:	b1 1d       	adc	r27, r1
    3850:	11 96       	adiw	r26, 0x01	; 1
    3852:	8c 91       	ld	r24, X
    3854:	11 97       	sbiw	r26, 0x01	; 1
    3856:	90 e0       	ldi	r25, 0x00	; 0
    3858:	98 2f       	mov	r25, r24
    385a:	88 27       	eor	r24, r24
    385c:	12 96       	adiw	r26, 0x02	; 2
    385e:	2c 91       	ld	r18, X
    3860:	82 0f       	add	r24, r18
    3862:	91 1d       	adc	r25, r1
    3864:	20 81       	ld	r18, Z
    3866:	21 ff       	sbrs	r18, 1
    3868:	09 c0       	rjmp	.+18     	; 0x387c <_ZN12PubSubClient10readPacketEPh+0x172>
    386a:	02 96       	adiw	r24, 0x02	; 2
    386c:	07 c0       	rjmp	.+14     	; 0x387c <_ZN12PubSubClient10readPacketEPh+0x172>
    386e:	f0 e0       	ldi	r31, 0x00	; 0
    3870:	e0 e0       	ldi	r30, 0x00	; 0
    3872:	30 e0       	ldi	r19, 0x00	; 0
    3874:	20 e0       	ldi	r18, 0x00	; 0
    3876:	80 e0       	ldi	r24, 0x00	; 0
    3878:	90 e0       	ldi	r25, 0x00	; 0
    387a:	04 c0       	rjmp	.+8      	; 0x3884 <_ZN12PubSubClient10readPacketEPh+0x17a>
    387c:	f2 e0       	ldi	r31, 0x02	; 2
    387e:	e0 e0       	ldi	r30, 0x00	; 0
    3880:	30 e0       	ldi	r19, 0x00	; 0
    3882:	20 e0       	ldi	r18, 0x00	; 0
    3884:	49 81       	ldd	r20, Y+1	; 0x01
    3886:	5a 81       	ldd	r21, Y+2	; 0x02
    3888:	60 e0       	ldi	r22, 0x00	; 0
    388a:	70 e0       	ldi	r23, 0x00	; 0
    388c:	cf 2e       	mov	r12, r31
    388e:	de 2e       	mov	r13, r30
    3890:	e3 2e       	mov	r14, r19
    3892:	f2 2e       	mov	r15, r18
    3894:	2a 01       	movw	r4, r20
    3896:	3b 01       	movw	r6, r22
    3898:	4c 18       	sub	r4, r12
    389a:	5d 08       	sbc	r5, r13
    389c:	6e 08       	sbc	r6, r14
    389e:	7f 08       	sbc	r7, r15
    38a0:	4d 82       	std	Y+5, r4	; 0x05
    38a2:	5e 82       	std	Y+6, r5	; 0x06
    38a4:	6f 82       	std	Y+7, r6	; 0x07
    38a6:	78 86       	std	Y+8, r7	; 0x08
    38a8:	2c 01       	movw	r4, r24
    38aa:	61 2c       	mov	r6, r1
    38ac:	71 2c       	mov	r7, r1
    38ae:	49 86       	std	Y+9, r4	; 0x09
    38b0:	5a 86       	std	Y+10, r5	; 0x0a
    38b2:	6b 86       	std	Y+11, r6	; 0x0b
    38b4:	7c 86       	std	Y+12, r7	; 0x0c
    38b6:	4d 80       	ldd	r4, Y+5	; 0x05
    38b8:	5e 80       	ldd	r5, Y+6	; 0x06
    38ba:	6f 80       	ldd	r6, Y+7	; 0x07
    38bc:	78 84       	ldd	r7, Y+8	; 0x08
    38be:	4c 0c       	add	r4, r12
    38c0:	5d 1c       	adc	r5, r13
    38c2:	6e 1c       	adc	r6, r14
    38c4:	7f 1c       	adc	r7, r15
    38c6:	c8 14       	cp	r12, r8
    38c8:	d9 04       	cpc	r13, r9
    38ca:	ea 04       	cpc	r14, r10
    38cc:	fb 04       	cpc	r15, r11
    38ce:	08 f0       	brcs	.+2      	; 0x38d2 <_ZN12PubSubClient10readPacketEPh+0x1c8>
    38d0:	4b c0       	rjmp	.+150    	; 0x3968 <_ZN12PubSubClient10readPacketEPh+0x25e>
    38d2:	be 01       	movw	r22, r28
    38d4:	6d 5f       	subi	r22, 0xFD	; 253
    38d6:	7f 4f       	sbci	r23, 0xFF	; 255
    38d8:	c8 01       	movw	r24, r16
    38da:	b6 de       	rcall	.-660    	; 0x3648 <_ZN12PubSubClient8readByteEPh>
    38dc:	88 23       	and	r24, r24
    38de:	09 f4       	brne	.+2      	; 0x38e2 <_ZN12PubSubClient10readPacketEPh+0x1d8>
    38e0:	5d cf       	rjmp	.-326    	; 0x379c <_ZN12PubSubClient10readPacketEPh+0x92>
    38e2:	d8 01       	movw	r26, r16
    38e4:	95 96       	adiw	r26, 0x25	; 37
    38e6:	8d 91       	ld	r24, X+
    38e8:	9c 91       	ld	r25, X
    38ea:	96 97       	sbiw	r26, 0x26	; 38
    38ec:	00 97       	sbiw	r24, 0x00	; 0
    38ee:	11 f1       	breq	.+68     	; 0x3934 <_ZN12PubSubClient10readPacketEPh+0x22a>
    38f0:	bc 81       	ldd	r27, Y+4	; 0x04
    38f2:	b0 33       	cpi	r27, 0x30	; 48
    38f4:	f9 f4       	brne	.+62     	; 0x3934 <_ZN12PubSubClient10readPacketEPh+0x22a>
    38f6:	f1 01       	movw	r30, r2
    38f8:	20 81       	ld	r18, Z
    38fa:	4e ef       	ldi	r20, 0xFE	; 254
    38fc:	5f ef       	ldi	r21, 0xFF	; 255
    38fe:	6f ef       	ldi	r22, 0xFF	; 255
    3900:	7f ef       	ldi	r23, 0xFF	; 255
    3902:	42 1b       	sub	r20, r18
    3904:	51 09       	sbc	r21, r1
    3906:	61 09       	sbc	r22, r1
    3908:	71 09       	sbc	r23, r1
    390a:	44 0e       	add	r4, r20
    390c:	55 1e       	adc	r5, r21
    390e:	66 1e       	adc	r6, r22
    3910:	77 1e       	adc	r7, r23
    3912:	29 85       	ldd	r18, Y+9	; 0x09
    3914:	3a 85       	ldd	r19, Y+10	; 0x0a
    3916:	4b 85       	ldd	r20, Y+11	; 0x0b
    3918:	5c 85       	ldd	r21, Y+12	; 0x0c
    391a:	24 15       	cp	r18, r4
    391c:	35 05       	cpc	r19, r5
    391e:	46 05       	cpc	r20, r6
    3920:	57 05       	cpc	r21, r7
    3922:	40 f4       	brcc	.+16     	; 0x3934 <_ZN12PubSubClient10readPacketEPh+0x22a>
    3924:	dc 01       	movw	r26, r24
    3926:	ed 91       	ld	r30, X+
    3928:	fc 91       	ld	r31, X
    392a:	01 90       	ld	r0, Z+
    392c:	f0 81       	ld	r31, Z
    392e:	e0 2d       	mov	r30, r0
    3930:	6b 81       	ldd	r22, Y+3	; 0x03
    3932:	19 95       	eicall
    3934:	89 81       	ldd	r24, Y+1	; 0x01
    3936:	9a 81       	ldd	r25, Y+2	; 0x02
    3938:	f8 01       	movw	r30, r16
    393a:	20 85       	ldd	r18, Z+8	; 0x08
    393c:	31 85       	ldd	r19, Z+9	; 0x09
    393e:	82 17       	cp	r24, r18
    3940:	93 07       	cpc	r25, r19
    3942:	60 f4       	brcc	.+24     	; 0x395c <_ZN12PubSubClient10readPacketEPh+0x252>
    3944:	2b 81       	ldd	r18, Y+3	; 0x03
    3946:	46 81       	ldd	r20, Z+6	; 0x06
    3948:	57 81       	ldd	r21, Z+7	; 0x07
    394a:	fa 01       	movw	r30, r20
    394c:	e8 0f       	add	r30, r24
    394e:	f9 1f       	adc	r31, r25
    3950:	20 83       	st	Z, r18
    3952:	89 81       	ldd	r24, Y+1	; 0x01
    3954:	9a 81       	ldd	r25, Y+2	; 0x02
    3956:	01 96       	adiw	r24, 0x01	; 1
    3958:	9a 83       	std	Y+2, r25	; 0x02
    395a:	89 83       	std	Y+1, r24	; 0x01
    395c:	ff ef       	ldi	r31, 0xFF	; 255
    395e:	cf 1a       	sub	r12, r31
    3960:	df 0a       	sbc	r13, r31
    3962:	ef 0a       	sbc	r14, r31
    3964:	ff 0a       	sbc	r15, r31
    3966:	a7 cf       	rjmp	.-178    	; 0x38b6 <_ZN12PubSubClient10readPacketEPh+0x1ac>
    3968:	d8 01       	movw	r26, r16
    396a:	95 96       	adiw	r26, 0x25	; 37
    396c:	8d 91       	ld	r24, X+
    396e:	9c 91       	ld	r25, X
    3970:	96 97       	sbiw	r26, 0x26	; 38
    3972:	89 2b       	or	r24, r25
    3974:	69 f4       	brne	.+26     	; 0x3990 <_ZN12PubSubClient10readPacketEPh+0x286>
    3976:	18 96       	adiw	r26, 0x08	; 8
    3978:	8d 91       	ld	r24, X+
    397a:	9c 91       	ld	r25, X
    397c:	19 97       	sbiw	r26, 0x09	; 9
    397e:	a0 e0       	ldi	r26, 0x00	; 0
    3980:	b0 e0       	ldi	r27, 0x00	; 0
    3982:	84 15       	cp	r24, r4
    3984:	95 05       	cpc	r25, r5
    3986:	a6 05       	cpc	r26, r6
    3988:	b7 05       	cpc	r27, r7
    398a:	10 f4       	brcc	.+4      	; 0x3990 <_ZN12PubSubClient10readPacketEPh+0x286>
    398c:	1a 82       	std	Y+2, r1	; 0x02
    398e:	19 82       	std	Y+1, r1	; 0x01
    3990:	69 81       	ldd	r22, Y+1	; 0x01
    3992:	7a 81       	ldd	r23, Y+2	; 0x02
    3994:	80 e0       	ldi	r24, 0x00	; 0
    3996:	90 e0       	ldi	r25, 0x00	; 0
    3998:	2c 96       	adiw	r28, 0x0c	; 12
    399a:	0f b6       	in	r0, 0x3f	; 63
    399c:	f8 94       	cli
    399e:	de bf       	out	0x3e, r29	; 62
    39a0:	0f be       	out	0x3f, r0	; 63
    39a2:	cd bf       	out	0x3d, r28	; 61
    39a4:	df 91       	pop	r29
    39a6:	cf 91       	pop	r28
    39a8:	1f 91       	pop	r17
    39aa:	0f 91       	pop	r16
    39ac:	ff 90       	pop	r15
    39ae:	ef 90       	pop	r14
    39b0:	df 90       	pop	r13
    39b2:	cf 90       	pop	r12
    39b4:	bf 90       	pop	r11
    39b6:	af 90       	pop	r10
    39b8:	9f 90       	pop	r9
    39ba:	8f 90       	pop	r8
    39bc:	7f 90       	pop	r7
    39be:	6f 90       	pop	r6
    39c0:	5f 90       	pop	r5
    39c2:	4f 90       	pop	r4
    39c4:	3f 90       	pop	r3
    39c6:	2f 90       	pop	r2
    39c8:	08 95       	ret

000039ca <_ZN12PubSubClient11buildHeaderEhPhj>:
    39ca:	cf 93       	push	r28
    39cc:	df 93       	push	r29
    39ce:	00 d0       	rcall	.+0      	; 0x39d0 <_ZN12PubSubClient11buildHeaderEhPhj+0x6>
    39d0:	1f 92       	push	r1
    39d2:	cd b7       	in	r28, 0x3d	; 61
    39d4:	de b7       	in	r29, 0x3e	; 62
    39d6:	80 e0       	ldi	r24, 0x00	; 0
    39d8:	92 2f       	mov	r25, r18
    39da:	9f 77       	andi	r25, 0x7F	; 127
    39dc:	22 0f       	add	r18, r18
    39de:	23 2f       	mov	r18, r19
    39e0:	22 1f       	adc	r18, r18
    39e2:	33 0b       	sbc	r19, r19
    39e4:	31 95       	neg	r19
    39e6:	21 15       	cp	r18, r1
    39e8:	31 05       	cpc	r19, r1
    39ea:	09 f0       	breq	.+2      	; 0x39ee <_ZN12PubSubClient11buildHeaderEhPhj+0x24>
    39ec:	90 68       	ori	r25, 0x80	; 128
    39ee:	e1 e0       	ldi	r30, 0x01	; 1
    39f0:	f0 e0       	ldi	r31, 0x00	; 0
    39f2:	ec 0f       	add	r30, r28
    39f4:	fd 1f       	adc	r31, r29
    39f6:	e8 0f       	add	r30, r24
    39f8:	f1 1d       	adc	r31, r1
    39fa:	90 83       	st	Z, r25
    39fc:	8f 5f       	subi	r24, 0xFF	; 255
    39fe:	21 15       	cp	r18, r1
    3a00:	31 05       	cpc	r19, r1
    3a02:	51 f7       	brne	.-44     	; 0x39d8 <_ZN12PubSubClient11buildHeaderEhPhj+0xe>
    3a04:	90 e0       	ldi	r25, 0x00	; 0
    3a06:	fa 01       	movw	r30, r20
    3a08:	e8 1b       	sub	r30, r24
    3a0a:	f9 0b       	sbc	r31, r25
    3a0c:	64 83       	std	Z+4, r22	; 0x04
    3a0e:	de 01       	movw	r26, r28
    3a10:	11 96       	adiw	r26, 0x01	; 1
    3a12:	fa 01       	movw	r30, r20
    3a14:	e8 1b       	sub	r30, r24
    3a16:	f9 0b       	sbc	r31, r25
    3a18:	35 96       	adiw	r30, 0x05	; 5
    3a1a:	4b 5f       	subi	r20, 0xFB	; 251
    3a1c:	5f 4f       	sbci	r21, 0xFF	; 255
    3a1e:	e4 17       	cp	r30, r20
    3a20:	f5 07       	cpc	r31, r21
    3a22:	19 f0       	breq	.+6      	; 0x3a2a <_ZN12PubSubClient11buildHeaderEhPhj+0x60>
    3a24:	2d 91       	ld	r18, X+
    3a26:	21 93       	st	Z+, r18
    3a28:	fa cf       	rjmp	.-12     	; 0x3a1e <_ZN12PubSubClient11buildHeaderEhPhj+0x54>
    3a2a:	01 96       	adiw	r24, 0x01	; 1
    3a2c:	0f 90       	pop	r0
    3a2e:	0f 90       	pop	r0
    3a30:	0f 90       	pop	r0
    3a32:	0f 90       	pop	r0
    3a34:	df 91       	pop	r29
    3a36:	cf 91       	pop	r28
    3a38:	08 95       	ret

00003a3a <_ZN12PubSubClient5writeEhPhj>:
    3a3a:	ef 92       	push	r14
    3a3c:	ff 92       	push	r15
    3a3e:	0f 93       	push	r16
    3a40:	1f 93       	push	r17
    3a42:	cf 93       	push	r28
    3a44:	df 93       	push	r29
    3a46:	7c 01       	movw	r14, r24
    3a48:	ea 01       	movw	r28, r20
    3a4a:	89 01       	movw	r16, r18
    3a4c:	be df       	rcall	.-132    	; 0x39ca <_ZN12PubSubClient11buildHeaderEhPhj>
    3a4e:	9c 01       	movw	r18, r24
    3a50:	d7 01       	movw	r26, r14
    3a52:	14 96       	adiw	r26, 0x04	; 4
    3a54:	8d 91       	ld	r24, X+
    3a56:	9c 91       	ld	r25, X
    3a58:	15 97       	sbiw	r26, 0x05	; 5
    3a5a:	33 27       	eor	r19, r19
    3a5c:	02 0f       	add	r16, r18
    3a5e:	13 1f       	adc	r17, r19
    3a60:	be 01       	movw	r22, r28
    3a62:	62 1b       	sub	r22, r18
    3a64:	73 0b       	sbc	r23, r19
    3a66:	6b 5f       	subi	r22, 0xFB	; 251
    3a68:	7f 4f       	sbci	r23, 0xFF	; 255
    3a6a:	dc 01       	movw	r26, r24
    3a6c:	ed 91       	ld	r30, X+
    3a6e:	fc 91       	ld	r31, X
    3a70:	02 80       	ldd	r0, Z+2	; 0x02
    3a72:	f3 81       	ldd	r31, Z+3	; 0x03
    3a74:	e0 2d       	mov	r30, r0
    3a76:	a8 01       	movw	r20, r16
    3a78:	19 95       	eicall
    3a7a:	ec 01       	movw	r28, r24
    3a7c:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    3a80:	f7 01       	movw	r30, r14
    3a82:	60 8b       	std	Z+16, r22	; 0x10
    3a84:	71 8b       	std	Z+17, r23	; 0x11
    3a86:	82 8b       	std	Z+18, r24	; 0x12
    3a88:	93 8b       	std	Z+19, r25	; 0x13
    3a8a:	81 e0       	ldi	r24, 0x01	; 1
    3a8c:	0c 17       	cp	r16, r28
    3a8e:	1d 07       	cpc	r17, r29
    3a90:	09 f0       	breq	.+2      	; 0x3a94 <_ZN12PubSubClient5writeEhPhj+0x5a>
    3a92:	80 e0       	ldi	r24, 0x00	; 0
    3a94:	df 91       	pop	r29
    3a96:	cf 91       	pop	r28
    3a98:	1f 91       	pop	r17
    3a9a:	0f 91       	pop	r16
    3a9c:	ff 90       	pop	r15
    3a9e:	ef 90       	pop	r14
    3aa0:	08 95       	ret

00003aa2 <_ZN12PubSubClient11writeStringEPKcPhj>:
    3aa2:	cf 93       	push	r28
    3aa4:	df 93       	push	r29
    3aa6:	f9 01       	movw	r30, r18
    3aa8:	32 96       	adiw	r30, 0x02	; 2
    3aaa:	e4 0f       	add	r30, r20
    3aac:	f5 1f       	adc	r31, r21
    3aae:	eb 01       	movw	r28, r22
    3ab0:	de 01       	movw	r26, r28
    3ab2:	a6 1b       	sub	r26, r22
    3ab4:	b7 0b       	sbc	r27, r23
    3ab6:	cf 01       	movw	r24, r30
    3ab8:	84 1b       	sub	r24, r20
    3aba:	95 0b       	sbc	r25, r21
    3abc:	29 91       	ld	r18, Y+
    3abe:	22 23       	and	r18, r18
    3ac0:	11 f0       	breq	.+4      	; 0x3ac6 <_ZN12PubSubClient11writeStringEPKcPhj+0x24>
    3ac2:	21 93       	st	Z+, r18
    3ac4:	f5 cf       	rjmp	.-22     	; 0x3ab0 <_ZN12PubSubClient11writeStringEPKcPhj+0xe>
    3ac6:	9c 01       	movw	r18, r24
    3ac8:	2a 1b       	sub	r18, r26
    3aca:	3b 0b       	sbc	r19, r27
    3acc:	42 0f       	add	r20, r18
    3ace:	53 1f       	adc	r21, r19
    3ad0:	fa 01       	movw	r30, r20
    3ad2:	32 97       	sbiw	r30, 0x02	; 2
    3ad4:	b0 83       	st	Z, r27
    3ad6:	31 96       	adiw	r30, 0x01	; 1
    3ad8:	a0 83       	st	Z, r26
    3ada:	df 91       	pop	r29
    3adc:	cf 91       	pop	r28
    3ade:	08 95       	ret

00003ae0 <_ZN12PubSubClient9connectedEv>:
    3ae0:	cf 93       	push	r28
    3ae2:	df 93       	push	r29
    3ae4:	fc 01       	movw	r30, r24
    3ae6:	a4 81       	ldd	r26, Z+4	; 0x04
    3ae8:	b5 81       	ldd	r27, Z+5	; 0x05
    3aea:	10 97       	sbiw	r26, 0x00	; 0
    3aec:	49 f1       	breq	.+82     	; 0x3b40 <_ZN12PubSubClient9connectedEv+0x60>
    3aee:	ec 01       	movw	r28, r24
    3af0:	ed 91       	ld	r30, X+
    3af2:	fc 91       	ld	r31, X
    3af4:	11 97       	sbiw	r26, 0x01	; 1
    3af6:	06 88       	ldd	r0, Z+22	; 0x16
    3af8:	f7 89       	ldd	r31, Z+23	; 0x17
    3afa:	e0 2d       	mov	r30, r0
    3afc:	cd 01       	movw	r24, r26
    3afe:	19 95       	eicall
    3b00:	2f a1       	ldd	r18, Y+39	; 0x27
    3b02:	38 a5       	ldd	r19, Y+40	; 0x28
    3b04:	81 11       	cpse	r24, r1
    3b06:	19 c0       	rjmp	.+50     	; 0x3b3a <_ZN12PubSubClient9connectedEv+0x5a>
    3b08:	23 2b       	or	r18, r19
    3b0a:	d1 f4       	brne	.+52     	; 0x3b40 <_ZN12PubSubClient9connectedEv+0x60>
    3b0c:	8d ef       	ldi	r24, 0xFD	; 253
    3b0e:	9f ef       	ldi	r25, 0xFF	; 255
    3b10:	98 a7       	std	Y+40, r25	; 0x28
    3b12:	8f a3       	std	Y+39, r24	; 0x27
    3b14:	8c 81       	ldd	r24, Y+4	; 0x04
    3b16:	9d 81       	ldd	r25, Y+5	; 0x05
    3b18:	dc 01       	movw	r26, r24
    3b1a:	ed 91       	ld	r30, X+
    3b1c:	fc 91       	ld	r31, X
    3b1e:	06 80       	ldd	r0, Z+6	; 0x06
    3b20:	f7 81       	ldd	r31, Z+7	; 0x07
    3b22:	e0 2d       	mov	r30, r0
    3b24:	19 95       	eicall
    3b26:	8c 81       	ldd	r24, Y+4	; 0x04
    3b28:	9d 81       	ldd	r25, Y+5	; 0x05
    3b2a:	dc 01       	movw	r26, r24
    3b2c:	ed 91       	ld	r30, X+
    3b2e:	fc 91       	ld	r31, X
    3b30:	04 88       	ldd	r0, Z+20	; 0x14
    3b32:	f5 89       	ldd	r31, Z+21	; 0x15
    3b34:	e0 2d       	mov	r30, r0
    3b36:	19 95       	eicall
    3b38:	03 c0       	rjmp	.+6      	; 0x3b40 <_ZN12PubSubClient9connectedEv+0x60>
    3b3a:	81 e0       	ldi	r24, 0x01	; 1
    3b3c:	23 2b       	or	r18, r19
    3b3e:	09 f0       	breq	.+2      	; 0x3b42 <_ZN12PubSubClient9connectedEv+0x62>
    3b40:	80 e0       	ldi	r24, 0x00	; 0
    3b42:	df 91       	pop	r29
    3b44:	cf 91       	pop	r28
    3b46:	08 95       	ret

00003b48 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b>:
    3b48:	2f 92       	push	r2
    3b4a:	3f 92       	push	r3
    3b4c:	4f 92       	push	r4
    3b4e:	5f 92       	push	r5
    3b50:	6f 92       	push	r6
    3b52:	7f 92       	push	r7
    3b54:	8f 92       	push	r8
    3b56:	9f 92       	push	r9
    3b58:	af 92       	push	r10
    3b5a:	bf 92       	push	r11
    3b5c:	cf 92       	push	r12
    3b5e:	df 92       	push	r13
    3b60:	ef 92       	push	r14
    3b62:	ff 92       	push	r15
    3b64:	0f 93       	push	r16
    3b66:	1f 93       	push	r17
    3b68:	cf 93       	push	r28
    3b6a:	df 93       	push	r29
    3b6c:	cd b7       	in	r28, 0x3d	; 61
    3b6e:	de b7       	in	r29, 0x3e	; 62
    3b70:	60 97       	sbiw	r28, 0x10	; 16
    3b72:	0f b6       	in	r0, 0x3f	; 63
    3b74:	f8 94       	cli
    3b76:	de bf       	out	0x3e, r29	; 62
    3b78:	0f be       	out	0x3f, r0	; 63
    3b7a:	cd bf       	out	0x3d, r28	; 61
    3b7c:	3c 01       	movw	r6, r24
    3b7e:	7a 87       	std	Y+10, r23	; 0x0a
    3b80:	69 87       	std	Y+9, r22	; 0x09
    3b82:	1a 01       	movw	r2, r20
    3b84:	29 01       	movw	r4, r18
    3b86:	ac df       	rcall	.-168    	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    3b88:	d8 2e       	mov	r13, r24
    3b8a:	81 11       	cpse	r24, r1
    3b8c:	90 c1       	rjmp	.+800    	; 0x3eae <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x366>
    3b8e:	d3 01       	movw	r26, r6
    3b90:	14 96       	adiw	r26, 0x04	; 4
    3b92:	8d 91       	ld	r24, X+
    3b94:	9c 91       	ld	r25, X
    3b96:	15 97       	sbiw	r26, 0x05	; 5
    3b98:	dc 01       	movw	r26, r24
    3b9a:	ed 91       	ld	r30, X+
    3b9c:	fc 91       	ld	r31, X
    3b9e:	06 88       	ldd	r0, Z+22	; 0x16
    3ba0:	f7 89       	ldd	r31, Z+23	; 0x17
    3ba2:	e0 2d       	mov	r30, r0
    3ba4:	19 95       	eicall
    3ba6:	88 23       	and	r24, r24
    3ba8:	99 f0       	breq	.+38     	; 0x3bd0 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x88>
    3baa:	81 e0       	ldi	r24, 0x01	; 1
    3bac:	90 e0       	ldi	r25, 0x00	; 0
    3bae:	f3 01       	movw	r30, r6
    3bb0:	97 87       	std	Z+15, r25	; 0x0f
    3bb2:	86 87       	std	Z+14, r24	; 0x0e
    3bb4:	87 e0       	ldi	r24, 0x07	; 7
    3bb6:	ef e2       	ldi	r30, 0x2F	; 47
    3bb8:	f2 e0       	ldi	r31, 0x02	; 2
    3bba:	de 01       	movw	r26, r28
    3bbc:	11 96       	adiw	r26, 0x01	; 1
    3bbe:	01 90       	ld	r0, Z+
    3bc0:	0d 92       	st	X+, r0
    3bc2:	8a 95       	dec	r24
    3bc4:	e1 f7       	brne	.-8      	; 0x3bbe <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x76>
    3bc6:	fe 01       	movw	r30, r28
    3bc8:	31 96       	adiw	r30, 0x01	; 1
    3bca:	85 e0       	ldi	r24, 0x05	; 5
    3bcc:	90 e0       	ldi	r25, 0x00	; 0
    3bce:	3c c0       	rjmp	.+120    	; 0x3c48 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x100>
    3bd0:	d3 01       	movw	r26, r6
    3bd2:	91 96       	adiw	r26, 0x21	; 33
    3bd4:	6d 91       	ld	r22, X+
    3bd6:	7c 91       	ld	r23, X
    3bd8:	92 97       	sbiw	r26, 0x22	; 34
    3bda:	14 96       	adiw	r26, 0x04	; 4
    3bdc:	8d 91       	ld	r24, X+
    3bde:	9c 91       	ld	r25, X
    3be0:	15 97       	sbiw	r26, 0x05	; 5
    3be2:	93 96       	adiw	r26, 0x23	; 35
    3be4:	ed 91       	ld	r30, X+
    3be6:	fc 91       	ld	r31, X
    3be8:	94 97       	sbiw	r26, 0x24	; 36
    3bea:	f8 8b       	std	Y+16, r31	; 0x10
    3bec:	ef 87       	std	Y+15, r30	; 0x0f
    3bee:	dc 01       	movw	r26, r24
    3bf0:	ed 91       	ld	r30, X+
    3bf2:	fc 91       	ld	r31, X
    3bf4:	61 15       	cp	r22, r1
    3bf6:	71 05       	cpc	r23, r1
    3bf8:	31 f0       	breq	.+12     	; 0x3c06 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0xbe>
    3bfa:	00 88       	ldd	r0, Z+16	; 0x10
    3bfc:	f1 89       	ldd	r31, Z+17	; 0x11
    3bfe:	e0 2d       	mov	r30, r0
    3c00:	4f 85       	ldd	r20, Y+15	; 0x0f
    3c02:	58 89       	ldd	r21, Y+16	; 0x10
    3c04:	17 c0       	rjmp	.+46     	; 0x3c34 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0xec>
    3c06:	06 84       	ldd	r0, Z+14	; 0x0e
    3c08:	f7 85       	ldd	r31, Z+15	; 0x0f
    3c0a:	e0 2d       	mov	r30, r0
    3c0c:	2d e3       	ldi	r18, 0x3D	; 61
    3c0e:	34 e0       	ldi	r19, 0x04	; 4
    3c10:	3a 83       	std	Y+2, r19	; 0x02
    3c12:	29 83       	std	Y+1, r18	; 0x01
    3c14:	d3 01       	movw	r26, r6
    3c16:	5d 96       	adiw	r26, 0x1d	; 29
    3c18:	2d 91       	ld	r18, X+
    3c1a:	3d 91       	ld	r19, X+
    3c1c:	4d 91       	ld	r20, X+
    3c1e:	5c 91       	ld	r21, X
    3c20:	90 97       	sbiw	r26, 0x20	; 32
    3c22:	2b 83       	std	Y+3, r18	; 0x03
    3c24:	3c 83       	std	Y+4, r19	; 0x04
    3c26:	4d 83       	std	Y+5, r20	; 0x05
    3c28:	5e 83       	std	Y+6, r21	; 0x06
    3c2a:	4f 85       	ldd	r20, Y+15	; 0x0f
    3c2c:	58 89       	ldd	r21, Y+16	; 0x10
    3c2e:	be 01       	movw	r22, r28
    3c30:	6f 5f       	subi	r22, 0xFF	; 255
    3c32:	7f 4f       	sbci	r23, 0xFF	; 255
    3c34:	19 95       	eicall
    3c36:	01 97       	sbiw	r24, 0x01	; 1
    3c38:	09 f4       	brne	.+2      	; 0x3c3c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0xf4>
    3c3a:	b7 cf       	rjmp	.-146    	; 0x3baa <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x62>
    3c3c:	8e ef       	ldi	r24, 0xFE	; 254
    3c3e:	9f ef       	ldi	r25, 0xFF	; 255
    3c40:	f3 01       	movw	r30, r6
    3c42:	90 a7       	std	Z+40, r25	; 0x28
    3c44:	87 a3       	std	Z+39, r24	; 0x27
    3c46:	33 c1       	rjmp	.+614    	; 0x3eae <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x366>
    3c48:	21 91       	ld	r18, Z+
    3c4a:	d3 01       	movw	r26, r6
    3c4c:	16 96       	adiw	r26, 0x06	; 6
    3c4e:	4d 91       	ld	r20, X+
    3c50:	5c 91       	ld	r21, X
    3c52:	17 97       	sbiw	r26, 0x07	; 7
    3c54:	da 01       	movw	r26, r20
    3c56:	a8 0f       	add	r26, r24
    3c58:	b9 1f       	adc	r27, r25
    3c5a:	2c 93       	st	X, r18
    3c5c:	01 96       	adiw	r24, 0x01	; 1
    3c5e:	8c 30       	cpi	r24, 0x0C	; 12
    3c60:	91 05       	cpc	r25, r1
    3c62:	91 f7       	brne	.-28     	; 0x3c48 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x100>
    3c64:	01 15       	cp	r16, r1
    3c66:	11 05       	cpc	r17, r1
    3c68:	59 f0       	breq	.+22     	; 0x3c80 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x138>
    3c6a:	b0 e2       	ldi	r27, 0x20	; 32
    3c6c:	cb 9e       	mul	r12, r27
    3c6e:	c0 01       	movw	r24, r0
    3c70:	11 24       	eor	r1, r1
    3c72:	84 60       	ori	r24, 0x04	; 4
    3c74:	e8 e0       	ldi	r30, 0x08	; 8
    3c76:	ee 9e       	mul	r14, r30
    3c78:	70 01       	movw	r14, r0
    3c7a:	11 24       	eor	r1, r1
    3c7c:	8e 29       	or	r24, r14
    3c7e:	01 c0       	rjmp	.+2      	; 0x3c82 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x13a>
    3c80:	80 e0       	ldi	r24, 0x00	; 0
    3c82:	81 10       	cpse	r8, r1
    3c84:	82 60       	ori	r24, 0x02	; 2
    3c86:	21 14       	cp	r2, r1
    3c88:	31 04       	cpc	r3, r1
    3c8a:	31 f0       	breq	.+12     	; 0x3c98 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x150>
    3c8c:	41 14       	cp	r4, r1
    3c8e:	51 04       	cpc	r5, r1
    3c90:	11 f4       	brne	.+4      	; 0x3c96 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x14e>
    3c92:	80 68       	ori	r24, 0x80	; 128
    3c94:	01 c0       	rjmp	.+2      	; 0x3c98 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x150>
    3c96:	80 6c       	ori	r24, 0xC0	; 192
    3c98:	d3 01       	movw	r26, r6
    3c9a:	16 96       	adiw	r26, 0x06	; 6
    3c9c:	ed 91       	ld	r30, X+
    3c9e:	fc 91       	ld	r31, X
    3ca0:	17 97       	sbiw	r26, 0x07	; 7
    3ca2:	84 87       	std	Z+12, r24	; 0x0c
    3ca4:	16 96       	adiw	r26, 0x06	; 6
    3ca6:	ed 91       	ld	r30, X+
    3ca8:	fc 91       	ld	r31, X
    3caa:	17 97       	sbiw	r26, 0x07	; 7
    3cac:	1b 96       	adiw	r26, 0x0b	; 11
    3cae:	8c 91       	ld	r24, X
    3cb0:	1b 97       	sbiw	r26, 0x0b	; 11
    3cb2:	85 87       	std	Z+13, r24	; 0x0d
    3cb4:	16 96       	adiw	r26, 0x06	; 6
    3cb6:	ed 91       	ld	r30, X+
    3cb8:	fc 91       	ld	r31, X
    3cba:	17 97       	sbiw	r26, 0x07	; 7
    3cbc:	1a 96       	adiw	r26, 0x0a	; 10
    3cbe:	8c 91       	ld	r24, X
    3cc0:	1a 97       	sbiw	r26, 0x0a	; 10
    3cc2:	86 87       	std	Z+14, r24	; 0x0e
    3cc4:	18 96       	adiw	r26, 0x08	; 8
    3cc6:	ed 90       	ld	r14, X+
    3cc8:	fc 90       	ld	r15, X
    3cca:	19 97       	sbiw	r26, 0x09	; 9
    3ccc:	b7 01       	movw	r22, r14
    3cce:	89 85       	ldd	r24, Y+9	; 0x09
    3cd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cd2:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    3cd6:	41 96       	adiw	r24, 0x11	; 17
    3cd8:	f3 01       	movw	r30, r6
    3cda:	e8 16       	cp	r14, r24
    3cdc:	f9 06       	cpc	r15, r25
    3cde:	08 f4       	brcc	.+2      	; 0x3ce2 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x19a>
    3ce0:	dd c0       	rjmp	.+442    	; 0x3e9c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3ce2:	46 81       	ldd	r20, Z+6	; 0x06
    3ce4:	57 81       	ldd	r21, Z+7	; 0x07
    3ce6:	2f e0       	ldi	r18, 0x0F	; 15
    3ce8:	30 e0       	ldi	r19, 0x00	; 0
    3cea:	69 85       	ldd	r22, Y+9	; 0x09
    3cec:	7a 85       	ldd	r23, Y+10	; 0x0a
    3cee:	c3 01       	movw	r24, r6
    3cf0:	d8 de       	rcall	.-592    	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    3cf2:	7c 01       	movw	r14, r24
    3cf4:	01 15       	cp	r16, r1
    3cf6:	11 05       	cpc	r17, r1
    3cf8:	91 f1       	breq	.+100    	; 0x3d5e <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x216>
    3cfa:	d3 01       	movw	r26, r6
    3cfc:	18 96       	adiw	r26, 0x08	; 8
    3cfe:	8d 90       	ld	r8, X+
    3d00:	9c 90       	ld	r9, X
    3d02:	19 97       	sbiw	r26, 0x09	; 9
    3d04:	b4 01       	movw	r22, r8
    3d06:	c8 01       	movw	r24, r16
    3d08:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    3d0c:	97 01       	movw	r18, r14
    3d0e:	2e 5f       	subi	r18, 0xFE	; 254
    3d10:	3f 4f       	sbci	r19, 0xFF	; 255
    3d12:	82 0f       	add	r24, r18
    3d14:	93 1f       	adc	r25, r19
    3d16:	f3 01       	movw	r30, r6
    3d18:	88 16       	cp	r8, r24
    3d1a:	99 06       	cpc	r9, r25
    3d1c:	08 f4       	brcc	.+2      	; 0x3d20 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x1d8>
    3d1e:	be c0       	rjmp	.+380    	; 0x3e9c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3d20:	46 81       	ldd	r20, Z+6	; 0x06
    3d22:	57 81       	ldd	r21, Z+7	; 0x07
    3d24:	97 01       	movw	r18, r14
    3d26:	b8 01       	movw	r22, r16
    3d28:	c3 01       	movw	r24, r6
    3d2a:	bb de       	rcall	.-650    	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    3d2c:	8c 01       	movw	r16, r24
    3d2e:	d3 01       	movw	r26, r6
    3d30:	18 96       	adiw	r26, 0x08	; 8
    3d32:	ed 90       	ld	r14, X+
    3d34:	fc 90       	ld	r15, X
    3d36:	19 97       	sbiw	r26, 0x09	; 9
    3d38:	b7 01       	movw	r22, r14
    3d3a:	c5 01       	movw	r24, r10
    3d3c:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    3d40:	80 0f       	add	r24, r16
    3d42:	91 1f       	adc	r25, r17
    3d44:	02 96       	adiw	r24, 0x02	; 2
    3d46:	f3 01       	movw	r30, r6
    3d48:	e8 16       	cp	r14, r24
    3d4a:	f9 06       	cpc	r15, r25
    3d4c:	08 f4       	brcc	.+2      	; 0x3d50 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x208>
    3d4e:	a6 c0       	rjmp	.+332    	; 0x3e9c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3d50:	46 81       	ldd	r20, Z+6	; 0x06
    3d52:	57 81       	ldd	r21, Z+7	; 0x07
    3d54:	98 01       	movw	r18, r16
    3d56:	b5 01       	movw	r22, r10
    3d58:	c3 01       	movw	r24, r6
    3d5a:	a3 de       	rcall	.-698    	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    3d5c:	7c 01       	movw	r14, r24
    3d5e:	21 14       	cp	r2, r1
    3d60:	31 04       	cpc	r3, r1
    3d62:	b9 f1       	breq	.+110    	; 0x3dd2 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x28a>
    3d64:	d3 01       	movw	r26, r6
    3d66:	18 96       	adiw	r26, 0x08	; 8
    3d68:	0d 91       	ld	r16, X+
    3d6a:	1c 91       	ld	r17, X
    3d6c:	19 97       	sbiw	r26, 0x09	; 9
    3d6e:	b8 01       	movw	r22, r16
    3d70:	c1 01       	movw	r24, r2
    3d72:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    3d76:	97 01       	movw	r18, r14
    3d78:	2e 5f       	subi	r18, 0xFE	; 254
    3d7a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d7c:	82 0f       	add	r24, r18
    3d7e:	93 1f       	adc	r25, r19
    3d80:	f3 01       	movw	r30, r6
    3d82:	08 17       	cp	r16, r24
    3d84:	19 07       	cpc	r17, r25
    3d86:	08 f4       	brcc	.+2      	; 0x3d8a <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x242>
    3d88:	89 c0       	rjmp	.+274    	; 0x3e9c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3d8a:	46 81       	ldd	r20, Z+6	; 0x06
    3d8c:	57 81       	ldd	r21, Z+7	; 0x07
    3d8e:	97 01       	movw	r18, r14
    3d90:	b1 01       	movw	r22, r2
    3d92:	c3 01       	movw	r24, r6
    3d94:	86 de       	rcall	.-756    	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    3d96:	7c 01       	movw	r14, r24
    3d98:	41 14       	cp	r4, r1
    3d9a:	51 04       	cpc	r5, r1
    3d9c:	d1 f0       	breq	.+52     	; 0x3dd2 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x28a>
    3d9e:	d3 01       	movw	r26, r6
    3da0:	18 96       	adiw	r26, 0x08	; 8
    3da2:	0d 91       	ld	r16, X+
    3da4:	1c 91       	ld	r17, X
    3da6:	19 97       	sbiw	r26, 0x09	; 9
    3da8:	b8 01       	movw	r22, r16
    3daa:	c2 01       	movw	r24, r4
    3dac:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    3db0:	97 01       	movw	r18, r14
    3db2:	2e 5f       	subi	r18, 0xFE	; 254
    3db4:	3f 4f       	sbci	r19, 0xFF	; 255
    3db6:	82 0f       	add	r24, r18
    3db8:	93 1f       	adc	r25, r19
    3dba:	f3 01       	movw	r30, r6
    3dbc:	08 17       	cp	r16, r24
    3dbe:	19 07       	cpc	r17, r25
    3dc0:	08 f4       	brcc	.+2      	; 0x3dc4 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x27c>
    3dc2:	6c c0       	rjmp	.+216    	; 0x3e9c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3dc4:	46 81       	ldd	r20, Z+6	; 0x06
    3dc6:	57 81       	ldd	r21, Z+7	; 0x07
    3dc8:	97 01       	movw	r18, r14
    3dca:	b2 01       	movw	r22, r4
    3dcc:	c3 01       	movw	r24, r6
    3dce:	69 de       	rcall	.-814    	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    3dd0:	7c 01       	movw	r14, r24
    3dd2:	97 01       	movw	r18, r14
    3dd4:	25 50       	subi	r18, 0x05	; 5
    3dd6:	31 09       	sbc	r19, r1
    3dd8:	d3 01       	movw	r26, r6
    3dda:	16 96       	adiw	r26, 0x06	; 6
    3ddc:	4d 91       	ld	r20, X+
    3dde:	5c 91       	ld	r21, X
    3de0:	17 97       	sbiw	r26, 0x07	; 7
    3de2:	60 e1       	ldi	r22, 0x10	; 16
    3de4:	c3 01       	movw	r24, r6
    3de6:	29 de       	rcall	.-942    	; 0x3a3a <_ZN12PubSubClient5writeEhPhj>
    3de8:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    3dec:	f3 01       	movw	r30, r6
    3dee:	60 8b       	std	Z+16, r22	; 0x10
    3df0:	71 8b       	std	Z+17, r23	; 0x11
    3df2:	82 8b       	std	Z+18, r24	; 0x12
    3df4:	93 8b       	std	Z+19, r25	; 0x13
    3df6:	64 8b       	std	Z+20, r22	; 0x14
    3df8:	75 8b       	std	Z+21, r23	; 0x15
    3dfa:	86 8b       	std	Z+22, r24	; 0x16
    3dfc:	97 8b       	std	Z+23, r25	; 0x17
    3dfe:	f3 01       	movw	r30, r6
    3e00:	84 81       	ldd	r24, Z+4	; 0x04
    3e02:	95 81       	ldd	r25, Z+5	; 0x05
    3e04:	dc 01       	movw	r26, r24
    3e06:	ed 91       	ld	r30, X+
    3e08:	fc 91       	ld	r31, X
    3e0a:	00 84       	ldd	r0, Z+8	; 0x08
    3e0c:	f1 85       	ldd	r31, Z+9	; 0x09
    3e0e:	e0 2d       	mov	r30, r0
    3e10:	19 95       	eicall
    3e12:	89 2b       	or	r24, r25
    3e14:	e9 f4       	brne	.+58     	; 0x3e50 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x308>
    3e16:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    3e1a:	f3 01       	movw	r30, r6
    3e1c:	24 85       	ldd	r18, Z+12	; 0x0c
    3e1e:	35 85       	ldd	r19, Z+13	; 0x0d
    3e20:	84 88       	ldd	r8, Z+20	; 0x14
    3e22:	95 88       	ldd	r9, Z+21	; 0x15
    3e24:	a6 88       	ldd	r10, Z+22	; 0x16
    3e26:	b7 88       	ldd	r11, Z+23	; 0x17
    3e28:	7b 01       	movw	r14, r22
    3e2a:	8c 01       	movw	r16, r24
    3e2c:	e8 18       	sub	r14, r8
    3e2e:	f9 08       	sbc	r15, r9
    3e30:	0a 09       	sbc	r16, r10
    3e32:	1b 09       	sbc	r17, r11
    3e34:	a8 ee       	ldi	r26, 0xE8	; 232
    3e36:	b3 e0       	ldi	r27, 0x03	; 3
    3e38:	0e 94 02 2e 	call	0x5c04	; 0x5c04 <__umulhisi3>
    3e3c:	e6 16       	cp	r14, r22
    3e3e:	f7 06       	cpc	r15, r23
    3e40:	08 07       	cpc	r16, r24
    3e42:	19 07       	cpc	r17, r25
    3e44:	e0 f2       	brcs	.-72     	; 0x3dfe <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x2b6>
    3e46:	8c ef       	ldi	r24, 0xFC	; 252
    3e48:	9f ef       	ldi	r25, 0xFF	; 255
    3e4a:	90 a7       	std	Z+40, r25	; 0x28
    3e4c:	87 a3       	std	Z+39, r24	; 0x27
    3e4e:	26 c0       	rjmp	.+76     	; 0x3e9c <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x354>
    3e50:	be 01       	movw	r22, r28
    3e52:	68 5f       	subi	r22, 0xF8	; 248
    3e54:	7f 4f       	sbci	r23, 0xFF	; 255
    3e56:	c3 01       	movw	r24, r6
    3e58:	58 dc       	rcall	.-1872   	; 0x370a <_ZN12PubSubClient10readPacketEPh>
    3e5a:	64 30       	cpi	r22, 0x04	; 4
    3e5c:	71 05       	cpc	r23, r1
    3e5e:	81 05       	cpc	r24, r1
    3e60:	91 05       	cpc	r25, r1
    3e62:	d9 f4       	brne	.+54     	; 0x3e9a <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x352>
    3e64:	d3 01       	movw	r26, r6
    3e66:	16 96       	adiw	r26, 0x06	; 6
    3e68:	ed 91       	ld	r30, X+
    3e6a:	fc 91       	ld	r31, X
    3e6c:	17 97       	sbiw	r26, 0x07	; 7
    3e6e:	83 81       	ldd	r24, Z+3	; 0x03
    3e70:	81 11       	cpse	r24, r1
    3e72:	0d c0       	rjmp	.+26     	; 0x3e8e <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x346>
    3e74:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    3e78:	f3 01       	movw	r30, r6
    3e7a:	64 8b       	std	Z+20, r22	; 0x14
    3e7c:	75 8b       	std	Z+21, r23	; 0x15
    3e7e:	86 8b       	std	Z+22, r24	; 0x16
    3e80:	97 8b       	std	Z+23, r25	; 0x17
    3e82:	10 8e       	std	Z+24, r1	; 0x18
    3e84:	10 a6       	std	Z+40, r1	; 0x28
    3e86:	17 a2       	std	Z+39, r1	; 0x27
    3e88:	dd 24       	eor	r13, r13
    3e8a:	d3 94       	inc	r13
    3e8c:	10 c0       	rjmp	.+32     	; 0x3eae <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b+0x366>
    3e8e:	90 e0       	ldi	r25, 0x00	; 0
    3e90:	d3 01       	movw	r26, r6
    3e92:	98 96       	adiw	r26, 0x28	; 40
    3e94:	9c 93       	st	X, r25
    3e96:	8e 93       	st	-X, r24
    3e98:	97 97       	sbiw	r26, 0x27	; 39
    3e9a:	f3 01       	movw	r30, r6
    3e9c:	84 81       	ldd	r24, Z+4	; 0x04
    3e9e:	95 81       	ldd	r25, Z+5	; 0x05
    3ea0:	dc 01       	movw	r26, r24
    3ea2:	ed 91       	ld	r30, X+
    3ea4:	fc 91       	ld	r31, X
    3ea6:	04 88       	ldd	r0, Z+20	; 0x14
    3ea8:	f5 89       	ldd	r31, Z+21	; 0x15
    3eaa:	e0 2d       	mov	r30, r0
    3eac:	19 95       	eicall
    3eae:	8d 2d       	mov	r24, r13
    3eb0:	60 96       	adiw	r28, 0x10	; 16
    3eb2:	0f b6       	in	r0, 0x3f	; 63
    3eb4:	f8 94       	cli
    3eb6:	de bf       	out	0x3e, r29	; 62
    3eb8:	0f be       	out	0x3f, r0	; 63
    3eba:	cd bf       	out	0x3d, r28	; 61
    3ebc:	df 91       	pop	r29
    3ebe:	cf 91       	pop	r28
    3ec0:	1f 91       	pop	r17
    3ec2:	0f 91       	pop	r16
    3ec4:	ff 90       	pop	r15
    3ec6:	ef 90       	pop	r14
    3ec8:	df 90       	pop	r13
    3eca:	cf 90       	pop	r12
    3ecc:	bf 90       	pop	r11
    3ece:	af 90       	pop	r10
    3ed0:	9f 90       	pop	r9
    3ed2:	8f 90       	pop	r8
    3ed4:	7f 90       	pop	r7
    3ed6:	6f 90       	pop	r6
    3ed8:	5f 90       	pop	r5
    3eda:	4f 90       	pop	r4
    3edc:	3f 90       	pop	r3
    3ede:	2f 90       	pop	r2
    3ee0:	08 95       	ret

00003ee2 <_ZN12PubSubClient7connectEPKc>:
    3ee2:	8f 92       	push	r8
    3ee4:	af 92       	push	r10
    3ee6:	bf 92       	push	r11
    3ee8:	cf 92       	push	r12
    3eea:	ef 92       	push	r14
    3eec:	0f 93       	push	r16
    3eee:	1f 93       	push	r17
    3ef0:	88 24       	eor	r8, r8
    3ef2:	83 94       	inc	r8
    3ef4:	a1 2c       	mov	r10, r1
    3ef6:	b1 2c       	mov	r11, r1
    3ef8:	c1 2c       	mov	r12, r1
    3efa:	e1 2c       	mov	r14, r1
    3efc:	00 e0       	ldi	r16, 0x00	; 0
    3efe:	10 e0       	ldi	r17, 0x00	; 0
    3f00:	20 e0       	ldi	r18, 0x00	; 0
    3f02:	30 e0       	ldi	r19, 0x00	; 0
    3f04:	40 e0       	ldi	r20, 0x00	; 0
    3f06:	50 e0       	ldi	r21, 0x00	; 0
    3f08:	1f de       	rcall	.-962    	; 0x3b48 <_ZN12PubSubClient7connectEPKcS1_S1_S1_hbS1_b>
    3f0a:	1f 91       	pop	r17
    3f0c:	0f 91       	pop	r16
    3f0e:	ef 90       	pop	r14
    3f10:	cf 90       	pop	r12
    3f12:	bf 90       	pop	r11
    3f14:	af 90       	pop	r10
    3f16:	8f 90       	pop	r8
    3f18:	08 95       	ret

00003f1a <_ZN12PubSubClient4loopEv>:
    3f1a:	2f 92       	push	r2
    3f1c:	3f 92       	push	r3
    3f1e:	4f 92       	push	r4
    3f20:	5f 92       	push	r5
    3f22:	6f 92       	push	r6
    3f24:	7f 92       	push	r7
    3f26:	8f 92       	push	r8
    3f28:	9f 92       	push	r9
    3f2a:	af 92       	push	r10
    3f2c:	bf 92       	push	r11
    3f2e:	cf 92       	push	r12
    3f30:	df 92       	push	r13
    3f32:	ef 92       	push	r14
    3f34:	ff 92       	push	r15
    3f36:	0f 93       	push	r16
    3f38:	1f 93       	push	r17
    3f3a:	cf 93       	push	r28
    3f3c:	df 93       	push	r29
    3f3e:	00 d0       	rcall	.+0      	; 0x3f40 <_ZN12PubSubClient4loopEv+0x26>
    3f40:	cd b7       	in	r28, 0x3d	; 61
    3f42:	de b7       	in	r29, 0x3e	; 62
    3f44:	8c 01       	movw	r16, r24
    3f46:	cc dd       	rcall	.-1128   	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    3f48:	d8 2e       	mov	r13, r24
    3f4a:	88 23       	and	r24, r24
    3f4c:	09 f4       	brne	.+2      	; 0x3f50 <_ZN12PubSubClient4loopEv+0x36>
    3f4e:	57 c1       	rjmp	.+686    	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    3f50:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    3f54:	4b 01       	movw	r8, r22
    3f56:	5c 01       	movw	r10, r24
    3f58:	d8 01       	movw	r26, r16
    3f5a:	1a 96       	adiw	r26, 0x0a	; 10
    3f5c:	2d 91       	ld	r18, X+
    3f5e:	3c 91       	ld	r19, X
    3f60:	1b 97       	sbiw	r26, 0x0b	; 11
    3f62:	a8 ee       	ldi	r26, 0xE8	; 232
    3f64:	b3 e0       	ldi	r27, 0x03	; 3
    3f66:	0e 94 02 2e 	call	0x5c04	; 0x5c04 <__umulhisi3>
    3f6a:	f8 01       	movw	r30, r16
    3f6c:	44 88       	ldd	r4, Z+20	; 0x14
    3f6e:	55 88       	ldd	r5, Z+21	; 0x15
    3f70:	66 88       	ldd	r6, Z+22	; 0x16
    3f72:	77 88       	ldd	r7, Z+23	; 0x17
    3f74:	a5 01       	movw	r20, r10
    3f76:	94 01       	movw	r18, r8
    3f78:	24 19       	sub	r18, r4
    3f7a:	35 09       	sbc	r19, r5
    3f7c:	46 09       	sbc	r20, r6
    3f7e:	57 09       	sbc	r21, r7
    3f80:	62 17       	cp	r22, r18
    3f82:	73 07       	cpc	r23, r19
    3f84:	84 07       	cpc	r24, r20
    3f86:	95 07       	cpc	r25, r21
    3f88:	80 f0       	brcs	.+32     	; 0x3faa <_ZN12PubSubClient4loopEv+0x90>
    3f8a:	40 88       	ldd	r4, Z+16	; 0x10
    3f8c:	51 88       	ldd	r5, Z+17	; 0x11
    3f8e:	62 88       	ldd	r6, Z+18	; 0x12
    3f90:	73 88       	ldd	r7, Z+19	; 0x13
    3f92:	a5 01       	movw	r20, r10
    3f94:	94 01       	movw	r18, r8
    3f96:	24 19       	sub	r18, r4
    3f98:	35 09       	sbc	r19, r5
    3f9a:	46 09       	sbc	r20, r6
    3f9c:	57 09       	sbc	r21, r7
    3f9e:	62 17       	cp	r22, r18
    3fa0:	73 07       	cpc	r23, r19
    3fa2:	84 07       	cpc	r24, r20
    3fa4:	95 07       	cpc	r25, r21
    3fa6:	08 f0       	brcs	.+2      	; 0x3faa <_ZN12PubSubClient4loopEv+0x90>
    3fa8:	40 c0       	rjmp	.+128    	; 0x402a <_ZN12PubSubClient4loopEv+0x110>
    3faa:	d8 01       	movw	r26, r16
    3fac:	58 96       	adiw	r26, 0x18	; 24
    3fae:	8c 91       	ld	r24, X
    3fb0:	58 97       	sbiw	r26, 0x18	; 24
    3fb2:	88 23       	and	r24, r24
    3fb4:	91 f0       	breq	.+36     	; 0x3fda <_ZN12PubSubClient4loopEv+0xc0>
    3fb6:	8c ef       	ldi	r24, 0xFC	; 252
    3fb8:	9f ef       	ldi	r25, 0xFF	; 255
    3fba:	98 96       	adiw	r26, 0x28	; 40
    3fbc:	9c 93       	st	X, r25
    3fbe:	8e 93       	st	-X, r24
    3fc0:	97 97       	sbiw	r26, 0x27	; 39
    3fc2:	14 96       	adiw	r26, 0x04	; 4
    3fc4:	8d 91       	ld	r24, X+
    3fc6:	9c 91       	ld	r25, X
    3fc8:	15 97       	sbiw	r26, 0x05	; 5
    3fca:	dc 01       	movw	r26, r24
    3fcc:	ed 91       	ld	r30, X+
    3fce:	fc 91       	ld	r31, X
    3fd0:	04 88       	ldd	r0, Z+20	; 0x14
    3fd2:	f5 89       	ldd	r31, Z+21	; 0x15
    3fd4:	e0 2d       	mov	r30, r0
    3fd6:	19 95       	eicall
    3fd8:	11 c1       	rjmp	.+546    	; 0x41fc <_ZN12PubSubClient4loopEv+0x2e2>
    3fda:	d8 01       	movw	r26, r16
    3fdc:	16 96       	adiw	r26, 0x06	; 6
    3fde:	ed 91       	ld	r30, X+
    3fe0:	fc 91       	ld	r31, X
    3fe2:	17 97       	sbiw	r26, 0x07	; 7
    3fe4:	80 ec       	ldi	r24, 0xC0	; 192
    3fe6:	80 83       	st	Z, r24
    3fe8:	16 96       	adiw	r26, 0x06	; 6
    3fea:	ed 91       	ld	r30, X+
    3fec:	fc 91       	ld	r31, X
    3fee:	17 97       	sbiw	r26, 0x07	; 7
    3ff0:	11 82       	std	Z+1, r1	; 0x01
    3ff2:	14 96       	adiw	r26, 0x04	; 4
    3ff4:	8d 91       	ld	r24, X+
    3ff6:	9c 91       	ld	r25, X
    3ff8:	15 97       	sbiw	r26, 0x05	; 5
    3ffa:	16 96       	adiw	r26, 0x06	; 6
    3ffc:	6d 91       	ld	r22, X+
    3ffe:	7c 91       	ld	r23, X
    4000:	17 97       	sbiw	r26, 0x07	; 7
    4002:	dc 01       	movw	r26, r24
    4004:	ed 91       	ld	r30, X+
    4006:	fc 91       	ld	r31, X
    4008:	02 80       	ldd	r0, Z+2	; 0x02
    400a:	f3 81       	ldd	r31, Z+3	; 0x03
    400c:	e0 2d       	mov	r30, r0
    400e:	42 e0       	ldi	r20, 0x02	; 2
    4010:	50 e0       	ldi	r21, 0x00	; 0
    4012:	19 95       	eicall
    4014:	f8 01       	movw	r30, r16
    4016:	80 8a       	std	Z+16, r8	; 0x10
    4018:	91 8a       	std	Z+17, r9	; 0x11
    401a:	a2 8a       	std	Z+18, r10	; 0x12
    401c:	b3 8a       	std	Z+19, r11	; 0x13
    401e:	84 8a       	std	Z+20, r8	; 0x14
    4020:	95 8a       	std	Z+21, r9	; 0x15
    4022:	a6 8a       	std	Z+22, r10	; 0x16
    4024:	b7 8a       	std	Z+23, r11	; 0x17
    4026:	81 e0       	ldi	r24, 0x01	; 1
    4028:	80 8f       	std	Z+24, r24	; 0x18
    402a:	f8 01       	movw	r30, r16
    402c:	84 81       	ldd	r24, Z+4	; 0x04
    402e:	95 81       	ldd	r25, Z+5	; 0x05
    4030:	dc 01       	movw	r26, r24
    4032:	ed 91       	ld	r30, X+
    4034:	fc 91       	ld	r31, X
    4036:	00 84       	ldd	r0, Z+8	; 0x08
    4038:	f1 85       	ldd	r31, Z+9	; 0x09
    403a:	e0 2d       	mov	r30, r0
    403c:	19 95       	eicall
    403e:	89 2b       	or	r24, r25
    4040:	09 f4       	brne	.+2      	; 0x4044 <_ZN12PubSubClient4loopEv+0x12a>
    4042:	dd c0       	rjmp	.+442    	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    4044:	be 01       	movw	r22, r28
    4046:	6f 5f       	subi	r22, 0xFF	; 255
    4048:	7f 4f       	sbci	r23, 0xFF	; 255
    404a:	c8 01       	movw	r24, r16
    404c:	5e db       	rcall	.-2372   	; 0x370a <_ZN12PubSubClient10readPacketEPh>
    404e:	2b 01       	movw	r4, r22
    4050:	3c 01       	movw	r6, r24
    4052:	67 2b       	or	r22, r23
    4054:	09 f4       	brne	.+2      	; 0x4058 <_ZN12PubSubClient4loopEv+0x13e>
    4056:	ce c0       	rjmp	.+412    	; 0x41f4 <_ZN12PubSubClient4loopEv+0x2da>
    4058:	f8 01       	movw	r30, r16
    405a:	84 8a       	std	Z+20, r8	; 0x14
    405c:	95 8a       	std	Z+21, r9	; 0x15
    405e:	a6 8a       	std	Z+22, r10	; 0x16
    4060:	b7 8a       	std	Z+23, r11	; 0x17
    4062:	06 80       	ldd	r0, Z+6	; 0x06
    4064:	f7 81       	ldd	r31, Z+7	; 0x07
    4066:	e0 2d       	mov	r30, r0
    4068:	80 81       	ld	r24, Z
    406a:	80 7f       	andi	r24, 0xF0	; 240
    406c:	80 33       	cpi	r24, 0x30	; 48
    406e:	09 f0       	breq	.+2      	; 0x4072 <_ZN12PubSubClient4loopEv+0x158>
    4070:	a0 c0       	rjmp	.+320    	; 0x41b2 <_ZN12PubSubClient4loopEv+0x298>
    4072:	d8 01       	movw	r26, r16
    4074:	59 96       	adiw	r26, 0x19	; 25
    4076:	8d 91       	ld	r24, X+
    4078:	9c 91       	ld	r25, X
    407a:	5a 97       	sbiw	r26, 0x1a	; 26
    407c:	89 2b       	or	r24, r25
    407e:	09 f4       	brne	.+2      	; 0x4082 <_ZN12PubSubClient4loopEv+0x168>
    4080:	be c0       	rjmp	.+380    	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    4082:	29 81       	ldd	r18, Y+1	; 0x01
    4084:	30 e0       	ldi	r19, 0x00	; 0
    4086:	c9 01       	movw	r24, r18
    4088:	02 96       	adiw	r24, 0x02	; 2
    408a:	8e 0f       	add	r24, r30
    408c:	9f 1f       	adc	r25, r31
    408e:	df 01       	movw	r26, r30
    4090:	a2 0f       	add	r26, r18
    4092:	b3 1f       	adc	r27, r19
    4094:	11 96       	adiw	r26, 0x01	; 1
    4096:	ec 90       	ld	r14, X
    4098:	f1 2c       	mov	r15, r1
    409a:	fe 2c       	mov	r15, r14
    409c:	ee 24       	eor	r14, r14
    409e:	dc 01       	movw	r26, r24
    40a0:	4c 91       	ld	r20, X
    40a2:	e4 0e       	add	r14, r20
    40a4:	f1 1c       	adc	r15, r1
    40a6:	2d 5f       	subi	r18, 0xFD	; 253
    40a8:	3f 4f       	sbci	r19, 0xFF	; 255
    40aa:	bf 01       	movw	r22, r30
    40ac:	62 0f       	add	r22, r18
    40ae:	73 1f       	adc	r23, r19
    40b0:	a7 01       	movw	r20, r14
    40b2:	0e 94 a8 30 	call	0x6150	; 0x6150 <memmove>
    40b6:	89 81       	ldd	r24, Y+1	; 0x01
    40b8:	d8 01       	movw	r26, r16
    40ba:	16 96       	adiw	r26, 0x06	; 6
    40bc:	ed 91       	ld	r30, X+
    40be:	fc 91       	ld	r31, X
    40c0:	17 97       	sbiw	r26, 0x07	; 7
    40c2:	ee 0d       	add	r30, r14
    40c4:	ff 1d       	adc	r31, r15
    40c6:	e8 0f       	add	r30, r24
    40c8:	f1 1d       	adc	r31, r1
    40ca:	12 82       	std	Z+2, r1	; 0x02
    40cc:	16 96       	adiw	r26, 0x06	; 6
    40ce:	ed 91       	ld	r30, X+
    40d0:	fc 91       	ld	r31, X
    40d2:	17 97       	sbiw	r26, 0x07	; 7
    40d4:	29 81       	ldd	r18, Y+1	; 0x01
    40d6:	30 e0       	ldi	r19, 0x00	; 0
    40d8:	c9 01       	movw	r24, r18
    40da:	02 96       	adiw	r24, 0x02	; 2
    40dc:	8e 0f       	add	r24, r30
    40de:	9f 1f       	adc	r25, r31
    40e0:	40 81       	ld	r20, Z
    40e2:	46 70       	andi	r20, 0x06	; 6
    40e4:	c4 2e       	mov	r12, r20
    40e6:	59 96       	adiw	r26, 0x19	; 25
    40e8:	2d 90       	ld	r2, X+
    40ea:	3c 90       	ld	r3, X
    40ec:	5a 97       	sbiw	r26, 0x1a	; 26
    40ee:	b2 e0       	ldi	r27, 0x02	; 2
    40f0:	4b 13       	cpse	r20, r27
    40f2:	4d c0       	rjmp	.+154    	; 0x418e <_ZN12PubSubClient4loopEv+0x274>
    40f4:	b7 01       	movw	r22, r14
    40f6:	62 0f       	add	r22, r18
    40f8:	73 1f       	adc	r23, r19
    40fa:	df 01       	movw	r26, r30
    40fc:	a6 0f       	add	r26, r22
    40fe:	b7 1f       	adc	r27, r23
    4100:	13 96       	adiw	r26, 0x03	; 3
    4102:	4c 91       	ld	r20, X
    4104:	13 97       	sbiw	r26, 0x03	; 3
    4106:	50 e0       	ldi	r21, 0x00	; 0
    4108:	54 2f       	mov	r21, r20
    410a:	44 27       	eor	r20, r20
    410c:	14 96       	adiw	r26, 0x04	; 4
    410e:	ac 91       	ld	r26, X
    4110:	4a 0f       	add	r20, r26
    4112:	51 1d       	adc	r21, r1
    4114:	5b 83       	std	Y+3, r21	; 0x03
    4116:	4a 83       	std	Y+2, r20	; 0x02
    4118:	4b ef       	ldi	r20, 0xFB	; 251
    411a:	5f ef       	ldi	r21, 0xFF	; 255
    411c:	42 1b       	sub	r20, r18
    411e:	53 0b       	sbc	r21, r19
    4120:	4e 19       	sub	r20, r14
    4122:	5f 09       	sbc	r21, r15
    4124:	44 0d       	add	r20, r4
    4126:	55 1d       	adc	r21, r5
    4128:	6b 5f       	subi	r22, 0xFB	; 251
    412a:	7f 4f       	sbci	r23, 0xFF	; 255
    412c:	6e 0f       	add	r22, r30
    412e:	7f 1f       	adc	r23, r31
    4130:	f1 01       	movw	r30, r2
    4132:	19 95       	eicall
    4134:	d8 01       	movw	r26, r16
    4136:	16 96       	adiw	r26, 0x06	; 6
    4138:	ed 91       	ld	r30, X+
    413a:	fc 91       	ld	r31, X
    413c:	17 97       	sbiw	r26, 0x07	; 7
    413e:	80 e4       	ldi	r24, 0x40	; 64
    4140:	80 83       	st	Z, r24
    4142:	16 96       	adiw	r26, 0x06	; 6
    4144:	ed 91       	ld	r30, X+
    4146:	fc 91       	ld	r31, X
    4148:	17 97       	sbiw	r26, 0x07	; 7
    414a:	c1 82       	std	Z+1, r12	; 0x01
    414c:	16 96       	adiw	r26, 0x06	; 6
    414e:	ed 91       	ld	r30, X+
    4150:	fc 91       	ld	r31, X
    4152:	17 97       	sbiw	r26, 0x07	; 7
    4154:	bb 81       	ldd	r27, Y+3	; 0x03
    4156:	b2 83       	std	Z+2, r27	; 0x02
    4158:	d8 01       	movw	r26, r16
    415a:	16 96       	adiw	r26, 0x06	; 6
    415c:	ed 91       	ld	r30, X+
    415e:	fc 91       	ld	r31, X
    4160:	17 97       	sbiw	r26, 0x07	; 7
    4162:	ba 81       	ldd	r27, Y+2	; 0x02
    4164:	b3 83       	std	Z+3, r27	; 0x03
    4166:	f8 01       	movw	r30, r16
    4168:	84 81       	ldd	r24, Z+4	; 0x04
    416a:	95 81       	ldd	r25, Z+5	; 0x05
    416c:	66 81       	ldd	r22, Z+6	; 0x06
    416e:	77 81       	ldd	r23, Z+7	; 0x07
    4170:	dc 01       	movw	r26, r24
    4172:	ed 91       	ld	r30, X+
    4174:	fc 91       	ld	r31, X
    4176:	02 80       	ldd	r0, Z+2	; 0x02
    4178:	f3 81       	ldd	r31, Z+3	; 0x03
    417a:	e0 2d       	mov	r30, r0
    417c:	44 e0       	ldi	r20, 0x04	; 4
    417e:	50 e0       	ldi	r21, 0x00	; 0
    4180:	19 95       	eicall
    4182:	f8 01       	movw	r30, r16
    4184:	80 8a       	std	Z+16, r8	; 0x10
    4186:	91 8a       	std	Z+17, r9	; 0x11
    4188:	a2 8a       	std	Z+18, r10	; 0x12
    418a:	b3 8a       	std	Z+19, r11	; 0x13
    418c:	38 c0       	rjmp	.+112    	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    418e:	4d ef       	ldi	r20, 0xFD	; 253
    4190:	5f ef       	ldi	r21, 0xFF	; 255
    4192:	42 1b       	sub	r20, r18
    4194:	53 0b       	sbc	r21, r19
    4196:	4e 19       	sub	r20, r14
    4198:	5f 09       	sbc	r21, r15
    419a:	44 0d       	add	r20, r4
    419c:	55 1d       	adc	r21, r5
    419e:	b9 01       	movw	r22, r18
    41a0:	6d 5f       	subi	r22, 0xFD	; 253
    41a2:	7f 4f       	sbci	r23, 0xFF	; 255
    41a4:	6e 0d       	add	r22, r14
    41a6:	7f 1d       	adc	r23, r15
    41a8:	6e 0f       	add	r22, r30
    41aa:	7f 1f       	adc	r23, r31
    41ac:	f1 01       	movw	r30, r2
    41ae:	19 95       	eicall
    41b0:	26 c0       	rjmp	.+76     	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    41b2:	80 3c       	cpi	r24, 0xC0	; 192
    41b4:	d1 f4       	brne	.+52     	; 0x41ea <_ZN12PubSubClient4loopEv+0x2d0>
    41b6:	80 ed       	ldi	r24, 0xD0	; 208
    41b8:	80 83       	st	Z, r24
    41ba:	d8 01       	movw	r26, r16
    41bc:	16 96       	adiw	r26, 0x06	; 6
    41be:	ed 91       	ld	r30, X+
    41c0:	fc 91       	ld	r31, X
    41c2:	17 97       	sbiw	r26, 0x07	; 7
    41c4:	11 82       	std	Z+1, r1	; 0x01
    41c6:	14 96       	adiw	r26, 0x04	; 4
    41c8:	8d 91       	ld	r24, X+
    41ca:	9c 91       	ld	r25, X
    41cc:	15 97       	sbiw	r26, 0x05	; 5
    41ce:	16 96       	adiw	r26, 0x06	; 6
    41d0:	6d 91       	ld	r22, X+
    41d2:	7c 91       	ld	r23, X
    41d4:	17 97       	sbiw	r26, 0x07	; 7
    41d6:	dc 01       	movw	r26, r24
    41d8:	ed 91       	ld	r30, X+
    41da:	fc 91       	ld	r31, X
    41dc:	02 80       	ldd	r0, Z+2	; 0x02
    41de:	f3 81       	ldd	r31, Z+3	; 0x03
    41e0:	e0 2d       	mov	r30, r0
    41e2:	42 e0       	ldi	r20, 0x02	; 2
    41e4:	50 e0       	ldi	r21, 0x00	; 0
    41e6:	19 95       	eicall
    41e8:	0a c0       	rjmp	.+20     	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    41ea:	80 3d       	cpi	r24, 0xD0	; 208
    41ec:	41 f4       	brne	.+16     	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    41ee:	f8 01       	movw	r30, r16
    41f0:	10 8e       	std	Z+24, r1	; 0x18
    41f2:	05 c0       	rjmp	.+10     	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    41f4:	c8 01       	movw	r24, r16
    41f6:	74 dc       	rcall	.-1816   	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    41f8:	81 11       	cpse	r24, r1
    41fa:	01 c0       	rjmp	.+2      	; 0x41fe <_ZN12PubSubClient4loopEv+0x2e4>
    41fc:	d1 2c       	mov	r13, r1
    41fe:	8d 2d       	mov	r24, r13
    4200:	0f 90       	pop	r0
    4202:	0f 90       	pop	r0
    4204:	0f 90       	pop	r0
    4206:	df 91       	pop	r29
    4208:	cf 91       	pop	r28
    420a:	1f 91       	pop	r17
    420c:	0f 91       	pop	r16
    420e:	ff 90       	pop	r15
    4210:	ef 90       	pop	r14
    4212:	df 90       	pop	r13
    4214:	cf 90       	pop	r12
    4216:	bf 90       	pop	r11
    4218:	af 90       	pop	r10
    421a:	9f 90       	pop	r9
    421c:	8f 90       	pop	r8
    421e:	7f 90       	pop	r7
    4220:	6f 90       	pop	r6
    4222:	5f 90       	pop	r5
    4224:	4f 90       	pop	r4
    4226:	3f 90       	pop	r3
    4228:	2f 90       	pop	r2
    422a:	08 95       	ret

0000422c <_ZN12PubSubClient7publishEPKcPKhjb>:
    422c:	8f 92       	push	r8
    422e:	9f 92       	push	r9
    4230:	af 92       	push	r10
    4232:	bf 92       	push	r11
    4234:	cf 92       	push	r12
    4236:	df 92       	push	r13
    4238:	ef 92       	push	r14
    423a:	ff 92       	push	r15
    423c:	0f 93       	push	r16
    423e:	cf 93       	push	r28
    4240:	df 93       	push	r29
    4242:	6c 01       	movw	r12, r24
    4244:	5b 01       	movw	r10, r22
    4246:	ea 01       	movw	r28, r20
    4248:	79 01       	movw	r14, r18
    424a:	4a dc       	rcall	.-1900   	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    424c:	88 23       	and	r24, r24
    424e:	09 f4       	brne	.+2      	; 0x4252 <_ZN12PubSubClient7publishEPKcPKhjb+0x26>
    4250:	49 c0       	rjmp	.+146    	; 0x42e4 <_ZN12PubSubClient7publishEPKcPKhjb+0xb8>
    4252:	d6 01       	movw	r26, r12
    4254:	18 96       	adiw	r26, 0x08	; 8
    4256:	8d 90       	ld	r8, X+
    4258:	9c 90       	ld	r9, X
    425a:	19 97       	sbiw	r26, 0x09	; 9
    425c:	b4 01       	movw	r22, r8
    425e:	c5 01       	movw	r24, r10
    4260:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    4264:	97 01       	movw	r18, r14
    4266:	29 5f       	subi	r18, 0xF9	; 249
    4268:	3f 4f       	sbci	r19, 0xFF	; 255
    426a:	82 0f       	add	r24, r18
    426c:	93 1f       	adc	r25, r19
    426e:	88 16       	cp	r8, r24
    4270:	99 06       	cpc	r9, r25
    4272:	c0 f1       	brcs	.+112    	; 0x42e4 <_ZN12PubSubClient7publishEPKcPKhjb+0xb8>
    4274:	f6 01       	movw	r30, r12
    4276:	46 81       	ldd	r20, Z+6	; 0x06
    4278:	57 81       	ldd	r21, Z+7	; 0x07
    427a:	25 e0       	ldi	r18, 0x05	; 5
    427c:	30 e0       	ldi	r19, 0x00	; 0
    427e:	b5 01       	movw	r22, r10
    4280:	c6 01       	movw	r24, r12
    4282:	0f dc       	rcall	.-2018   	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    4284:	5e 01       	movw	r10, r28
    4286:	ae 0c       	add	r10, r14
    4288:	bf 1c       	adc	r11, r15
    428a:	fe 01       	movw	r30, r28
    428c:	ec 01       	movw	r28, r24
    428e:	ce 1b       	sub	r28, r30
    4290:	df 0b       	sbc	r29, r31
    4292:	be 01       	movw	r22, r28
    4294:	6e 0f       	add	r22, r30
    4296:	7f 1f       	adc	r23, r31
    4298:	d6 01       	movw	r26, r12
    429a:	16 96       	adiw	r26, 0x06	; 6
    429c:	4d 91       	ld	r20, X+
    429e:	5c 91       	ld	r21, X
    42a0:	17 97       	sbiw	r26, 0x07	; 7
    42a2:	ea 15       	cp	r30, r10
    42a4:	fb 05       	cpc	r31, r11
    42a6:	31 f0       	breq	.+12     	; 0x42b4 <_ZN12PubSubClient7publishEPKcPKhjb+0x88>
    42a8:	21 91       	ld	r18, Z+
    42aa:	da 01       	movw	r26, r20
    42ac:	a6 0f       	add	r26, r22
    42ae:	b7 1f       	adc	r27, r23
    42b0:	2c 93       	st	X, r18
    42b2:	ef cf       	rjmp	.-34     	; 0x4292 <_ZN12PubSubClient7publishEPKcPKhjb+0x66>
    42b4:	b5 e0       	ldi	r27, 0x05	; 5
    42b6:	eb 1a       	sub	r14, r27
    42b8:	f1 08       	sbc	r15, r1
    42ba:	00 23       	and	r16, r16
    42bc:	11 f0       	breq	.+4      	; 0x42c2 <_ZN12PubSubClient7publishEPKcPKhjb+0x96>
    42be:	61 e3       	ldi	r22, 0x31	; 49
    42c0:	01 c0       	rjmp	.+2      	; 0x42c4 <_ZN12PubSubClient7publishEPKcPKhjb+0x98>
    42c2:	60 e3       	ldi	r22, 0x30	; 48
    42c4:	9c 01       	movw	r18, r24
    42c6:	2e 0d       	add	r18, r14
    42c8:	3f 1d       	adc	r19, r15
    42ca:	c6 01       	movw	r24, r12
    42cc:	df 91       	pop	r29
    42ce:	cf 91       	pop	r28
    42d0:	0f 91       	pop	r16
    42d2:	ff 90       	pop	r15
    42d4:	ef 90       	pop	r14
    42d6:	df 90       	pop	r13
    42d8:	cf 90       	pop	r12
    42da:	bf 90       	pop	r11
    42dc:	af 90       	pop	r10
    42de:	9f 90       	pop	r9
    42e0:	8f 90       	pop	r8
    42e2:	ab cb       	rjmp	.-2218   	; 0x3a3a <_ZN12PubSubClient5writeEhPhj>
    42e4:	80 e0       	ldi	r24, 0x00	; 0
    42e6:	df 91       	pop	r29
    42e8:	cf 91       	pop	r28
    42ea:	0f 91       	pop	r16
    42ec:	ff 90       	pop	r15
    42ee:	ef 90       	pop	r14
    42f0:	df 90       	pop	r13
    42f2:	cf 90       	pop	r12
    42f4:	bf 90       	pop	r11
    42f6:	af 90       	pop	r10
    42f8:	9f 90       	pop	r9
    42fa:	8f 90       	pop	r8
    42fc:	08 95       	ret

000042fe <_ZN12PubSubClient7publishEPKcS1_>:
    42fe:	cf 92       	push	r12
    4300:	df 92       	push	r13
    4302:	ef 92       	push	r14
    4304:	ff 92       	push	r15
    4306:	0f 93       	push	r16
    4308:	cf 93       	push	r28
    430a:	df 93       	push	r29
    430c:	7c 01       	movw	r14, r24
    430e:	6b 01       	movw	r12, r22
    4310:	ea 01       	movw	r28, r20
    4312:	20 97       	sbiw	r28, 0x00	; 0
    4314:	39 f0       	breq	.+14     	; 0x4324 <_ZN12PubSubClient7publishEPKcS1_+0x26>
    4316:	fc 01       	movw	r30, r24
    4318:	60 85       	ldd	r22, Z+8	; 0x08
    431a:	71 85       	ldd	r23, Z+9	; 0x09
    431c:	ca 01       	movw	r24, r20
    431e:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    4322:	02 c0       	rjmp	.+4      	; 0x4328 <_ZN12PubSubClient7publishEPKcS1_+0x2a>
    4324:	80 e0       	ldi	r24, 0x00	; 0
    4326:	90 e0       	ldi	r25, 0x00	; 0
    4328:	00 e0       	ldi	r16, 0x00	; 0
    432a:	9c 01       	movw	r18, r24
    432c:	ae 01       	movw	r20, r28
    432e:	b6 01       	movw	r22, r12
    4330:	c7 01       	movw	r24, r14
    4332:	7c df       	rcall	.-264    	; 0x422c <_ZN12PubSubClient7publishEPKcPKhjb>
    4334:	df 91       	pop	r29
    4336:	cf 91       	pop	r28
    4338:	0f 91       	pop	r16
    433a:	ff 90       	pop	r15
    433c:	ef 90       	pop	r14
    433e:	df 90       	pop	r13
    4340:	cf 90       	pop	r12
    4342:	08 95       	ret

00004344 <_ZN12PubSubClient9subscribeEPKch>:
    4344:	cf 92       	push	r12
    4346:	df 92       	push	r13
    4348:	ff 92       	push	r15
    434a:	0f 93       	push	r16
    434c:	1f 93       	push	r17
    434e:	cf 93       	push	r28
    4350:	df 93       	push	r29
    4352:	ec 01       	movw	r28, r24
    4354:	8b 01       	movw	r16, r22
    4356:	f4 2e       	mov	r15, r20
    4358:	c8 84       	ldd	r12, Y+8	; 0x08
    435a:	d9 84       	ldd	r13, Y+9	; 0x09
    435c:	b6 01       	movw	r22, r12
    435e:	c8 01       	movw	r24, r16
    4360:	0e 94 df 30 	call	0x61be	; 0x61be <strnlen>
    4364:	01 15       	cp	r16, r1
    4366:	11 05       	cpc	r17, r1
    4368:	b1 f1       	breq	.+108    	; 0x43d6 <_ZN12PubSubClient9subscribeEPKch+0x92>
    436a:	21 e0       	ldi	r18, 0x01	; 1
    436c:	2f 15       	cp	r18, r15
    436e:	98 f1       	brcs	.+102    	; 0x43d6 <_ZN12PubSubClient9subscribeEPKch+0x92>
    4370:	09 96       	adiw	r24, 0x09	; 9
    4372:	c8 16       	cp	r12, r24
    4374:	d9 06       	cpc	r13, r25
    4376:	78 f1       	brcs	.+94     	; 0x43d6 <_ZN12PubSubClient9subscribeEPKch+0x92>
    4378:	ce 01       	movw	r24, r28
    437a:	b2 db       	rcall	.-2204   	; 0x3ae0 <_ZN12PubSubClient9connectedEv>
    437c:	88 23       	and	r24, r24
    437e:	59 f1       	breq	.+86     	; 0x43d6 <_ZN12PubSubClient9subscribeEPKch+0x92>
    4380:	8e 85       	ldd	r24, Y+14	; 0x0e
    4382:	9f 85       	ldd	r25, Y+15	; 0x0f
    4384:	01 96       	adiw	r24, 0x01	; 1
    4386:	11 f4       	brne	.+4      	; 0x438c <_ZN12PubSubClient9subscribeEPKch+0x48>
    4388:	81 e0       	ldi	r24, 0x01	; 1
    438a:	90 e0       	ldi	r25, 0x00	; 0
    438c:	9f 87       	std	Y+15, r25	; 0x0f
    438e:	8e 87       	std	Y+14, r24	; 0x0e
    4390:	ee 81       	ldd	r30, Y+6	; 0x06
    4392:	ff 81       	ldd	r31, Y+7	; 0x07
    4394:	8f 85       	ldd	r24, Y+15	; 0x0f
    4396:	85 83       	std	Z+5, r24	; 0x05
    4398:	ee 81       	ldd	r30, Y+6	; 0x06
    439a:	ff 81       	ldd	r31, Y+7	; 0x07
    439c:	8e 85       	ldd	r24, Y+14	; 0x0e
    439e:	86 83       	std	Z+6, r24	; 0x06
    43a0:	4e 81       	ldd	r20, Y+6	; 0x06
    43a2:	5f 81       	ldd	r21, Y+7	; 0x07
    43a4:	27 e0       	ldi	r18, 0x07	; 7
    43a6:	30 e0       	ldi	r19, 0x00	; 0
    43a8:	b8 01       	movw	r22, r16
    43aa:	ce 01       	movw	r24, r28
    43ac:	7a db       	rcall	.-2316   	; 0x3aa2 <_ZN12PubSubClient11writeStringEPKcPhj>
    43ae:	ee 81       	ldd	r30, Y+6	; 0x06
    43b0:	ff 81       	ldd	r31, Y+7	; 0x07
    43b2:	e8 0f       	add	r30, r24
    43b4:	f9 1f       	adc	r31, r25
    43b6:	f0 82       	st	Z, r15
    43b8:	9c 01       	movw	r18, r24
    43ba:	24 50       	subi	r18, 0x04	; 4
    43bc:	31 09       	sbc	r19, r1
    43be:	4e 81       	ldd	r20, Y+6	; 0x06
    43c0:	5f 81       	ldd	r21, Y+7	; 0x07
    43c2:	62 e8       	ldi	r22, 0x82	; 130
    43c4:	ce 01       	movw	r24, r28
    43c6:	df 91       	pop	r29
    43c8:	cf 91       	pop	r28
    43ca:	1f 91       	pop	r17
    43cc:	0f 91       	pop	r16
    43ce:	ff 90       	pop	r15
    43d0:	df 90       	pop	r13
    43d2:	cf 90       	pop	r12
    43d4:	32 cb       	rjmp	.-2460   	; 0x3a3a <_ZN12PubSubClient5writeEhPhj>
    43d6:	80 e0       	ldi	r24, 0x00	; 0
    43d8:	df 91       	pop	r29
    43da:	cf 91       	pop	r28
    43dc:	1f 91       	pop	r17
    43de:	0f 91       	pop	r16
    43e0:	ff 90       	pop	r15
    43e2:	df 90       	pop	r13
    43e4:	cf 90       	pop	r12
    43e6:	08 95       	ret

000043e8 <_ZN12PubSubClient9setServerEPKcj>:
    43e8:	fc 01       	movw	r30, r24
    43ea:	72 a3       	std	Z+34, r23	; 0x22
    43ec:	61 a3       	std	Z+33, r22	; 0x21
    43ee:	54 a3       	std	Z+36, r21	; 0x24
    43f0:	43 a3       	std	Z+35, r20	; 0x23
    43f2:	08 95       	ret

000043f4 <_ZN12PubSubClient11setCallbackEPFvPcPhjE>:
    43f4:	fc 01       	movw	r30, r24
    43f6:	72 8f       	std	Z+26, r23	; 0x1a
    43f8:	61 8f       	std	Z+25, r22	; 0x19
    43fa:	08 95       	ret

000043fc <_ZN12PubSubClient5stateEv>:
    43fc:	fc 01       	movw	r30, r24
    43fe:	87 a1       	ldd	r24, Z+39	; 0x27
    4400:	90 a5       	ldd	r25, Z+40	; 0x28
    4402:	08 95       	ret

00004404 <_ZN12PubSubClient13setBufferSizeEj>:
    4404:	0f 93       	push	r16
    4406:	1f 93       	push	r17
    4408:	cf 93       	push	r28
    440a:	df 93       	push	r29
    440c:	61 15       	cp	r22, r1
    440e:	71 05       	cpc	r23, r1
    4410:	c9 f0       	breq	.+50     	; 0x4444 <_ZN12PubSubClient13setBufferSizeEj+0x40>
    4412:	8b 01       	movw	r16, r22
    4414:	ec 01       	movw	r28, r24
    4416:	88 85       	ldd	r24, Y+8	; 0x08
    4418:	99 85       	ldd	r25, Y+9	; 0x09
    441a:	89 2b       	or	r24, r25
    441c:	21 f4       	brne	.+8      	; 0x4426 <_ZN12PubSubClient13setBufferSizeEj+0x22>
    441e:	cb 01       	movw	r24, r22
    4420:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <malloc>
    4424:	06 c0       	rjmp	.+12     	; 0x4432 <_ZN12PubSubClient13setBufferSizeEj+0x2e>
    4426:	8e 81       	ldd	r24, Y+6	; 0x06
    4428:	9f 81       	ldd	r25, Y+7	; 0x07
    442a:	0e 94 5b 2f 	call	0x5eb6	; 0x5eb6 <realloc>
    442e:	00 97       	sbiw	r24, 0x00	; 0
    4430:	49 f0       	breq	.+18     	; 0x4444 <_ZN12PubSubClient13setBufferSizeEj+0x40>
    4432:	9f 83       	std	Y+7, r25	; 0x07
    4434:	8e 83       	std	Y+6, r24	; 0x06
    4436:	19 87       	std	Y+9, r17	; 0x09
    4438:	08 87       	std	Y+8, r16	; 0x08
    443a:	81 e0       	ldi	r24, 0x01	; 1
    443c:	2e 81       	ldd	r18, Y+6	; 0x06
    443e:	3f 81       	ldd	r19, Y+7	; 0x07
    4440:	23 2b       	or	r18, r19
    4442:	09 f4       	brne	.+2      	; 0x4446 <_ZN12PubSubClient13setBufferSizeEj+0x42>
    4444:	80 e0       	ldi	r24, 0x00	; 0
    4446:	df 91       	pop	r29
    4448:	cf 91       	pop	r28
    444a:	1f 91       	pop	r17
    444c:	0f 91       	pop	r16
    444e:	08 95       	ret

00004450 <_ZN12PubSubClientC1ER6Client>:
    4450:	0f 93       	push	r16
    4452:	1f 93       	push	r17
    4454:	cf 93       	push	r28
    4456:	df 93       	push	r29
    4458:	ec 01       	movw	r28, r24
    445a:	8b 01       	movw	r16, r22
    445c:	1b 82       	std	Y+3, r1	; 0x03
    445e:	1a 82       	std	Y+2, r1	; 0x02
    4460:	8f e4       	ldi	r24, 0x4F	; 79
    4462:	94 e0       	ldi	r25, 0x04	; 4
    4464:	99 83       	std	Y+1, r25	; 0x01
    4466:	88 83       	st	Y, r24
    4468:	ce 01       	movw	r24, r28
    446a:	4b 96       	adiw	r24, 0x1b	; 27
    446c:	0e 94 ed 11 	call	0x23da	; 0x23da <_ZN9IPAddressC1Ev>
    4470:	8f ef       	ldi	r24, 0xFF	; 255
    4472:	9f ef       	ldi	r25, 0xFF	; 255
    4474:	98 a7       	std	Y+40, r25	; 0x28
    4476:	8f a3       	std	Y+39, r24	; 0x27
    4478:	1d 83       	std	Y+5, r17	; 0x05
    447a:	0c 83       	std	Y+4, r16	; 0x04
    447c:	1e a2       	std	Y+38, r1	; 0x26
    447e:	1d a2       	std	Y+37, r1	; 0x25
    4480:	19 86       	std	Y+9, r1	; 0x09
    4482:	18 86       	std	Y+8, r1	; 0x08
    4484:	60 e0       	ldi	r22, 0x00	; 0
    4486:	71 e0       	ldi	r23, 0x01	; 1
    4488:	ce 01       	movw	r24, r28
    448a:	bc df       	rcall	.-136    	; 0x4404 <_ZN12PubSubClient13setBufferSizeEj>
    448c:	8f e0       	ldi	r24, 0x0F	; 15
    448e:	90 e0       	ldi	r25, 0x00	; 0
    4490:	9b 87       	std	Y+11, r25	; 0x0b
    4492:	8a 87       	std	Y+10, r24	; 0x0a
    4494:	9d 87       	std	Y+13, r25	; 0x0d
    4496:	8c 87       	std	Y+12, r24	; 0x0c
    4498:	df 91       	pop	r29
    449a:	cf 91       	pop	r28
    449c:	1f 91       	pop	r17
    449e:	0f 91       	pop	r16
    44a0:	08 95       	ret

000044a2 <_ZN12PubSubClient16setSocketTimeoutEj>:
PubSubClient& PubSubClient::setSocketTimeout(uint16_t timeout) {
    this->socketTimeout = timeout;
    44a2:	fc 01       	movw	r30, r24
    44a4:	75 87       	std	Z+13, r23	; 0x0d
    44a6:	64 87       	std	Z+12, r22	; 0x0c
    return *this;
}
    44a8:	08 95       	ret

000044aa <_GLOBAL__sub_I__ZN12PubSubClientC2Ev>:
    44aa:	0f 93       	push	r16
    friend class Server;
    friend class DhcpClass;
    friend class DNSClient;
};

const IPAddress INADDR_NONE(0,0,0,0);
    44ac:	00 e0       	ldi	r16, 0x00	; 0
    44ae:	20 e0       	ldi	r18, 0x00	; 0
    44b0:	40 e0       	ldi	r20, 0x00	; 0
    44b2:	60 e0       	ldi	r22, 0x00	; 0
    44b4:	89 e3       	ldi	r24, 0x39	; 57
    44b6:	96 e0       	ldi	r25, 0x06	; 6
    44b8:	0e 94 f7 11 	call	0x23ee	; 0x23ee <_ZN9IPAddressC1Ehhhh>
    44bc:	0f 91       	pop	r16
    44be:	08 95       	ret

000044c0 <_ZN12WiFiEspClass4initEP6Stream>:
*/


bool WiFiEspClass::ping(const char *host)
{
	return EspDrv::ping(host);
    44c0:	cf 93       	push	r28
    44c2:	df 93       	push	r29
    44c4:	ec 01       	movw	r28, r24
    44c6:	67 e5       	ldi	r22, 0x57	; 87
    44c8:	74 e0       	ldi	r23, 0x04	; 4
    44ca:	86 ef       	ldi	r24, 0xF6	; 246
    44cc:	94 e0       	ldi	r25, 0x04	; 4
    44ce:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    44d2:	65 ec       	ldi	r22, 0xC5	; 197
    44d4:	75 e0       	ldi	r23, 0x05	; 5
    44d6:	86 ef       	ldi	r24, 0xF6	; 246
    44d8:	94 e0       	ldi	r25, 0x04	; 4
    44da:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    44de:	ce 01       	movw	r24, r28
    44e0:	df 91       	pop	r29
    44e2:	cf 91       	pop	r28
    44e4:	b7 c6       	rjmp	.+3438   	; 0x5254 <_ZN6EspDrv14wifiDriverInitEP6Stream>

000044e6 <_ZN12WiFiEspClass5beginEPKcS1_>:
    44e6:	cb 01       	movw	r24, r22
    44e8:	21 e0       	ldi	r18, 0x01	; 1
    44ea:	20 93 40 06 	sts	0x0640, r18	; 0x800640 <_ZN12WiFiEspClass7espModeE>
    44ee:	ba 01       	movw	r22, r20
    44f0:	d1 d7       	rcall	.+4002   	; 0x5494 <_ZN6EspDrv11wifiConnectEPKcS1_>
    44f2:	81 11       	cpse	r24, r1
    44f4:	03 c0       	rjmp	.+6      	; 0x44fc <_ZN12WiFiEspClass5beginEPKcS1_+0x16>
    44f6:	82 e0       	ldi	r24, 0x02	; 2
    44f8:	90 e0       	ldi	r25, 0x00	; 0
    44fa:	08 95       	ret
    44fc:	81 e0       	ldi	r24, 0x01	; 1
    44fe:	90 e0       	ldi	r25, 0x00	; 0
    4500:	08 95       	ret

00004502 <_ZN12WiFiEspClass6statusEv>:
    4502:	0e c6       	rjmp	.+3100   	; 0x5120 <_ZN6EspDrv19getConnectionStatusEv>

00004504 <_ZN12WiFiEspClass13getFreeSocketEv>:
}

uint8_t WiFiEspClass::getFreeSocket()
{
    4504:	e5 e2       	ldi	r30, 0x25	; 37
    4506:	f2 e0       	ldi	r31, 0x02	; 2
  // ESP Module assigns socket numbers in ascending order, so we will assign them in descending order
    for (int i = MAX_SOCK_NUM - 1; i >= 0; i--)
    4508:	83 e0       	ldi	r24, 0x03	; 3
    450a:	90 e0       	ldi	r25, 0x00	; 0
	{
      if (_state[i] == NA_STATE)
    450c:	32 91       	ld	r19, -Z
    450e:	22 91       	ld	r18, -Z
    4510:	2f 3f       	cpi	r18, 0xFF	; 255
    4512:	3f 4f       	sbci	r19, 0xFF	; 255
    4514:	19 f0       	breq	.+6      	; 0x451c <_ZN12WiFiEspClass13getFreeSocketEv+0x18>
}

uint8_t WiFiEspClass::getFreeSocket()
{
  // ESP Module assigns socket numbers in ascending order, so we will assign them in descending order
    for (int i = MAX_SOCK_NUM - 1; i >= 0; i--)
    4516:	01 97       	sbiw	r24, 0x01	; 1
    4518:	c8 f7       	brcc	.-14     	; 0x450c <_ZN12WiFiEspClass13getFreeSocketEv+0x8>
      if (_state[i] == NA_STATE)
      {
          return i;
      }
    }
    return SOCK_NOT_AVAIL;
    451a:	8f ef       	ldi	r24, 0xFF	; 255
}
    451c:	08 95       	ret

0000451e <_ZN12WiFiEspClass14allocateSocketEh>:

void WiFiEspClass::allocateSocket(uint8_t sock)
{
  _state[sock] = sock;
    451e:	90 e0       	ldi	r25, 0x00	; 0
    4520:	fc 01       	movw	r30, r24
    4522:	ee 0f       	add	r30, r30
    4524:	ff 1f       	adc	r31, r31
    4526:	e3 5e       	subi	r30, 0xE3	; 227
    4528:	fd 4f       	sbci	r31, 0xFD	; 253
    452a:	91 83       	std	Z+1, r25	; 0x01
    452c:	80 83       	st	Z, r24
    452e:	08 95       	ret

00004530 <_ZN12WiFiEspClass13releaseSocketEh>:
}

void WiFiEspClass::releaseSocket(uint8_t sock)
{
  _state[sock] = NA_STATE;
    4530:	e8 2f       	mov	r30, r24
    4532:	f0 e0       	ldi	r31, 0x00	; 0
    4534:	ee 0f       	add	r30, r30
    4536:	ff 1f       	adc	r31, r31
    4538:	e3 5e       	subi	r30, 0xE3	; 227
    453a:	fd 4f       	sbci	r31, 0xFD	; 253
    453c:	8f ef       	ldi	r24, 0xFF	; 255
    453e:	9f ef       	ldi	r25, 0xFF	; 255
    4540:	91 83       	std	Z+1, r25	; 0x01
    4542:	80 83       	st	Z, r24
    4544:	08 95       	ret

00004546 <_GLOBAL__sub_I__ZN12WiFiEspClass6_stateE>:
}


WiFiEspClass WiFi;
    4546:	0f 93       	push	r16
    4548:	00 e0       	ldi	r16, 0x00	; 0
    454a:	20 e0       	ldi	r18, 0x00	; 0
    454c:	40 e0       	ldi	r20, 0x00	; 0
    454e:	60 e0       	ldi	r22, 0x00	; 0
    4550:	81 e4       	ldi	r24, 0x41	; 65
    4552:	96 e0       	ldi	r25, 0x06	; 6
    4554:	0e 94 f7 11 	call	0x23ee	; 0x23ee <_ZN9IPAddressC1Ehhhh>
    4558:	0f 91       	pop	r16
    455a:	08 95       	ret

0000455c <_ZN13WiFiEspClient5writeEh>:

// if we do override this, the standard println will call the print
// method twice
size_t WiFiEspClient::println(const __FlashStringHelper *ifsh)
{
	printFSH(ifsh, true);
    455c:	cf 93       	push	r28
    455e:	df 93       	push	r29
    4560:	1f 92       	push	r1
    4562:	cd b7       	in	r28, 0x3d	; 61
    4564:	de b7       	in	r29, 0x3e	; 62
    4566:	69 83       	std	Y+1, r22	; 0x01
    4568:	dc 01       	movw	r26, r24
    456a:	ed 91       	ld	r30, X+
    456c:	fc 91       	ld	r31, X
    456e:	02 80       	ldd	r0, Z+2	; 0x02
    4570:	f3 81       	ldd	r31, Z+3	; 0x03
    4572:	e0 2d       	mov	r30, r0
    4574:	41 e0       	ldi	r20, 0x01	; 1
    4576:	50 e0       	ldi	r21, 0x00	; 0
    4578:	be 01       	movw	r22, r28
    457a:	6f 5f       	subi	r22, 0xFF	; 255
    457c:	7f 4f       	sbci	r23, 0xFF	; 255
    457e:	19 95       	eicall
    4580:	0f 90       	pop	r0
    4582:	df 91       	pop	r29
    4584:	cf 91       	pop	r28
    4586:	08 95       	ret

00004588 <_ZN13WiFiEspClient5flushEv>:
    4588:	cf 93       	push	r28
    458a:	df 93       	push	r29
    458c:	ec 01       	movw	r28, r24
    458e:	e8 81       	ld	r30, Y
    4590:	f9 81       	ldd	r31, Y+1	; 0x01
    4592:	00 84       	ldd	r0, Z+8	; 0x08
    4594:	f1 85       	ldd	r31, Z+9	; 0x09
    4596:	e0 2d       	mov	r30, r0
    4598:	ce 01       	movw	r24, r28
    459a:	19 95       	eicall
    459c:	89 2b       	or	r24, r25
    459e:	41 f0       	breq	.+16     	; 0x45b0 <_ZN13WiFiEspClient5flushEv+0x28>
    45a0:	e8 81       	ld	r30, Y
    45a2:	f9 81       	ldd	r31, Y+1	; 0x01
    45a4:	02 84       	ldd	r0, Z+10	; 0x0a
    45a6:	f3 85       	ldd	r31, Z+11	; 0x0b
    45a8:	e0 2d       	mov	r30, r0
    45aa:	ce 01       	movw	r24, r28
    45ac:	19 95       	eicall
    45ae:	ef cf       	rjmp	.-34     	; 0x458e <_ZN13WiFiEspClient5flushEv+0x6>
    45b0:	df 91       	pop	r29
    45b2:	cf 91       	pop	r28
    45b4:	08 95       	ret

000045b6 <_ZN13WiFiEspClientcvbEv>:
    45b6:	21 e0       	ldi	r18, 0x01	; 1
    45b8:	fc 01       	movw	r30, r24
    45ba:	84 85       	ldd	r24, Z+12	; 0x0c
    45bc:	8f 3f       	cpi	r24, 0xFF	; 255
    45be:	09 f4       	brne	.+2      	; 0x45c2 <_ZN13WiFiEspClientcvbEv+0xc>
    45c0:	20 e0       	ldi	r18, 0x00	; 0
    45c2:	82 2f       	mov	r24, r18
    45c4:	08 95       	ret

000045c6 <_ZN13WiFiEspClient9availableEv>:
    45c6:	fc 01       	movw	r30, r24
    45c8:	84 85       	ldd	r24, Z+12	; 0x0c
    45ca:	8f 3f       	cpi	r24, 0xFF	; 255
    45cc:	19 f0       	breq	.+6      	; 0x45d4 <_ZN13WiFiEspClient9availableEv+0xe>
    45ce:	cd d1       	rcall	.+922    	; 0x496a <_ZN6EspDrv9availDataEh>
    45d0:	97 ff       	sbrs	r25, 7
    45d2:	02 c0       	rjmp	.+4      	; 0x45d8 <_ZN13WiFiEspClient9availableEv+0x12>
    45d4:	80 e0       	ldi	r24, 0x00	; 0
    45d6:	90 e0       	ldi	r25, 0x00	; 0
    45d8:	08 95       	ret

000045da <_ZN13WiFiEspClient4readEv>:
    45da:	0f 93       	push	r16
    45dc:	1f 93       	push	r17
    45de:	cf 93       	push	r28
    45e0:	df 93       	push	r29
    45e2:	1f 92       	push	r1
    45e4:	1f 92       	push	r1
    45e6:	cd b7       	in	r28, 0x3d	; 61
    45e8:	de b7       	in	r29, 0x3e	; 62
    45ea:	8c 01       	movw	r16, r24
    45ec:	dc 01       	movw	r26, r24
    45ee:	ed 91       	ld	r30, X+
    45f0:	fc 91       	ld	r31, X
    45f2:	00 84       	ldd	r0, Z+8	; 0x08
    45f4:	f1 85       	ldd	r31, Z+9	; 0x09
    45f6:	e0 2d       	mov	r30, r0
    45f8:	19 95       	eicall
    45fa:	89 2b       	or	r24, r25
    45fc:	c1 f0       	breq	.+48     	; 0x462e <_ZN13WiFiEspClient4readEv+0x54>
    45fe:	19 82       	std	Y+1, r1	; 0x01
    4600:	9e 01       	movw	r18, r28
    4602:	2f 5f       	subi	r18, 0xFF	; 255
    4604:	3f 4f       	sbci	r19, 0xFF	; 255
    4606:	40 e0       	ldi	r20, 0x00	; 0
    4608:	be 01       	movw	r22, r28
    460a:	6e 5f       	subi	r22, 0xFE	; 254
    460c:	7f 4f       	sbci	r23, 0xFF	; 255
    460e:	f8 01       	movw	r30, r16
    4610:	84 85       	ldd	r24, Z+12	; 0x0c
    4612:	26 d3       	rcall	.+1612   	; 0x4c60 <_ZN6EspDrv7getDataEhPhbPb>
    4614:	89 81       	ldd	r24, Y+1	; 0x01
    4616:	88 23       	and	r24, r24
    4618:	39 f0       	breq	.+14     	; 0x4628 <_ZN13WiFiEspClient4readEv+0x4e>
    461a:	d8 01       	movw	r26, r16
    461c:	1c 96       	adiw	r26, 0x0c	; 12
    461e:	8c 91       	ld	r24, X
    4620:	87 df       	rcall	.-242    	; 0x4530 <_ZN12WiFiEspClass13releaseSocketEh>
    4622:	8f ef       	ldi	r24, 0xFF	; 255
    4624:	f8 01       	movw	r30, r16
    4626:	84 87       	std	Z+12, r24	; 0x0c
    4628:	8a 81       	ldd	r24, Y+2	; 0x02
    462a:	90 e0       	ldi	r25, 0x00	; 0
    462c:	02 c0       	rjmp	.+4      	; 0x4632 <_ZN13WiFiEspClient4readEv+0x58>
    462e:	8f ef       	ldi	r24, 0xFF	; 255
    4630:	9f ef       	ldi	r25, 0xFF	; 255
    4632:	0f 90       	pop	r0
    4634:	0f 90       	pop	r0
    4636:	df 91       	pop	r29
    4638:	cf 91       	pop	r28
    463a:	1f 91       	pop	r17
    463c:	0f 91       	pop	r16
    463e:	08 95       	ret

00004640 <_ZN13WiFiEspClient4peekEv>:
    4640:	0f 93       	push	r16
    4642:	1f 93       	push	r17
    4644:	cf 93       	push	r28
    4646:	df 93       	push	r29
    4648:	1f 92       	push	r1
    464a:	1f 92       	push	r1
    464c:	cd b7       	in	r28, 0x3d	; 61
    464e:	de b7       	in	r29, 0x3e	; 62
    4650:	8c 01       	movw	r16, r24
    4652:	dc 01       	movw	r26, r24
    4654:	ed 91       	ld	r30, X+
    4656:	fc 91       	ld	r31, X
    4658:	00 84       	ldd	r0, Z+8	; 0x08
    465a:	f1 85       	ldd	r31, Z+9	; 0x09
    465c:	e0 2d       	mov	r30, r0
    465e:	19 95       	eicall
    4660:	89 2b       	or	r24, r25
    4662:	c1 f0       	breq	.+48     	; 0x4694 <_ZN13WiFiEspClient4peekEv+0x54>
    4664:	19 82       	std	Y+1, r1	; 0x01
    4666:	9e 01       	movw	r18, r28
    4668:	2f 5f       	subi	r18, 0xFF	; 255
    466a:	3f 4f       	sbci	r19, 0xFF	; 255
    466c:	41 e0       	ldi	r20, 0x01	; 1
    466e:	be 01       	movw	r22, r28
    4670:	6e 5f       	subi	r22, 0xFE	; 254
    4672:	7f 4f       	sbci	r23, 0xFF	; 255
    4674:	f8 01       	movw	r30, r16
    4676:	84 85       	ldd	r24, Z+12	; 0x0c
    4678:	f3 d2       	rcall	.+1510   	; 0x4c60 <_ZN6EspDrv7getDataEhPhbPb>
    467a:	89 81       	ldd	r24, Y+1	; 0x01
    467c:	88 23       	and	r24, r24
    467e:	39 f0       	breq	.+14     	; 0x468e <_ZN13WiFiEspClient4peekEv+0x4e>
    4680:	d8 01       	movw	r26, r16
    4682:	1c 96       	adiw	r26, 0x0c	; 12
    4684:	8c 91       	ld	r24, X
    4686:	54 df       	rcall	.-344    	; 0x4530 <_ZN12WiFiEspClass13releaseSocketEh>
    4688:	8f ef       	ldi	r24, 0xFF	; 255
    468a:	f8 01       	movw	r30, r16
    468c:	84 87       	std	Z+12, r24	; 0x0c
    468e:	8a 81       	ldd	r24, Y+2	; 0x02
    4690:	90 e0       	ldi	r25, 0x00	; 0
    4692:	02 c0       	rjmp	.+4      	; 0x4698 <_ZN13WiFiEspClient4peekEv+0x58>
    4694:	8f ef       	ldi	r24, 0xFF	; 255
    4696:	9f ef       	ldi	r25, 0xFF	; 255
    4698:	0f 90       	pop	r0
    469a:	0f 90       	pop	r0
    469c:	df 91       	pop	r29
    469e:	cf 91       	pop	r28
    46a0:	1f 91       	pop	r17
    46a2:	0f 91       	pop	r16
    46a4:	08 95       	ret

000046a6 <_ZN13WiFiEspClient4readEPhj>:
    46a6:	ef 92       	push	r14
    46a8:	ff 92       	push	r15
    46aa:	0f 93       	push	r16
    46ac:	1f 93       	push	r17
    46ae:	cf 93       	push	r28
    46b0:	df 93       	push	r29
    46b2:	ec 01       	movw	r28, r24
    46b4:	8b 01       	movw	r16, r22
    46b6:	7a 01       	movw	r14, r20
    46b8:	e8 81       	ld	r30, Y
    46ba:	f9 81       	ldd	r31, Y+1	; 0x01
    46bc:	00 84       	ldd	r0, Z+8	; 0x08
    46be:	f1 85       	ldd	r31, Z+9	; 0x09
    46c0:	e0 2d       	mov	r30, r0
    46c2:	19 95       	eicall
    46c4:	89 2b       	or	r24, r25
    46c6:	51 f0       	breq	.+20     	; 0x46dc <_ZN13WiFiEspClient4readEPhj+0x36>
    46c8:	a7 01       	movw	r20, r14
    46ca:	b8 01       	movw	r22, r16
    46cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    46ce:	df 91       	pop	r29
    46d0:	cf 91       	pop	r28
    46d2:	1f 91       	pop	r17
    46d4:	0f 91       	pop	r16
    46d6:	ff 90       	pop	r15
    46d8:	ef 90       	pop	r14
    46da:	5d c7       	rjmp	.+3770   	; 0x5596 <_ZN6EspDrv10getDataBufEhPhj>
    46dc:	8f ef       	ldi	r24, 0xFF	; 255
    46de:	9f ef       	ldi	r25, 0xFF	; 255
    46e0:	df 91       	pop	r29
    46e2:	cf 91       	pop	r28
    46e4:	1f 91       	pop	r17
    46e6:	0f 91       	pop	r16
    46e8:	ff 90       	pop	r15
    46ea:	ef 90       	pop	r14
    46ec:	08 95       	ret

000046ee <_ZN13WiFiEspClient5writeEPKhj>:
    46ee:	0f 93       	push	r16
    46f0:	1f 93       	push	r17
    46f2:	cf 93       	push	r28
    46f4:	df 93       	push	r29
    46f6:	ec 01       	movw	r28, r24
    46f8:	8c 85       	ldd	r24, Y+12	; 0x0c
    46fa:	84 30       	cpi	r24, 0x04	; 4
    46fc:	18 f4       	brcc	.+6      	; 0x4704 <_ZN13WiFiEspClient5writeEPKhj+0x16>
    46fe:	41 15       	cp	r20, r1
    4700:	51 05       	cpc	r21, r1
    4702:	29 f4       	brne	.+10     	; 0x470e <_ZN13WiFiEspClient5writeEPKhj+0x20>
    4704:	81 e0       	ldi	r24, 0x01	; 1
    4706:	90 e0       	ldi	r25, 0x00	; 0
    4708:	9b 83       	std	Y+3, r25	; 0x03
    470a:	8a 83       	std	Y+2, r24	; 0x02
    470c:	2e c0       	rjmp	.+92     	; 0x476a <_ZN13WiFiEspClient5writeEPKhj+0x7c>
    470e:	8a 01       	movw	r16, r20
    4710:	82 d3       	rcall	.+1796   	; 0x4e16 <_ZN6EspDrv8sendDataEhPKhj>
    4712:	81 11       	cpse	r24, r1
    4714:	2d c0       	rjmp	.+90     	; 0x4770 <_ZN13WiFiEspClient5writeEPKhj+0x82>
    4716:	81 e0       	ldi	r24, 0x01	; 1
    4718:	90 e0       	ldi	r25, 0x00	; 0
    471a:	9b 83       	std	Y+3, r25	; 0x03
    471c:	8a 83       	std	Y+2, r24	; 0x02
    471e:	67 e5       	ldi	r22, 0x57	; 87
    4720:	74 e0       	ldi	r23, 0x04	; 4
    4722:	86 ef       	ldi	r24, 0xF6	; 246
    4724:	94 e0       	ldi	r25, 0x04	; 4
    4726:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    472a:	6c ee       	ldi	r22, 0xEC	; 236
    472c:	75 e0       	ldi	r23, 0x05	; 5
    472e:	86 ef       	ldi	r24, 0xF6	; 246
    4730:	94 e0       	ldi	r25, 0x04	; 4
    4732:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    4736:	6f ec       	ldi	r22, 0xCF	; 207
    4738:	72 e0       	ldi	r23, 0x02	; 2
    473a:	86 ef       	ldi	r24, 0xF6	; 246
    473c:	94 e0       	ldi	r25, 0x04	; 4
    473e:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4742:	4a e0       	ldi	r20, 0x0A	; 10
    4744:	50 e0       	ldi	r21, 0x00	; 0
    4746:	6c 85       	ldd	r22, Y+12	; 0x0c
    4748:	86 ef       	ldi	r24, 0xF6	; 246
    474a:	94 e0       	ldi	r25, 0x04	; 4
    474c:	0e 94 18 13 	call	0x2630	; 0x2630 <_ZN5Print7printlnEhi>
    4750:	60 ea       	ldi	r22, 0xA0	; 160
    4752:	7f e0       	ldi	r23, 0x0F	; 15
    4754:	80 e0       	ldi	r24, 0x00	; 0
    4756:	90 e0       	ldi	r25, 0x00	; 0
    4758:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    475c:	e8 81       	ld	r30, Y
    475e:	f9 81       	ldd	r31, Y+1	; 0x01
    4760:	04 88       	ldd	r0, Z+20	; 0x14
    4762:	f5 89       	ldd	r31, Z+21	; 0x15
    4764:	e0 2d       	mov	r30, r0
    4766:	ce 01       	movw	r24, r28
    4768:	19 95       	eicall
    476a:	80 e0       	ldi	r24, 0x00	; 0
    476c:	90 e0       	ldi	r25, 0x00	; 0
    476e:	01 c0       	rjmp	.+2      	; 0x4772 <_ZN13WiFiEspClient5writeEPKhj+0x84>
    4770:	c8 01       	movw	r24, r16
    4772:	df 91       	pop	r29
    4774:	cf 91       	pop	r28
    4776:	1f 91       	pop	r17
    4778:	0f 91       	pop	r16
    477a:	08 95       	ret

0000477c <_ZN13WiFiEspClient4stopEv>:
    477c:	cf 93       	push	r28
    477e:	df 93       	push	r29
    4780:	fc 01       	movw	r30, r24
    4782:	24 85       	ldd	r18, Z+12	; 0x0c
    4784:	2f 3f       	cpi	r18, 0xFF	; 255
    4786:	01 f1       	breq	.+64     	; 0x47c8 <_ZN13WiFiEspClient4stopEv+0x4c>
    4788:	ec 01       	movw	r28, r24
    478a:	67 e5       	ldi	r22, 0x57	; 87
    478c:	74 e0       	ldi	r23, 0x04	; 4
    478e:	86 ef       	ldi	r24, 0xF6	; 246
    4790:	94 e0       	ldi	r25, 0x04	; 4
    4792:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4796:	6d ed       	ldi	r22, 0xDD	; 221
    4798:	75 e0       	ldi	r23, 0x05	; 5
    479a:	86 ef       	ldi	r24, 0xF6	; 246
    479c:	94 e0       	ldi	r25, 0x04	; 4
    479e:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    47a2:	6f ec       	ldi	r22, 0xCF	; 207
    47a4:	72 e0       	ldi	r23, 0x02	; 2
    47a6:	86 ef       	ldi	r24, 0xF6	; 246
    47a8:	94 e0       	ldi	r25, 0x04	; 4
    47aa:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    47ae:	4a e0       	ldi	r20, 0x0A	; 10
    47b0:	50 e0       	ldi	r21, 0x00	; 0
    47b2:	6c 85       	ldd	r22, Y+12	; 0x0c
    47b4:	86 ef       	ldi	r24, 0xF6	; 246
    47b6:	94 e0       	ldi	r25, 0x04	; 4
    47b8:	0e 94 18 13 	call	0x2630	; 0x2630 <_ZN5Print7printlnEhi>
    47bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    47be:	58 d6       	rcall	.+3248   	; 0x5470 <_ZN6EspDrv10stopClientEh>
    47c0:	8c 85       	ldd	r24, Y+12	; 0x0c
    47c2:	b6 de       	rcall	.-660    	; 0x4530 <_ZN12WiFiEspClass13releaseSocketEh>
    47c4:	8f ef       	ldi	r24, 0xFF	; 255
    47c6:	8c 87       	std	Y+12, r24	; 0x0c
    47c8:	df 91       	pop	r29
    47ca:	cf 91       	pop	r28
    47cc:	08 95       	ret

000047ce <_ZN13WiFiEspClientC1Ev>:
    47ce:	fc 01       	movw	r30, r24
    47d0:	13 82       	std	Z+3, r1	; 0x03
    47d2:	12 82       	std	Z+2, r1	; 0x02
    47d4:	88 ee       	ldi	r24, 0xE8	; 232
    47d6:	93 e0       	ldi	r25, 0x03	; 3
    47d8:	a0 e0       	ldi	r26, 0x00	; 0
    47da:	b0 e0       	ldi	r27, 0x00	; 0
    47dc:	84 83       	std	Z+4, r24	; 0x04
    47de:	95 83       	std	Z+5, r25	; 0x05
    47e0:	a6 83       	std	Z+6, r26	; 0x06
    47e2:	b7 83       	std	Z+7, r27	; 0x07
    47e4:	86 e6       	ldi	r24, 0x66	; 102
    47e6:	94 e0       	ldi	r25, 0x04	; 4
    47e8:	91 83       	std	Z+1, r25	; 0x01
    47ea:	80 83       	st	Z, r24
    47ec:	8f ef       	ldi	r24, 0xFF	; 255
    47ee:	84 87       	std	Z+12, r24	; 0x0c
    47f0:	08 95       	ret

000047f2 <_ZN13WiFiEspClient7connectEPKcjh>:
    47f2:	df 92       	push	r13
    47f4:	ef 92       	push	r14
    47f6:	ff 92       	push	r15
    47f8:	0f 93       	push	r16
    47fa:	1f 93       	push	r17
    47fc:	cf 93       	push	r28
    47fe:	df 93       	push	r29
    4800:	ec 01       	movw	r28, r24
    4802:	8b 01       	movw	r16, r22
    4804:	7a 01       	movw	r14, r20
    4806:	d2 2e       	mov	r13, r18
    4808:	67 e5       	ldi	r22, 0x57	; 87
    480a:	74 e0       	ldi	r23, 0x04	; 4
    480c:	86 ef       	ldi	r24, 0xF6	; 246
    480e:	94 e0       	ldi	r25, 0x04	; 4
    4810:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4814:	6a e1       	ldi	r22, 0x1A	; 26
    4816:	76 e0       	ldi	r23, 0x06	; 6
    4818:	86 ef       	ldi	r24, 0xF6	; 246
    481a:	94 e0       	ldi	r25, 0x04	; 4
    481c:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    4820:	6f ec       	ldi	r22, 0xCF	; 207
    4822:	72 e0       	ldi	r23, 0x02	; 2
    4824:	86 ef       	ldi	r24, 0xF6	; 246
    4826:	94 e0       	ldi	r25, 0x04	; 4
    4828:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    482c:	b8 01       	movw	r22, r16
    482e:	86 ef       	ldi	r24, 0xF6	; 246
    4830:	94 e0       	ldi	r25, 0x04	; 4
    4832:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    4836:	66 de       	rcall	.-820    	; 0x4504 <_ZN12WiFiEspClass13getFreeSocketEv>
    4838:	8c 87       	std	Y+12, r24	; 0x0c
    483a:	8f 3f       	cpi	r24, 0xFF	; 255
    483c:	61 f0       	breq	.+24     	; 0x4856 <_ZN13WiFiEspClient7connectEPKcjh+0x64>
    483e:	2d 2d       	mov	r18, r13
    4840:	48 2f       	mov	r20, r24
    4842:	b7 01       	movw	r22, r14
    4844:	c8 01       	movw	r24, r16
    4846:	ab d5       	rcall	.+2902   	; 0x539e <_ZN6EspDrv11startClientEPKcjhh>
    4848:	88 23       	and	r24, r24
    484a:	89 f0       	breq	.+34     	; 0x486e <_ZN13WiFiEspClient7connectEPKcjh+0x7c>
    484c:	8c 85       	ldd	r24, Y+12	; 0x0c
    484e:	67 de       	rcall	.-818    	; 0x451e <_ZN12WiFiEspClass14allocateSocketEh>
    4850:	81 e0       	ldi	r24, 0x01	; 1
    4852:	90 e0       	ldi	r25, 0x00	; 0
    4854:	0e c0       	rjmp	.+28     	; 0x4872 <_ZN13WiFiEspClient7connectEPKcjh+0x80>
    4856:	67 e5       	ldi	r22, 0x57	; 87
    4858:	74 e0       	ldi	r23, 0x04	; 4
    485a:	86 ef       	ldi	r24, 0xF6	; 246
    485c:	94 e0       	ldi	r25, 0x04	; 4
    485e:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4862:	66 e0       	ldi	r22, 0x06	; 6
    4864:	76 e0       	ldi	r23, 0x06	; 6
    4866:	86 ef       	ldi	r24, 0xF6	; 246
    4868:	94 e0       	ldi	r25, 0x04	; 4
    486a:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    486e:	80 e0       	ldi	r24, 0x00	; 0
    4870:	90 e0       	ldi	r25, 0x00	; 0
    4872:	df 91       	pop	r29
    4874:	cf 91       	pop	r28
    4876:	1f 91       	pop	r17
    4878:	0f 91       	pop	r16
    487a:	ff 90       	pop	r15
    487c:	ef 90       	pop	r14
    487e:	df 90       	pop	r13
    4880:	08 95       	ret

00004882 <_ZN13WiFiEspClient7connectEPKcj>:
    4882:	20 e0       	ldi	r18, 0x00	; 0
    4884:	b6 cf       	rjmp	.-148    	; 0x47f2 <_ZN13WiFiEspClient7connectEPKcjh>

00004886 <_ZN13WiFiEspClient7connectE9IPAddressj>:
    4886:	cf 92       	push	r12
    4888:	df 92       	push	r13
    488a:	ef 92       	push	r14
    488c:	ff 92       	push	r15
    488e:	0f 93       	push	r16
    4890:	1f 93       	push	r17
    4892:	cf 93       	push	r28
    4894:	df 93       	push	r29
    4896:	cd b7       	in	r28, 0x3d	; 61
    4898:	de b7       	in	r29, 0x3e	; 62
    489a:	60 97       	sbiw	r28, 0x10	; 16
    489c:	0f b6       	in	r0, 0x3f	; 63
    489e:	f8 94       	cli
    48a0:	de bf       	out	0x3e, r29	; 62
    48a2:	0f be       	out	0x3f, r0	; 63
    48a4:	cd bf       	out	0x3d, r28	; 61
    48a6:	7c 01       	movw	r14, r24
    48a8:	fb 01       	movw	r30, r22
    48aa:	6a 01       	movw	r12, r20
    48ac:	85 81       	ldd	r24, Z+5	; 0x05
    48ae:	1f 92       	push	r1
    48b0:	8f 93       	push	r24
    48b2:	84 81       	ldd	r24, Z+4	; 0x04
    48b4:	1f 92       	push	r1
    48b6:	8f 93       	push	r24
    48b8:	83 81       	ldd	r24, Z+3	; 0x03
    48ba:	1f 92       	push	r1
    48bc:	8f 93       	push	r24
    48be:	82 81       	ldd	r24, Z+2	; 0x02
    48c0:	1f 92       	push	r1
    48c2:	8f 93       	push	r24
    48c4:	88 e2       	ldi	r24, 0x28	; 40
    48c6:	96 e0       	ldi	r25, 0x06	; 6
    48c8:	9f 93       	push	r25
    48ca:	8f 93       	push	r24
    48cc:	8e 01       	movw	r16, r28
    48ce:	0f 5f       	subi	r16, 0xFF	; 255
    48d0:	1f 4f       	sbci	r17, 0xFF	; 255
    48d2:	1f 93       	push	r17
    48d4:	0f 93       	push	r16
    48d6:	0e 94 4e 31 	call	0x629c	; 0x629c <sprintf_P>
    48da:	20 e0       	ldi	r18, 0x00	; 0
    48dc:	a6 01       	movw	r20, r12
    48de:	b8 01       	movw	r22, r16
    48e0:	c7 01       	movw	r24, r14
    48e2:	87 df       	rcall	.-242    	; 0x47f2 <_ZN13WiFiEspClient7connectEPKcjh>
    48e4:	0f b6       	in	r0, 0x3f	; 63
    48e6:	f8 94       	cli
    48e8:	de bf       	out	0x3e, r29	; 62
    48ea:	0f be       	out	0x3f, r0	; 63
    48ec:	cd bf       	out	0x3d, r28	; 61
    48ee:	60 96       	adiw	r28, 0x10	; 16
    48f0:	0f b6       	in	r0, 0x3f	; 63
    48f2:	f8 94       	cli
    48f4:	de bf       	out	0x3e, r29	; 62
    48f6:	0f be       	out	0x3f, r0	; 63
    48f8:	cd bf       	out	0x3d, r28	; 61
    48fa:	df 91       	pop	r29
    48fc:	cf 91       	pop	r28
    48fe:	1f 91       	pop	r17
    4900:	0f 91       	pop	r16
    4902:	ff 90       	pop	r15
    4904:	ef 90       	pop	r14
    4906:	df 90       	pop	r13
    4908:	cf 90       	pop	r12
    490a:	08 95       	ret

0000490c <_ZN13WiFiEspClient6statusEv>:
    490c:	1f 93       	push	r17
    490e:	cf 93       	push	r28
    4910:	df 93       	push	r29
    4912:	ec 01       	movw	r28, r24
    4914:	8c 85       	ldd	r24, Y+12	; 0x0c
    4916:	8f 3f       	cpi	r24, 0xFF	; 255
    4918:	79 f0       	breq	.+30     	; 0x4938 <_ZN13WiFiEspClient6statusEv+0x2c>
    491a:	27 d0       	rcall	.+78     	; 0x496a <_ZN6EspDrv9availDataEh>
    491c:	89 2b       	or	r24, r25
    491e:	11 f0       	breq	.+4      	; 0x4924 <_ZN13WiFiEspClient6statusEv+0x18>
    4920:	14 e0       	ldi	r17, 0x04	; 4
    4922:	0b c0       	rjmp	.+22     	; 0x493a <_ZN13WiFiEspClient6statusEv+0x2e>
    4924:	8c 85       	ldd	r24, Y+12	; 0x0c
    4926:	68 d3       	rcall	.+1744   	; 0x4ff8 <_ZN6EspDrv14getClientStateEh>
    4928:	18 2f       	mov	r17, r24
    492a:	81 11       	cpse	r24, r1
    492c:	f9 cf       	rjmp	.-14     	; 0x4920 <_ZN13WiFiEspClient6statusEv+0x14>
    492e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4930:	ff dd       	rcall	.-1026   	; 0x4530 <_ZN12WiFiEspClass13releaseSocketEh>
    4932:	8f ef       	ldi	r24, 0xFF	; 255
    4934:	8c 87       	std	Y+12, r24	; 0x0c
    4936:	01 c0       	rjmp	.+2      	; 0x493a <_ZN13WiFiEspClient6statusEv+0x2e>
    4938:	10 e0       	ldi	r17, 0x00	; 0
    493a:	81 2f       	mov	r24, r17
    493c:	df 91       	pop	r29
    493e:	cf 91       	pop	r28
    4940:	1f 91       	pop	r17
    4942:	08 95       	ret

00004944 <_ZN13WiFiEspClient9connectedEv>:
    4944:	e3 df       	rcall	.-58     	; 0x490c <_ZN13WiFiEspClient6statusEv>
    4946:	91 e0       	ldi	r25, 0x01	; 1
    4948:	84 30       	cpi	r24, 0x04	; 4
    494a:	09 f0       	breq	.+2      	; 0x494e <_ZN13WiFiEspClient9connectedEv+0xa>
    494c:	90 e0       	ldi	r25, 0x00	; 0
    494e:	89 2f       	mov	r24, r25
    4950:	08 95       	ret

00004952 <_GLOBAL__sub_I__ZN13WiFiEspClientC2Ev>:
		stop();
		return 0;
	}

	return size;
}
    4952:	0f 93       	push	r16
    4954:	00 e0       	ldi	r16, 0x00	; 0
    4956:	20 e0       	ldi	r18, 0x00	; 0
    4958:	40 e0       	ldi	r20, 0x00	; 0
    495a:	60 e0       	ldi	r22, 0x00	; 0
    495c:	87 e4       	ldi	r24, 0x47	; 71
    495e:	96 e0       	ldi	r25, 0x06	; 6
    4960:	0e 94 f7 11 	call	0x23ee	; 0x23ee <_ZN9IPAddressC1Ehhhh>
    4964:	0f 91       	pop	r16
    4966:	08 95       	ret

00004968 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    4968:	08 95       	ret

0000496a <_ZN6EspDrv9availDataEh>:
	LOGDEBUG1(F("> startServer"), port);

	int ret = sendCmd(F("AT+CIPSERVER=%d,%d"), 1000, sock, port);

	return ret==TAG_OK;
}
    496a:	cf 93       	push	r28
    496c:	40 91 54 06 	lds	r20, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4970:	50 91 55 06 	lds	r21, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4974:	60 91 56 06 	lds	r22, 0x0656	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4978:	70 91 57 06 	lds	r23, 0x0657	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    497c:	14 16       	cp	r1, r20
    497e:	15 06       	cpc	r1, r21
    4980:	16 06       	cpc	r1, r22
    4982:	17 06       	cpc	r1, r23
    4984:	44 f4       	brge	.+16     	; 0x4996 <_ZN6EspDrv9availDataEh+0x2c>
    4986:	90 91 53 06 	lds	r25, 0x0653	; 0x800653 <_ZN6EspDrv7_connIdE>
    498a:	98 17       	cp	r25, r24
    498c:	11 f0       	breq	.+4      	; 0x4992 <_ZN6EspDrv9availDataEh+0x28>
    498e:	91 11       	cpse	r25, r1
    4990:	02 c0       	rjmp	.+4      	; 0x4996 <_ZN6EspDrv9availDataEh+0x2c>
    4992:	ca 01       	movw	r24, r20
    4994:	c4 c0       	rjmp	.+392    	; 0x4b1e <_ZN6EspDrv9availDataEh+0x1b4>
    4996:	c8 2f       	mov	r28, r24
    4998:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    499c:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    49a0:	dc 01       	movw	r26, r24
    49a2:	ed 91       	ld	r30, X+
    49a4:	fc 91       	ld	r31, X
    49a6:	00 84       	ldd	r0, Z+8	; 0x08
    49a8:	f1 85       	ldd	r31, Z+9	; 0x09
    49aa:	e0 2d       	mov	r30, r0
    49ac:	19 95       	eicall
    49ae:	89 2b       	or	r24, r25
    49b0:	19 f4       	brne	.+6      	; 0x49b8 <_ZN6EspDrv9availDataEh+0x4e>
    49b2:	80 e0       	ldi	r24, 0x00	; 0
    49b4:	90 e0       	ldi	r25, 0x00	; 0
    49b6:	b3 c0       	rjmp	.+358    	; 0x4b1e <_ZN6EspDrv9availDataEh+0x1b4>
    49b8:	60 e8       	ldi	r22, 0x80	; 128
    49ba:	74 e0       	ldi	r23, 0x04	; 4
    49bc:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    49c0:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    49c4:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <_ZN6Stream4findEPc>
    49c8:	88 23       	and	r24, r24
    49ca:	99 f3       	breq	.-26     	; 0x49b2 <_ZN6EspDrv9availDataEh+0x48>
    49cc:	41 e0       	ldi	r20, 0x01	; 1
    49ce:	60 e0       	ldi	r22, 0x00	; 0
    49d0:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    49d4:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    49d8:	65 d7       	rcall	.+3786   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    49da:	60 93 53 06 	sts	0x0653, r22	; 0x800653 <_ZN6EspDrv7_connIdE>
    49de:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    49e2:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    49e6:	dc 01       	movw	r26, r24
    49e8:	ed 91       	ld	r30, X+
    49ea:	fc 91       	ld	r31, X
    49ec:	02 84       	ldd	r0, Z+10	; 0x0a
    49ee:	f3 85       	ldd	r31, Z+11	; 0x0b
    49f0:	e0 2d       	mov	r30, r0
    49f2:	19 95       	eicall
    49f4:	41 e0       	ldi	r20, 0x01	; 1
    49f6:	60 e0       	ldi	r22, 0x00	; 0
    49f8:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    49fc:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a00:	51 d7       	rcall	.+3746   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    4a02:	60 93 54 06 	sts	0x0654, r22	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4a06:	70 93 55 06 	sts	0x0655, r23	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4a0a:	80 93 56 06 	sts	0x0656, r24	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4a0e:	90 93 57 06 	sts	0x0657, r25	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    4a12:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a16:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a1a:	dc 01       	movw	r26, r24
    4a1c:	ed 91       	ld	r30, X+
    4a1e:	fc 91       	ld	r31, X
    4a20:	02 84       	ldd	r0, Z+10	; 0x0a
    4a22:	f3 85       	ldd	r31, Z+11	; 0x0b
    4a24:	e0 2d       	mov	r30, r0
    4a26:	19 95       	eicall
    4a28:	41 e0       	ldi	r20, 0x01	; 1
    4a2a:	60 e0       	ldi	r22, 0x00	; 0
    4a2c:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a30:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a34:	37 d7       	rcall	.+3694   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    4a36:	60 93 4d 06 	sts	0x064D, r22	; 0x80064d <_ZN6EspDrv9_remoteIpE>
    4a3a:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a3e:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a42:	dc 01       	movw	r26, r24
    4a44:	ed 91       	ld	r30, X+
    4a46:	fc 91       	ld	r31, X
    4a48:	02 84       	ldd	r0, Z+10	; 0x0a
    4a4a:	f3 85       	ldd	r31, Z+11	; 0x0b
    4a4c:	e0 2d       	mov	r30, r0
    4a4e:	19 95       	eicall
    4a50:	41 e0       	ldi	r20, 0x01	; 1
    4a52:	60 e0       	ldi	r22, 0x00	; 0
    4a54:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a58:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a5c:	23 d7       	rcall	.+3654   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    4a5e:	60 93 4e 06 	sts	0x064E, r22	; 0x80064e <_ZN6EspDrv9_remoteIpE+0x1>
    4a62:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a66:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a6a:	dc 01       	movw	r26, r24
    4a6c:	ed 91       	ld	r30, X+
    4a6e:	fc 91       	ld	r31, X
    4a70:	02 84       	ldd	r0, Z+10	; 0x0a
    4a72:	f3 85       	ldd	r31, Z+11	; 0x0b
    4a74:	e0 2d       	mov	r30, r0
    4a76:	19 95       	eicall
    4a78:	41 e0       	ldi	r20, 0x01	; 1
    4a7a:	60 e0       	ldi	r22, 0x00	; 0
    4a7c:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a80:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a84:	0f d7       	rcall	.+3614   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    4a86:	60 93 4f 06 	sts	0x064F, r22	; 0x80064f <_ZN6EspDrv9_remoteIpE+0x2>
    4a8a:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4a8e:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4a92:	dc 01       	movw	r26, r24
    4a94:	ed 91       	ld	r30, X+
    4a96:	fc 91       	ld	r31, X
    4a98:	02 84       	ldd	r0, Z+10	; 0x0a
    4a9a:	f3 85       	ldd	r31, Z+11	; 0x0b
    4a9c:	e0 2d       	mov	r30, r0
    4a9e:	19 95       	eicall
    4aa0:	41 e0       	ldi	r20, 0x01	; 1
    4aa2:	60 e0       	ldi	r22, 0x00	; 0
    4aa4:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4aa8:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4aac:	fb d6       	rcall	.+3574   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    4aae:	60 93 50 06 	sts	0x0650, r22	; 0x800650 <_ZN6EspDrv9_remoteIpE+0x3>
    4ab2:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4ab6:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4aba:	dc 01       	movw	r26, r24
    4abc:	ed 91       	ld	r30, X+
    4abe:	fc 91       	ld	r31, X
    4ac0:	02 84       	ldd	r0, Z+10	; 0x0a
    4ac2:	f3 85       	ldd	r31, Z+11	; 0x0b
    4ac4:	e0 2d       	mov	r30, r0
    4ac6:	19 95       	eicall
    4ac8:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4acc:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4ad0:	dc 01       	movw	r26, r24
    4ad2:	ed 91       	ld	r30, X+
    4ad4:	fc 91       	ld	r31, X
    4ad6:	02 84       	ldd	r0, Z+10	; 0x0a
    4ad8:	f3 85       	ldd	r31, Z+11	; 0x0b
    4ada:	e0 2d       	mov	r30, r0
    4adc:	19 95       	eicall
    4ade:	41 e0       	ldi	r20, 0x01	; 1
    4ae0:	60 e0       	ldi	r22, 0x00	; 0
    4ae2:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4ae6:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4aea:	dc d6       	rcall	.+3512   	; 0x58a4 <_ZN6Stream8parseIntE13LookaheadModec>
    4aec:	70 93 52 06 	sts	0x0652, r23	; 0x800652 <_ZN6EspDrv11_remotePortE+0x1>
    4af0:	60 93 51 06 	sts	0x0651, r22	; 0x800651 <_ZN6EspDrv11_remotePortE>
    4af4:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4af8:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4afc:	dc 01       	movw	r26, r24
    4afe:	ed 91       	ld	r30, X+
    4b00:	fc 91       	ld	r31, X
    4b02:	02 84       	ldd	r0, Z+10	; 0x0a
    4b04:	f3 85       	ldd	r31, Z+11	; 0x0b
    4b06:	e0 2d       	mov	r30, r0
    4b08:	19 95       	eicall
    4b0a:	80 91 53 06 	lds	r24, 0x0653	; 0x800653 <_ZN6EspDrv7_connIdE>
    4b0e:	c8 17       	cp	r28, r24
    4b10:	11 f0       	breq	.+4      	; 0x4b16 <_ZN6EspDrv9availDataEh+0x1ac>
    4b12:	c1 11       	cpse	r28, r1
    4b14:	4e cf       	rjmp	.-356    	; 0x49b2 <_ZN6EspDrv9availDataEh+0x48>
    4b16:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4b1a:	90 91 55 06 	lds	r25, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4b1e:	cf 91       	pop	r28
    4b20:	08 95       	ret

00004b22 <_ZN6EspDrv9readUntilEiPKcb>:
    4b22:	3f 92       	push	r3
    4b24:	4f 92       	push	r4
    4b26:	5f 92       	push	r5
    4b28:	6f 92       	push	r6
    4b2a:	7f 92       	push	r7
    4b2c:	8f 92       	push	r8
    4b2e:	9f 92       	push	r9
    4b30:	af 92       	push	r10
    4b32:	bf 92       	push	r11
    4b34:	cf 92       	push	r12
    4b36:	df 92       	push	r13
    4b38:	ef 92       	push	r14
    4b3a:	ff 92       	push	r15
    4b3c:	0f 93       	push	r16
    4b3e:	1f 93       	push	r17
    4b40:	cf 93       	push	r28
    4b42:	df 93       	push	r29
    4b44:	6c 01       	movw	r12, r24
    4b46:	2b 01       	movw	r4, r22
    4b48:	34 2e       	mov	r3, r20
    4b4a:	8e e5       	ldi	r24, 0x5E	; 94
    4b4c:	96 e0       	ldi	r25, 0x06	; 6
    4b4e:	85 d5       	rcall	.+2826   	; 0x565a <_ZN10RingBuffer5resetEv>
    4b50:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    4b54:	4b 01       	movw	r8, r22
    4b56:	5c 01       	movw	r10, r24
    4b58:	66 24       	eor	r6, r6
    4b5a:	6a 94       	dec	r6
    4b5c:	76 2c       	mov	r7, r6
    4b5e:	0d 2c       	mov	r0, r13
    4b60:	00 0c       	add	r0, r0
    4b62:	ee 08       	sbc	r14, r14
    4b64:	ff 08       	sbc	r15, r15
    4b66:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    4b6a:	dc 01       	movw	r26, r24
    4b6c:	cb 01       	movw	r24, r22
    4b6e:	88 19       	sub	r24, r8
    4b70:	99 09       	sbc	r25, r9
    4b72:	aa 09       	sbc	r26, r10
    4b74:	bb 09       	sbc	r27, r11
    4b76:	8c 15       	cp	r24, r12
    4b78:	9d 05       	cpc	r25, r13
    4b7a:	ae 05       	cpc	r26, r14
    4b7c:	bf 05       	cpc	r27, r15
    4b7e:	08 f0       	brcs	.+2      	; 0x4b82 <_ZN6EspDrv9readUntilEiPKcb+0x60>
    4b80:	43 c0       	rjmp	.+134    	; 0x4c08 <_ZN6EspDrv9readUntilEiPKcb+0xe6>
    4b82:	8f ef       	ldi	r24, 0xFF	; 255
    4b84:	68 16       	cp	r6, r24
    4b86:	78 06       	cpc	r7, r24
    4b88:	09 f0       	breq	.+2      	; 0x4b8c <_ZN6EspDrv9readUntilEiPKcb+0x6a>
    4b8a:	3e c0       	rjmp	.+124    	; 0x4c08 <_ZN6EspDrv9readUntilEiPKcb+0xe6>
    4b8c:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4b90:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4b94:	dc 01       	movw	r26, r24
    4b96:	ed 91       	ld	r30, X+
    4b98:	fc 91       	ld	r31, X
    4b9a:	00 84       	ldd	r0, Z+8	; 0x08
    4b9c:	f1 85       	ldd	r31, Z+9	; 0x09
    4b9e:	e0 2d       	mov	r30, r0
    4ba0:	19 95       	eicall
    4ba2:	89 2b       	or	r24, r25
    4ba4:	01 f3       	breq	.-64     	; 0x4b66 <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4ba6:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4baa:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4bae:	dc 01       	movw	r26, r24
    4bb0:	ed 91       	ld	r30, X+
    4bb2:	fc 91       	ld	r31, X
    4bb4:	02 84       	ldd	r0, Z+10	; 0x0a
    4bb6:	f3 85       	ldd	r31, Z+11	; 0x0b
    4bb8:	e0 2d       	mov	r30, r0
    4bba:	19 95       	eicall
    4bbc:	68 2f       	mov	r22, r24
    4bbe:	8e e5       	ldi	r24, 0x5E	; 94
    4bc0:	96 e0       	ldi	r25, 0x06	; 6
    4bc2:	77 d5       	rcall	.+2798   	; 0x56b2 <_ZN10RingBuffer4pushEc>
    4bc4:	41 14       	cp	r4, r1
    4bc6:	51 04       	cpc	r5, r1
    4bc8:	49 f0       	breq	.+18     	; 0x4bdc <_ZN6EspDrv9readUntilEiPKcb+0xba>
    4bca:	b2 01       	movw	r22, r4
    4bcc:	8e e5       	ldi	r24, 0x5E	; 94
    4bce:	96 e0       	ldi	r25, 0x06	; 6
    4bd0:	83 d5       	rcall	.+2822   	; 0x56d8 <_ZN10RingBuffer8endsWithEPKc>
    4bd2:	88 23       	and	r24, r24
    4bd4:	19 f0       	breq	.+6      	; 0x4bdc <_ZN6EspDrv9readUntilEiPKcb+0xba>
    4bd6:	85 e0       	ldi	r24, 0x05	; 5
    4bd8:	68 2e       	mov	r6, r24
    4bda:	71 2c       	mov	r7, r1
    4bdc:	33 20       	and	r3, r3
    4bde:	19 f2       	breq	.-122    	; 0x4b66 <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4be0:	05 e2       	ldi	r16, 0x25	; 37
    4be2:	12 e0       	ldi	r17, 0x02	; 2
    4be4:	c0 e0       	ldi	r28, 0x00	; 0
    4be6:	d0 e0       	ldi	r29, 0x00	; 0
    4be8:	f8 01       	movw	r30, r16
    4bea:	61 91       	ld	r22, Z+
    4bec:	71 91       	ld	r23, Z+
    4bee:	8f 01       	movw	r16, r30
    4bf0:	8e e5       	ldi	r24, 0x5E	; 94
    4bf2:	96 e0       	ldi	r25, 0x06	; 6
    4bf4:	71 d5       	rcall	.+2786   	; 0x56d8 <_ZN10RingBuffer8endsWithEPKc>
    4bf6:	88 23       	and	r24, r24
    4bf8:	11 f0       	breq	.+4      	; 0x4bfe <_ZN6EspDrv9readUntilEiPKcb+0xdc>
    4bfa:	3e 01       	movw	r6, r28
    4bfc:	b4 cf       	rjmp	.-152    	; 0x4b66 <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4bfe:	21 96       	adiw	r28, 0x01	; 1
    4c00:	c5 30       	cpi	r28, 0x05	; 5
    4c02:	d1 05       	cpc	r29, r1
    4c04:	89 f7       	brne	.-30     	; 0x4be8 <_ZN6EspDrv9readUntilEiPKcb+0xc6>
    4c06:	af cf       	rjmp	.-162    	; 0x4b66 <_ZN6EspDrv9readUntilEiPKcb+0x44>
    4c08:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    4c0c:	dc 01       	movw	r26, r24
    4c0e:	cb 01       	movw	r24, r22
    4c10:	88 19       	sub	r24, r8
    4c12:	99 09       	sbc	r25, r9
    4c14:	aa 09       	sbc	r26, r10
    4c16:	bb 09       	sbc	r27, r11
    4c18:	8c 15       	cp	r24, r12
    4c1a:	9d 05       	cpc	r25, r13
    4c1c:	ae 05       	cpc	r26, r14
    4c1e:	bf 05       	cpc	r27, r15
    4c20:	60 f0       	brcs	.+24     	; 0x4c3a <_ZN6EspDrv9readUntilEiPKcb+0x118>
    4c22:	67 e5       	ldi	r22, 0x57	; 87
    4c24:	74 e0       	ldi	r23, 0x04	; 4
    4c26:	86 ef       	ldi	r24, 0xF6	; 246
    4c28:	94 e0       	ldi	r25, 0x04	; 4
    4c2a:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4c2e:	64 e3       	ldi	r22, 0x34	; 52
    4c30:	76 e0       	ldi	r23, 0x06	; 6
    4c32:	86 ef       	ldi	r24, 0xF6	; 246
    4c34:	94 e0       	ldi	r25, 0x04	; 4
    4c36:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    4c3a:	c3 01       	movw	r24, r6
    4c3c:	df 91       	pop	r29
    4c3e:	cf 91       	pop	r28
    4c40:	1f 91       	pop	r17
    4c42:	0f 91       	pop	r16
    4c44:	ff 90       	pop	r15
    4c46:	ef 90       	pop	r14
    4c48:	df 90       	pop	r13
    4c4a:	cf 90       	pop	r12
    4c4c:	bf 90       	pop	r11
    4c4e:	af 90       	pop	r10
    4c50:	9f 90       	pop	r9
    4c52:	8f 90       	pop	r8
    4c54:	7f 90       	pop	r7
    4c56:	6f 90       	pop	r6
    4c58:	5f 90       	pop	r5
    4c5a:	4f 90       	pop	r4
    4c5c:	3f 90       	pop	r3
    4c5e:	08 95       	ret

00004c60 <_ZN6EspDrv7getDataEhPhbPb>:
    4c60:	8f 92       	push	r8
    4c62:	9f 92       	push	r9
    4c64:	af 92       	push	r10
    4c66:	bf 92       	push	r11
    4c68:	ef 92       	push	r14
    4c6a:	ff 92       	push	r15
    4c6c:	0f 93       	push	r16
    4c6e:	1f 93       	push	r17
    4c70:	cf 93       	push	r28
    4c72:	df 93       	push	r29
    4c74:	c0 91 53 06 	lds	r28, 0x0653	; 0x800653 <_ZN6EspDrv7_connIdE>
    4c78:	c8 13       	cpse	r28, r24
    4c7a:	c1 c0       	rjmp	.+386    	; 0x4dfe <_ZN6EspDrv7getDataEhPhbPb+0x19e>
    4c7c:	79 01       	movw	r14, r18
    4c7e:	d4 2f       	mov	r29, r20
    4c80:	8b 01       	movw	r16, r22
    4c82:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    4c86:	4b 01       	movw	r8, r22
    4c88:	5c 01       	movw	r10, r24
    4c8a:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4c8e:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4c92:	dc 01       	movw	r26, r24
    4c94:	ed 91       	ld	r30, X+
    4c96:	fc 91       	ld	r31, X
    4c98:	00 84       	ldd	r0, Z+8	; 0x08
    4c9a:	f1 85       	ldd	r31, Z+9	; 0x09
    4c9c:	e0 2d       	mov	r30, r0
    4c9e:	19 95       	eicall
    4ca0:	89 2b       	or	r24, r25
    4ca2:	09 f4       	brne	.+2      	; 0x4ca6 <_ZN6EspDrv7getDataEhPhbPb+0x46>
    4ca4:	72 c0       	rjmp	.+228    	; 0x4d8a <_ZN6EspDrv7getDataEhPhbPb+0x12a>
    4ca6:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4caa:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4cae:	dc 01       	movw	r26, r24
    4cb0:	ed 91       	ld	r30, X+
    4cb2:	fc 91       	ld	r31, X
    4cb4:	dd 23       	and	r29, r29
    4cb6:	39 f0       	breq	.+14     	; 0x4cc6 <_ZN6EspDrv7getDataEhPhbPb+0x66>
    4cb8:	04 84       	ldd	r0, Z+12	; 0x0c
    4cba:	f5 85       	ldd	r31, Z+13	; 0x0d
    4cbc:	e0 2d       	mov	r30, r0
    4cbe:	19 95       	eicall
    4cc0:	f8 01       	movw	r30, r16
    4cc2:	80 83       	st	Z, r24
    4cc4:	19 c0       	rjmp	.+50     	; 0x4cf8 <_ZN6EspDrv7getDataEhPhbPb+0x98>
    4cc6:	02 84       	ldd	r0, Z+10	; 0x0a
    4cc8:	f3 85       	ldd	r31, Z+11	; 0x0b
    4cca:	e0 2d       	mov	r30, r0
    4ccc:	19 95       	eicall
    4cce:	f8 01       	movw	r30, r16
    4cd0:	80 83       	st	Z, r24
    4cd2:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4cd6:	90 91 55 06 	lds	r25, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4cda:	a0 91 56 06 	lds	r26, 0x0656	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4cde:	b0 91 57 06 	lds	r27, 0x0657	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    4ce2:	01 97       	sbiw	r24, 0x01	; 1
    4ce4:	a1 09       	sbc	r26, r1
    4ce6:	b1 09       	sbc	r27, r1
    4ce8:	80 93 54 06 	sts	0x0654, r24	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4cec:	90 93 55 06 	sts	0x0655, r25	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4cf0:	a0 93 56 06 	sts	0x0656, r26	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4cf4:	b0 93 57 06 	sts	0x0657, r27	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    4cf8:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4cfc:	90 91 55 06 	lds	r25, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4d00:	a0 91 56 06 	lds	r26, 0x0656	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4d04:	b0 91 57 06 	lds	r27, 0x0657	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    4d08:	89 2b       	or	r24, r25
    4d0a:	8a 2b       	or	r24, r26
    4d0c:	8b 2b       	or	r24, r27
    4d0e:	11 f0       	breq	.+4      	; 0x4d14 <_ZN6EspDrv7getDataEhPhbPb+0xb4>
    4d10:	81 e0       	ldi	r24, 0x01	; 1
    4d12:	76 c0       	rjmp	.+236    	; 0x4e00 <_ZN6EspDrv7getDataEhPhbPb+0x1a0>
    4d14:	65 e0       	ldi	r22, 0x05	; 5
    4d16:	70 e0       	ldi	r23, 0x00	; 0
    4d18:	80 e0       	ldi	r24, 0x00	; 0
    4d1a:	90 e0       	ldi	r25, 0x00	; 0
    4d1c:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    4d20:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4d24:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4d28:	dc 01       	movw	r26, r24
    4d2a:	ed 91       	ld	r30, X+
    4d2c:	fc 91       	ld	r31, X
    4d2e:	00 84       	ldd	r0, Z+8	; 0x08
    4d30:	f1 85       	ldd	r31, Z+9	; 0x09
    4d32:	e0 2d       	mov	r30, r0
    4d34:	19 95       	eicall
    4d36:	89 2b       	or	r24, r25
    4d38:	59 f3       	breq	.-42     	; 0x4d10 <_ZN6EspDrv7getDataEhPhbPb+0xb0>
    4d3a:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4d3e:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4d42:	dc 01       	movw	r26, r24
    4d44:	ed 91       	ld	r30, X+
    4d46:	fc 91       	ld	r31, X
    4d48:	04 84       	ldd	r0, Z+12	; 0x0c
    4d4a:	f5 85       	ldd	r31, Z+13	; 0x0d
    4d4c:	e0 2d       	mov	r30, r0
    4d4e:	19 95       	eicall
    4d50:	d0 e0       	ldi	r29, 0x00	; 0
    4d52:	e0 96       	adiw	r28, 0x30	; 48
    4d54:	8c 17       	cp	r24, r28
    4d56:	9d 07       	cpc	r25, r29
    4d58:	d9 f6       	brne	.-74     	; 0x4d10 <_ZN6EspDrv7getDataEhPhbPb+0xb0>
    4d5a:	40 e0       	ldi	r20, 0x00	; 0
    4d5c:	66 e8       	ldi	r22, 0x86	; 134
    4d5e:	74 e0       	ldi	r23, 0x04	; 4
    4d60:	84 ef       	ldi	r24, 0xF4	; 244
    4d62:	91 e0       	ldi	r25, 0x01	; 1
    4d64:	de de       	rcall	.-580    	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    4d66:	05 97       	sbiw	r24, 0x05	; 5
    4d68:	61 f0       	breq	.+24     	; 0x4d82 <_ZN6EspDrv7getDataEhPhbPb+0x122>
    4d6a:	67 e5       	ldi	r22, 0x57	; 87
    4d6c:	74 e0       	ldi	r23, 0x04	; 4
    4d6e:	86 ef       	ldi	r24, 0xF6	; 246
    4d70:	94 e0       	ldi	r25, 0x04	; 4
    4d72:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4d76:	63 eb       	ldi	r22, 0xB3	; 179
    4d78:	76 e0       	ldi	r23, 0x06	; 6
    4d7a:	86 ef       	ldi	r24, 0xF6	; 246
    4d7c:	94 e0       	ldi	r25, 0x04	; 4
    4d7e:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    4d82:	81 e0       	ldi	r24, 0x01	; 1
    4d84:	f7 01       	movw	r30, r14
    4d86:	80 83       	st	Z, r24
    4d88:	3b c0       	rjmp	.+118    	; 0x4e00 <_ZN6EspDrv7getDataEhPhbPb+0x1a0>
    4d8a:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    4d8e:	dc 01       	movw	r26, r24
    4d90:	cb 01       	movw	r24, r22
    4d92:	88 19       	sub	r24, r8
    4d94:	99 09       	sbc	r25, r9
    4d96:	aa 09       	sbc	r26, r10
    4d98:	bb 09       	sbc	r27, r11
    4d9a:	80 3d       	cpi	r24, 0xD0	; 208
    4d9c:	97 40       	sbci	r25, 0x07	; 7
    4d9e:	a1 05       	cpc	r26, r1
    4da0:	b1 05       	cpc	r27, r1
    4da2:	08 f4       	brcc	.+2      	; 0x4da6 <_ZN6EspDrv7getDataEhPhbPb+0x146>
    4da4:	72 cf       	rjmp	.-284    	; 0x4c8a <_ZN6EspDrv7getDataEhPhbPb+0x2a>
    4da6:	67 e5       	ldi	r22, 0x57	; 87
    4da8:	74 e0       	ldi	r23, 0x04	; 4
    4daa:	86 ef       	ldi	r24, 0xF6	; 246
    4dac:	94 e0       	ldi	r25, 0x04	; 4
    4dae:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4db2:	6a ea       	ldi	r22, 0xAA	; 170
    4db4:	76 e0       	ldi	r23, 0x06	; 6
    4db6:	86 ef       	ldi	r24, 0xF6	; 246
    4db8:	94 e0       	ldi	r25, 0x04	; 4
    4dba:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    4dbe:	6f ec       	ldi	r22, 0xCF	; 207
    4dc0:	72 e0       	ldi	r23, 0x02	; 2
    4dc2:	86 ef       	ldi	r24, 0xF6	; 246
    4dc4:	94 e0       	ldi	r25, 0x04	; 4
    4dc6:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4dca:	40 91 54 06 	lds	r20, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4dce:	50 91 55 06 	lds	r21, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4dd2:	60 91 56 06 	lds	r22, 0x0656	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4dd6:	70 91 57 06 	lds	r23, 0x0657	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    4dda:	2a e0       	ldi	r18, 0x0A	; 10
    4ddc:	30 e0       	ldi	r19, 0x00	; 0
    4dde:	86 ef       	ldi	r24, 0xF6	; 246
    4de0:	94 e0       	ldi	r25, 0x04	; 4
    4de2:	0e 94 88 13 	call	0x2710	; 0x2710 <_ZN5Print7printlnEli>
    4de6:	10 92 54 06 	sts	0x0654, r1	; 0x800654 <_ZN6EspDrv7_bufPosE>
    4dea:	10 92 55 06 	sts	0x0655, r1	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    4dee:	10 92 56 06 	sts	0x0656, r1	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    4df2:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    4df6:	10 92 53 06 	sts	0x0653, r1	; 0x800653 <_ZN6EspDrv7_connIdE>
    4dfa:	d8 01       	movw	r26, r16
    4dfc:	1c 92       	st	X, r1
    4dfe:	80 e0       	ldi	r24, 0x00	; 0
    4e00:	df 91       	pop	r29
    4e02:	cf 91       	pop	r28
    4e04:	1f 91       	pop	r17
    4e06:	0f 91       	pop	r16
    4e08:	ff 90       	pop	r15
    4e0a:	ef 90       	pop	r14
    4e0c:	bf 90       	pop	r11
    4e0e:	af 90       	pop	r10
    4e10:	9f 90       	pop	r9
    4e12:	8f 90       	pop	r8
    4e14:	08 95       	ret

00004e16 <_ZN6EspDrv8sendDataEhPKhj>:
    4e16:	cf 92       	push	r12
    4e18:	df 92       	push	r13
    4e1a:	ef 92       	push	r14
    4e1c:	ff 92       	push	r15
    4e1e:	0f 93       	push	r16
    4e20:	1f 93       	push	r17
    4e22:	cf 93       	push	r28
    4e24:	df 93       	push	r29
    4e26:	cd b7       	in	r28, 0x3d	; 61
    4e28:	de b7       	in	r29, 0x3e	; 62
    4e2a:	64 97       	sbiw	r28, 0x14	; 20
    4e2c:	0f b6       	in	r0, 0x3f	; 63
    4e2e:	f8 94       	cli
    4e30:	de bf       	out	0x3e, r29	; 62
    4e32:	0f be       	out	0x3f, r0	; 63
    4e34:	cd bf       	out	0x3d, r28	; 61
    4e36:	6b 01       	movw	r12, r22
    4e38:	8a 01       	movw	r16, r20
    4e3a:	1f 93       	push	r17
    4e3c:	4f 93       	push	r20
    4e3e:	1f 92       	push	r1
    4e40:	8f 93       	push	r24
    4e42:	89 e9       	ldi	r24, 0x99	; 153
    4e44:	96 e0       	ldi	r25, 0x06	; 6
    4e46:	9f 93       	push	r25
    4e48:	8f 93       	push	r24
    4e4a:	9e 01       	movw	r18, r28
    4e4c:	2f 5f       	subi	r18, 0xFF	; 255
    4e4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4e50:	79 01       	movw	r14, r18
    4e52:	3f 93       	push	r19
    4e54:	2f 93       	push	r18
    4e56:	0e 94 4e 31 	call	0x629c	; 0x629c <sprintf_P>
    4e5a:	b7 01       	movw	r22, r14
    4e5c:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4e60:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4e64:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    4e68:	40 e0       	ldi	r20, 0x00	; 0
    4e6a:	60 e9       	ldi	r22, 0x90	; 144
    4e6c:	74 e0       	ldi	r23, 0x04	; 4
    4e6e:	88 ee       	ldi	r24, 0xE8	; 232
    4e70:	93 e0       	ldi	r25, 0x03	; 3
    4e72:	57 de       	rcall	.-850    	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    4e74:	0f b6       	in	r0, 0x3f	; 63
    4e76:	f8 94       	cli
    4e78:	de bf       	out	0x3e, r29	; 62
    4e7a:	0f be       	out	0x3f, r0	; 63
    4e7c:	cd bf       	out	0x3d, r28	; 61
    4e7e:	05 97       	sbiw	r24, 0x05	; 5
    4e80:	49 f0       	breq	.+18     	; 0x4e94 <_ZN6EspDrv8sendDataEhPKhj+0x7e>
    4e82:	67 e5       	ldi	r22, 0x57	; 87
    4e84:	74 e0       	ldi	r23, 0x04	; 4
    4e86:	86 ef       	ldi	r24, 0xF6	; 246
    4e88:	94 e0       	ldi	r25, 0x04	; 4
    4e8a:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4e8e:	6e e7       	ldi	r22, 0x7E	; 126
    4e90:	76 e0       	ldi	r23, 0x06	; 6
    4e92:	1d c0       	rjmp	.+58     	; 0x4ece <_ZN6EspDrv8sendDataEhPKhj+0xb8>
    4e94:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4e98:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4e9c:	dc 01       	movw	r26, r24
    4e9e:	ed 91       	ld	r30, X+
    4ea0:	fc 91       	ld	r31, X
    4ea2:	02 80       	ldd	r0, Z+2	; 0x02
    4ea4:	f3 81       	ldd	r31, Z+3	; 0x03
    4ea6:	e0 2d       	mov	r30, r0
    4ea8:	a8 01       	movw	r20, r16
    4eaa:	b6 01       	movw	r22, r12
    4eac:	19 95       	eicall
    4eae:	41 e0       	ldi	r20, 0x01	; 1
    4eb0:	60 e0       	ldi	r22, 0x00	; 0
    4eb2:	70 e0       	ldi	r23, 0x00	; 0
    4eb4:	80 ed       	ldi	r24, 0xD0	; 208
    4eb6:	97 e0       	ldi	r25, 0x07	; 7
    4eb8:	34 de       	rcall	.-920    	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    4eba:	03 97       	sbiw	r24, 0x03	; 3
    4ebc:	71 f0       	breq	.+28     	; 0x4eda <_ZN6EspDrv8sendDataEhPKhj+0xc4>
    4ebe:	67 e5       	ldi	r22, 0x57	; 87
    4ec0:	74 e0       	ldi	r23, 0x04	; 4
    4ec2:	86 ef       	ldi	r24, 0xF6	; 246
    4ec4:	94 e0       	ldi	r25, 0x04	; 4
    4ec6:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4eca:	63 e6       	ldi	r22, 0x63	; 99
    4ecc:	76 e0       	ldi	r23, 0x06	; 6
    4ece:	86 ef       	ldi	r24, 0xF6	; 246
    4ed0:	94 e0       	ldi	r25, 0x04	; 4
    4ed2:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    4ed6:	80 e0       	ldi	r24, 0x00	; 0
    4ed8:	01 c0       	rjmp	.+2      	; 0x4edc <_ZN6EspDrv8sendDataEhPKhj+0xc6>
    4eda:	81 e0       	ldi	r24, 0x01	; 1
    4edc:	64 96       	adiw	r28, 0x14	; 20
    4ede:	0f b6       	in	r0, 0x3f	; 63
    4ee0:	f8 94       	cli
    4ee2:	de bf       	out	0x3e, r29	; 62
    4ee4:	0f be       	out	0x3f, r0	; 63
    4ee6:	cd bf       	out	0x3d, r28	; 61
    4ee8:	df 91       	pop	r29
    4eea:	cf 91       	pop	r28
    4eec:	1f 91       	pop	r17
    4eee:	0f 91       	pop	r16
    4ef0:	ff 90       	pop	r15
    4ef2:	ef 90       	pop	r14
    4ef4:	df 90       	pop	r13
    4ef6:	cf 90       	pop	r12
    4ef8:	08 95       	ret

00004efa <_ZN6EspDrv11espEmptyBufEb>:
    4efa:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4efe:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4f02:	dc 01       	movw	r26, r24
    4f04:	ed 91       	ld	r30, X+
    4f06:	fc 91       	ld	r31, X
    4f08:	00 84       	ldd	r0, Z+8	; 0x08
    4f0a:	f1 85       	ldd	r31, Z+9	; 0x09
    4f0c:	e0 2d       	mov	r30, r0
    4f0e:	19 95       	eicall
    4f10:	18 16       	cp	r1, r24
    4f12:	19 06       	cpc	r1, r25
    4f14:	64 f4       	brge	.+24     	; 0x4f2e <_ZN6EspDrv11espEmptyBufEb+0x34>
    4f16:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4f1a:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4f1e:	dc 01       	movw	r26, r24
    4f20:	ed 91       	ld	r30, X+
    4f22:	fc 91       	ld	r31, X
    4f24:	02 84       	ldd	r0, Z+10	; 0x0a
    4f26:	f3 85       	ldd	r31, Z+11	; 0x0b
    4f28:	e0 2d       	mov	r30, r0
    4f2a:	19 95       	eicall
    4f2c:	e6 cf       	rjmp	.-52     	; 0x4efa <_ZN6EspDrv11espEmptyBufEb>
    4f2e:	08 95       	ret

00004f30 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci>:
    4f30:	af 92       	push	r10
    4f32:	bf 92       	push	r11
    4f34:	cf 92       	push	r12
    4f36:	df 92       	push	r13
    4f38:	ef 92       	push	r14
    4f3a:	ff 92       	push	r15
    4f3c:	0f 93       	push	r16
    4f3e:	1f 93       	push	r17
    4f40:	cf 93       	push	r28
    4f42:	df 93       	push	r29
    4f44:	5c 01       	movw	r10, r24
    4f46:	6b 01       	movw	r12, r22
    4f48:	7a 01       	movw	r14, r20
    4f4a:	e9 01       	movw	r28, r18
    4f4c:	18 82       	st	Y, r1
    4f4e:	81 e0       	ldi	r24, 0x01	; 1
    4f50:	d4 df       	rcall	.-88     	; 0x4efa <_ZN6EspDrv11espEmptyBufEb>
    4f52:	b5 01       	movw	r22, r10
    4f54:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    4f58:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    4f5c:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    4f60:	41 e0       	ldi	r20, 0x01	; 1
    4f62:	b6 01       	movw	r22, r12
    4f64:	88 ee       	ldi	r24, 0xE8	; 232
    4f66:	93 e0       	ldi	r25, 0x03	; 3
    4f68:	dc dd       	rcall	.-1096   	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    4f6a:	85 30       	cpi	r24, 0x05	; 5
    4f6c:	91 05       	cpc	r25, r1
    4f6e:	51 f5       	brne	.+84     	; 0x4fc4 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0x94>
    4f70:	8e e5       	ldi	r24, 0x5E	; 94
    4f72:	96 e0       	ldi	r25, 0x06	; 6
    4f74:	78 d3       	rcall	.+1776   	; 0x5666 <_ZN10RingBuffer4initEv>
    4f76:	41 e0       	ldi	r20, 0x01	; 1
    4f78:	b7 01       	movw	r22, r14
    4f7a:	84 ef       	ldi	r24, 0xF4	; 244
    4f7c:	91 e0       	ldi	r25, 0x01	; 1
    4f7e:	d1 dd       	rcall	.-1118   	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    4f80:	05 97       	sbiw	r24, 0x05	; 5
    4f82:	b9 f4       	brne	.+46     	; 0x4fb2 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0x82>
    4f84:	f7 01       	movw	r30, r14
    4f86:	01 90       	ld	r0, Z+
    4f88:	00 20       	and	r0, r0
    4f8a:	e9 f7       	brne	.-6      	; 0x4f86 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0x56>
    4f8c:	31 97       	sbiw	r30, 0x01	; 1
    4f8e:	af 01       	movw	r20, r30
    4f90:	4e 19       	sub	r20, r14
    4f92:	5f 09       	sbc	r21, r15
    4f94:	98 01       	movw	r18, r16
    4f96:	21 50       	subi	r18, 0x01	; 1
    4f98:	31 09       	sbc	r19, r1
    4f9a:	be 01       	movw	r22, r28
    4f9c:	8e e5       	ldi	r24, 0x5E	; 94
    4f9e:	96 e0       	ldi	r25, 0x06	; 6
    4fa0:	d4 d3       	rcall	.+1960   	; 0x574a <_ZN10RingBuffer7getStrNEPcjj>
    4fa2:	41 e0       	ldi	r20, 0x01	; 1
    4fa4:	60 e0       	ldi	r22, 0x00	; 0
    4fa6:	70 e0       	ldi	r23, 0x00	; 0
    4fa8:	80 ed       	ldi	r24, 0xD0	; 208
    4faa:	97 e0       	ldi	r25, 0x07	; 7
    4fac:	ba dd       	rcall	.-1164   	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    4fae:	81 e0       	ldi	r24, 0x01	; 1
    4fb0:	18 c0       	rjmp	.+48     	; 0x4fe2 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0xb2>
    4fb2:	67 e5       	ldi	r22, 0x57	; 87
    4fb4:	74 e0       	ldi	r23, 0x04	; 4
    4fb6:	86 ef       	ldi	r24, 0xF6	; 246
    4fb8:	94 e0       	ldi	r25, 0x04	; 4
    4fba:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4fbe:	61 e5       	ldi	r22, 0x51	; 81
    4fc0:	76 e0       	ldi	r23, 0x06	; 6
    4fc2:	0a c0       	rjmp	.+20     	; 0x4fd8 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0xa8>
    4fc4:	05 97       	sbiw	r24, 0x05	; 5
    4fc6:	60 f0       	brcs	.+24     	; 0x4fe0 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci+0xb0>
    4fc8:	67 e5       	ldi	r22, 0x57	; 87
    4fca:	74 e0       	ldi	r23, 0x04	; 4
    4fcc:	86 ef       	ldi	r24, 0xF6	; 246
    4fce:	94 e0       	ldi	r25, 0x04	; 4
    4fd0:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    4fd4:	64 e4       	ldi	r22, 0x44	; 68
    4fd6:	76 e0       	ldi	r23, 0x06	; 6
    4fd8:	86 ef       	ldi	r24, 0xF6	; 246
    4fda:	94 e0       	ldi	r25, 0x04	; 4
    4fdc:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    4fe0:	80 e0       	ldi	r24, 0x00	; 0
    4fe2:	df 91       	pop	r29
    4fe4:	cf 91       	pop	r28
    4fe6:	1f 91       	pop	r17
    4fe8:	0f 91       	pop	r16
    4fea:	ff 90       	pop	r15
    4fec:	ef 90       	pop	r14
    4fee:	df 90       	pop	r13
    4ff0:	cf 90       	pop	r12
    4ff2:	bf 90       	pop	r11
    4ff4:	af 90       	pop	r10
    4ff6:	08 95       	ret

00004ff8 <_ZN6EspDrv14getClientStateEh>:
    4ff8:	ef 92       	push	r14
    4ffa:	ff 92       	push	r15
    4ffc:	0f 93       	push	r16
    4ffe:	1f 93       	push	r17
    5000:	cf 93       	push	r28
    5002:	df 93       	push	r29
    5004:	cd b7       	in	r28, 0x3d	; 61
    5006:	de b7       	in	r29, 0x3e	; 62
    5008:	6e 97       	sbiw	r28, 0x1e	; 30
    500a:	0f b6       	in	r0, 0x3f	; 63
    500c:	f8 94       	cli
    500e:	de bf       	out	0x3e, r29	; 62
    5010:	0f be       	out	0x3f, r0	; 63
    5012:	cd bf       	out	0x3d, r28	; 61
    5014:	1f 92       	push	r1
    5016:	8f 93       	push	r24
    5018:	89 e6       	ldi	r24, 0x69	; 105
    501a:	97 e0       	ldi	r25, 0x07	; 7
    501c:	9f 93       	push	r25
    501e:	8f 93       	push	r24
    5020:	ce 01       	movw	r24, r28
    5022:	01 96       	adiw	r24, 0x01	; 1
    5024:	7c 01       	movw	r14, r24
    5026:	9f 93       	push	r25
    5028:	8f 93       	push	r24
    502a:	0e 94 4e 31 	call	0x629c	; 0x629c <sprintf_P>
    502e:	0a e0       	ldi	r16, 0x0A	; 10
    5030:	10 e0       	ldi	r17, 0x00	; 0
    5032:	9e 01       	movw	r18, r28
    5034:	2b 5e       	subi	r18, 0xEB	; 235
    5036:	3f 4f       	sbci	r19, 0xFF	; 255
    5038:	44 e8       	ldi	r20, 0x84	; 132
    503a:	54 e0       	ldi	r21, 0x04	; 4
    503c:	b7 01       	movw	r22, r14
    503e:	8c e5       	ldi	r24, 0x5C	; 92
    5040:	97 e0       	ldi	r25, 0x07	; 7
    5042:	76 df       	rcall	.-276    	; 0x4f30 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci>
    5044:	0f 90       	pop	r0
    5046:	0f 90       	pop	r0
    5048:	0f 90       	pop	r0
    504a:	0f 90       	pop	r0
    504c:	0f 90       	pop	r0
    504e:	0f 90       	pop	r0
    5050:	6e 96       	adiw	r28, 0x1e	; 30
    5052:	0f b6       	in	r0, 0x3f	; 63
    5054:	f8 94       	cli
    5056:	de bf       	out	0x3e, r29	; 62
    5058:	0f be       	out	0x3f, r0	; 63
    505a:	cd bf       	out	0x3d, r28	; 61
    505c:	df 91       	pop	r29
    505e:	cf 91       	pop	r28
    5060:	1f 91       	pop	r17
    5062:	0f 91       	pop	r16
    5064:	ff 90       	pop	r15
    5066:	ef 90       	pop	r14
    5068:	08 95       	ret

0000506a <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperS2_S2_Pci>:
    506a:	4f 92       	push	r4
    506c:	5f 92       	push	r5
    506e:	6f 92       	push	r6
    5070:	7f 92       	push	r7
    5072:	8f 92       	push	r8
    5074:	9f 92       	push	r9
    5076:	af 92       	push	r10
    5078:	bf 92       	push	r11
    507a:	cf 92       	push	r12
    507c:	df 92       	push	r13
    507e:	ef 92       	push	r14
    5080:	ff 92       	push	r15
    5082:	0f 93       	push	r16
    5084:	1f 93       	push	r17
    5086:	cf 93       	push	r28
    5088:	df 93       	push	r29
    508a:	cd b7       	in	r28, 0x3d	; 61
    508c:	de b7       	in	r29, 0x3e	; 62
    508e:	4c 01       	movw	r8, r24
    5090:	6b 01       	movw	r12, r22
    5092:	5a 01       	movw	r10, r20
    5094:	39 01       	movw	r6, r18
    5096:	4d b6       	in	r4, 0x3d	; 61
    5098:	5e b6       	in	r5, 0x3e	; 62
    509a:	cb 01       	movw	r24, r22
    509c:	0e 94 96 30 	call	0x612c	; 0x612c <__strlen_P>
    50a0:	01 96       	adiw	r24, 0x01	; 1
    50a2:	2d b7       	in	r18, 0x3d	; 61
    50a4:	3e b7       	in	r19, 0x3e	; 62
    50a6:	28 1b       	sub	r18, r24
    50a8:	39 0b       	sbc	r19, r25
    50aa:	0f b6       	in	r0, 0x3f	; 63
    50ac:	f8 94       	cli
    50ae:	3e bf       	out	0x3e, r19	; 62
    50b0:	0f be       	out	0x3f, r0	; 63
    50b2:	2d bf       	out	0x3d, r18	; 61
    50b4:	8d b7       	in	r24, 0x3d	; 61
    50b6:	9e b7       	in	r25, 0x3e	; 62
    50b8:	01 96       	adiw	r24, 0x01	; 1
    50ba:	7c 01       	movw	r14, r24
    50bc:	b6 01       	movw	r22, r12
    50be:	0e 94 8f 30 	call	0x611e	; 0x611e <strcpy_P>
    50c2:	c5 01       	movw	r24, r10
    50c4:	0e 94 96 30 	call	0x612c	; 0x612c <__strlen_P>
    50c8:	01 96       	adiw	r24, 0x01	; 1
    50ca:	2d b7       	in	r18, 0x3d	; 61
    50cc:	3e b7       	in	r19, 0x3e	; 62
    50ce:	28 1b       	sub	r18, r24
    50d0:	39 0b       	sbc	r19, r25
    50d2:	0f b6       	in	r0, 0x3f	; 63
    50d4:	f8 94       	cli
    50d6:	3e bf       	out	0x3e, r19	; 62
    50d8:	0f be       	out	0x3f, r0	; 63
    50da:	2d bf       	out	0x3d, r18	; 61
    50dc:	8d b7       	in	r24, 0x3d	; 61
    50de:	9e b7       	in	r25, 0x3e	; 62
    50e0:	01 96       	adiw	r24, 0x01	; 1
    50e2:	6c 01       	movw	r12, r24
    50e4:	b5 01       	movw	r22, r10
    50e6:	0e 94 8f 30 	call	0x611e	; 0x611e <strcpy_P>
    50ea:	93 01       	movw	r18, r6
    50ec:	a6 01       	movw	r20, r12
    50ee:	b7 01       	movw	r22, r14
    50f0:	c4 01       	movw	r24, r8
    50f2:	1e df       	rcall	.-452    	; 0x4f30 <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperPKcS4_Pci>
    50f4:	0f b6       	in	r0, 0x3f	; 63
    50f6:	f8 94       	cli
    50f8:	5e be       	out	0x3e, r5	; 62
    50fa:	0f be       	out	0x3f, r0	; 63
    50fc:	4d be       	out	0x3d, r4	; 61
    50fe:	df 91       	pop	r29
    5100:	cf 91       	pop	r28
    5102:	1f 91       	pop	r17
    5104:	0f 91       	pop	r16
    5106:	ff 90       	pop	r15
    5108:	ef 90       	pop	r14
    510a:	df 90       	pop	r13
    510c:	cf 90       	pop	r12
    510e:	bf 90       	pop	r11
    5110:	af 90       	pop	r10
    5112:	9f 90       	pop	r9
    5114:	8f 90       	pop	r8
    5116:	7f 90       	pop	r7
    5118:	6f 90       	pop	r6
    511a:	5f 90       	pop	r5
    511c:	4f 90       	pop	r4
    511e:	08 95       	ret

00005120 <_ZN6EspDrv19getConnectionStatusEv>:
    5120:	0f 93       	push	r16
    5122:	1f 93       	push	r17
    5124:	cf 93       	push	r28
    5126:	df 93       	push	r29
    5128:	cd b7       	in	r28, 0x3d	; 61
    512a:	de b7       	in	r29, 0x3e	; 62
    512c:	2a 97       	sbiw	r28, 0x0a	; 10
    512e:	0f b6       	in	r0, 0x3f	; 63
    5130:	f8 94       	cli
    5132:	de bf       	out	0x3e, r29	; 62
    5134:	0f be       	out	0x3f, r0	; 63
    5136:	cd bf       	out	0x3d, r28	; 61
    5138:	0a e0       	ldi	r16, 0x0A	; 10
    513a:	10 e0       	ldi	r17, 0x00	; 0
    513c:	9e 01       	movw	r18, r28
    513e:	2f 5f       	subi	r18, 0xFF	; 255
    5140:	3f 4f       	sbci	r19, 0xFF	; 255
    5142:	4d e8       	ldi	r20, 0x8D	; 141
    5144:	57 e0       	ldi	r21, 0x07	; 7
    5146:	65 e8       	ldi	r22, 0x85	; 133
    5148:	77 e0       	ldi	r23, 0x07	; 7
    514a:	88 e7       	ldi	r24, 0x78	; 120
    514c:	97 e0       	ldi	r25, 0x07	; 7
    514e:	8d df       	rcall	.-230    	; 0x506a <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperS2_S2_Pci>
    5150:	88 23       	and	r24, r24
    5152:	69 f0       	breq	.+26     	; 0x516e <_ZN6EspDrv19getConnectionStatusEv+0x4e>
    5154:	ce 01       	movw	r24, r28
    5156:	01 96       	adiw	r24, 0x01	; 1
    5158:	8e d7       	rcall	.+3868   	; 0x6076 <atoi>
    515a:	9c 01       	movw	r18, r24
    515c:	22 50       	subi	r18, 0x02	; 2
    515e:	31 09       	sbc	r19, r1
    5160:	23 30       	cpi	r18, 0x03	; 3
    5162:	31 05       	cpc	r19, r1
    5164:	30 f0       	brcs	.+12     	; 0x5172 <_ZN6EspDrv19getConnectionStatusEv+0x52>
    5166:	05 97       	sbiw	r24, 0x05	; 5
    5168:	31 f0       	breq	.+12     	; 0x5176 <_ZN6EspDrv19getConnectionStatusEv+0x56>
    516a:	80 e0       	ldi	r24, 0x00	; 0
    516c:	05 c0       	rjmp	.+10     	; 0x5178 <_ZN6EspDrv19getConnectionStatusEv+0x58>
    516e:	8f ef       	ldi	r24, 0xFF	; 255
    5170:	03 c0       	rjmp	.+6      	; 0x5178 <_ZN6EspDrv19getConnectionStatusEv+0x58>
    5172:	81 e0       	ldi	r24, 0x01	; 1
    5174:	01 c0       	rjmp	.+2      	; 0x5178 <_ZN6EspDrv19getConnectionStatusEv+0x58>
    5176:	83 e0       	ldi	r24, 0x03	; 3
    5178:	2a 96       	adiw	r28, 0x0a	; 10
    517a:	0f b6       	in	r0, 0x3f	; 63
    517c:	f8 94       	cli
    517e:	de bf       	out	0x3e, r29	; 62
    5180:	0f be       	out	0x3f, r0	; 63
    5182:	cd bf       	out	0x3d, r28	; 61
    5184:	df 91       	pop	r29
    5186:	cf 91       	pop	r28
    5188:	1f 91       	pop	r17
    518a:	0f 91       	pop	r16
    518c:	08 95       	ret

0000518e <_ZN6EspDrv12getFwVersionEv>:
    518e:	0f 93       	push	r16
    5190:	1f 93       	push	r17
    5192:	10 92 58 06 	sts	0x0658, r1	; 0x800658 <_ZN6EspDrv9fwVersionE>
    5196:	06 e0       	ldi	r16, 0x06	; 6
    5198:	10 e0       	ldi	r17, 0x00	; 0
    519a:	28 e5       	ldi	r18, 0x58	; 88
    519c:	36 e0       	ldi	r19, 0x06	; 6
    519e:	49 e5       	ldi	r20, 0x59	; 89
    51a0:	57 e0       	ldi	r21, 0x07	; 7
    51a2:	6c e4       	ldi	r22, 0x4C	; 76
    51a4:	77 e0       	ldi	r23, 0x07	; 7
    51a6:	85 e4       	ldi	r24, 0x45	; 69
    51a8:	97 e0       	ldi	r25, 0x07	; 7
    51aa:	5f df       	rcall	.-322    	; 0x506a <_ZN6EspDrv10sendCmdGetEPK19__FlashStringHelperS2_S2_Pci>
    51ac:	88 e5       	ldi	r24, 0x58	; 88
    51ae:	96 e0       	ldi	r25, 0x06	; 6
    51b0:	1f 91       	pop	r17
    51b2:	0f 91       	pop	r16
    51b4:	08 95       	ret

000051b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>:
    51b6:	0f 93       	push	r16
    51b8:	1f 93       	push	r17
    51ba:	cf 93       	push	r28
    51bc:	df 93       	push	r29
    51be:	8c 01       	movw	r16, r24
    51c0:	eb 01       	movw	r28, r22
    51c2:	81 e0       	ldi	r24, 0x01	; 1
    51c4:	9a de       	rcall	.-716    	; 0x4efa <_ZN6EspDrv11espEmptyBufEb>
    51c6:	b8 01       	movw	r22, r16
    51c8:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    51cc:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    51d0:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    51d4:	41 e0       	ldi	r20, 0x01	; 1
    51d6:	60 e0       	ldi	r22, 0x00	; 0
    51d8:	70 e0       	ldi	r23, 0x00	; 0
    51da:	ce 01       	movw	r24, r28
    51dc:	df 91       	pop	r29
    51de:	cf 91       	pop	r28
    51e0:	1f 91       	pop	r17
    51e2:	0f 91       	pop	r16
    51e4:	9e cc       	rjmp	.-1732   	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>

000051e6 <_ZN6EspDrv5resetEv>:
    51e6:	68 ee       	ldi	r22, 0xE8	; 232
    51e8:	73 e0       	ldi	r23, 0x03	; 3
    51ea:	82 e1       	ldi	r24, 0x12	; 18
    51ec:	98 e0       	ldi	r25, 0x08	; 8
    51ee:	e3 df       	rcall	.-58     	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    51f0:	68 eb       	ldi	r22, 0xB8	; 184
    51f2:	7b e0       	ldi	r23, 0x0B	; 11
    51f4:	80 e0       	ldi	r24, 0x00	; 0
    51f6:	90 e0       	ldi	r25, 0x00	; 0
    51f8:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    51fc:	80 e0       	ldi	r24, 0x00	; 0
    51fe:	7d de       	rcall	.-774    	; 0x4efa <_ZN6EspDrv11espEmptyBufEb>
    5200:	68 ee       	ldi	r22, 0xE8	; 232
    5202:	73 e0       	ldi	r23, 0x03	; 3
    5204:	8d e0       	ldi	r24, 0x0D	; 13
    5206:	98 e0       	ldi	r25, 0x08	; 8
    5208:	d6 df       	rcall	.-84     	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    520a:	68 ee       	ldi	r22, 0xE8	; 232
    520c:	73 e0       	ldi	r23, 0x03	; 3
    520e:	81 e0       	ldi	r24, 0x01	; 1
    5210:	98 e0       	ldi	r25, 0x08	; 8
    5212:	d1 df       	rcall	.-94     	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    5214:	68 ec       	ldi	r22, 0xC8	; 200
    5216:	70 e0       	ldi	r23, 0x00	; 0
    5218:	80 e0       	ldi	r24, 0x00	; 0
    521a:	90 e0       	ldi	r25, 0x00	; 0
    521c:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    5220:	68 ee       	ldi	r22, 0xE8	; 232
    5222:	73 e0       	ldi	r23, 0x03	; 3
    5224:	85 ef       	ldi	r24, 0xF5	; 245
    5226:	97 e0       	ldi	r25, 0x07	; 7
    5228:	c6 df       	rcall	.-116    	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    522a:	68 ee       	ldi	r22, 0xE8	; 232
    522c:	73 e0       	ldi	r23, 0x03	; 3
    522e:	87 ee       	ldi	r24, 0xE7	; 231
    5230:	97 e0       	ldi	r25, 0x07	; 7
    5232:	c1 df       	rcall	.-126    	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    5234:	68 ee       	ldi	r22, 0xE8	; 232
    5236:	73 e0       	ldi	r23, 0x03	; 3
    5238:	87 ed       	ldi	r24, 0xD7	; 215
    523a:	97 e0       	ldi	r25, 0x07	; 7
    523c:	bc df       	rcall	.-136    	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    523e:	68 ee       	ldi	r22, 0xE8	; 232
    5240:	73 e0       	ldi	r23, 0x03	; 3
    5242:	89 ec       	ldi	r24, 0xC9	; 201
    5244:	97 e0       	ldi	r25, 0x07	; 7
    5246:	b7 df       	rcall	.-146    	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    5248:	68 ec       	ldi	r22, 0xC8	; 200
    524a:	70 e0       	ldi	r23, 0x00	; 0
    524c:	80 e0       	ldi	r24, 0x00	; 0
    524e:	90 e0       	ldi	r25, 0x00	; 0
    5250:	0c 94 f2 14 	jmp	0x29e4	; 0x29e4 <delay>

00005254 <_ZN6EspDrv14wifiDriverInitEP6Stream>:
    5254:	cf 93       	push	r28
    5256:	df 93       	push	r29
    5258:	90 93 67 06 	sts	0x0667, r25	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    525c:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <_ZN6EspDrv9espSerialE>
    5260:	c5 e0       	ldi	r28, 0x05	; 5
    5262:	d0 e0       	ldi	r29, 0x00	; 0
    5264:	68 ee       	ldi	r22, 0xE8	; 232
    5266:	73 e0       	ldi	r23, 0x03	; 3
    5268:	8f e6       	ldi	r24, 0x6F	; 111
    526a:	98 e0       	ldi	r25, 0x08	; 8
    526c:	a4 df       	rcall	.-184    	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
    526e:	89 2b       	or	r24, r25
    5270:	e1 f0       	breq	.+56     	; 0x52aa <_ZN6EspDrv14wifiDriverInitEP6Stream+0x56>
    5272:	68 ee       	ldi	r22, 0xE8	; 232
    5274:	73 e0       	ldi	r23, 0x03	; 3
    5276:	80 e0       	ldi	r24, 0x00	; 0
    5278:	90 e0       	ldi	r25, 0x00	; 0
    527a:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
    527e:	21 97       	sbiw	r28, 0x01	; 1
    5280:	89 f7       	brne	.-30     	; 0x5264 <_ZN6EspDrv14wifiDriverInitEP6Stream+0x10>
    5282:	67 e5       	ldi	r22, 0x57	; 87
    5284:	74 e0       	ldi	r23, 0x04	; 4
    5286:	86 ef       	ldi	r24, 0xF6	; 246
    5288:	94 e0       	ldi	r25, 0x04	; 4
    528a:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    528e:	62 e5       	ldi	r22, 0x52	; 82
    5290:	78 e0       	ldi	r23, 0x08	; 8
    5292:	86 ef       	ldi	r24, 0xF6	; 246
    5294:	94 e0       	ldi	r25, 0x04	; 4
    5296:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN5Print7printlnEPK19__FlashStringHelper>
    529a:	68 e8       	ldi	r22, 0x88	; 136
    529c:	73 e1       	ldi	r23, 0x13	; 19
    529e:	80 e0       	ldi	r24, 0x00	; 0
    52a0:	90 e0       	ldi	r25, 0x00	; 0
    52a2:	df 91       	pop	r29
    52a4:	cf 91       	pop	r28
    52a6:	0c 94 f2 14 	jmp	0x29e4	; 0x29e4 <delay>
    52aa:	9d df       	rcall	.-198    	; 0x51e6 <_ZN6EspDrv5resetEv>
    52ac:	70 df       	rcall	.-288    	; 0x518e <_ZN6EspDrv12getFwVersionEv>
    52ae:	80 91 58 06 	lds	r24, 0x0658	; 0x800658 <_ZN6EspDrv9fwVersionE>
    52b2:	81 53       	subi	r24, 0x31	; 49
    52b4:	82 30       	cpi	r24, 0x02	; 2
    52b6:	20 f4       	brcc	.+8      	; 0x52c0 <_ZN6EspDrv14wifiDriverInitEP6Stream+0x6c>
    52b8:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <_ZN6EspDrv9fwVersionE+0x1>
    52bc:	8e 32       	cpi	r24, 0x2E	; 46
    52be:	e9 f0       	breq	.+58     	; 0x52fa <_ZN6EspDrv14wifiDriverInitEP6Stream+0xa6>
    52c0:	67 e5       	ldi	r22, 0x57	; 87
    52c2:	74 e0       	ldi	r23, 0x04	; 4
    52c4:	86 ef       	ldi	r24, 0xF6	; 246
    52c6:	94 e0       	ldi	r25, 0x04	; 4
    52c8:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    52cc:	64 e3       	ldi	r22, 0x34	; 52
    52ce:	78 e0       	ldi	r23, 0x08	; 8
    52d0:	86 ef       	ldi	r24, 0xF6	; 246
    52d2:	94 e0       	ldi	r25, 0x04	; 4
    52d4:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    52d8:	6f ec       	ldi	r22, 0xCF	; 207
    52da:	72 e0       	ldi	r23, 0x02	; 2
    52dc:	86 ef       	ldi	r24, 0xF6	; 246
    52de:	94 e0       	ldi	r25, 0x04	; 4
    52e0:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    52e4:	68 e5       	ldi	r22, 0x58	; 88
    52e6:	76 e0       	ldi	r23, 0x06	; 6
    52e8:	86 ef       	ldi	r24, 0xF6	; 246
    52ea:	94 e0       	ldi	r25, 0x04	; 4
    52ec:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    52f0:	60 ea       	ldi	r22, 0xA0	; 160
    52f2:	7f e0       	ldi	r23, 0x0F	; 15
    52f4:	80 e0       	ldi	r24, 0x00	; 0
    52f6:	90 e0       	ldi	r25, 0x00	; 0
    52f8:	d4 cf       	rjmp	.-88     	; 0x52a2 <_ZN6EspDrv14wifiDriverInitEP6Stream+0x4e>
    52fa:	67 e5       	ldi	r22, 0x57	; 87
    52fc:	74 e0       	ldi	r23, 0x04	; 4
    52fe:	86 ef       	ldi	r24, 0xF6	; 246
    5300:	94 e0       	ldi	r25, 0x04	; 4
    5302:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    5306:	69 e1       	ldi	r22, 0x19	; 25
    5308:	78 e0       	ldi	r23, 0x08	; 8
    530a:	86 ef       	ldi	r24, 0xF6	; 246
    530c:	94 e0       	ldi	r25, 0x04	; 4
    530e:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    5312:	6f ec       	ldi	r22, 0xCF	; 207
    5314:	72 e0       	ldi	r23, 0x02	; 2
    5316:	86 ef       	ldi	r24, 0xF6	; 246
    5318:	94 e0       	ldi	r25, 0x04	; 4
    531a:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    531e:	68 e5       	ldi	r22, 0x58	; 88
    5320:	76 e0       	ldi	r23, 0x06	; 6
    5322:	86 ef       	ldi	r24, 0xF6	; 246
    5324:	94 e0       	ldi	r25, 0x04	; 4
    5326:	df 91       	pop	r29
    5328:	cf 91       	pop	r28
    532a:	0c 94 ae 12 	jmp	0x255c	; 0x255c <_ZN5Print7printlnEPKc>

0000532e <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>:
    532e:	cf 93       	push	r28
    5330:	df 93       	push	r29
    5332:	cd b7       	in	r28, 0x3d	; 61
    5334:	de b7       	in	r29, 0x3e	; 62
    5336:	c8 5c       	subi	r28, 0xC8	; 200
    5338:	d1 09       	sbc	r29, r1
    533a:	0f b6       	in	r0, 0x3f	; 63
    533c:	f8 94       	cli
    533e:	de bf       	out	0x3e, r29	; 62
    5340:	0f be       	out	0x3f, r0	; 63
    5342:	cd bf       	out	0x3d, r28	; 61
    5344:	9e 01       	movw	r18, r28
    5346:	2e 52       	subi	r18, 0x2E	; 46
    5348:	3f 4f       	sbci	r19, 0xFF	; 255
    534a:	c2 53       	subi	r28, 0x32	; 50
    534c:	df 4f       	sbci	r29, 0xFF	; 255
    534e:	48 81       	ld	r20, Y
    5350:	59 81       	ldd	r21, Y+1	; 0x01
    5352:	ce 5c       	subi	r28, 0xCE	; 206
    5354:	d0 40       	sbci	r29, 0x00	; 0
    5356:	68 ec       	ldi	r22, 0xC8	; 200
    5358:	70 e0       	ldi	r23, 0x00	; 0
    535a:	ce 01       	movw	r24, r28
    535c:	01 96       	adiw	r24, 0x01	; 1
    535e:	cc d7       	rcall	.+3992   	; 0x62f8 <vsnprintf_P>
    5360:	81 e0       	ldi	r24, 0x01	; 1
    5362:	cb dd       	rcall	.-1130   	; 0x4efa <_ZN6EspDrv11espEmptyBufEb>
    5364:	be 01       	movw	r22, r28
    5366:	6f 5f       	subi	r22, 0xFF	; 255
    5368:	7f 4f       	sbci	r23, 0xFF	; 255
    536a:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    536e:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    5372:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
    5376:	41 e0       	ldi	r20, 0x01	; 1
    5378:	60 e0       	ldi	r22, 0x00	; 0
    537a:	70 e0       	ldi	r23, 0x00	; 0
    537c:	c0 53       	subi	r28, 0x30	; 48
    537e:	df 4f       	sbci	r29, 0xFF	; 255
    5380:	88 81       	ld	r24, Y
    5382:	99 81       	ldd	r25, Y+1	; 0x01
    5384:	c0 5d       	subi	r28, 0xD0	; 208
    5386:	d0 40       	sbci	r29, 0x00	; 0
    5388:	cc db       	rcall	.-2152   	; 0x4b22 <_ZN6EspDrv9readUntilEiPKcb>
    538a:	c8 53       	subi	r28, 0x38	; 56
    538c:	df 4f       	sbci	r29, 0xFF	; 255
    538e:	0f b6       	in	r0, 0x3f	; 63
    5390:	f8 94       	cli
    5392:	de bf       	out	0x3e, r29	; 62
    5394:	0f be       	out	0x3f, r0	; 63
    5396:	cd bf       	out	0x3d, r28	; 61
    5398:	df 91       	pop	r29
    539a:	cf 91       	pop	r28
    539c:	08 95       	ret

0000539e <_ZN6EspDrv11startClientEPKcjhh>:


bool EspDrv::startClient(const char* host, uint16_t port, uint8_t sock, uint8_t protMode)
{
    539e:	ff 92       	push	r15
    53a0:	0f 93       	push	r16
    53a2:	1f 93       	push	r17
    53a4:	cf 93       	push	r28
    53a6:	df 93       	push	r29
    53a8:	d8 2f       	mov	r29, r24
    53aa:	19 2f       	mov	r17, r25
    53ac:	06 2f       	mov	r16, r22
    53ae:	f7 2e       	mov	r15, r23
    53b0:	c4 2f       	mov	r28, r20

	// for UDP we set a dummy remote port and UDP mode to 2
	// this allows to specify the target host/port in CIPSEND

	int ret;
	if (protMode==TCP_MODE)
    53b2:	21 11       	cpse	r18, r1
    53b4:	19 c0       	rjmp	.+50     	; 0x53e8 <_ZN6EspDrv11startClientEPKcjhh+0x4a>
		ret = sendCmd(F("AT+CIPSTART=%d,\"TCP\",\"%s\",%u"), 5000, sock, host, port);
    53b6:	7f 93       	push	r23
    53b8:	6f 93       	push	r22
    53ba:	9f 93       	push	r25
    53bc:	8f 93       	push	r24
    53be:	1f 92       	push	r1
    53c0:	4f 93       	push	r20
    53c2:	83 e1       	ldi	r24, 0x13	; 19
    53c4:	8f 93       	push	r24
    53c6:	88 e8       	ldi	r24, 0x88	; 136
    53c8:	8f 93       	push	r24
    53ca:	88 e2       	ldi	r24, 0x28	; 40
    53cc:	97 e0       	ldi	r25, 0x07	; 7
    53ce:	9f 93       	push	r25
    53d0:	8f 93       	push	r24
    53d2:	ad df       	rcall	.-166    	; 0x532e <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
    53d4:	fc 01       	movw	r30, r24
    53d6:	8d b7       	in	r24, 0x3d	; 61
    53d8:	9e b7       	in	r25, 0x3e	; 62
    53da:	0a 96       	adiw	r24, 0x0a	; 10
    53dc:	0f b6       	in	r0, 0x3f	; 63
    53de:	f8 94       	cli
    53e0:	9e bf       	out	0x3e, r25	; 62
    53e2:	0f be       	out	0x3f, r0	; 63
    53e4:	8d bf       	out	0x3d, r24	; 61
    53e6:	3a c0       	rjmp	.+116    	; 0x545c <_ZN6EspDrv11startClientEPKcjhh+0xbe>
	else if (protMode==SSL_MODE)
    53e8:	22 30       	cpi	r18, 0x02	; 2
    53ea:	f1 f4       	brne	.+60     	; 0x5428 <_ZN6EspDrv11startClientEPKcjhh+0x8a>
	{
		// better to put the CIPSSLSIZE here because it is not supported before firmware 1.4
		sendCmd(F("AT+CIPSSLSIZE=4096"));
    53ec:	68 ee       	ldi	r22, 0xE8	; 232
    53ee:	73 e0       	ldi	r23, 0x03	; 3
    53f0:	85 e1       	ldi	r24, 0x15	; 21
    53f2:	97 e0       	ldi	r25, 0x07	; 7
    53f4:	e0 de       	rcall	.-576    	; 0x51b6 <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperi>
		ret = sendCmd(F("AT+CIPSTART=%d,\"SSL\",\"%s\",%u"), 5000, sock, host, port);
    53f6:	ff 92       	push	r15
    53f8:	0f 93       	push	r16
    53fa:	1f 93       	push	r17
    53fc:	df 93       	push	r29
    53fe:	1f 92       	push	r1
    5400:	cf 93       	push	r28
    5402:	83 e1       	ldi	r24, 0x13	; 19
    5404:	8f 93       	push	r24
    5406:	88 e8       	ldi	r24, 0x88	; 136
    5408:	8f 93       	push	r24
    540a:	88 ef       	ldi	r24, 0xF8	; 248
    540c:	96 e0       	ldi	r25, 0x06	; 6
    540e:	9f 93       	push	r25
    5410:	8f 93       	push	r24
    5412:	8d df       	rcall	.-230    	; 0x532e <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
    5414:	fc 01       	movw	r30, r24
    5416:	8d b7       	in	r24, 0x3d	; 61
    5418:	9e b7       	in	r25, 0x3e	; 62
    541a:	0a 96       	adiw	r24, 0x0a	; 10
    541c:	0f b6       	in	r0, 0x3f	; 63
    541e:	f8 94       	cli
    5420:	9e bf       	out	0x3e, r25	; 62
    5422:	0f be       	out	0x3f, r0	; 63
    5424:	8d bf       	out	0x3d, r24	; 61
    5426:	1a c0       	rjmp	.+52     	; 0x545c <_ZN6EspDrv11startClientEPKcjhh+0xbe>
	}
	else if (protMode==UDP_MODE)
    5428:	21 30       	cpi	r18, 0x01	; 1
    542a:	c1 f4       	brne	.+48     	; 0x545c <_ZN6EspDrv11startClientEPKcjhh+0xbe>
		ret = sendCmd(F("AT+CIPSTART=%d,\"UDP\",\"%s\",0,%u,2"), 5000, sock, host, port);
    542c:	7f 93       	push	r23
    542e:	6f 93       	push	r22
    5430:	9f 93       	push	r25
    5432:	8f 93       	push	r24
    5434:	1f 92       	push	r1
    5436:	4f 93       	push	r20
    5438:	83 e1       	ldi	r24, 0x13	; 19
    543a:	8f 93       	push	r24
    543c:	88 e8       	ldi	r24, 0x88	; 136
    543e:	8f 93       	push	r24
    5440:	87 ed       	ldi	r24, 0xD7	; 215
    5442:	96 e0       	ldi	r25, 0x06	; 6
    5444:	9f 93       	push	r25
    5446:	8f 93       	push	r24
    5448:	72 df       	rcall	.-284    	; 0x532e <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
    544a:	fc 01       	movw	r30, r24
    544c:	8d b7       	in	r24, 0x3d	; 61
    544e:	9e b7       	in	r25, 0x3e	; 62
    5450:	0a 96       	adiw	r24, 0x0a	; 10
    5452:	0f b6       	in	r0, 0x3f	; 63
    5454:	f8 94       	cli
    5456:	9e bf       	out	0x3e, r25	; 62
    5458:	0f be       	out	0x3f, r0	; 63
    545a:	8d bf       	out	0x3d, r24	; 61

	return ret==TAG_OK;
    545c:	81 e0       	ldi	r24, 0x01	; 1
    545e:	ef 2b       	or	r30, r31
    5460:	09 f0       	breq	.+2      	; 0x5464 <_ZN6EspDrv11startClientEPKcjhh+0xc6>
    5462:	80 e0       	ldi	r24, 0x00	; 0
}
    5464:	df 91       	pop	r29
    5466:	cf 91       	pop	r28
    5468:	1f 91       	pop	r17
    546a:	0f 91       	pop	r16
    546c:	ff 90       	pop	r15
    546e:	08 95       	ret

00005470 <_ZN6EspDrv10stopClientEh>:
// Start server TCP on port specified
void EspDrv::stopClient(uint8_t sock)
{
	LOGDEBUG1(F("> stopClient"), sock);

	int ret = sendCmd(F("AT+CIPCLOSE=%d"), 4000, sock);
    5470:	1f 92       	push	r1
    5472:	8f 93       	push	r24
    5474:	8f e0       	ldi	r24, 0x0F	; 15
    5476:	8f 93       	push	r24
    5478:	80 ea       	ldi	r24, 0xA0	; 160
    547a:	8f 93       	push	r24
    547c:	88 ec       	ldi	r24, 0xC8	; 200
    547e:	96 e0       	ldi	r25, 0x06	; 6
    5480:	9f 93       	push	r25
    5482:	8f 93       	push	r24
    5484:	54 df       	rcall	.-344    	; 0x532e <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>
}
    5486:	0f 90       	pop	r0
    5488:	0f 90       	pop	r0
    548a:	0f 90       	pop	r0
    548c:	0f 90       	pop	r0
    548e:	0f 90       	pop	r0
    5490:	0f 90       	pop	r0
    5492:	08 95       	ret

00005494 <_ZN6EspDrv11wifiConnectEPKcS1_>:
}



bool EspDrv::wifiConnect(const char* ssid, const char* passphrase)
{
    5494:	cf 93       	push	r28
    5496:	df 93       	push	r29
    5498:	d8 2f       	mov	r29, r24
    549a:	c9 2f       	mov	r28, r25
	// TODO
	// Escape character syntax is needed if "SSID" or "password" contains
	// any special characters (',', '"' and '/')

    // connect to access point, use CUR mode to avoid connection at boot
	int ret = sendCmd(F("AT+CWJAP_CUR=\"%s\",\"%s\""), 20000, ssid, passphrase);
    549c:	7f 93       	push	r23
    549e:	6f 93       	push	r22
    54a0:	9f 93       	push	r25
    54a2:	8f 93       	push	r24
    54a4:	8e e4       	ldi	r24, 0x4E	; 78
    54a6:	8f 93       	push	r24
    54a8:	80 e2       	ldi	r24, 0x20	; 32
    54aa:	8f 93       	push	r24
    54ac:	82 eb       	ldi	r24, 0xB2	; 178
    54ae:	97 e0       	ldi	r25, 0x07	; 7
    54b0:	9f 93       	push	r25
    54b2:	8f 93       	push	r24
    54b4:	3c df       	rcall	.-392    	; 0x532e <_ZN6EspDrv7sendCmdEPK19__FlashStringHelperiz>

	if (ret==TAG_OK)
    54b6:	2d b7       	in	r18, 0x3d	; 61
    54b8:	3e b7       	in	r19, 0x3e	; 62
    54ba:	28 5f       	subi	r18, 0xF8	; 248
    54bc:	3f 4f       	sbci	r19, 0xFF	; 255
    54be:	0f b6       	in	r0, 0x3f	; 63
    54c0:	f8 94       	cli
    54c2:	3e bf       	out	0x3e, r19	; 62
    54c4:	0f be       	out	0x3f, r0	; 63
    54c6:	2d bf       	out	0x3d, r18	; 61
	{
		LOGINFO1(F("Connected to"), ssid);
    54c8:	67 e5       	ldi	r22, 0x57	; 87
    54ca:	74 e0       	ldi	r23, 0x04	; 4
	// any special characters (',', '"' and '/')

    // connect to access point, use CUR mode to avoid connection at boot
	int ret = sendCmd(F("AT+CWJAP_CUR=\"%s\",\"%s\""), 20000, ssid, passphrase);

	if (ret==TAG_OK)
    54cc:	89 2b       	or	r24, r25
    54ce:	c1 f4       	brne	.+48     	; 0x5500 <_ZN6EspDrv11wifiConnectEPKcS1_+0x6c>
	{
		LOGINFO1(F("Connected to"), ssid);
    54d0:	86 ef       	ldi	r24, 0xF6	; 246
    54d2:	94 e0       	ldi	r25, 0x04	; 4
    54d4:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    54d8:	65 ea       	ldi	r22, 0xA5	; 165
    54da:	77 e0       	ldi	r23, 0x07	; 7
    54dc:	86 ef       	ldi	r24, 0xF6	; 246
    54de:	94 e0       	ldi	r25, 0x04	; 4
    54e0:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    54e4:	6f ec       	ldi	r22, 0xCF	; 207
    54e6:	72 e0       	ldi	r23, 0x02	; 2
    54e8:	86 ef       	ldi	r24, 0xF6	; 246
    54ea:	94 e0       	ldi	r25, 0x04	; 4
    54ec:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    54f0:	6d 2f       	mov	r22, r29
    54f2:	7c 2f       	mov	r23, r28
    54f4:	86 ef       	ldi	r24, 0xF6	; 246
    54f6:	94 e0       	ldi	r25, 0x04	; 4
    54f8:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>
		return true;
    54fc:	81 e0       	ldi	r24, 0x01	; 1
    54fe:	1f c0       	rjmp	.+62     	; 0x553e <_ZN6EspDrv11wifiConnectEPKcS1_+0xaa>
	}

	LOGWARN1(F("Failed connecting to"), ssid);
    5500:	86 ef       	ldi	r24, 0xF6	; 246
    5502:	94 e0       	ldi	r25, 0x04	; 4
    5504:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    5508:	60 e9       	ldi	r22, 0x90	; 144
    550a:	77 e0       	ldi	r23, 0x07	; 7
    550c:	86 ef       	ldi	r24, 0xF6	; 246
    550e:	94 e0       	ldi	r25, 0x04	; 4
    5510:	0e 94 51 12 	call	0x24a2	; 0x24a2 <_ZN5Print5printEPK19__FlashStringHelper>
    5514:	6f ec       	ldi	r22, 0xCF	; 207
    5516:	72 e0       	ldi	r23, 0x02	; 2
    5518:	86 ef       	ldi	r24, 0xF6	; 246
    551a:	94 e0       	ldi	r25, 0x04	; 4
    551c:	0e 94 83 12 	call	0x2506	; 0x2506 <_ZN5Print5printEPKc>
    5520:	6d 2f       	mov	r22, r29
    5522:	7c 2f       	mov	r23, r28
    5524:	86 ef       	ldi	r24, 0xF6	; 246
    5526:	94 e0       	ldi	r25, 0x04	; 4
    5528:	0e 94 ae 12 	call	0x255c	; 0x255c <_ZN5Print7printlnEPKc>

	// clean additional messages logged after the FAIL tag
	delay(1000);
    552c:	68 ee       	ldi	r22, 0xE8	; 232
    552e:	73 e0       	ldi	r23, 0x03	; 3
    5530:	80 e0       	ldi	r24, 0x00	; 0
    5532:	90 e0       	ldi	r25, 0x00	; 0
    5534:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <delay>
	espEmptyBuf(false);
    5538:	80 e0       	ldi	r24, 0x00	; 0
    553a:	df dc       	rcall	.-1602   	; 0x4efa <_ZN6EspDrv11espEmptyBufEb>

	return false;
    553c:	80 e0       	ldi	r24, 0x00	; 0
}
    553e:	df 91       	pop	r29
    5540:	cf 91       	pop	r28
    5542:	08 95       	ret

00005544 <_ZN6EspDrv9timedReadEv>:
}


// copied from Serial::timedRead
int EspDrv::timedRead()
{
    5544:	cf 92       	push	r12
    5546:	df 92       	push	r13
    5548:	ef 92       	push	r14
    554a:	ff 92       	push	r15
  int _timeout = 1000;
  int c;
  long _startMillis = millis();
    554c:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    5550:	6b 01       	movw	r12, r22
    5552:	7c 01       	movw	r14, r24
  do
  {
    c = espSerial->read();
    5554:	80 91 66 06 	lds	r24, 0x0666	; 0x800666 <_ZN6EspDrv9espSerialE>
    5558:	90 91 67 06 	lds	r25, 0x0667	; 0x800667 <_ZN6EspDrv9espSerialE+0x1>
    555c:	dc 01       	movw	r26, r24
    555e:	ed 91       	ld	r30, X+
    5560:	fc 91       	ld	r31, X
    5562:	02 84       	ldd	r0, Z+10	; 0x0a
    5564:	f3 85       	ldd	r31, Z+11	; 0x0b
    5566:	e0 2d       	mov	r30, r0
    5568:	19 95       	eicall
    if (c >= 0) return c;
    556a:	97 ff       	sbrs	r25, 7
    556c:	0f c0       	rjmp	.+30     	; 0x558c <_ZN6EspDrv9timedReadEv+0x48>
  } while(millis() - _startMillis < _timeout);
    556e:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
int EspDrv::timedRead()
{
  int _timeout = 1000;
  int c;
  long _startMillis = millis();
  do
    5572:	dc 01       	movw	r26, r24
    5574:	cb 01       	movw	r24, r22
    5576:	8c 19       	sub	r24, r12
    5578:	9d 09       	sbc	r25, r13
    557a:	ae 09       	sbc	r26, r14
    557c:	bf 09       	sbc	r27, r15
    557e:	88 3e       	cpi	r24, 0xE8	; 232
    5580:	93 40       	sbci	r25, 0x03	; 3
    5582:	a1 05       	cpc	r26, r1
    5584:	b1 05       	cpc	r27, r1
    5586:	30 f3       	brcs	.-52     	; 0x5554 <_ZN6EspDrv9timedReadEv+0x10>
  {
    c = espSerial->read();
    if (c >= 0) return c;
  } while(millis() - _startMillis < _timeout);

  return -1; // -1 indicates timeout
    5588:	8f ef       	ldi	r24, 0xFF	; 255
    558a:	9f ef       	ldi	r25, 0xFF	; 255
}
    558c:	ff 90       	pop	r15
    558e:	ef 90       	pop	r14
    5590:	df 90       	pop	r13
    5592:	cf 90       	pop	r12
    5594:	08 95       	ret

00005596 <_ZN6EspDrv10getDataBufEhPhj>:
 * Receive the data into a buffer.
 * It reads up to bufSize bytes.
 * @return	received data size for success else -1.
 */
int EspDrv::getDataBuf(uint8_t connId, uint8_t *buf, uint16_t bufSize)
{
    5596:	cf 92       	push	r12
    5598:	df 92       	push	r13
    559a:	ef 92       	push	r14
    559c:	ff 92       	push	r15
    559e:	0f 93       	push	r16
    55a0:	1f 93       	push	r17
    55a2:	cf 93       	push	r28
    55a4:	df 93       	push	r29
    55a6:	8a 01       	movw	r16, r20
	if (connId!=_connId)
    55a8:	90 91 53 06 	lds	r25, 0x0653	; 0x800653 <_ZN6EspDrv7_connIdE>
    55ac:	98 13       	cpse	r25, r24
    55ae:	34 c0       	rjmp	.+104    	; 0x5618 <_ZN6EspDrv10getDataBufEhPhj+0x82>
		return false;

	if(_bufPos<bufSize)
    55b0:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    55b4:	90 91 55 06 	lds	r25, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    55b8:	a0 91 56 06 	lds	r26, 0x0656	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    55bc:	b0 91 57 06 	lds	r27, 0x0657	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    55c0:	6a 01       	movw	r12, r20
    55c2:	e1 2c       	mov	r14, r1
    55c4:	f1 2c       	mov	r15, r1
    55c6:	8c 15       	cp	r24, r12
    55c8:	9d 05       	cpc	r25, r13
    55ca:	ae 05       	cpc	r26, r14
    55cc:	bf 05       	cpc	r27, r15
    55ce:	0c f4       	brge	.+2      	; 0x55d2 <_ZN6EspDrv10getDataBufEhPhj+0x3c>
		bufSize = _bufPos;
    55d0:	8c 01       	movw	r16, r24
    55d2:	eb 01       	movw	r28, r22
    55d4:	7b 01       	movw	r14, r22
    55d6:	e0 0e       	add	r14, r16
    55d8:	f1 1e       	adc	r15, r17
	
	for(int i=0; i<bufSize; i++)
    55da:	ce 15       	cp	r28, r14
    55dc:	df 05       	cpc	r29, r15
    55de:	d1 f0       	breq	.+52     	; 0x5614 <_ZN6EspDrv10getDataBufEhPhj+0x7e>
	{
		int c = timedRead();
    55e0:	b1 df       	rcall	.-158    	; 0x5544 <_ZN6EspDrv9timedReadEv>
		//LOGDEBUG(c);
		if(c==-1)
    55e2:	8f 3f       	cpi	r24, 0xFF	; 255
    55e4:	2f ef       	ldi	r18, 0xFF	; 255
    55e6:	92 07       	cpc	r25, r18
    55e8:	d1 f0       	breq	.+52     	; 0x561e <_ZN6EspDrv10getDataBufEhPhj+0x88>
			return -1;
		
		buf[i] = (char)c;
    55ea:	89 93       	st	Y+, r24
		_bufPos--;
    55ec:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <_ZN6EspDrv7_bufPosE>
    55f0:	90 91 55 06 	lds	r25, 0x0655	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    55f4:	a0 91 56 06 	lds	r26, 0x0656	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    55f8:	b0 91 57 06 	lds	r27, 0x0657	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
    55fc:	01 97       	sbiw	r24, 0x01	; 1
    55fe:	a1 09       	sbc	r26, r1
    5600:	b1 09       	sbc	r27, r1
    5602:	80 93 54 06 	sts	0x0654, r24	; 0x800654 <_ZN6EspDrv7_bufPosE>
    5606:	90 93 55 06 	sts	0x0655, r25	; 0x800655 <_ZN6EspDrv7_bufPosE+0x1>
    560a:	a0 93 56 06 	sts	0x0656, r26	; 0x800656 <_ZN6EspDrv7_bufPosE+0x2>
    560e:	b0 93 57 06 	sts	0x0657, r27	; 0x800657 <_ZN6EspDrv7_bufPosE+0x3>
		return false;

	if(_bufPos<bufSize)
		bufSize = _bufPos;
	
	for(int i=0; i<bufSize; i++)
    5612:	e3 cf       	rjmp	.-58     	; 0x55da <_ZN6EspDrv10getDataBufEhPhj+0x44>
		
		buf[i] = (char)c;
		_bufPos--;
	}

	return bufSize;
    5614:	c8 01       	movw	r24, r16
    5616:	05 c0       	rjmp	.+10     	; 0x5622 <_ZN6EspDrv10getDataBufEhPhj+0x8c>
 * @return	received data size for success else -1.
 */
int EspDrv::getDataBuf(uint8_t connId, uint8_t *buf, uint16_t bufSize)
{
	if (connId!=_connId)
		return false;
    5618:	80 e0       	ldi	r24, 0x00	; 0
    561a:	90 e0       	ldi	r25, 0x00	; 0
    561c:	02 c0       	rjmp	.+4      	; 0x5622 <_ZN6EspDrv10getDataBufEhPhj+0x8c>
	for(int i=0; i<bufSize; i++)
	{
		int c = timedRead();
		//LOGDEBUG(c);
		if(c==-1)
			return -1;
    561e:	8f ef       	ldi	r24, 0xFF	; 255
    5620:	9f ef       	ldi	r25, 0xFF	; 255
		buf[i] = (char)c;
		_bufPos--;
	}

	return bufSize;
}
    5622:	df 91       	pop	r29
    5624:	cf 91       	pop	r28
    5626:	1f 91       	pop	r17
    5628:	0f 91       	pop	r16
    562a:	ff 90       	pop	r15
    562c:	ef 90       	pop	r14
    562e:	df 90       	pop	r13
    5630:	cf 90       	pop	r12
    5632:	08 95       	ret

00005634 <_GLOBAL__sub_I_ESPTAGS>:
  return -1; // -1 indicates timeout
}



EspDrv espDrv;
    5634:	0f 93       	push	r16
    5636:	00 e0       	ldi	r16, 0x00	; 0
    5638:	20 e0       	ldi	r18, 0x00	; 0
    563a:	40 e0       	ldi	r20, 0x00	; 0
    563c:	60 e0       	ldi	r22, 0x00	; 0
    563e:	88 e6       	ldi	r24, 0x68	; 104
    5640:	96 e0       	ldi	r25, 0x06	; 6
    5642:	0e 94 f7 11 	call	0x23ee	; 0x23ee <_ZN9IPAddressC1Ehhhh>
} TagsEnum;


Stream *EspDrv::espSerial;

RingBuffer EspDrv::ringBuf(32);
    5646:	60 e2       	ldi	r22, 0x20	; 32
    5648:	70 e0       	ldi	r23, 0x00	; 0
    564a:	8e e5       	ldi	r24, 0x5E	; 94
    564c:	96 e0       	ldi	r25, 0x06	; 6
  return -1; // -1 indicates timeout
}



EspDrv espDrv;
    564e:	0f 91       	pop	r16
} TagsEnum;


Stream *EspDrv::espSerial;

RingBuffer EspDrv::ringBuf(32);
    5650:	16 c0       	rjmp	.+44     	; 0x567e <_ZN10RingBufferC1Ej>

00005652 <_GLOBAL__sub_D_ESPTAGS>:
    5652:	8e e5       	ldi	r24, 0x5E	; 94
    5654:	96 e0       	ldi	r25, 0x06	; 6
    5656:	00 c0       	rjmp	.+0      	; 0x5658 <_ZN10RingBufferD1Ev>

00005658 <_ZN10RingBufferD1Ev>:
void RingBuffer::getStr(char * destination, unsigned int skipChars)
{
	int len = ringBufP-ringBuf-skipChars;

	// copy buffer to destination string
	strncpy(destination, ringBuf, len);
    5658:	08 95       	ret

0000565a <_ZN10RingBuffer5resetEv>:
    565a:	fc 01       	movw	r30, r24
    565c:	22 81       	ldd	r18, Z+2	; 0x02
    565e:	33 81       	ldd	r19, Z+3	; 0x03
    5660:	37 83       	std	Z+7, r19	; 0x07
    5662:	26 83       	std	Z+6, r18	; 0x06
    5664:	08 95       	ret

00005666 <_ZN10RingBuffer4initEv>:
    5666:	fc 01       	movw	r30, r24
    5668:	82 81       	ldd	r24, Z+2	; 0x02
    566a:	93 81       	ldd	r25, Z+3	; 0x03
    566c:	97 83       	std	Z+7, r25	; 0x07
    566e:	86 83       	std	Z+6, r24	; 0x06
    5670:	40 81       	ld	r20, Z
    5672:	51 81       	ldd	r21, Z+1	; 0x01
    5674:	4f 5f       	subi	r20, 0xFF	; 255
    5676:	5f 4f       	sbci	r21, 0xFF	; 255
    5678:	60 e0       	ldi	r22, 0x00	; 0
    567a:	70 e0       	ldi	r23, 0x00	; 0
    567c:	7a c5       	rjmp	.+2804   	; 0x6172 <memset>

0000567e <_ZN10RingBufferC1Ej>:
    567e:	0f 93       	push	r16
    5680:	1f 93       	push	r17
    5682:	cf 93       	push	r28
    5684:	df 93       	push	r29
    5686:	8c 01       	movw	r16, r24
    5688:	eb 01       	movw	r28, r22
    568a:	fc 01       	movw	r30, r24
    568c:	71 83       	std	Z+1, r23	; 0x01
    568e:	60 83       	st	Z, r22
    5690:	cb 01       	movw	r24, r22
    5692:	01 96       	adiw	r24, 0x01	; 1
    5694:	0e 94 10 12 	call	0x2420	; 0x2420 <_Znaj>
    5698:	f8 01       	movw	r30, r16
    569a:	93 83       	std	Z+3, r25	; 0x03
    569c:	82 83       	std	Z+2, r24	; 0x02
    569e:	c8 0f       	add	r28, r24
    56a0:	d9 1f       	adc	r29, r25
    56a2:	d5 83       	std	Z+5, r29	; 0x05
    56a4:	c4 83       	std	Z+4, r28	; 0x04
    56a6:	c8 01       	movw	r24, r16
    56a8:	df 91       	pop	r29
    56aa:	cf 91       	pop	r28
    56ac:	1f 91       	pop	r17
    56ae:	0f 91       	pop	r16
    56b0:	da cf       	rjmp	.-76     	; 0x5666 <_ZN10RingBuffer4initEv>

000056b2 <_ZN10RingBuffer4pushEc>:
    56b2:	fc 01       	movw	r30, r24
    56b4:	a6 81       	ldd	r26, Z+6	; 0x06
    56b6:	b7 81       	ldd	r27, Z+7	; 0x07
    56b8:	6c 93       	st	X, r22
    56ba:	86 81       	ldd	r24, Z+6	; 0x06
    56bc:	97 81       	ldd	r25, Z+7	; 0x07
    56be:	01 96       	adiw	r24, 0x01	; 1
    56c0:	97 83       	std	Z+7, r25	; 0x07
    56c2:	86 83       	std	Z+6, r24	; 0x06
    56c4:	24 81       	ldd	r18, Z+4	; 0x04
    56c6:	35 81       	ldd	r19, Z+5	; 0x05
    56c8:	82 17       	cp	r24, r18
    56ca:	93 07       	cpc	r25, r19
    56cc:	20 f0       	brcs	.+8      	; 0x56d6 <_ZN10RingBuffer4pushEc+0x24>
    56ce:	82 81       	ldd	r24, Z+2	; 0x02
    56d0:	93 81       	ldd	r25, Z+3	; 0x03
    56d2:	97 83       	std	Z+7, r25	; 0x07
    56d4:	86 83       	std	Z+6, r24	; 0x06
    56d6:	08 95       	ret

000056d8 <_ZN10RingBuffer8endsWithEPKc>:
    56d8:	cf 93       	push	r28
    56da:	df 93       	push	r29
    56dc:	dc 01       	movw	r26, r24
    56de:	fb 01       	movw	r30, r22
    56e0:	01 90       	ld	r0, Z+
    56e2:	00 20       	and	r0, r0
    56e4:	e9 f7       	brne	.-6      	; 0x56e0 <_ZN10RingBuffer8endsWithEPKc+0x8>
    56e6:	31 97       	sbiw	r30, 0x01	; 1
    56e8:	9f 01       	movw	r18, r30
    56ea:	26 1b       	sub	r18, r22
    56ec:	37 0b       	sbc	r19, r23
    56ee:	16 96       	adiw	r26, 0x06	; 6
    56f0:	ed 91       	ld	r30, X+
    56f2:	fc 91       	ld	r31, X
    56f4:	17 97       	sbiw	r26, 0x07	; 7
    56f6:	e2 1b       	sub	r30, r18
    56f8:	f3 0b       	sbc	r31, r19
    56fa:	12 96       	adiw	r26, 0x02	; 2
    56fc:	8d 91       	ld	r24, X+
    56fe:	9c 91       	ld	r25, X
    5700:	13 97       	sbiw	r26, 0x03	; 3
    5702:	e8 17       	cp	r30, r24
    5704:	f9 07       	cpc	r31, r25
    5706:	28 f4       	brcc	.+10     	; 0x5712 <_ZN10RingBuffer8endsWithEPKc+0x3a>
    5708:	4d 91       	ld	r20, X+
    570a:	5c 91       	ld	r21, X
    570c:	11 97       	sbiw	r26, 0x01	; 1
    570e:	e4 0f       	add	r30, r20
    5710:	f5 1f       	adc	r31, r21
    5712:	26 0f       	add	r18, r22
    5714:	37 1f       	adc	r19, r23
    5716:	eb 01       	movw	r28, r22
    5718:	62 17       	cp	r22, r18
    571a:	73 07       	cpc	r23, r19
    571c:	80 f4       	brcc	.+32     	; 0x573e <_ZN10RingBuffer8endsWithEPKc+0x66>
    571e:	6f 5f       	subi	r22, 0xFF	; 255
    5720:	7f 4f       	sbci	r23, 0xFF	; 255
    5722:	58 81       	ld	r21, Y
    5724:	40 81       	ld	r20, Z
    5726:	54 13       	cpse	r21, r20
    5728:	0c c0       	rjmp	.+24     	; 0x5742 <_ZN10RingBuffer8endsWithEPKc+0x6a>
    572a:	31 96       	adiw	r30, 0x01	; 1
    572c:	14 96       	adiw	r26, 0x04	; 4
    572e:	4d 91       	ld	r20, X+
    5730:	5c 91       	ld	r21, X
    5732:	15 97       	sbiw	r26, 0x05	; 5
    5734:	e4 17       	cp	r30, r20
    5736:	f5 07       	cpc	r31, r21
    5738:	71 f7       	brne	.-36     	; 0x5716 <_ZN10RingBuffer8endsWithEPKc+0x3e>
    573a:	fc 01       	movw	r30, r24
    573c:	ec cf       	rjmp	.-40     	; 0x5716 <_ZN10RingBuffer8endsWithEPKc+0x3e>
    573e:	81 e0       	ldi	r24, 0x01	; 1
    5740:	01 c0       	rjmp	.+2      	; 0x5744 <_ZN10RingBuffer8endsWithEPKc+0x6c>
    5742:	80 e0       	ldi	r24, 0x00	; 0
    5744:	df 91       	pop	r29
    5746:	cf 91       	pop	r28
    5748:	08 95       	ret

0000574a <_ZN10RingBuffer7getStrNEPcjj>:
	// terminate output string
	//destination[len]=0;
}

void RingBuffer::getStrN(char * destination, unsigned int skipChars, unsigned int num)
{
    574a:	fc 01       	movw	r30, r24
    574c:	cb 01       	movw	r24, r22
	int len = ringBufP-ringBuf-skipChars;
    574e:	62 81       	ldd	r22, Z+2	; 0x02
    5750:	73 81       	ldd	r23, Z+3	; 0x03
    5752:	06 80       	ldd	r0, Z+6	; 0x06
    5754:	f7 81       	ldd	r31, Z+7	; 0x07
    5756:	e0 2d       	mov	r30, r0
    5758:	e6 1b       	sub	r30, r22
    575a:	f7 0b       	sbc	r31, r23
    575c:	e4 1b       	sub	r30, r20
    575e:	f5 0b       	sbc	r31, r21

	if (len>num)
    5760:	2e 17       	cp	r18, r30
    5762:	3f 07       	cpc	r19, r31
    5764:	10 f0       	brcs	.+4      	; 0x576a <_ZN10RingBuffer7getStrNEPcjj+0x20>
	//destination[len]=0;
}

void RingBuffer::getStrN(char * destination, unsigned int skipChars, unsigned int num)
{
	int len = ringBufP-ringBuf-skipChars;
    5766:	af 01       	movw	r20, r30
    5768:	01 c0       	rjmp	.+2      	; 0x576c <_ZN10RingBuffer7getStrNEPcjj+0x22>

	if (len>num)
		len=num;
    576a:	a9 01       	movw	r20, r18

	// copy buffer to destination string
	strncpy(destination, ringBuf, len);
    576c:	19 c5       	rjmp	.+2610   	; 0x61a0 <strncpy>

0000576e <_ZN6Stream9timedReadEv>:
}

// reads data from the stream until the target string of given length is found
// returns true if target string is found, false if timed out
bool Stream::find(char *target, size_t length)
{
    576e:	0f 93       	push	r16
    5770:	1f 93       	push	r17
    5772:	cf 93       	push	r28
    5774:	df 93       	push	r29
    5776:	ec 01       	movw	r28, r24
    5778:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    577c:	68 87       	std	Y+8, r22	; 0x08
    577e:	79 87       	std	Y+9, r23	; 0x09
    5780:	8a 87       	std	Y+10, r24	; 0x0a
    5782:	9b 87       	std	Y+11, r25	; 0x0b
    5784:	e8 81       	ld	r30, Y
    5786:	f9 81       	ldd	r31, Y+1	; 0x01
    5788:	02 84       	ldd	r0, Z+10	; 0x0a
    578a:	f3 85       	ldd	r31, Z+11	; 0x0b
    578c:	e0 2d       	mov	r30, r0
    578e:	ce 01       	movw	r24, r28
    5790:	19 95       	eicall
    5792:	97 ff       	sbrs	r25, 7
    5794:	17 c0       	rjmp	.+46     	; 0x57c4 <_ZN6Stream9timedReadEv+0x56>
    5796:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    579a:	08 85       	ldd	r16, Y+8	; 0x08
    579c:	19 85       	ldd	r17, Y+9	; 0x09
    579e:	2a 85       	ldd	r18, Y+10	; 0x0a
    57a0:	3b 85       	ldd	r19, Y+11	; 0x0b
    57a2:	dc 01       	movw	r26, r24
    57a4:	cb 01       	movw	r24, r22
    57a6:	80 1b       	sub	r24, r16
    57a8:	91 0b       	sbc	r25, r17
    57aa:	a2 0b       	sbc	r26, r18
    57ac:	b3 0b       	sbc	r27, r19
    57ae:	0c 81       	ldd	r16, Y+4	; 0x04
    57b0:	1d 81       	ldd	r17, Y+5	; 0x05
    57b2:	2e 81       	ldd	r18, Y+6	; 0x06
    57b4:	3f 81       	ldd	r19, Y+7	; 0x07
    57b6:	80 17       	cp	r24, r16
    57b8:	91 07       	cpc	r25, r17
    57ba:	a2 07       	cpc	r26, r18
    57bc:	b3 07       	cpc	r27, r19
    57be:	10 f3       	brcs	.-60     	; 0x5784 <_ZN6Stream9timedReadEv+0x16>
    57c0:	8f ef       	ldi	r24, 0xFF	; 255
    57c2:	9f ef       	ldi	r25, 0xFF	; 255
    57c4:	df 91       	pop	r29
    57c6:	cf 91       	pop	r28
    57c8:	1f 91       	pop	r17
    57ca:	0f 91       	pop	r16
    57cc:	08 95       	ret

000057ce <_ZN6Stream9timedPeekEv>:
    57ce:	0f 93       	push	r16
    57d0:	1f 93       	push	r17
    57d2:	cf 93       	push	r28
    57d4:	df 93       	push	r29
    57d6:	ec 01       	movw	r28, r24
    57d8:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    57dc:	68 87       	std	Y+8, r22	; 0x08
    57de:	79 87       	std	Y+9, r23	; 0x09
    57e0:	8a 87       	std	Y+10, r24	; 0x0a
    57e2:	9b 87       	std	Y+11, r25	; 0x0b
    57e4:	e8 81       	ld	r30, Y
    57e6:	f9 81       	ldd	r31, Y+1	; 0x01
    57e8:	04 84       	ldd	r0, Z+12	; 0x0c
    57ea:	f5 85       	ldd	r31, Z+13	; 0x0d
    57ec:	e0 2d       	mov	r30, r0
    57ee:	ce 01       	movw	r24, r28
    57f0:	19 95       	eicall
    57f2:	97 ff       	sbrs	r25, 7
    57f4:	17 c0       	rjmp	.+46     	; 0x5824 <_ZN6Stream9timedPeekEv+0x56>
    57f6:	0e 94 c1 14 	call	0x2982	; 0x2982 <millis>
    57fa:	08 85       	ldd	r16, Y+8	; 0x08
    57fc:	19 85       	ldd	r17, Y+9	; 0x09
    57fe:	2a 85       	ldd	r18, Y+10	; 0x0a
    5800:	3b 85       	ldd	r19, Y+11	; 0x0b
    5802:	dc 01       	movw	r26, r24
    5804:	cb 01       	movw	r24, r22
    5806:	80 1b       	sub	r24, r16
    5808:	91 0b       	sbc	r25, r17
    580a:	a2 0b       	sbc	r26, r18
    580c:	b3 0b       	sbc	r27, r19
    580e:	0c 81       	ldd	r16, Y+4	; 0x04
    5810:	1d 81       	ldd	r17, Y+5	; 0x05
    5812:	2e 81       	ldd	r18, Y+6	; 0x06
    5814:	3f 81       	ldd	r19, Y+7	; 0x07
    5816:	80 17       	cp	r24, r16
    5818:	91 07       	cpc	r25, r17
    581a:	a2 07       	cpc	r26, r18
    581c:	b3 07       	cpc	r27, r19
    581e:	10 f3       	brcs	.-60     	; 0x57e4 <_ZN6Stream9timedPeekEv+0x16>
    5820:	8f ef       	ldi	r24, 0xFF	; 255
    5822:	9f ef       	ldi	r25, 0xFF	; 255
    5824:	df 91       	pop	r29
    5826:	cf 91       	pop	r28
    5828:	1f 91       	pop	r17
    582a:	0f 91       	pop	r16
    582c:	08 95       	ret

0000582e <_ZN6Stream13peekNextDigitE13LookaheadModeb>:
    582e:	0f 93       	push	r16
    5830:	1f 93       	push	r17
    5832:	cf 93       	push	r28
    5834:	df 93       	push	r29
    5836:	ec 01       	movw	r28, r24
    5838:	16 2f       	mov	r17, r22
    583a:	04 2f       	mov	r16, r20
    583c:	ce 01       	movw	r24, r28
    583e:	c7 df       	rcall	.-114    	; 0x57ce <_ZN6Stream9timedPeekEv>
    5840:	97 fd       	sbrc	r25, 7
    5842:	2b c0       	rjmp	.+86     	; 0x589a <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x6c>
    5844:	8d 32       	cpi	r24, 0x2D	; 45
    5846:	91 05       	cpc	r25, r1
    5848:	09 f1       	breq	.+66     	; 0x588c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x5e>
    584a:	9c 01       	movw	r18, r24
    584c:	20 53       	subi	r18, 0x30	; 48
    584e:	31 09       	sbc	r19, r1
    5850:	2a 30       	cpi	r18, 0x0A	; 10
    5852:	31 05       	cpc	r19, r1
    5854:	10 f1       	brcs	.+68     	; 0x589a <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x6c>
    5856:	00 23       	and	r16, r16
    5858:	19 f0       	breq	.+6      	; 0x5860 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x32>
    585a:	8e 32       	cpi	r24, 0x2E	; 46
    585c:	91 05       	cpc	r25, r1
    585e:	c1 f0       	breq	.+48     	; 0x5890 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x62>
    5860:	11 30       	cpi	r17, 0x01	; 1
    5862:	c9 f0       	breq	.+50     	; 0x5896 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x68>
    5864:	12 30       	cpi	r17, 0x02	; 2
    5866:	51 f4       	brne	.+20     	; 0x587c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4e>
    5868:	8d 30       	cpi	r24, 0x0D	; 13
    586a:	91 05       	cpc	r25, r1
    586c:	39 f0       	breq	.+14     	; 0x587c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4e>
    586e:	24 f4       	brge	.+8      	; 0x5878 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4a>
    5870:	09 97       	sbiw	r24, 0x09	; 9
    5872:	02 97       	sbiw	r24, 0x02	; 2
    5874:	18 f0       	brcs	.+6      	; 0x587c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x4e>
    5876:	0f c0       	rjmp	.+30     	; 0x5896 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x68>
    5878:	80 97       	sbiw	r24, 0x20	; 32
    587a:	69 f4       	brne	.+26     	; 0x5896 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x68>
    587c:	e8 81       	ld	r30, Y
    587e:	f9 81       	ldd	r31, Y+1	; 0x01
    5880:	02 84       	ldd	r0, Z+10	; 0x0a
    5882:	f3 85       	ldd	r31, Z+11	; 0x0b
    5884:	e0 2d       	mov	r30, r0
    5886:	ce 01       	movw	r24, r28
    5888:	19 95       	eicall
    588a:	d8 cf       	rjmp	.-80     	; 0x583c <_ZN6Stream13peekNextDigitE13LookaheadModeb+0xe>
    588c:	8d e2       	ldi	r24, 0x2D	; 45
    588e:	01 c0       	rjmp	.+2      	; 0x5892 <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x64>
    5890:	8e e2       	ldi	r24, 0x2E	; 46
    5892:	90 e0       	ldi	r25, 0x00	; 0
    5894:	02 c0       	rjmp	.+4      	; 0x589a <_ZN6Stream13peekNextDigitE13LookaheadModeb+0x6c>
    5896:	8f ef       	ldi	r24, 0xFF	; 255
    5898:	9f ef       	ldi	r25, 0xFF	; 255
    589a:	df 91       	pop	r29
    589c:	cf 91       	pop	r28
    589e:	1f 91       	pop	r17
    58a0:	0f 91       	pop	r16
    58a2:	08 95       	ret

000058a4 <_ZN6Stream8parseIntE13LookaheadModec>:
    58a4:	bf 92       	push	r11
    58a6:	cf 92       	push	r12
    58a8:	df 92       	push	r13
    58aa:	ef 92       	push	r14
    58ac:	ff 92       	push	r15
    58ae:	0f 93       	push	r16
    58b0:	1f 93       	push	r17
    58b2:	cf 93       	push	r28
    58b4:	df 93       	push	r29
    58b6:	8c 01       	movw	r16, r24
    58b8:	c4 2f       	mov	r28, r20
    58ba:	40 e0       	ldi	r20, 0x00	; 0
    58bc:	b8 df       	rcall	.-144    	; 0x582e <_ZN6Stream13peekNextDigitE13LookaheadModeb>
    58be:	fc 01       	movw	r30, r24
    58c0:	97 fd       	sbrc	r25, 7
    58c2:	43 c0       	rjmp	.+134    	; 0x594a <_ZN6Stream8parseIntE13LookaheadModec+0xa6>
    58c4:	c1 2c       	mov	r12, r1
    58c6:	d1 2c       	mov	r13, r1
    58c8:	76 01       	movw	r14, r12
    58ca:	b1 2c       	mov	r11, r1
    58cc:	d0 e0       	ldi	r29, 0x00	; 0
    58ce:	ec 17       	cp	r30, r28
    58d0:	fd 07       	cpc	r31, r29
    58d2:	01 f1       	breq	.+64     	; 0x5914 <_ZN6Stream8parseIntE13LookaheadModec+0x70>
    58d4:	ed 32       	cpi	r30, 0x2D	; 45
    58d6:	f1 05       	cpc	r31, r1
    58d8:	d9 f0       	breq	.+54     	; 0x5910 <_ZN6Stream8parseIntE13LookaheadModec+0x6c>
    58da:	cf 01       	movw	r24, r30
    58dc:	c0 97       	sbiw	r24, 0x30	; 48
    58de:	0a 97       	sbiw	r24, 0x0a	; 10
    58e0:	c8 f4       	brcc	.+50     	; 0x5914 <_ZN6Stream8parseIntE13LookaheadModec+0x70>
    58e2:	aa e0       	ldi	r26, 0x0A	; 10
    58e4:	b0 e0       	ldi	r27, 0x00	; 0
    58e6:	a7 01       	movw	r20, r14
    58e8:	96 01       	movw	r18, r12
    58ea:	9b d1       	rcall	.+822    	; 0x5c22 <__muluhisi3>
    58ec:	6f 01       	movw	r12, r30
    58ee:	ff 0f       	add	r31, r31
    58f0:	ee 08       	sbc	r14, r14
    58f2:	ff 08       	sbc	r15, r15
    58f4:	dc 01       	movw	r26, r24
    58f6:	cb 01       	movw	r24, r22
    58f8:	8c 0d       	add	r24, r12
    58fa:	9d 1d       	adc	r25, r13
    58fc:	ae 1d       	adc	r26, r14
    58fe:	bf 1d       	adc	r27, r15
    5900:	6c 01       	movw	r12, r24
    5902:	7d 01       	movw	r14, r26
    5904:	20 e3       	ldi	r18, 0x30	; 48
    5906:	c2 1a       	sub	r12, r18
    5908:	d1 08       	sbc	r13, r1
    590a:	e1 08       	sbc	r14, r1
    590c:	f1 08       	sbc	r15, r1
    590e:	02 c0       	rjmp	.+4      	; 0x5914 <_ZN6Stream8parseIntE13LookaheadModec+0x70>
    5910:	bb 24       	eor	r11, r11
    5912:	b3 94       	inc	r11
    5914:	d8 01       	movw	r26, r16
    5916:	ed 91       	ld	r30, X+
    5918:	fc 91       	ld	r31, X
    591a:	02 84       	ldd	r0, Z+10	; 0x0a
    591c:	f3 85       	ldd	r31, Z+11	; 0x0b
    591e:	e0 2d       	mov	r30, r0
    5920:	c8 01       	movw	r24, r16
    5922:	19 95       	eicall
    5924:	c8 01       	movw	r24, r16
    5926:	53 df       	rcall	.-346    	; 0x57ce <_ZN6Stream9timedPeekEv>
    5928:	fc 01       	movw	r30, r24
    592a:	c0 97       	sbiw	r24, 0x30	; 48
    592c:	0a 97       	sbiw	r24, 0x0a	; 10
    592e:	78 f2       	brcs	.-98     	; 0x58ce <_ZN6Stream8parseIntE13LookaheadModec+0x2a>
    5930:	ce 17       	cp	r28, r30
    5932:	df 07       	cpc	r29, r31
    5934:	61 f2       	breq	.-104    	; 0x58ce <_ZN6Stream8parseIntE13LookaheadModec+0x2a>
    5936:	bb 20       	and	r11, r11
    5938:	61 f0       	breq	.+24     	; 0x5952 <_ZN6Stream8parseIntE13LookaheadModec+0xae>
    593a:	66 27       	eor	r22, r22
    593c:	77 27       	eor	r23, r23
    593e:	cb 01       	movw	r24, r22
    5940:	6c 19       	sub	r22, r12
    5942:	7d 09       	sbc	r23, r13
    5944:	8e 09       	sbc	r24, r14
    5946:	9f 09       	sbc	r25, r15
    5948:	06 c0       	rjmp	.+12     	; 0x5956 <_ZN6Stream8parseIntE13LookaheadModec+0xb2>
    594a:	60 e0       	ldi	r22, 0x00	; 0
    594c:	70 e0       	ldi	r23, 0x00	; 0
    594e:	cb 01       	movw	r24, r22
    5950:	02 c0       	rjmp	.+4      	; 0x5956 <_ZN6Stream8parseIntE13LookaheadModec+0xb2>
    5952:	c7 01       	movw	r24, r14
    5954:	b6 01       	movw	r22, r12
    5956:	df 91       	pop	r29
    5958:	cf 91       	pop	r28
    595a:	1f 91       	pop	r17
    595c:	0f 91       	pop	r16
    595e:	ff 90       	pop	r15
    5960:	ef 90       	pop	r14
    5962:	df 90       	pop	r13
    5964:	cf 90       	pop	r12
    5966:	bf 90       	pop	r11
    5968:	08 95       	ret

0000596a <_ZN6Stream9findMultiEPNS_11MultiTargetEi>:
    596a:	4f 92       	push	r4
    596c:	5f 92       	push	r5
    596e:	6f 92       	push	r6
    5970:	7f 92       	push	r7
    5972:	8f 92       	push	r8
    5974:	9f 92       	push	r9
    5976:	af 92       	push	r10
    5978:	bf 92       	push	r11
    597a:	cf 92       	push	r12
    597c:	df 92       	push	r13
    597e:	ef 92       	push	r14
    5980:	ff 92       	push	r15
    5982:	0f 93       	push	r16
    5984:	1f 93       	push	r17
    5986:	cf 93       	push	r28
    5988:	df 93       	push	r29
    598a:	8c 01       	movw	r16, r24
    598c:	eb 01       	movw	r28, r22
    598e:	86 e0       	ldi	r24, 0x06	; 6
    5990:	84 9f       	mul	r24, r20
    5992:	40 01       	movw	r8, r0
    5994:	85 9f       	mul	r24, r21
    5996:	90 0c       	add	r9, r0
    5998:	11 24       	eor	r1, r1
    599a:	86 0e       	add	r8, r22
    599c:	97 1e       	adc	r9, r23
    599e:	fb 01       	movw	r30, r22
    59a0:	e8 15       	cp	r30, r8
    59a2:	f9 05       	cpc	r31, r9
    59a4:	f8 f4       	brcc	.+62     	; 0x59e4 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x7a>
    59a6:	82 81       	ldd	r24, Z+2	; 0x02
    59a8:	93 81       	ldd	r25, Z+3	; 0x03
    59aa:	89 2b       	or	r24, r25
    59ac:	09 f1       	breq	.+66     	; 0x59f0 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x86>
    59ae:	36 96       	adiw	r30, 0x06	; 6
    59b0:	f7 cf       	rjmp	.-18     	; 0x59a0 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x36>
    59b2:	60 81       	ld	r22, Z
    59b4:	71 81       	ldd	r23, Z+1	; 0x01
    59b6:	44 81       	ldd	r20, Z+4	; 0x04
    59b8:	55 81       	ldd	r21, Z+5	; 0x05
    59ba:	db 01       	movw	r26, r22
    59bc:	a4 0f       	add	r26, r20
    59be:	b5 1f       	adc	r27, r21
    59c0:	2c 91       	ld	r18, X
    59c2:	30 e0       	ldi	r19, 0x00	; 0
    59c4:	82 17       	cp	r24, r18
    59c6:	93 07       	cpc	r25, r19
    59c8:	09 f5       	brne	.+66     	; 0x5a0c <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xa2>
    59ca:	4f 5f       	subi	r20, 0xFF	; 255
    59cc:	5f 4f       	sbci	r21, 0xFF	; 255
    59ce:	55 83       	std	Z+5, r21	; 0x05
    59d0:	44 83       	std	Z+4, r20	; 0x04
    59d2:	22 81       	ldd	r18, Z+2	; 0x02
    59d4:	33 81       	ldd	r19, Z+3	; 0x03
    59d6:	42 17       	cp	r20, r18
    59d8:	53 07       	cpc	r21, r19
    59da:	51 f0       	breq	.+20     	; 0x59f0 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x86>
    59dc:	36 96       	adiw	r30, 0x06	; 6
    59de:	e8 15       	cp	r30, r8
    59e0:	f9 05       	cpc	r31, r9
    59e2:	38 f3       	brcs	.-50     	; 0x59b2 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x48>
    59e4:	c8 01       	movw	r24, r16
    59e6:	c3 de       	rcall	.-634    	; 0x576e <_ZN6Stream9timedReadEv>
    59e8:	97 fd       	sbrc	r25, 7
    59ea:	44 c0       	rjmp	.+136    	; 0x5a74 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x10a>
    59ec:	fe 01       	movw	r30, r28
    59ee:	f7 cf       	rjmp	.-18     	; 0x59de <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x74>
    59f0:	ec 1b       	sub	r30, r28
    59f2:	fd 0b       	sbc	r31, r29
    59f4:	f5 95       	asr	r31
    59f6:	e7 95       	ror	r30
    59f8:	2b ea       	ldi	r18, 0xAB	; 171
    59fa:	3a ea       	ldi	r19, 0xAA	; 170
    59fc:	e2 9f       	mul	r30, r18
    59fe:	c0 01       	movw	r24, r0
    5a00:	e3 9f       	mul	r30, r19
    5a02:	90 0d       	add	r25, r0
    5a04:	f2 9f       	mul	r31, r18
    5a06:	90 0d       	add	r25, r0
    5a08:	11 24       	eor	r1, r1
    5a0a:	36 c0       	rjmp	.+108    	; 0x5a78 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x10e>
    5a0c:	41 15       	cp	r20, r1
    5a0e:	51 05       	cpc	r21, r1
    5a10:	29 f3       	breq	.-54     	; 0x59dc <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x72>
    5a12:	c4 80       	ldd	r12, Z+4	; 0x04
    5a14:	d5 80       	ldd	r13, Z+5	; 0x05
    5a16:	96 01       	movw	r18, r12
    5a18:	21 50       	subi	r18, 0x01	; 1
    5a1a:	31 09       	sbc	r19, r1
    5a1c:	35 83       	std	Z+5, r19	; 0x05
    5a1e:	24 83       	std	Z+4, r18	; 0x04
    5a20:	db 01       	movw	r26, r22
    5a22:	a2 0f       	add	r26, r18
    5a24:	b3 1f       	adc	r27, r19
    5a26:	ac 91       	ld	r26, X
    5a28:	b0 e0       	ldi	r27, 0x00	; 0
    5a2a:	8a 17       	cp	r24, r26
    5a2c:	9b 07       	cpc	r25, r27
    5a2e:	f9 f4       	brne	.+62     	; 0x5a6e <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x104>
    5a30:	21 15       	cp	r18, r1
    5a32:	31 05       	cpc	r19, r1
    5a34:	c9 f0       	breq	.+50     	; 0x5a68 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xfe>
    5a36:	5b 01       	movw	r10, r22
    5a38:	7a 01       	movw	r14, r20
    5a3a:	e2 1a       	sub	r14, r18
    5a3c:	f3 0a       	sbc	r15, r19
    5a3e:	e6 0e       	add	r14, r22
    5a40:	f7 1e       	adc	r15, r23
    5a42:	41 2c       	mov	r4, r1
    5a44:	51 2c       	mov	r5, r1
    5a46:	d5 01       	movw	r26, r10
    5a48:	6d 90       	ld	r6, X+
    5a4a:	5d 01       	movw	r10, r26
    5a4c:	d7 01       	movw	r26, r14
    5a4e:	7d 90       	ld	r7, X+
    5a50:	7d 01       	movw	r14, r26
    5a52:	67 10       	cpse	r6, r7
    5a54:	06 c0       	rjmp	.+12     	; 0x5a62 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xf8>
    5a56:	bf ef       	ldi	r27, 0xFF	; 255
    5a58:	4b 1a       	sub	r4, r27
    5a5a:	5b 0a       	sbc	r5, r27
    5a5c:	42 16       	cp	r4, r18
    5a5e:	53 06       	cpc	r5, r19
    5a60:	90 f3       	brcs	.-28     	; 0x5a46 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xdc>
    5a62:	24 15       	cp	r18, r4
    5a64:	35 05       	cpc	r19, r5
    5a66:	a9 f6       	brne	.-86     	; 0x5a12 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xa8>
    5a68:	d5 82       	std	Z+5, r13	; 0x05
    5a6a:	c4 82       	std	Z+4, r12	; 0x04
    5a6c:	b7 cf       	rjmp	.-146    	; 0x59dc <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x72>
    5a6e:	23 2b       	or	r18, r19
    5a70:	81 f6       	brne	.-96     	; 0x5a12 <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0xa8>
    5a72:	b4 cf       	rjmp	.-152    	; 0x59dc <_ZN6Stream9findMultiEPNS_11MultiTargetEi+0x72>
    5a74:	8f ef       	ldi	r24, 0xFF	; 255
    5a76:	9f ef       	ldi	r25, 0xFF	; 255
    5a78:	df 91       	pop	r29
    5a7a:	cf 91       	pop	r28
    5a7c:	1f 91       	pop	r17
    5a7e:	0f 91       	pop	r16
    5a80:	ff 90       	pop	r15
    5a82:	ef 90       	pop	r14
    5a84:	df 90       	pop	r13
    5a86:	cf 90       	pop	r12
    5a88:	bf 90       	pop	r11
    5a8a:	af 90       	pop	r10
    5a8c:	9f 90       	pop	r9
    5a8e:	8f 90       	pop	r8
    5a90:	7f 90       	pop	r7
    5a92:	6f 90       	pop	r6
    5a94:	5f 90       	pop	r5
    5a96:	4f 90       	pop	r4
    5a98:	08 95       	ret

00005a9a <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1>:
    5a9a:	cf 93       	push	r28
    5a9c:	df 93       	push	r29
    5a9e:	00 d0       	rcall	.+0      	; 0x5aa0 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x6>
    5aa0:	00 d0       	rcall	.+0      	; 0x5aa2 <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x8>
    5aa2:	cd b7       	in	r28, 0x3d	; 61
    5aa4:	de b7       	in	r29, 0x3e	; 62
    5aa6:	fe 01       	movw	r30, r28
    5aa8:	31 96       	adiw	r30, 0x01	; 1
    5aaa:	26 e0       	ldi	r18, 0x06	; 6
    5aac:	df 01       	movw	r26, r30
    5aae:	1d 92       	st	X+, r1
    5ab0:	2a 95       	dec	r18
    5ab2:	e9 f7       	brne	.-6      	; 0x5aae <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x14>
    5ab4:	7a 83       	std	Y+2, r23	; 0x02
    5ab6:	69 83       	std	Y+1, r22	; 0x01
    5ab8:	5c 83       	std	Y+4, r21	; 0x04
    5aba:	4b 83       	std	Y+3, r20	; 0x03
    5abc:	41 e0       	ldi	r20, 0x01	; 1
    5abe:	50 e0       	ldi	r21, 0x00	; 0
    5ac0:	bf 01       	movw	r22, r30
    5ac2:	53 df       	rcall	.-346    	; 0x596a <_ZN6Stream9findMultiEPNS_11MultiTargetEi>
    5ac4:	21 e0       	ldi	r18, 0x01	; 1
    5ac6:	89 2b       	or	r24, r25
    5ac8:	09 f0       	breq	.+2      	; 0x5acc <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1+0x32>
    5aca:	20 e0       	ldi	r18, 0x00	; 0
    5acc:	82 2f       	mov	r24, r18
    5ace:	26 96       	adiw	r28, 0x06	; 6
    5ad0:	0f b6       	in	r0, 0x3f	; 63
    5ad2:	f8 94       	cli
    5ad4:	de bf       	out	0x3e, r29	; 62
    5ad6:	0f be       	out	0x3f, r0	; 63
    5ad8:	cd bf       	out	0x3d, r28	; 61
    5ada:	df 91       	pop	r29
    5adc:	cf 91       	pop	r28
    5ade:	08 95       	ret

00005ae0 <_ZN6Stream4findEPc>:
}

 // find returns true if the target string is found
bool  Stream::find(char *target)
{
  return findUntil(target, strlen(target), NULL, 0);
    5ae0:	fb 01       	movw	r30, r22
    5ae2:	01 90       	ld	r0, Z+
    5ae4:	00 20       	and	r0, r0
    5ae6:	e9 f7       	brne	.-6      	; 0x5ae2 <_ZN6Stream4findEPc+0x2>
    5ae8:	31 97       	sbiw	r30, 0x01	; 1
    5aea:	af 01       	movw	r20, r30
    5aec:	46 1b       	sub	r20, r22
    5aee:	57 0b       	sbc	r21, r23
    5af0:	d4 cf       	rjmp	.-88     	; 0x5a9a <_ZN6Stream9findUntilEPcjS0_j.part.0.constprop.1>

00005af2 <__cmpsf2>:
    5af2:	32 d0       	rcall	.+100    	; 0x5b58 <__fp_cmp>
    5af4:	08 f4       	brcc	.+2      	; 0x5af8 <__cmpsf2+0x6>
    5af6:	81 e0       	ldi	r24, 0x01	; 1
    5af8:	08 95       	ret

00005afa <__fixunssfsi>:
    5afa:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <__fp_splitA>
    5afe:	88 f0       	brcs	.+34     	; 0x5b22 <__fixunssfsi+0x28>
    5b00:	9f 57       	subi	r25, 0x7F	; 127
    5b02:	98 f0       	brcs	.+38     	; 0x5b2a <__fixunssfsi+0x30>
    5b04:	b9 2f       	mov	r27, r25
    5b06:	99 27       	eor	r25, r25
    5b08:	b7 51       	subi	r27, 0x17	; 23
    5b0a:	b0 f0       	brcs	.+44     	; 0x5b38 <__fixunssfsi+0x3e>
    5b0c:	e1 f0       	breq	.+56     	; 0x5b46 <__fixunssfsi+0x4c>
    5b0e:	66 0f       	add	r22, r22
    5b10:	77 1f       	adc	r23, r23
    5b12:	88 1f       	adc	r24, r24
    5b14:	99 1f       	adc	r25, r25
    5b16:	1a f0       	brmi	.+6      	; 0x5b1e <__fixunssfsi+0x24>
    5b18:	ba 95       	dec	r27
    5b1a:	c9 f7       	brne	.-14     	; 0x5b0e <__fixunssfsi+0x14>
    5b1c:	14 c0       	rjmp	.+40     	; 0x5b46 <__fixunssfsi+0x4c>
    5b1e:	b1 30       	cpi	r27, 0x01	; 1
    5b20:	91 f0       	breq	.+36     	; 0x5b46 <__fixunssfsi+0x4c>
    5b22:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <__fp_zero>
    5b26:	b1 e0       	ldi	r27, 0x01	; 1
    5b28:	08 95       	ret
    5b2a:	0c 94 af 0e 	jmp	0x1d5e	; 0x1d5e <__fp_zero>
    5b2e:	67 2f       	mov	r22, r23
    5b30:	78 2f       	mov	r23, r24
    5b32:	88 27       	eor	r24, r24
    5b34:	b8 5f       	subi	r27, 0xF8	; 248
    5b36:	39 f0       	breq	.+14     	; 0x5b46 <__fixunssfsi+0x4c>
    5b38:	b9 3f       	cpi	r27, 0xF9	; 249
    5b3a:	cc f3       	brlt	.-14     	; 0x5b2e <__fixunssfsi+0x34>
    5b3c:	86 95       	lsr	r24
    5b3e:	77 95       	ror	r23
    5b40:	67 95       	ror	r22
    5b42:	b3 95       	inc	r27
    5b44:	d9 f7       	brne	.-10     	; 0x5b3c <__fixunssfsi+0x42>
    5b46:	3e f4       	brtc	.+14     	; 0x5b56 <__fixunssfsi+0x5c>
    5b48:	90 95       	com	r25
    5b4a:	80 95       	com	r24
    5b4c:	70 95       	com	r23
    5b4e:	61 95       	neg	r22
    5b50:	7f 4f       	sbci	r23, 0xFF	; 255
    5b52:	8f 4f       	sbci	r24, 0xFF	; 255
    5b54:	9f 4f       	sbci	r25, 0xFF	; 255
    5b56:	08 95       	ret

00005b58 <__fp_cmp>:
    5b58:	99 0f       	add	r25, r25
    5b5a:	00 08       	sbc	r0, r0
    5b5c:	55 0f       	add	r21, r21
    5b5e:	aa 0b       	sbc	r26, r26
    5b60:	e0 e8       	ldi	r30, 0x80	; 128
    5b62:	fe ef       	ldi	r31, 0xFE	; 254
    5b64:	16 16       	cp	r1, r22
    5b66:	17 06       	cpc	r1, r23
    5b68:	e8 07       	cpc	r30, r24
    5b6a:	f9 07       	cpc	r31, r25
    5b6c:	c0 f0       	brcs	.+48     	; 0x5b9e <__fp_cmp+0x46>
    5b6e:	12 16       	cp	r1, r18
    5b70:	13 06       	cpc	r1, r19
    5b72:	e4 07       	cpc	r30, r20
    5b74:	f5 07       	cpc	r31, r21
    5b76:	98 f0       	brcs	.+38     	; 0x5b9e <__fp_cmp+0x46>
    5b78:	62 1b       	sub	r22, r18
    5b7a:	73 0b       	sbc	r23, r19
    5b7c:	84 0b       	sbc	r24, r20
    5b7e:	95 0b       	sbc	r25, r21
    5b80:	39 f4       	brne	.+14     	; 0x5b90 <__fp_cmp+0x38>
    5b82:	0a 26       	eor	r0, r26
    5b84:	61 f0       	breq	.+24     	; 0x5b9e <__fp_cmp+0x46>
    5b86:	23 2b       	or	r18, r19
    5b88:	24 2b       	or	r18, r20
    5b8a:	25 2b       	or	r18, r21
    5b8c:	21 f4       	brne	.+8      	; 0x5b96 <__fp_cmp+0x3e>
    5b8e:	08 95       	ret
    5b90:	0a 26       	eor	r0, r26
    5b92:	09 f4       	brne	.+2      	; 0x5b96 <__fp_cmp+0x3e>
    5b94:	a1 40       	sbci	r26, 0x01	; 1
    5b96:	a6 95       	lsr	r26
    5b98:	8f ef       	ldi	r24, 0xFF	; 255
    5b9a:	81 1d       	adc	r24, r1
    5b9c:	81 1d       	adc	r24, r1
    5b9e:	08 95       	ret

00005ba0 <__gesf2>:
    5ba0:	db df       	rcall	.-74     	; 0x5b58 <__fp_cmp>
    5ba2:	08 f4       	brcc	.+2      	; 0x5ba6 <__gesf2+0x6>
    5ba4:	8f ef       	ldi	r24, 0xFF	; 255
    5ba6:	08 95       	ret

00005ba8 <__unordsf2>:
    5ba8:	d7 df       	rcall	.-82     	; 0x5b58 <__fp_cmp>
    5baa:	88 0b       	sbc	r24, r24
    5bac:	99 0b       	sbc	r25, r25
    5bae:	08 95       	ret

00005bb0 <__udivmodsi4>:
    5bb0:	a1 e2       	ldi	r26, 0x21	; 33
    5bb2:	1a 2e       	mov	r1, r26
    5bb4:	aa 1b       	sub	r26, r26
    5bb6:	bb 1b       	sub	r27, r27
    5bb8:	fd 01       	movw	r30, r26
    5bba:	0d c0       	rjmp	.+26     	; 0x5bd6 <__udivmodsi4_ep>

00005bbc <__udivmodsi4_loop>:
    5bbc:	aa 1f       	adc	r26, r26
    5bbe:	bb 1f       	adc	r27, r27
    5bc0:	ee 1f       	adc	r30, r30
    5bc2:	ff 1f       	adc	r31, r31
    5bc4:	a2 17       	cp	r26, r18
    5bc6:	b3 07       	cpc	r27, r19
    5bc8:	e4 07       	cpc	r30, r20
    5bca:	f5 07       	cpc	r31, r21
    5bcc:	20 f0       	brcs	.+8      	; 0x5bd6 <__udivmodsi4_ep>
    5bce:	a2 1b       	sub	r26, r18
    5bd0:	b3 0b       	sbc	r27, r19
    5bd2:	e4 0b       	sbc	r30, r20
    5bd4:	f5 0b       	sbc	r31, r21

00005bd6 <__udivmodsi4_ep>:
    5bd6:	66 1f       	adc	r22, r22
    5bd8:	77 1f       	adc	r23, r23
    5bda:	88 1f       	adc	r24, r24
    5bdc:	99 1f       	adc	r25, r25
    5bde:	1a 94       	dec	r1
    5be0:	69 f7       	brne	.-38     	; 0x5bbc <__udivmodsi4_loop>
    5be2:	60 95       	com	r22
    5be4:	70 95       	com	r23
    5be6:	80 95       	com	r24
    5be8:	90 95       	com	r25
    5bea:	9b 01       	movw	r18, r22
    5bec:	ac 01       	movw	r20, r24
    5bee:	bd 01       	movw	r22, r26
    5bf0:	cf 01       	movw	r24, r30
    5bf2:	08 95       	ret

00005bf4 <__tablejump2__>:
    5bf4:	ee 0f       	add	r30, r30
    5bf6:	ff 1f       	adc	r31, r31
    5bf8:	88 1f       	adc	r24, r24
    5bfa:	8b bf       	out	0x3b, r24	; 59
    5bfc:	07 90       	elpm	r0, Z+
    5bfe:	f6 91       	elpm	r31, Z
    5c00:	e0 2d       	mov	r30, r0
    5c02:	19 94       	eijmp

00005c04 <__umulhisi3>:
    5c04:	a2 9f       	mul	r26, r18
    5c06:	b0 01       	movw	r22, r0
    5c08:	b3 9f       	mul	r27, r19
    5c0a:	c0 01       	movw	r24, r0
    5c0c:	a3 9f       	mul	r26, r19
    5c0e:	70 0d       	add	r23, r0
    5c10:	81 1d       	adc	r24, r1
    5c12:	11 24       	eor	r1, r1
    5c14:	91 1d       	adc	r25, r1
    5c16:	b2 9f       	mul	r27, r18
    5c18:	70 0d       	add	r23, r0
    5c1a:	81 1d       	adc	r24, r1
    5c1c:	11 24       	eor	r1, r1
    5c1e:	91 1d       	adc	r25, r1
    5c20:	08 95       	ret

00005c22 <__muluhisi3>:
    5c22:	f0 df       	rcall	.-32     	; 0x5c04 <__umulhisi3>
    5c24:	a5 9f       	mul	r26, r21
    5c26:	90 0d       	add	r25, r0
    5c28:	b4 9f       	mul	r27, r20
    5c2a:	90 0d       	add	r25, r0
    5c2c:	a4 9f       	mul	r26, r20
    5c2e:	80 0d       	add	r24, r0
    5c30:	91 1d       	adc	r25, r1
    5c32:	11 24       	eor	r1, r1
    5c34:	08 95       	ret

00005c36 <dtostrf>:
    5c36:	ef 92       	push	r14
    5c38:	0f 93       	push	r16
    5c3a:	1f 93       	push	r17
    5c3c:	cf 93       	push	r28
    5c3e:	df 93       	push	r29
    5c40:	e8 01       	movw	r28, r16
    5c42:	47 fd       	sbrc	r20, 7
    5c44:	02 c0       	rjmp	.+4      	; 0x5c4a <dtostrf+0x14>
    5c46:	34 e0       	ldi	r19, 0x04	; 4
    5c48:	01 c0       	rjmp	.+2      	; 0x5c4c <dtostrf+0x16>
    5c4a:	34 e1       	ldi	r19, 0x14	; 20
    5c4c:	04 2e       	mov	r0, r20
    5c4e:	00 0c       	add	r0, r0
    5c50:	55 0b       	sbc	r21, r21
    5c52:	57 ff       	sbrs	r21, 7
    5c54:	03 c0       	rjmp	.+6      	; 0x5c5c <dtostrf+0x26>
    5c56:	51 95       	neg	r21
    5c58:	41 95       	neg	r20
    5c5a:	51 09       	sbc	r21, r1
    5c5c:	e3 2e       	mov	r14, r19
    5c5e:	02 2f       	mov	r16, r18
    5c60:	24 2f       	mov	r18, r20
    5c62:	ae 01       	movw	r20, r28
    5c64:	7e d5       	rcall	.+2812   	; 0x6762 <dtoa_prf>
    5c66:	ce 01       	movw	r24, r28
    5c68:	df 91       	pop	r29
    5c6a:	cf 91       	pop	r28
    5c6c:	1f 91       	pop	r17
    5c6e:	0f 91       	pop	r16
    5c70:	ef 90       	pop	r14
    5c72:	08 95       	ret

00005c74 <malloc>:
    5c74:	0f 93       	push	r16
    5c76:	1f 93       	push	r17
    5c78:	cf 93       	push	r28
    5c7a:	df 93       	push	r29
    5c7c:	82 30       	cpi	r24, 0x02	; 2
    5c7e:	91 05       	cpc	r25, r1
    5c80:	10 f4       	brcc	.+4      	; 0x5c86 <malloc+0x12>
    5c82:	82 e0       	ldi	r24, 0x02	; 2
    5c84:	90 e0       	ldi	r25, 0x00	; 0
    5c86:	e0 91 70 06 	lds	r30, 0x0670	; 0x800670 <__flp>
    5c8a:	f0 91 71 06 	lds	r31, 0x0671	; 0x800671 <__flp+0x1>
    5c8e:	20 e0       	ldi	r18, 0x00	; 0
    5c90:	30 e0       	ldi	r19, 0x00	; 0
    5c92:	a0 e0       	ldi	r26, 0x00	; 0
    5c94:	b0 e0       	ldi	r27, 0x00	; 0
    5c96:	30 97       	sbiw	r30, 0x00	; 0
    5c98:	19 f1       	breq	.+70     	; 0x5ce0 <malloc+0x6c>
    5c9a:	40 81       	ld	r20, Z
    5c9c:	51 81       	ldd	r21, Z+1	; 0x01
    5c9e:	02 81       	ldd	r16, Z+2	; 0x02
    5ca0:	13 81       	ldd	r17, Z+3	; 0x03
    5ca2:	48 17       	cp	r20, r24
    5ca4:	59 07       	cpc	r21, r25
    5ca6:	c8 f0       	brcs	.+50     	; 0x5cda <malloc+0x66>
    5ca8:	84 17       	cp	r24, r20
    5caa:	95 07       	cpc	r25, r21
    5cac:	69 f4       	brne	.+26     	; 0x5cc8 <malloc+0x54>
    5cae:	10 97       	sbiw	r26, 0x00	; 0
    5cb0:	31 f0       	breq	.+12     	; 0x5cbe <malloc+0x4a>
    5cb2:	12 96       	adiw	r26, 0x02	; 2
    5cb4:	0c 93       	st	X, r16
    5cb6:	12 97       	sbiw	r26, 0x02	; 2
    5cb8:	13 96       	adiw	r26, 0x03	; 3
    5cba:	1c 93       	st	X, r17
    5cbc:	27 c0       	rjmp	.+78     	; 0x5d0c <malloc+0x98>
    5cbe:	00 93 70 06 	sts	0x0670, r16	; 0x800670 <__flp>
    5cc2:	10 93 71 06 	sts	0x0671, r17	; 0x800671 <__flp+0x1>
    5cc6:	22 c0       	rjmp	.+68     	; 0x5d0c <malloc+0x98>
    5cc8:	21 15       	cp	r18, r1
    5cca:	31 05       	cpc	r19, r1
    5ccc:	19 f0       	breq	.+6      	; 0x5cd4 <malloc+0x60>
    5cce:	42 17       	cp	r20, r18
    5cd0:	53 07       	cpc	r21, r19
    5cd2:	18 f4       	brcc	.+6      	; 0x5cda <malloc+0x66>
    5cd4:	9a 01       	movw	r18, r20
    5cd6:	bd 01       	movw	r22, r26
    5cd8:	ef 01       	movw	r28, r30
    5cda:	df 01       	movw	r26, r30
    5cdc:	f8 01       	movw	r30, r16
    5cde:	db cf       	rjmp	.-74     	; 0x5c96 <malloc+0x22>
    5ce0:	21 15       	cp	r18, r1
    5ce2:	31 05       	cpc	r19, r1
    5ce4:	f9 f0       	breq	.+62     	; 0x5d24 <malloc+0xb0>
    5ce6:	28 1b       	sub	r18, r24
    5ce8:	39 0b       	sbc	r19, r25
    5cea:	24 30       	cpi	r18, 0x04	; 4
    5cec:	31 05       	cpc	r19, r1
    5cee:	80 f4       	brcc	.+32     	; 0x5d10 <malloc+0x9c>
    5cf0:	8a 81       	ldd	r24, Y+2	; 0x02
    5cf2:	9b 81       	ldd	r25, Y+3	; 0x03
    5cf4:	61 15       	cp	r22, r1
    5cf6:	71 05       	cpc	r23, r1
    5cf8:	21 f0       	breq	.+8      	; 0x5d02 <malloc+0x8e>
    5cfa:	fb 01       	movw	r30, r22
    5cfc:	93 83       	std	Z+3, r25	; 0x03
    5cfe:	82 83       	std	Z+2, r24	; 0x02
    5d00:	04 c0       	rjmp	.+8      	; 0x5d0a <malloc+0x96>
    5d02:	90 93 71 06 	sts	0x0671, r25	; 0x800671 <__flp+0x1>
    5d06:	80 93 70 06 	sts	0x0670, r24	; 0x800670 <__flp>
    5d0a:	fe 01       	movw	r30, r28
    5d0c:	32 96       	adiw	r30, 0x02	; 2
    5d0e:	44 c0       	rjmp	.+136    	; 0x5d98 <malloc+0x124>
    5d10:	fe 01       	movw	r30, r28
    5d12:	e2 0f       	add	r30, r18
    5d14:	f3 1f       	adc	r31, r19
    5d16:	81 93       	st	Z+, r24
    5d18:	91 93       	st	Z+, r25
    5d1a:	22 50       	subi	r18, 0x02	; 2
    5d1c:	31 09       	sbc	r19, r1
    5d1e:	39 83       	std	Y+1, r19	; 0x01
    5d20:	28 83       	st	Y, r18
    5d22:	3a c0       	rjmp	.+116    	; 0x5d98 <malloc+0x124>
    5d24:	20 91 6e 06 	lds	r18, 0x066E	; 0x80066e <__brkval>
    5d28:	30 91 6f 06 	lds	r19, 0x066F	; 0x80066f <__brkval+0x1>
    5d2c:	23 2b       	or	r18, r19
    5d2e:	41 f4       	brne	.+16     	; 0x5d40 <malloc+0xcc>
    5d30:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    5d34:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    5d38:	30 93 6f 06 	sts	0x066F, r19	; 0x80066f <__brkval+0x1>
    5d3c:	20 93 6e 06 	sts	0x066E, r18	; 0x80066e <__brkval>
    5d40:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    5d44:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    5d48:	21 15       	cp	r18, r1
    5d4a:	31 05       	cpc	r19, r1
    5d4c:	41 f4       	brne	.+16     	; 0x5d5e <malloc+0xea>
    5d4e:	2d b7       	in	r18, 0x3d	; 61
    5d50:	3e b7       	in	r19, 0x3e	; 62
    5d52:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    5d56:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    5d5a:	24 1b       	sub	r18, r20
    5d5c:	35 0b       	sbc	r19, r21
    5d5e:	e0 91 6e 06 	lds	r30, 0x066E	; 0x80066e <__brkval>
    5d62:	f0 91 6f 06 	lds	r31, 0x066F	; 0x80066f <__brkval+0x1>
    5d66:	e2 17       	cp	r30, r18
    5d68:	f3 07       	cpc	r31, r19
    5d6a:	a0 f4       	brcc	.+40     	; 0x5d94 <malloc+0x120>
    5d6c:	2e 1b       	sub	r18, r30
    5d6e:	3f 0b       	sbc	r19, r31
    5d70:	28 17       	cp	r18, r24
    5d72:	39 07       	cpc	r19, r25
    5d74:	78 f0       	brcs	.+30     	; 0x5d94 <malloc+0x120>
    5d76:	ac 01       	movw	r20, r24
    5d78:	4e 5f       	subi	r20, 0xFE	; 254
    5d7a:	5f 4f       	sbci	r21, 0xFF	; 255
    5d7c:	24 17       	cp	r18, r20
    5d7e:	35 07       	cpc	r19, r21
    5d80:	48 f0       	brcs	.+18     	; 0x5d94 <malloc+0x120>
    5d82:	4e 0f       	add	r20, r30
    5d84:	5f 1f       	adc	r21, r31
    5d86:	50 93 6f 06 	sts	0x066F, r21	; 0x80066f <__brkval+0x1>
    5d8a:	40 93 6e 06 	sts	0x066E, r20	; 0x80066e <__brkval>
    5d8e:	81 93       	st	Z+, r24
    5d90:	91 93       	st	Z+, r25
    5d92:	02 c0       	rjmp	.+4      	; 0x5d98 <malloc+0x124>
    5d94:	e0 e0       	ldi	r30, 0x00	; 0
    5d96:	f0 e0       	ldi	r31, 0x00	; 0
    5d98:	cf 01       	movw	r24, r30
    5d9a:	df 91       	pop	r29
    5d9c:	cf 91       	pop	r28
    5d9e:	1f 91       	pop	r17
    5da0:	0f 91       	pop	r16
    5da2:	08 95       	ret

00005da4 <free>:
    5da4:	cf 93       	push	r28
    5da6:	df 93       	push	r29
    5da8:	00 97       	sbiw	r24, 0x00	; 0
    5daa:	09 f4       	brne	.+2      	; 0x5dae <free+0xa>
    5dac:	81 c0       	rjmp	.+258    	; 0x5eb0 <free+0x10c>
    5dae:	fc 01       	movw	r30, r24
    5db0:	32 97       	sbiw	r30, 0x02	; 2
    5db2:	13 82       	std	Z+3, r1	; 0x03
    5db4:	12 82       	std	Z+2, r1	; 0x02
    5db6:	a0 91 70 06 	lds	r26, 0x0670	; 0x800670 <__flp>
    5dba:	b0 91 71 06 	lds	r27, 0x0671	; 0x800671 <__flp+0x1>
    5dbe:	10 97       	sbiw	r26, 0x00	; 0
    5dc0:	81 f4       	brne	.+32     	; 0x5de2 <free+0x3e>
    5dc2:	20 81       	ld	r18, Z
    5dc4:	31 81       	ldd	r19, Z+1	; 0x01
    5dc6:	82 0f       	add	r24, r18
    5dc8:	93 1f       	adc	r25, r19
    5dca:	20 91 6e 06 	lds	r18, 0x066E	; 0x80066e <__brkval>
    5dce:	30 91 6f 06 	lds	r19, 0x066F	; 0x80066f <__brkval+0x1>
    5dd2:	28 17       	cp	r18, r24
    5dd4:	39 07       	cpc	r19, r25
    5dd6:	51 f5       	brne	.+84     	; 0x5e2c <free+0x88>
    5dd8:	f0 93 6f 06 	sts	0x066F, r31	; 0x80066f <__brkval+0x1>
    5ddc:	e0 93 6e 06 	sts	0x066E, r30	; 0x80066e <__brkval>
    5de0:	67 c0       	rjmp	.+206    	; 0x5eb0 <free+0x10c>
    5de2:	ed 01       	movw	r28, r26
    5de4:	20 e0       	ldi	r18, 0x00	; 0
    5de6:	30 e0       	ldi	r19, 0x00	; 0
    5de8:	ce 17       	cp	r28, r30
    5dea:	df 07       	cpc	r29, r31
    5dec:	40 f4       	brcc	.+16     	; 0x5dfe <free+0x5a>
    5dee:	4a 81       	ldd	r20, Y+2	; 0x02
    5df0:	5b 81       	ldd	r21, Y+3	; 0x03
    5df2:	9e 01       	movw	r18, r28
    5df4:	41 15       	cp	r20, r1
    5df6:	51 05       	cpc	r21, r1
    5df8:	f1 f0       	breq	.+60     	; 0x5e36 <free+0x92>
    5dfa:	ea 01       	movw	r28, r20
    5dfc:	f5 cf       	rjmp	.-22     	; 0x5de8 <free+0x44>
    5dfe:	d3 83       	std	Z+3, r29	; 0x03
    5e00:	c2 83       	std	Z+2, r28	; 0x02
    5e02:	40 81       	ld	r20, Z
    5e04:	51 81       	ldd	r21, Z+1	; 0x01
    5e06:	84 0f       	add	r24, r20
    5e08:	95 1f       	adc	r25, r21
    5e0a:	c8 17       	cp	r28, r24
    5e0c:	d9 07       	cpc	r29, r25
    5e0e:	59 f4       	brne	.+22     	; 0x5e26 <free+0x82>
    5e10:	88 81       	ld	r24, Y
    5e12:	99 81       	ldd	r25, Y+1	; 0x01
    5e14:	84 0f       	add	r24, r20
    5e16:	95 1f       	adc	r25, r21
    5e18:	02 96       	adiw	r24, 0x02	; 2
    5e1a:	91 83       	std	Z+1, r25	; 0x01
    5e1c:	80 83       	st	Z, r24
    5e1e:	8a 81       	ldd	r24, Y+2	; 0x02
    5e20:	9b 81       	ldd	r25, Y+3	; 0x03
    5e22:	93 83       	std	Z+3, r25	; 0x03
    5e24:	82 83       	std	Z+2, r24	; 0x02
    5e26:	21 15       	cp	r18, r1
    5e28:	31 05       	cpc	r19, r1
    5e2a:	29 f4       	brne	.+10     	; 0x5e36 <free+0x92>
    5e2c:	f0 93 71 06 	sts	0x0671, r31	; 0x800671 <__flp+0x1>
    5e30:	e0 93 70 06 	sts	0x0670, r30	; 0x800670 <__flp>
    5e34:	3d c0       	rjmp	.+122    	; 0x5eb0 <free+0x10c>
    5e36:	e9 01       	movw	r28, r18
    5e38:	fb 83       	std	Y+3, r31	; 0x03
    5e3a:	ea 83       	std	Y+2, r30	; 0x02
    5e3c:	49 91       	ld	r20, Y+
    5e3e:	59 91       	ld	r21, Y+
    5e40:	c4 0f       	add	r28, r20
    5e42:	d5 1f       	adc	r29, r21
    5e44:	ec 17       	cp	r30, r28
    5e46:	fd 07       	cpc	r31, r29
    5e48:	61 f4       	brne	.+24     	; 0x5e62 <free+0xbe>
    5e4a:	80 81       	ld	r24, Z
    5e4c:	91 81       	ldd	r25, Z+1	; 0x01
    5e4e:	84 0f       	add	r24, r20
    5e50:	95 1f       	adc	r25, r21
    5e52:	02 96       	adiw	r24, 0x02	; 2
    5e54:	e9 01       	movw	r28, r18
    5e56:	99 83       	std	Y+1, r25	; 0x01
    5e58:	88 83       	st	Y, r24
    5e5a:	82 81       	ldd	r24, Z+2	; 0x02
    5e5c:	93 81       	ldd	r25, Z+3	; 0x03
    5e5e:	9b 83       	std	Y+3, r25	; 0x03
    5e60:	8a 83       	std	Y+2, r24	; 0x02
    5e62:	e0 e0       	ldi	r30, 0x00	; 0
    5e64:	f0 e0       	ldi	r31, 0x00	; 0
    5e66:	12 96       	adiw	r26, 0x02	; 2
    5e68:	8d 91       	ld	r24, X+
    5e6a:	9c 91       	ld	r25, X
    5e6c:	13 97       	sbiw	r26, 0x03	; 3
    5e6e:	00 97       	sbiw	r24, 0x00	; 0
    5e70:	19 f0       	breq	.+6      	; 0x5e78 <free+0xd4>
    5e72:	fd 01       	movw	r30, r26
    5e74:	dc 01       	movw	r26, r24
    5e76:	f7 cf       	rjmp	.-18     	; 0x5e66 <free+0xc2>
    5e78:	8d 91       	ld	r24, X+
    5e7a:	9c 91       	ld	r25, X
    5e7c:	11 97       	sbiw	r26, 0x01	; 1
    5e7e:	9d 01       	movw	r18, r26
    5e80:	2e 5f       	subi	r18, 0xFE	; 254
    5e82:	3f 4f       	sbci	r19, 0xFF	; 255
    5e84:	82 0f       	add	r24, r18
    5e86:	93 1f       	adc	r25, r19
    5e88:	20 91 6e 06 	lds	r18, 0x066E	; 0x80066e <__brkval>
    5e8c:	30 91 6f 06 	lds	r19, 0x066F	; 0x80066f <__brkval+0x1>
    5e90:	28 17       	cp	r18, r24
    5e92:	39 07       	cpc	r19, r25
    5e94:	69 f4       	brne	.+26     	; 0x5eb0 <free+0x10c>
    5e96:	30 97       	sbiw	r30, 0x00	; 0
    5e98:	29 f4       	brne	.+10     	; 0x5ea4 <free+0x100>
    5e9a:	10 92 71 06 	sts	0x0671, r1	; 0x800671 <__flp+0x1>
    5e9e:	10 92 70 06 	sts	0x0670, r1	; 0x800670 <__flp>
    5ea2:	02 c0       	rjmp	.+4      	; 0x5ea8 <free+0x104>
    5ea4:	13 82       	std	Z+3, r1	; 0x03
    5ea6:	12 82       	std	Z+2, r1	; 0x02
    5ea8:	b0 93 6f 06 	sts	0x066F, r27	; 0x80066f <__brkval+0x1>
    5eac:	a0 93 6e 06 	sts	0x066E, r26	; 0x80066e <__brkval>
    5eb0:	df 91       	pop	r29
    5eb2:	cf 91       	pop	r28
    5eb4:	08 95       	ret

00005eb6 <realloc>:
    5eb6:	6f 92       	push	r6
    5eb8:	7f 92       	push	r7
    5eba:	8f 92       	push	r8
    5ebc:	9f 92       	push	r9
    5ebe:	af 92       	push	r10
    5ec0:	bf 92       	push	r11
    5ec2:	cf 92       	push	r12
    5ec4:	df 92       	push	r13
    5ec6:	ef 92       	push	r14
    5ec8:	ff 92       	push	r15
    5eca:	0f 93       	push	r16
    5ecc:	1f 93       	push	r17
    5ece:	cf 93       	push	r28
    5ed0:	df 93       	push	r29
    5ed2:	00 97       	sbiw	r24, 0x00	; 0
    5ed4:	81 f4       	brne	.+32     	; 0x5ef6 <realloc+0x40>
    5ed6:	cb 01       	movw	r24, r22
    5ed8:	df 91       	pop	r29
    5eda:	cf 91       	pop	r28
    5edc:	1f 91       	pop	r17
    5ede:	0f 91       	pop	r16
    5ee0:	ff 90       	pop	r15
    5ee2:	ef 90       	pop	r14
    5ee4:	df 90       	pop	r13
    5ee6:	cf 90       	pop	r12
    5ee8:	bf 90       	pop	r11
    5eea:	af 90       	pop	r10
    5eec:	9f 90       	pop	r9
    5eee:	8f 90       	pop	r8
    5ef0:	7f 90       	pop	r7
    5ef2:	6f 90       	pop	r6
    5ef4:	bf ce       	rjmp	.-642    	; 0x5c74 <malloc>
    5ef6:	fc 01       	movw	r30, r24
    5ef8:	e6 0f       	add	r30, r22
    5efa:	f7 1f       	adc	r31, r23
    5efc:	9c 01       	movw	r18, r24
    5efe:	22 50       	subi	r18, 0x02	; 2
    5f00:	31 09       	sbc	r19, r1
    5f02:	e2 17       	cp	r30, r18
    5f04:	f3 07       	cpc	r31, r19
    5f06:	08 f4       	brcc	.+2      	; 0x5f0a <realloc+0x54>
    5f08:	a5 c0       	rjmp	.+330    	; 0x6054 <realloc+0x19e>
    5f0a:	ec 01       	movw	r28, r24
    5f0c:	d9 01       	movw	r26, r18
    5f0e:	0d 91       	ld	r16, X+
    5f10:	1c 91       	ld	r17, X
    5f12:	11 97       	sbiw	r26, 0x01	; 1
    5f14:	06 17       	cp	r16, r22
    5f16:	17 07       	cpc	r17, r23
    5f18:	a8 f0       	brcs	.+42     	; 0x5f44 <realloc+0x8e>
    5f1a:	05 30       	cpi	r16, 0x05	; 5
    5f1c:	11 05       	cpc	r17, r1
    5f1e:	08 f4       	brcc	.+2      	; 0x5f22 <realloc+0x6c>
    5f20:	97 c0       	rjmp	.+302    	; 0x6050 <realloc+0x19a>
    5f22:	c8 01       	movw	r24, r16
    5f24:	04 97       	sbiw	r24, 0x04	; 4
    5f26:	86 17       	cp	r24, r22
    5f28:	97 07       	cpc	r25, r23
    5f2a:	08 f4       	brcc	.+2      	; 0x5f2e <realloc+0x78>
    5f2c:	91 c0       	rjmp	.+290    	; 0x6050 <realloc+0x19a>
    5f2e:	02 50       	subi	r16, 0x02	; 2
    5f30:	11 09       	sbc	r17, r1
    5f32:	06 1b       	sub	r16, r22
    5f34:	17 0b       	sbc	r17, r23
    5f36:	01 93       	st	Z+, r16
    5f38:	11 93       	st	Z+, r17
    5f3a:	6d 93       	st	X+, r22
    5f3c:	7c 93       	st	X, r23
    5f3e:	cf 01       	movw	r24, r30
    5f40:	31 df       	rcall	.-414    	; 0x5da4 <free>
    5f42:	86 c0       	rjmp	.+268    	; 0x6050 <realloc+0x19a>
    5f44:	5b 01       	movw	r10, r22
    5f46:	a0 1a       	sub	r10, r16
    5f48:	b1 0a       	sbc	r11, r17
    5f4a:	4c 01       	movw	r8, r24
    5f4c:	80 0e       	add	r8, r16
    5f4e:	91 1e       	adc	r9, r17
    5f50:	a0 91 70 06 	lds	r26, 0x0670	; 0x800670 <__flp>
    5f54:	b0 91 71 06 	lds	r27, 0x0671	; 0x800671 <__flp+0x1>
    5f58:	61 2c       	mov	r6, r1
    5f5a:	71 2c       	mov	r7, r1
    5f5c:	e1 2c       	mov	r14, r1
    5f5e:	f1 2c       	mov	r15, r1
    5f60:	10 97       	sbiw	r26, 0x00	; 0
    5f62:	09 f4       	brne	.+2      	; 0x5f66 <realloc+0xb0>
    5f64:	46 c0       	rjmp	.+140    	; 0x5ff2 <realloc+0x13c>
    5f66:	8d 91       	ld	r24, X+
    5f68:	9c 91       	ld	r25, X
    5f6a:	11 97       	sbiw	r26, 0x01	; 1
    5f6c:	a8 15       	cp	r26, r8
    5f6e:	b9 05       	cpc	r27, r9
    5f70:	b1 f5       	brne	.+108    	; 0x5fde <realloc+0x128>
    5f72:	6c 01       	movw	r12, r24
    5f74:	42 e0       	ldi	r20, 0x02	; 2
    5f76:	c4 0e       	add	r12, r20
    5f78:	d1 1c       	adc	r13, r1
    5f7a:	ca 14       	cp	r12, r10
    5f7c:	db 04       	cpc	r13, r11
    5f7e:	78 f1       	brcs	.+94     	; 0x5fde <realloc+0x128>
    5f80:	4c 01       	movw	r8, r24
    5f82:	8a 18       	sub	r8, r10
    5f84:	9b 08       	sbc	r9, r11
    5f86:	64 01       	movw	r12, r8
    5f88:	42 e0       	ldi	r20, 0x02	; 2
    5f8a:	c4 0e       	add	r12, r20
    5f8c:	d1 1c       	adc	r13, r1
    5f8e:	12 96       	adiw	r26, 0x02	; 2
    5f90:	bc 90       	ld	r11, X
    5f92:	12 97       	sbiw	r26, 0x02	; 2
    5f94:	13 96       	adiw	r26, 0x03	; 3
    5f96:	ac 91       	ld	r26, X
    5f98:	b5 e0       	ldi	r27, 0x05	; 5
    5f9a:	cb 16       	cp	r12, r27
    5f9c:	d1 04       	cpc	r13, r1
    5f9e:	40 f0       	brcs	.+16     	; 0x5fb0 <realloc+0xfa>
    5fa0:	b2 82       	std	Z+2, r11	; 0x02
    5fa2:	a3 83       	std	Z+3, r26	; 0x03
    5fa4:	91 82       	std	Z+1, r9	; 0x01
    5fa6:	80 82       	st	Z, r8
    5fa8:	d9 01       	movw	r26, r18
    5faa:	6d 93       	st	X+, r22
    5fac:	7c 93       	st	X, r23
    5fae:	09 c0       	rjmp	.+18     	; 0x5fc2 <realloc+0x10c>
    5fb0:	0e 5f       	subi	r16, 0xFE	; 254
    5fb2:	1f 4f       	sbci	r17, 0xFF	; 255
    5fb4:	80 0f       	add	r24, r16
    5fb6:	91 1f       	adc	r25, r17
    5fb8:	f9 01       	movw	r30, r18
    5fba:	91 83       	std	Z+1, r25	; 0x01
    5fbc:	80 83       	st	Z, r24
    5fbe:	eb 2d       	mov	r30, r11
    5fc0:	fa 2f       	mov	r31, r26
    5fc2:	e1 14       	cp	r14, r1
    5fc4:	f1 04       	cpc	r15, r1
    5fc6:	31 f0       	breq	.+12     	; 0x5fd4 <realloc+0x11e>
    5fc8:	d7 01       	movw	r26, r14
    5fca:	13 96       	adiw	r26, 0x03	; 3
    5fcc:	fc 93       	st	X, r31
    5fce:	ee 93       	st	-X, r30
    5fd0:	12 97       	sbiw	r26, 0x02	; 2
    5fd2:	3e c0       	rjmp	.+124    	; 0x6050 <realloc+0x19a>
    5fd4:	f0 93 71 06 	sts	0x0671, r31	; 0x800671 <__flp+0x1>
    5fd8:	e0 93 70 06 	sts	0x0670, r30	; 0x800670 <__flp>
    5fdc:	39 c0       	rjmp	.+114    	; 0x6050 <realloc+0x19a>
    5fde:	68 16       	cp	r6, r24
    5fe0:	79 06       	cpc	r7, r25
    5fe2:	08 f4       	brcc	.+2      	; 0x5fe6 <realloc+0x130>
    5fe4:	3c 01       	movw	r6, r24
    5fe6:	7d 01       	movw	r14, r26
    5fe8:	12 96       	adiw	r26, 0x02	; 2
    5fea:	0d 90       	ld	r0, X+
    5fec:	bc 91       	ld	r27, X
    5fee:	a0 2d       	mov	r26, r0
    5ff0:	b7 cf       	rjmp	.-146    	; 0x5f60 <realloc+0xaa>
    5ff2:	80 91 6e 06 	lds	r24, 0x066E	; 0x80066e <__brkval>
    5ff6:	90 91 6f 06 	lds	r25, 0x066F	; 0x80066f <__brkval+0x1>
    5ffa:	88 16       	cp	r8, r24
    5ffc:	99 06       	cpc	r9, r25
    5ffe:	e1 f4       	brne	.+56     	; 0x6038 <realloc+0x182>
    6000:	66 16       	cp	r6, r22
    6002:	77 06       	cpc	r7, r23
    6004:	c8 f4       	brcc	.+50     	; 0x6038 <realloc+0x182>
    6006:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    600a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    600e:	00 97       	sbiw	r24, 0x00	; 0
    6010:	41 f4       	brne	.+16     	; 0x6022 <realloc+0x16c>
    6012:	8d b7       	in	r24, 0x3d	; 61
    6014:	9e b7       	in	r25, 0x3e	; 62
    6016:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    601a:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    601e:	84 1b       	sub	r24, r20
    6020:	95 0b       	sbc	r25, r21
    6022:	e8 17       	cp	r30, r24
    6024:	f9 07       	cpc	r31, r25
    6026:	b0 f4       	brcc	.+44     	; 0x6054 <realloc+0x19e>
    6028:	f0 93 6f 06 	sts	0x066F, r31	; 0x80066f <__brkval+0x1>
    602c:	e0 93 6e 06 	sts	0x066E, r30	; 0x80066e <__brkval>
    6030:	f9 01       	movw	r30, r18
    6032:	71 83       	std	Z+1, r23	; 0x01
    6034:	60 83       	st	Z, r22
    6036:	0c c0       	rjmp	.+24     	; 0x6050 <realloc+0x19a>
    6038:	cb 01       	movw	r24, r22
    603a:	1c de       	rcall	.-968    	; 0x5c74 <malloc>
    603c:	7c 01       	movw	r14, r24
    603e:	00 97       	sbiw	r24, 0x00	; 0
    6040:	49 f0       	breq	.+18     	; 0x6054 <realloc+0x19e>
    6042:	a8 01       	movw	r20, r16
    6044:	be 01       	movw	r22, r28
    6046:	7b d0       	rcall	.+246    	; 0x613e <memcpy>
    6048:	ce 01       	movw	r24, r28
    604a:	ac de       	rcall	.-680    	; 0x5da4 <free>
    604c:	c7 01       	movw	r24, r14
    604e:	04 c0       	rjmp	.+8      	; 0x6058 <realloc+0x1a2>
    6050:	ce 01       	movw	r24, r28
    6052:	02 c0       	rjmp	.+4      	; 0x6058 <realloc+0x1a2>
    6054:	80 e0       	ldi	r24, 0x00	; 0
    6056:	90 e0       	ldi	r25, 0x00	; 0
    6058:	df 91       	pop	r29
    605a:	cf 91       	pop	r28
    605c:	1f 91       	pop	r17
    605e:	0f 91       	pop	r16
    6060:	ff 90       	pop	r15
    6062:	ef 90       	pop	r14
    6064:	df 90       	pop	r13
    6066:	cf 90       	pop	r12
    6068:	bf 90       	pop	r11
    606a:	af 90       	pop	r10
    606c:	9f 90       	pop	r9
    606e:	8f 90       	pop	r8
    6070:	7f 90       	pop	r7
    6072:	6f 90       	pop	r6
    6074:	08 95       	ret

00006076 <atoi>:
    6076:	fc 01       	movw	r30, r24
    6078:	88 27       	eor	r24, r24
    607a:	99 27       	eor	r25, r25
    607c:	e8 94       	clt
    607e:	21 91       	ld	r18, Z+
    6080:	20 32       	cpi	r18, 0x20	; 32
    6082:	e9 f3       	breq	.-6      	; 0x607e <atoi+0x8>
    6084:	29 30       	cpi	r18, 0x09	; 9
    6086:	10 f0       	brcs	.+4      	; 0x608c <atoi+0x16>
    6088:	2e 30       	cpi	r18, 0x0E	; 14
    608a:	c8 f3       	brcs	.-14     	; 0x607e <atoi+0x8>
    608c:	2b 32       	cpi	r18, 0x2B	; 43
    608e:	39 f0       	breq	.+14     	; 0x609e <atoi+0x28>
    6090:	2d 32       	cpi	r18, 0x2D	; 45
    6092:	31 f4       	brne	.+12     	; 0x60a0 <atoi+0x2a>
    6094:	68 94       	set
    6096:	03 c0       	rjmp	.+6      	; 0x609e <atoi+0x28>
    6098:	e0 d0       	rcall	.+448    	; 0x625a <__mulhi_const_10>
    609a:	82 0f       	add	r24, r18
    609c:	91 1d       	adc	r25, r1
    609e:	21 91       	ld	r18, Z+
    60a0:	20 53       	subi	r18, 0x30	; 48
    60a2:	2a 30       	cpi	r18, 0x0A	; 10
    60a4:	c8 f3       	brcs	.-14     	; 0x6098 <atoi+0x22>
    60a6:	1e f4       	brtc	.+6      	; 0x60ae <atoi+0x38>
    60a8:	90 95       	com	r25
    60aa:	81 95       	neg	r24
    60ac:	9f 4f       	sbci	r25, 0xFF	; 255
    60ae:	08 95       	ret

000060b0 <atol>:
    60b0:	1f 93       	push	r17
    60b2:	fc 01       	movw	r30, r24
    60b4:	99 27       	eor	r25, r25
    60b6:	88 27       	eor	r24, r24
    60b8:	bc 01       	movw	r22, r24
    60ba:	e8 94       	clt
    60bc:	11 91       	ld	r17, Z+
    60be:	10 32       	cpi	r17, 0x20	; 32
    60c0:	e9 f3       	breq	.-6      	; 0x60bc <atol+0xc>
    60c2:	19 30       	cpi	r17, 0x09	; 9
    60c4:	10 f0       	brcs	.+4      	; 0x60ca <atol+0x1a>
    60c6:	1e 30       	cpi	r17, 0x0E	; 14
    60c8:	c8 f3       	brcs	.-14     	; 0x60bc <atol+0xc>
    60ca:	1b 32       	cpi	r17, 0x2B	; 43
    60cc:	49 f0       	breq	.+18     	; 0x60e0 <atol+0x30>
    60ce:	1d 32       	cpi	r17, 0x2D	; 45
    60d0:	41 f4       	brne	.+16     	; 0x60e2 <atol+0x32>
    60d2:	68 94       	set
    60d4:	05 c0       	rjmp	.+10     	; 0x60e0 <atol+0x30>
    60d6:	ac d0       	rcall	.+344    	; 0x6230 <__mulsi_const_10>
    60d8:	61 0f       	add	r22, r17
    60da:	71 1d       	adc	r23, r1
    60dc:	81 1d       	adc	r24, r1
    60de:	91 1d       	adc	r25, r1
    60e0:	11 91       	ld	r17, Z+
    60e2:	10 53       	subi	r17, 0x30	; 48
    60e4:	1a 30       	cpi	r17, 0x0A	; 10
    60e6:	b8 f3       	brcs	.-18     	; 0x60d6 <atol+0x26>
    60e8:	3e f4       	brtc	.+14     	; 0x60f8 <atol+0x48>
    60ea:	90 95       	com	r25
    60ec:	80 95       	com	r24
    60ee:	70 95       	com	r23
    60f0:	61 95       	neg	r22
    60f2:	7f 4f       	sbci	r23, 0xFF	; 255
    60f4:	8f 4f       	sbci	r24, 0xFF	; 255
    60f6:	9f 4f       	sbci	r25, 0xFF	; 255
    60f8:	1f 91       	pop	r17
    60fa:	08 95       	ret

000060fc <isspace>:
    60fc:	91 11       	cpse	r25, r1
    60fe:	7f c5       	rjmp	.+2814   	; 0x6bfe <__ctype_isfalse>
    6100:	80 32       	cpi	r24, 0x20	; 32
    6102:	19 f0       	breq	.+6      	; 0x610a <isspace+0xe>
    6104:	89 50       	subi	r24, 0x09	; 9
    6106:	85 50       	subi	r24, 0x05	; 5
    6108:	d0 f7       	brcc	.-12     	; 0x60fe <isspace+0x2>
    610a:	08 95       	ret

0000610c <memcpy_P>:
    610c:	fb 01       	movw	r30, r22
    610e:	dc 01       	movw	r26, r24
    6110:	02 c0       	rjmp	.+4      	; 0x6116 <memcpy_P+0xa>
    6112:	05 90       	lpm	r0, Z+
    6114:	0d 92       	st	X+, r0
    6116:	41 50       	subi	r20, 0x01	; 1
    6118:	50 40       	sbci	r21, 0x00	; 0
    611a:	d8 f7       	brcc	.-10     	; 0x6112 <memcpy_P+0x6>
    611c:	08 95       	ret

0000611e <strcpy_P>:
    611e:	fb 01       	movw	r30, r22
    6120:	dc 01       	movw	r26, r24
    6122:	05 90       	lpm	r0, Z+
    6124:	0d 92       	st	X+, r0
    6126:	00 20       	and	r0, r0
    6128:	e1 f7       	brne	.-8      	; 0x6122 <strcpy_P+0x4>
    612a:	08 95       	ret

0000612c <__strlen_P>:
    612c:	fc 01       	movw	r30, r24
    612e:	05 90       	lpm	r0, Z+
    6130:	00 20       	and	r0, r0
    6132:	e9 f7       	brne	.-6      	; 0x612e <__strlen_P+0x2>
    6134:	80 95       	com	r24
    6136:	90 95       	com	r25
    6138:	8e 0f       	add	r24, r30
    613a:	9f 1f       	adc	r25, r31
    613c:	08 95       	ret

0000613e <memcpy>:
    613e:	fb 01       	movw	r30, r22
    6140:	dc 01       	movw	r26, r24
    6142:	02 c0       	rjmp	.+4      	; 0x6148 <memcpy+0xa>
    6144:	01 90       	ld	r0, Z+
    6146:	0d 92       	st	X+, r0
    6148:	41 50       	subi	r20, 0x01	; 1
    614a:	50 40       	sbci	r21, 0x00	; 0
    614c:	d8 f7       	brcc	.-10     	; 0x6144 <memcpy+0x6>
    614e:	08 95       	ret

00006150 <memmove>:
    6150:	68 17       	cp	r22, r24
    6152:	79 07       	cpc	r23, r25
    6154:	68 f4       	brcc	.+26     	; 0x6170 <memmove+0x20>
    6156:	fb 01       	movw	r30, r22
    6158:	dc 01       	movw	r26, r24
    615a:	e4 0f       	add	r30, r20
    615c:	f5 1f       	adc	r31, r21
    615e:	a4 0f       	add	r26, r20
    6160:	b5 1f       	adc	r27, r21
    6162:	02 c0       	rjmp	.+4      	; 0x6168 <memmove+0x18>
    6164:	02 90       	ld	r0, -Z
    6166:	0e 92       	st	-X, r0
    6168:	41 50       	subi	r20, 0x01	; 1
    616a:	50 40       	sbci	r21, 0x00	; 0
    616c:	d8 f7       	brcc	.-10     	; 0x6164 <memmove+0x14>
    616e:	08 95       	ret
    6170:	e6 cf       	rjmp	.-52     	; 0x613e <memcpy>

00006172 <memset>:
    6172:	dc 01       	movw	r26, r24
    6174:	01 c0       	rjmp	.+2      	; 0x6178 <memset+0x6>
    6176:	6d 93       	st	X+, r22
    6178:	41 50       	subi	r20, 0x01	; 1
    617a:	50 40       	sbci	r21, 0x00	; 0
    617c:	e0 f7       	brcc	.-8      	; 0x6176 <memset+0x4>
    617e:	08 95       	ret

00006180 <strcmp>:
    6180:	fb 01       	movw	r30, r22
    6182:	dc 01       	movw	r26, r24
    6184:	8d 91       	ld	r24, X+
    6186:	01 90       	ld	r0, Z+
    6188:	80 19       	sub	r24, r0
    618a:	01 10       	cpse	r0, r1
    618c:	d9 f3       	breq	.-10     	; 0x6184 <strcmp+0x4>
    618e:	99 0b       	sbc	r25, r25
    6190:	08 95       	ret

00006192 <strcpy>:
    6192:	fb 01       	movw	r30, r22
    6194:	dc 01       	movw	r26, r24
    6196:	01 90       	ld	r0, Z+
    6198:	0d 92       	st	X+, r0
    619a:	00 20       	and	r0, r0
    619c:	e1 f7       	brne	.-8      	; 0x6196 <strcpy+0x4>
    619e:	08 95       	ret

000061a0 <strncpy>:
    61a0:	fb 01       	movw	r30, r22
    61a2:	dc 01       	movw	r26, r24
    61a4:	41 50       	subi	r20, 0x01	; 1
    61a6:	50 40       	sbci	r21, 0x00	; 0
    61a8:	48 f0       	brcs	.+18     	; 0x61bc <strncpy+0x1c>
    61aa:	01 90       	ld	r0, Z+
    61ac:	0d 92       	st	X+, r0
    61ae:	00 20       	and	r0, r0
    61b0:	c9 f7       	brne	.-14     	; 0x61a4 <strncpy+0x4>
    61b2:	01 c0       	rjmp	.+2      	; 0x61b6 <strncpy+0x16>
    61b4:	1d 92       	st	X+, r1
    61b6:	41 50       	subi	r20, 0x01	; 1
    61b8:	50 40       	sbci	r21, 0x00	; 0
    61ba:	e0 f7       	brcc	.-8      	; 0x61b4 <strncpy+0x14>
    61bc:	08 95       	ret

000061be <strnlen>:
    61be:	fc 01       	movw	r30, r24
    61c0:	61 50       	subi	r22, 0x01	; 1
    61c2:	70 40       	sbci	r23, 0x00	; 0
    61c4:	01 90       	ld	r0, Z+
    61c6:	01 10       	cpse	r0, r1
    61c8:	d8 f7       	brcc	.-10     	; 0x61c0 <strnlen+0x2>
    61ca:	80 95       	com	r24
    61cc:	90 95       	com	r25
    61ce:	8e 0f       	add	r24, r30
    61d0:	9f 1f       	adc	r25, r31
    61d2:	08 95       	ret

000061d4 <strstr>:
    61d4:	fb 01       	movw	r30, r22
    61d6:	51 91       	ld	r21, Z+
    61d8:	55 23       	and	r21, r21
    61da:	a9 f0       	breq	.+42     	; 0x6206 <strstr+0x32>
    61dc:	bf 01       	movw	r22, r30
    61de:	dc 01       	movw	r26, r24
    61e0:	4d 91       	ld	r20, X+
    61e2:	45 17       	cp	r20, r21
    61e4:	41 11       	cpse	r20, r1
    61e6:	e1 f7       	brne	.-8      	; 0x61e0 <strstr+0xc>
    61e8:	59 f4       	brne	.+22     	; 0x6200 <strstr+0x2c>
    61ea:	cd 01       	movw	r24, r26
    61ec:	01 90       	ld	r0, Z+
    61ee:	00 20       	and	r0, r0
    61f0:	49 f0       	breq	.+18     	; 0x6204 <strstr+0x30>
    61f2:	4d 91       	ld	r20, X+
    61f4:	40 15       	cp	r20, r0
    61f6:	41 11       	cpse	r20, r1
    61f8:	c9 f3       	breq	.-14     	; 0x61ec <strstr+0x18>
    61fa:	fb 01       	movw	r30, r22
    61fc:	41 11       	cpse	r20, r1
    61fe:	ef cf       	rjmp	.-34     	; 0x61de <strstr+0xa>
    6200:	81 e0       	ldi	r24, 0x01	; 1
    6202:	90 e0       	ldi	r25, 0x00	; 0
    6204:	01 97       	sbiw	r24, 0x01	; 1
    6206:	08 95       	ret

00006208 <itoa>:
    6208:	45 32       	cpi	r20, 0x25	; 37
    620a:	51 05       	cpc	r21, r1
    620c:	18 f4       	brcc	.+6      	; 0x6214 <itoa+0xc>
    620e:	42 30       	cpi	r20, 0x02	; 2
    6210:	08 f0       	brcs	.+2      	; 0x6214 <itoa+0xc>
    6212:	04 c0       	rjmp	.+8      	; 0x621c <__itoa_ncheck>
    6214:	fb 01       	movw	r30, r22
    6216:	10 82       	st	Z, r1
    6218:	cb 01       	movw	r24, r22
    621a:	08 95       	ret

0000621c <__itoa_ncheck>:
    621c:	bb 27       	eor	r27, r27
    621e:	4a 30       	cpi	r20, 0x0A	; 10
    6220:	31 f4       	brne	.+12     	; 0x622e <__itoa_ncheck+0x12>
    6222:	99 23       	and	r25, r25
    6224:	22 f4       	brpl	.+8      	; 0x622e <__itoa_ncheck+0x12>
    6226:	bd e2       	ldi	r27, 0x2D	; 45
    6228:	90 95       	com	r25
    622a:	81 95       	neg	r24
    622c:	9f 4f       	sbci	r25, 0xFF	; 255
    622e:	1e c0       	rjmp	.+60     	; 0x626c <__utoa_common>

00006230 <__mulsi_const_10>:
    6230:	59 2f       	mov	r21, r25
    6232:	48 2f       	mov	r20, r24
    6234:	37 2f       	mov	r19, r23
    6236:	26 2f       	mov	r18, r22
    6238:	66 0f       	add	r22, r22
    623a:	77 1f       	adc	r23, r23
    623c:	88 1f       	adc	r24, r24
    623e:	99 1f       	adc	r25, r25
    6240:	66 0f       	add	r22, r22
    6242:	77 1f       	adc	r23, r23
    6244:	88 1f       	adc	r24, r24
    6246:	99 1f       	adc	r25, r25
    6248:	62 0f       	add	r22, r18
    624a:	73 1f       	adc	r23, r19
    624c:	84 1f       	adc	r24, r20
    624e:	95 1f       	adc	r25, r21
    6250:	66 0f       	add	r22, r22
    6252:	77 1f       	adc	r23, r23
    6254:	88 1f       	adc	r24, r24
    6256:	99 1f       	adc	r25, r25
    6258:	08 95       	ret

0000625a <__mulhi_const_10>:
    625a:	7a e0       	ldi	r23, 0x0A	; 10
    625c:	97 9f       	mul	r25, r23
    625e:	90 2d       	mov	r25, r0
    6260:	87 9f       	mul	r24, r23
    6262:	80 2d       	mov	r24, r0
    6264:	91 0d       	add	r25, r1
    6266:	11 24       	eor	r1, r1
    6268:	08 95       	ret

0000626a <__utoa_ncheck>:
    626a:	bb 27       	eor	r27, r27

0000626c <__utoa_common>:
    626c:	fb 01       	movw	r30, r22
    626e:	55 27       	eor	r21, r21
    6270:	aa 27       	eor	r26, r26
    6272:	88 0f       	add	r24, r24
    6274:	99 1f       	adc	r25, r25
    6276:	aa 1f       	adc	r26, r26
    6278:	a4 17       	cp	r26, r20
    627a:	10 f0       	brcs	.+4      	; 0x6280 <__utoa_common+0x14>
    627c:	a4 1b       	sub	r26, r20
    627e:	83 95       	inc	r24
    6280:	50 51       	subi	r21, 0x10	; 16
    6282:	b9 f7       	brne	.-18     	; 0x6272 <__utoa_common+0x6>
    6284:	a0 5d       	subi	r26, 0xD0	; 208
    6286:	aa 33       	cpi	r26, 0x3A	; 58
    6288:	08 f0       	brcs	.+2      	; 0x628c <__utoa_common+0x20>
    628a:	a9 5d       	subi	r26, 0xD9	; 217
    628c:	a1 93       	st	Z+, r26
    628e:	00 97       	sbiw	r24, 0x00	; 0
    6290:	79 f7       	brne	.-34     	; 0x6270 <__utoa_common+0x4>
    6292:	b1 11       	cpse	r27, r1
    6294:	b1 93       	st	Z+, r27
    6296:	11 92       	st	Z+, r1
    6298:	cb 01       	movw	r24, r22
    629a:	bf c4       	rjmp	.+2430   	; 0x6c1a <strrev>

0000629c <sprintf_P>:
    629c:	0f 93       	push	r16
    629e:	1f 93       	push	r17
    62a0:	cf 93       	push	r28
    62a2:	df 93       	push	r29
    62a4:	cd b7       	in	r28, 0x3d	; 61
    62a6:	de b7       	in	r29, 0x3e	; 62
    62a8:	2e 97       	sbiw	r28, 0x0e	; 14
    62aa:	0f b6       	in	r0, 0x3f	; 63
    62ac:	f8 94       	cli
    62ae:	de bf       	out	0x3e, r29	; 62
    62b0:	0f be       	out	0x3f, r0	; 63
    62b2:	cd bf       	out	0x3d, r28	; 61
    62b4:	0e 89       	ldd	r16, Y+22	; 0x16
    62b6:	1f 89       	ldd	r17, Y+23	; 0x17
    62b8:	8e e0       	ldi	r24, 0x0E	; 14
    62ba:	8c 83       	std	Y+4, r24	; 0x04
    62bc:	1a 83       	std	Y+2, r17	; 0x02
    62be:	09 83       	std	Y+1, r16	; 0x01
    62c0:	8f ef       	ldi	r24, 0xFF	; 255
    62c2:	9f e7       	ldi	r25, 0x7F	; 127
    62c4:	9e 83       	std	Y+6, r25	; 0x06
    62c6:	8d 83       	std	Y+5, r24	; 0x05
    62c8:	ae 01       	movw	r20, r28
    62ca:	46 5e       	subi	r20, 0xE6	; 230
    62cc:	5f 4f       	sbci	r21, 0xFF	; 255
    62ce:	68 8d       	ldd	r22, Y+24	; 0x18
    62d0:	79 8d       	ldd	r23, Y+25	; 0x19
    62d2:	ce 01       	movw	r24, r28
    62d4:	01 96       	adiw	r24, 0x01	; 1
    62d6:	48 d0       	rcall	.+144    	; 0x6368 <vfprintf>
    62d8:	ef 81       	ldd	r30, Y+7	; 0x07
    62da:	f8 85       	ldd	r31, Y+8	; 0x08
    62dc:	e0 0f       	add	r30, r16
    62de:	f1 1f       	adc	r31, r17
    62e0:	10 82       	st	Z, r1
    62e2:	2e 96       	adiw	r28, 0x0e	; 14
    62e4:	0f b6       	in	r0, 0x3f	; 63
    62e6:	f8 94       	cli
    62e8:	de bf       	out	0x3e, r29	; 62
    62ea:	0f be       	out	0x3f, r0	; 63
    62ec:	cd bf       	out	0x3d, r28	; 61
    62ee:	df 91       	pop	r29
    62f0:	cf 91       	pop	r28
    62f2:	1f 91       	pop	r17
    62f4:	0f 91       	pop	r16
    62f6:	08 95       	ret

000062f8 <vsnprintf_P>:
    62f8:	0f 93       	push	r16
    62fa:	1f 93       	push	r17
    62fc:	cf 93       	push	r28
    62fe:	df 93       	push	r29
    6300:	cd b7       	in	r28, 0x3d	; 61
    6302:	de b7       	in	r29, 0x3e	; 62
    6304:	2e 97       	sbiw	r28, 0x0e	; 14
    6306:	0f b6       	in	r0, 0x3f	; 63
    6308:	f8 94       	cli
    630a:	de bf       	out	0x3e, r29	; 62
    630c:	0f be       	out	0x3f, r0	; 63
    630e:	cd bf       	out	0x3d, r28	; 61
    6310:	8c 01       	movw	r16, r24
    6312:	fa 01       	movw	r30, r20
    6314:	8e e0       	ldi	r24, 0x0E	; 14
    6316:	8c 83       	std	Y+4, r24	; 0x04
    6318:	1a 83       	std	Y+2, r17	; 0x02
    631a:	09 83       	std	Y+1, r16	; 0x01
    631c:	77 ff       	sbrs	r23, 7
    631e:	02 c0       	rjmp	.+4      	; 0x6324 <vsnprintf_P+0x2c>
    6320:	60 e0       	ldi	r22, 0x00	; 0
    6322:	70 e8       	ldi	r23, 0x80	; 128
    6324:	cb 01       	movw	r24, r22
    6326:	01 97       	sbiw	r24, 0x01	; 1
    6328:	9e 83       	std	Y+6, r25	; 0x06
    632a:	8d 83       	std	Y+5, r24	; 0x05
    632c:	a9 01       	movw	r20, r18
    632e:	bf 01       	movw	r22, r30
    6330:	ce 01       	movw	r24, r28
    6332:	01 96       	adiw	r24, 0x01	; 1
    6334:	19 d0       	rcall	.+50     	; 0x6368 <vfprintf>
    6336:	4d 81       	ldd	r20, Y+5	; 0x05
    6338:	5e 81       	ldd	r21, Y+6	; 0x06
    633a:	57 fd       	sbrc	r21, 7
    633c:	0a c0       	rjmp	.+20     	; 0x6352 <vsnprintf_P+0x5a>
    633e:	2f 81       	ldd	r18, Y+7	; 0x07
    6340:	38 85       	ldd	r19, Y+8	; 0x08
    6342:	42 17       	cp	r20, r18
    6344:	53 07       	cpc	r21, r19
    6346:	0c f4       	brge	.+2      	; 0x634a <vsnprintf_P+0x52>
    6348:	9a 01       	movw	r18, r20
    634a:	f8 01       	movw	r30, r16
    634c:	e2 0f       	add	r30, r18
    634e:	f3 1f       	adc	r31, r19
    6350:	10 82       	st	Z, r1
    6352:	2e 96       	adiw	r28, 0x0e	; 14
    6354:	0f b6       	in	r0, 0x3f	; 63
    6356:	f8 94       	cli
    6358:	de bf       	out	0x3e, r29	; 62
    635a:	0f be       	out	0x3f, r0	; 63
    635c:	cd bf       	out	0x3d, r28	; 61
    635e:	df 91       	pop	r29
    6360:	cf 91       	pop	r28
    6362:	1f 91       	pop	r17
    6364:	0f 91       	pop	r16
    6366:	08 95       	ret

00006368 <vfprintf>:
    6368:	2f 92       	push	r2
    636a:	3f 92       	push	r3
    636c:	4f 92       	push	r4
    636e:	5f 92       	push	r5
    6370:	6f 92       	push	r6
    6372:	7f 92       	push	r7
    6374:	8f 92       	push	r8
    6376:	9f 92       	push	r9
    6378:	af 92       	push	r10
    637a:	bf 92       	push	r11
    637c:	cf 92       	push	r12
    637e:	df 92       	push	r13
    6380:	ef 92       	push	r14
    6382:	ff 92       	push	r15
    6384:	0f 93       	push	r16
    6386:	1f 93       	push	r17
    6388:	cf 93       	push	r28
    638a:	df 93       	push	r29
    638c:	cd b7       	in	r28, 0x3d	; 61
    638e:	de b7       	in	r29, 0x3e	; 62
    6390:	2b 97       	sbiw	r28, 0x0b	; 11
    6392:	0f b6       	in	r0, 0x3f	; 63
    6394:	f8 94       	cli
    6396:	de bf       	out	0x3e, r29	; 62
    6398:	0f be       	out	0x3f, r0	; 63
    639a:	cd bf       	out	0x3d, r28	; 61
    639c:	6c 01       	movw	r12, r24
    639e:	7b 01       	movw	r14, r22
    63a0:	8a 01       	movw	r16, r20
    63a2:	fc 01       	movw	r30, r24
    63a4:	17 82       	std	Z+7, r1	; 0x07
    63a6:	16 82       	std	Z+6, r1	; 0x06
    63a8:	83 81       	ldd	r24, Z+3	; 0x03
    63aa:	81 ff       	sbrs	r24, 1
    63ac:	bf c1       	rjmp	.+894    	; 0x672c <vfprintf+0x3c4>
    63ae:	ce 01       	movw	r24, r28
    63b0:	01 96       	adiw	r24, 0x01	; 1
    63b2:	3c 01       	movw	r6, r24
    63b4:	f6 01       	movw	r30, r12
    63b6:	93 81       	ldd	r25, Z+3	; 0x03
    63b8:	f7 01       	movw	r30, r14
    63ba:	93 fd       	sbrc	r25, 3
    63bc:	85 91       	lpm	r24, Z+
    63be:	93 ff       	sbrs	r25, 3
    63c0:	81 91       	ld	r24, Z+
    63c2:	7f 01       	movw	r14, r30
    63c4:	88 23       	and	r24, r24
    63c6:	09 f4       	brne	.+2      	; 0x63ca <vfprintf+0x62>
    63c8:	ad c1       	rjmp	.+858    	; 0x6724 <vfprintf+0x3bc>
    63ca:	85 32       	cpi	r24, 0x25	; 37
    63cc:	39 f4       	brne	.+14     	; 0x63dc <vfprintf+0x74>
    63ce:	93 fd       	sbrc	r25, 3
    63d0:	85 91       	lpm	r24, Z+
    63d2:	93 ff       	sbrs	r25, 3
    63d4:	81 91       	ld	r24, Z+
    63d6:	7f 01       	movw	r14, r30
    63d8:	85 32       	cpi	r24, 0x25	; 37
    63da:	21 f4       	brne	.+8      	; 0x63e4 <vfprintf+0x7c>
    63dc:	b6 01       	movw	r22, r12
    63de:	90 e0       	ldi	r25, 0x00	; 0
    63e0:	2c d4       	rcall	.+2136   	; 0x6c3a <fputc>
    63e2:	e8 cf       	rjmp	.-48     	; 0x63b4 <vfprintf+0x4c>
    63e4:	91 2c       	mov	r9, r1
    63e6:	21 2c       	mov	r2, r1
    63e8:	31 2c       	mov	r3, r1
    63ea:	ff e1       	ldi	r31, 0x1F	; 31
    63ec:	f3 15       	cp	r31, r3
    63ee:	d8 f0       	brcs	.+54     	; 0x6426 <vfprintf+0xbe>
    63f0:	8b 32       	cpi	r24, 0x2B	; 43
    63f2:	79 f0       	breq	.+30     	; 0x6412 <vfprintf+0xaa>
    63f4:	38 f4       	brcc	.+14     	; 0x6404 <vfprintf+0x9c>
    63f6:	80 32       	cpi	r24, 0x20	; 32
    63f8:	79 f0       	breq	.+30     	; 0x6418 <vfprintf+0xb0>
    63fa:	83 32       	cpi	r24, 0x23	; 35
    63fc:	a1 f4       	brne	.+40     	; 0x6426 <vfprintf+0xbe>
    63fe:	23 2d       	mov	r18, r3
    6400:	20 61       	ori	r18, 0x10	; 16
    6402:	1d c0       	rjmp	.+58     	; 0x643e <vfprintf+0xd6>
    6404:	8d 32       	cpi	r24, 0x2D	; 45
    6406:	61 f0       	breq	.+24     	; 0x6420 <vfprintf+0xb8>
    6408:	80 33       	cpi	r24, 0x30	; 48
    640a:	69 f4       	brne	.+26     	; 0x6426 <vfprintf+0xbe>
    640c:	23 2d       	mov	r18, r3
    640e:	21 60       	ori	r18, 0x01	; 1
    6410:	16 c0       	rjmp	.+44     	; 0x643e <vfprintf+0xd6>
    6412:	83 2d       	mov	r24, r3
    6414:	82 60       	ori	r24, 0x02	; 2
    6416:	38 2e       	mov	r3, r24
    6418:	e3 2d       	mov	r30, r3
    641a:	e4 60       	ori	r30, 0x04	; 4
    641c:	3e 2e       	mov	r3, r30
    641e:	2a c0       	rjmp	.+84     	; 0x6474 <vfprintf+0x10c>
    6420:	f3 2d       	mov	r31, r3
    6422:	f8 60       	ori	r31, 0x08	; 8
    6424:	1d c0       	rjmp	.+58     	; 0x6460 <vfprintf+0xf8>
    6426:	37 fc       	sbrc	r3, 7
    6428:	2d c0       	rjmp	.+90     	; 0x6484 <vfprintf+0x11c>
    642a:	20 ed       	ldi	r18, 0xD0	; 208
    642c:	28 0f       	add	r18, r24
    642e:	2a 30       	cpi	r18, 0x0A	; 10
    6430:	40 f0       	brcs	.+16     	; 0x6442 <vfprintf+0xda>
    6432:	8e 32       	cpi	r24, 0x2E	; 46
    6434:	b9 f4       	brne	.+46     	; 0x6464 <vfprintf+0xfc>
    6436:	36 fc       	sbrc	r3, 6
    6438:	75 c1       	rjmp	.+746    	; 0x6724 <vfprintf+0x3bc>
    643a:	23 2d       	mov	r18, r3
    643c:	20 64       	ori	r18, 0x40	; 64
    643e:	32 2e       	mov	r3, r18
    6440:	19 c0       	rjmp	.+50     	; 0x6474 <vfprintf+0x10c>
    6442:	36 fe       	sbrs	r3, 6
    6444:	06 c0       	rjmp	.+12     	; 0x6452 <vfprintf+0xea>
    6446:	8a e0       	ldi	r24, 0x0A	; 10
    6448:	98 9e       	mul	r9, r24
    644a:	20 0d       	add	r18, r0
    644c:	11 24       	eor	r1, r1
    644e:	92 2e       	mov	r9, r18
    6450:	11 c0       	rjmp	.+34     	; 0x6474 <vfprintf+0x10c>
    6452:	ea e0       	ldi	r30, 0x0A	; 10
    6454:	2e 9e       	mul	r2, r30
    6456:	20 0d       	add	r18, r0
    6458:	11 24       	eor	r1, r1
    645a:	22 2e       	mov	r2, r18
    645c:	f3 2d       	mov	r31, r3
    645e:	f0 62       	ori	r31, 0x20	; 32
    6460:	3f 2e       	mov	r3, r31
    6462:	08 c0       	rjmp	.+16     	; 0x6474 <vfprintf+0x10c>
    6464:	8c 36       	cpi	r24, 0x6C	; 108
    6466:	21 f4       	brne	.+8      	; 0x6470 <vfprintf+0x108>
    6468:	83 2d       	mov	r24, r3
    646a:	80 68       	ori	r24, 0x80	; 128
    646c:	38 2e       	mov	r3, r24
    646e:	02 c0       	rjmp	.+4      	; 0x6474 <vfprintf+0x10c>
    6470:	88 36       	cpi	r24, 0x68	; 104
    6472:	41 f4       	brne	.+16     	; 0x6484 <vfprintf+0x11c>
    6474:	f7 01       	movw	r30, r14
    6476:	93 fd       	sbrc	r25, 3
    6478:	85 91       	lpm	r24, Z+
    647a:	93 ff       	sbrs	r25, 3
    647c:	81 91       	ld	r24, Z+
    647e:	7f 01       	movw	r14, r30
    6480:	81 11       	cpse	r24, r1
    6482:	b3 cf       	rjmp	.-154    	; 0x63ea <vfprintf+0x82>
    6484:	98 2f       	mov	r25, r24
    6486:	9f 7d       	andi	r25, 0xDF	; 223
    6488:	95 54       	subi	r25, 0x45	; 69
    648a:	93 30       	cpi	r25, 0x03	; 3
    648c:	28 f4       	brcc	.+10     	; 0x6498 <vfprintf+0x130>
    648e:	0c 5f       	subi	r16, 0xFC	; 252
    6490:	1f 4f       	sbci	r17, 0xFF	; 255
    6492:	9f e3       	ldi	r25, 0x3F	; 63
    6494:	99 83       	std	Y+1, r25	; 0x01
    6496:	0d c0       	rjmp	.+26     	; 0x64b2 <vfprintf+0x14a>
    6498:	83 36       	cpi	r24, 0x63	; 99
    649a:	31 f0       	breq	.+12     	; 0x64a8 <vfprintf+0x140>
    649c:	83 37       	cpi	r24, 0x73	; 115
    649e:	71 f0       	breq	.+28     	; 0x64bc <vfprintf+0x154>
    64a0:	83 35       	cpi	r24, 0x53	; 83
    64a2:	09 f0       	breq	.+2      	; 0x64a6 <vfprintf+0x13e>
    64a4:	55 c0       	rjmp	.+170    	; 0x6550 <vfprintf+0x1e8>
    64a6:	20 c0       	rjmp	.+64     	; 0x64e8 <vfprintf+0x180>
    64a8:	f8 01       	movw	r30, r16
    64aa:	80 81       	ld	r24, Z
    64ac:	89 83       	std	Y+1, r24	; 0x01
    64ae:	0e 5f       	subi	r16, 0xFE	; 254
    64b0:	1f 4f       	sbci	r17, 0xFF	; 255
    64b2:	88 24       	eor	r8, r8
    64b4:	83 94       	inc	r8
    64b6:	91 2c       	mov	r9, r1
    64b8:	53 01       	movw	r10, r6
    64ba:	12 c0       	rjmp	.+36     	; 0x64e0 <vfprintf+0x178>
    64bc:	28 01       	movw	r4, r16
    64be:	f2 e0       	ldi	r31, 0x02	; 2
    64c0:	4f 0e       	add	r4, r31
    64c2:	51 1c       	adc	r5, r1
    64c4:	f8 01       	movw	r30, r16
    64c6:	a0 80       	ld	r10, Z
    64c8:	b1 80       	ldd	r11, Z+1	; 0x01
    64ca:	36 fe       	sbrs	r3, 6
    64cc:	03 c0       	rjmp	.+6      	; 0x64d4 <vfprintf+0x16c>
    64ce:	69 2d       	mov	r22, r9
    64d0:	70 e0       	ldi	r23, 0x00	; 0
    64d2:	02 c0       	rjmp	.+4      	; 0x64d8 <vfprintf+0x170>
    64d4:	6f ef       	ldi	r22, 0xFF	; 255
    64d6:	7f ef       	ldi	r23, 0xFF	; 255
    64d8:	c5 01       	movw	r24, r10
    64da:	71 de       	rcall	.-798    	; 0x61be <strnlen>
    64dc:	4c 01       	movw	r8, r24
    64de:	82 01       	movw	r16, r4
    64e0:	f3 2d       	mov	r31, r3
    64e2:	ff 77       	andi	r31, 0x7F	; 127
    64e4:	3f 2e       	mov	r3, r31
    64e6:	15 c0       	rjmp	.+42     	; 0x6512 <vfprintf+0x1aa>
    64e8:	28 01       	movw	r4, r16
    64ea:	22 e0       	ldi	r18, 0x02	; 2
    64ec:	42 0e       	add	r4, r18
    64ee:	51 1c       	adc	r5, r1
    64f0:	f8 01       	movw	r30, r16
    64f2:	a0 80       	ld	r10, Z
    64f4:	b1 80       	ldd	r11, Z+1	; 0x01
    64f6:	36 fe       	sbrs	r3, 6
    64f8:	03 c0       	rjmp	.+6      	; 0x6500 <vfprintf+0x198>
    64fa:	69 2d       	mov	r22, r9
    64fc:	70 e0       	ldi	r23, 0x00	; 0
    64fe:	02 c0       	rjmp	.+4      	; 0x6504 <vfprintf+0x19c>
    6500:	6f ef       	ldi	r22, 0xFF	; 255
    6502:	7f ef       	ldi	r23, 0xFF	; 255
    6504:	c5 01       	movw	r24, r10
    6506:	7e d3       	rcall	.+1788   	; 0x6c04 <strnlen_P>
    6508:	4c 01       	movw	r8, r24
    650a:	f3 2d       	mov	r31, r3
    650c:	f0 68       	ori	r31, 0x80	; 128
    650e:	3f 2e       	mov	r3, r31
    6510:	82 01       	movw	r16, r4
    6512:	33 fc       	sbrc	r3, 3
    6514:	19 c0       	rjmp	.+50     	; 0x6548 <vfprintf+0x1e0>
    6516:	82 2d       	mov	r24, r2
    6518:	90 e0       	ldi	r25, 0x00	; 0
    651a:	88 16       	cp	r8, r24
    651c:	99 06       	cpc	r9, r25
    651e:	a0 f4       	brcc	.+40     	; 0x6548 <vfprintf+0x1e0>
    6520:	b6 01       	movw	r22, r12
    6522:	80 e2       	ldi	r24, 0x20	; 32
    6524:	90 e0       	ldi	r25, 0x00	; 0
    6526:	89 d3       	rcall	.+1810   	; 0x6c3a <fputc>
    6528:	2a 94       	dec	r2
    652a:	f5 cf       	rjmp	.-22     	; 0x6516 <vfprintf+0x1ae>
    652c:	f5 01       	movw	r30, r10
    652e:	37 fc       	sbrc	r3, 7
    6530:	85 91       	lpm	r24, Z+
    6532:	37 fe       	sbrs	r3, 7
    6534:	81 91       	ld	r24, Z+
    6536:	5f 01       	movw	r10, r30
    6538:	b6 01       	movw	r22, r12
    653a:	90 e0       	ldi	r25, 0x00	; 0
    653c:	7e d3       	rcall	.+1788   	; 0x6c3a <fputc>
    653e:	21 10       	cpse	r2, r1
    6540:	2a 94       	dec	r2
    6542:	21 e0       	ldi	r18, 0x01	; 1
    6544:	82 1a       	sub	r8, r18
    6546:	91 08       	sbc	r9, r1
    6548:	81 14       	cp	r8, r1
    654a:	91 04       	cpc	r9, r1
    654c:	79 f7       	brne	.-34     	; 0x652c <vfprintf+0x1c4>
    654e:	e1 c0       	rjmp	.+450    	; 0x6712 <vfprintf+0x3aa>
    6550:	84 36       	cpi	r24, 0x64	; 100
    6552:	11 f0       	breq	.+4      	; 0x6558 <vfprintf+0x1f0>
    6554:	89 36       	cpi	r24, 0x69	; 105
    6556:	39 f5       	brne	.+78     	; 0x65a6 <vfprintf+0x23e>
    6558:	f8 01       	movw	r30, r16
    655a:	37 fe       	sbrs	r3, 7
    655c:	07 c0       	rjmp	.+14     	; 0x656c <vfprintf+0x204>
    655e:	60 81       	ld	r22, Z
    6560:	71 81       	ldd	r23, Z+1	; 0x01
    6562:	82 81       	ldd	r24, Z+2	; 0x02
    6564:	93 81       	ldd	r25, Z+3	; 0x03
    6566:	0c 5f       	subi	r16, 0xFC	; 252
    6568:	1f 4f       	sbci	r17, 0xFF	; 255
    656a:	08 c0       	rjmp	.+16     	; 0x657c <vfprintf+0x214>
    656c:	60 81       	ld	r22, Z
    656e:	71 81       	ldd	r23, Z+1	; 0x01
    6570:	07 2e       	mov	r0, r23
    6572:	00 0c       	add	r0, r0
    6574:	88 0b       	sbc	r24, r24
    6576:	99 0b       	sbc	r25, r25
    6578:	0e 5f       	subi	r16, 0xFE	; 254
    657a:	1f 4f       	sbci	r17, 0xFF	; 255
    657c:	f3 2d       	mov	r31, r3
    657e:	ff 76       	andi	r31, 0x6F	; 111
    6580:	3f 2e       	mov	r3, r31
    6582:	97 ff       	sbrs	r25, 7
    6584:	09 c0       	rjmp	.+18     	; 0x6598 <vfprintf+0x230>
    6586:	90 95       	com	r25
    6588:	80 95       	com	r24
    658a:	70 95       	com	r23
    658c:	61 95       	neg	r22
    658e:	7f 4f       	sbci	r23, 0xFF	; 255
    6590:	8f 4f       	sbci	r24, 0xFF	; 255
    6592:	9f 4f       	sbci	r25, 0xFF	; 255
    6594:	f0 68       	ori	r31, 0x80	; 128
    6596:	3f 2e       	mov	r3, r31
    6598:	2a e0       	ldi	r18, 0x0A	; 10
    659a:	30 e0       	ldi	r19, 0x00	; 0
    659c:	a3 01       	movw	r20, r6
    659e:	89 d3       	rcall	.+1810   	; 0x6cb2 <__ultoa_invert>
    65a0:	88 2e       	mov	r8, r24
    65a2:	86 18       	sub	r8, r6
    65a4:	44 c0       	rjmp	.+136    	; 0x662e <vfprintf+0x2c6>
    65a6:	85 37       	cpi	r24, 0x75	; 117
    65a8:	31 f4       	brne	.+12     	; 0x65b6 <vfprintf+0x24e>
    65aa:	23 2d       	mov	r18, r3
    65ac:	2f 7e       	andi	r18, 0xEF	; 239
    65ae:	b2 2e       	mov	r11, r18
    65b0:	2a e0       	ldi	r18, 0x0A	; 10
    65b2:	30 e0       	ldi	r19, 0x00	; 0
    65b4:	25 c0       	rjmp	.+74     	; 0x6600 <vfprintf+0x298>
    65b6:	93 2d       	mov	r25, r3
    65b8:	99 7f       	andi	r25, 0xF9	; 249
    65ba:	b9 2e       	mov	r11, r25
    65bc:	8f 36       	cpi	r24, 0x6F	; 111
    65be:	c1 f0       	breq	.+48     	; 0x65f0 <vfprintf+0x288>
    65c0:	18 f4       	brcc	.+6      	; 0x65c8 <vfprintf+0x260>
    65c2:	88 35       	cpi	r24, 0x58	; 88
    65c4:	79 f0       	breq	.+30     	; 0x65e4 <vfprintf+0x27c>
    65c6:	ae c0       	rjmp	.+348    	; 0x6724 <vfprintf+0x3bc>
    65c8:	80 37       	cpi	r24, 0x70	; 112
    65ca:	19 f0       	breq	.+6      	; 0x65d2 <vfprintf+0x26a>
    65cc:	88 37       	cpi	r24, 0x78	; 120
    65ce:	21 f0       	breq	.+8      	; 0x65d8 <vfprintf+0x270>
    65d0:	a9 c0       	rjmp	.+338    	; 0x6724 <vfprintf+0x3bc>
    65d2:	e9 2f       	mov	r30, r25
    65d4:	e0 61       	ori	r30, 0x10	; 16
    65d6:	be 2e       	mov	r11, r30
    65d8:	b4 fe       	sbrs	r11, 4
    65da:	0d c0       	rjmp	.+26     	; 0x65f6 <vfprintf+0x28e>
    65dc:	fb 2d       	mov	r31, r11
    65de:	f4 60       	ori	r31, 0x04	; 4
    65e0:	bf 2e       	mov	r11, r31
    65e2:	09 c0       	rjmp	.+18     	; 0x65f6 <vfprintf+0x28e>
    65e4:	34 fe       	sbrs	r3, 4
    65e6:	0a c0       	rjmp	.+20     	; 0x65fc <vfprintf+0x294>
    65e8:	29 2f       	mov	r18, r25
    65ea:	26 60       	ori	r18, 0x06	; 6
    65ec:	b2 2e       	mov	r11, r18
    65ee:	06 c0       	rjmp	.+12     	; 0x65fc <vfprintf+0x294>
    65f0:	28 e0       	ldi	r18, 0x08	; 8
    65f2:	30 e0       	ldi	r19, 0x00	; 0
    65f4:	05 c0       	rjmp	.+10     	; 0x6600 <vfprintf+0x298>
    65f6:	20 e1       	ldi	r18, 0x10	; 16
    65f8:	30 e0       	ldi	r19, 0x00	; 0
    65fa:	02 c0       	rjmp	.+4      	; 0x6600 <vfprintf+0x298>
    65fc:	20 e1       	ldi	r18, 0x10	; 16
    65fe:	32 e0       	ldi	r19, 0x02	; 2
    6600:	f8 01       	movw	r30, r16
    6602:	b7 fe       	sbrs	r11, 7
    6604:	07 c0       	rjmp	.+14     	; 0x6614 <vfprintf+0x2ac>
    6606:	60 81       	ld	r22, Z
    6608:	71 81       	ldd	r23, Z+1	; 0x01
    660a:	82 81       	ldd	r24, Z+2	; 0x02
    660c:	93 81       	ldd	r25, Z+3	; 0x03
    660e:	0c 5f       	subi	r16, 0xFC	; 252
    6610:	1f 4f       	sbci	r17, 0xFF	; 255
    6612:	06 c0       	rjmp	.+12     	; 0x6620 <vfprintf+0x2b8>
    6614:	60 81       	ld	r22, Z
    6616:	71 81       	ldd	r23, Z+1	; 0x01
    6618:	80 e0       	ldi	r24, 0x00	; 0
    661a:	90 e0       	ldi	r25, 0x00	; 0
    661c:	0e 5f       	subi	r16, 0xFE	; 254
    661e:	1f 4f       	sbci	r17, 0xFF	; 255
    6620:	a3 01       	movw	r20, r6
    6622:	47 d3       	rcall	.+1678   	; 0x6cb2 <__ultoa_invert>
    6624:	88 2e       	mov	r8, r24
    6626:	86 18       	sub	r8, r6
    6628:	fb 2d       	mov	r31, r11
    662a:	ff 77       	andi	r31, 0x7F	; 127
    662c:	3f 2e       	mov	r3, r31
    662e:	36 fe       	sbrs	r3, 6
    6630:	0d c0       	rjmp	.+26     	; 0x664c <vfprintf+0x2e4>
    6632:	23 2d       	mov	r18, r3
    6634:	2e 7f       	andi	r18, 0xFE	; 254
    6636:	a2 2e       	mov	r10, r18
    6638:	89 14       	cp	r8, r9
    663a:	58 f4       	brcc	.+22     	; 0x6652 <vfprintf+0x2ea>
    663c:	34 fe       	sbrs	r3, 4
    663e:	0b c0       	rjmp	.+22     	; 0x6656 <vfprintf+0x2ee>
    6640:	32 fc       	sbrc	r3, 2
    6642:	09 c0       	rjmp	.+18     	; 0x6656 <vfprintf+0x2ee>
    6644:	83 2d       	mov	r24, r3
    6646:	8e 7e       	andi	r24, 0xEE	; 238
    6648:	a8 2e       	mov	r10, r24
    664a:	05 c0       	rjmp	.+10     	; 0x6656 <vfprintf+0x2ee>
    664c:	b8 2c       	mov	r11, r8
    664e:	a3 2c       	mov	r10, r3
    6650:	03 c0       	rjmp	.+6      	; 0x6658 <vfprintf+0x2f0>
    6652:	b8 2c       	mov	r11, r8
    6654:	01 c0       	rjmp	.+2      	; 0x6658 <vfprintf+0x2f0>
    6656:	b9 2c       	mov	r11, r9
    6658:	a4 fe       	sbrs	r10, 4
    665a:	0f c0       	rjmp	.+30     	; 0x667a <vfprintf+0x312>
    665c:	fe 01       	movw	r30, r28
    665e:	e8 0d       	add	r30, r8
    6660:	f1 1d       	adc	r31, r1
    6662:	80 81       	ld	r24, Z
    6664:	80 33       	cpi	r24, 0x30	; 48
    6666:	21 f4       	brne	.+8      	; 0x6670 <vfprintf+0x308>
    6668:	9a 2d       	mov	r25, r10
    666a:	99 7e       	andi	r25, 0xE9	; 233
    666c:	a9 2e       	mov	r10, r25
    666e:	09 c0       	rjmp	.+18     	; 0x6682 <vfprintf+0x31a>
    6670:	a2 fe       	sbrs	r10, 2
    6672:	06 c0       	rjmp	.+12     	; 0x6680 <vfprintf+0x318>
    6674:	b3 94       	inc	r11
    6676:	b3 94       	inc	r11
    6678:	04 c0       	rjmp	.+8      	; 0x6682 <vfprintf+0x31a>
    667a:	8a 2d       	mov	r24, r10
    667c:	86 78       	andi	r24, 0x86	; 134
    667e:	09 f0       	breq	.+2      	; 0x6682 <vfprintf+0x31a>
    6680:	b3 94       	inc	r11
    6682:	a3 fc       	sbrc	r10, 3
    6684:	10 c0       	rjmp	.+32     	; 0x66a6 <vfprintf+0x33e>
    6686:	a0 fe       	sbrs	r10, 0
    6688:	06 c0       	rjmp	.+12     	; 0x6696 <vfprintf+0x32e>
    668a:	b2 14       	cp	r11, r2
    668c:	80 f4       	brcc	.+32     	; 0x66ae <vfprintf+0x346>
    668e:	28 0c       	add	r2, r8
    6690:	92 2c       	mov	r9, r2
    6692:	9b 18       	sub	r9, r11
    6694:	0d c0       	rjmp	.+26     	; 0x66b0 <vfprintf+0x348>
    6696:	b2 14       	cp	r11, r2
    6698:	58 f4       	brcc	.+22     	; 0x66b0 <vfprintf+0x348>
    669a:	b6 01       	movw	r22, r12
    669c:	80 e2       	ldi	r24, 0x20	; 32
    669e:	90 e0       	ldi	r25, 0x00	; 0
    66a0:	cc d2       	rcall	.+1432   	; 0x6c3a <fputc>
    66a2:	b3 94       	inc	r11
    66a4:	f8 cf       	rjmp	.-16     	; 0x6696 <vfprintf+0x32e>
    66a6:	b2 14       	cp	r11, r2
    66a8:	18 f4       	brcc	.+6      	; 0x66b0 <vfprintf+0x348>
    66aa:	2b 18       	sub	r2, r11
    66ac:	02 c0       	rjmp	.+4      	; 0x66b2 <vfprintf+0x34a>
    66ae:	98 2c       	mov	r9, r8
    66b0:	21 2c       	mov	r2, r1
    66b2:	a4 fe       	sbrs	r10, 4
    66b4:	0f c0       	rjmp	.+30     	; 0x66d4 <vfprintf+0x36c>
    66b6:	b6 01       	movw	r22, r12
    66b8:	80 e3       	ldi	r24, 0x30	; 48
    66ba:	90 e0       	ldi	r25, 0x00	; 0
    66bc:	be d2       	rcall	.+1404   	; 0x6c3a <fputc>
    66be:	a2 fe       	sbrs	r10, 2
    66c0:	16 c0       	rjmp	.+44     	; 0x66ee <vfprintf+0x386>
    66c2:	a1 fc       	sbrc	r10, 1
    66c4:	03 c0       	rjmp	.+6      	; 0x66cc <vfprintf+0x364>
    66c6:	88 e7       	ldi	r24, 0x78	; 120
    66c8:	90 e0       	ldi	r25, 0x00	; 0
    66ca:	02 c0       	rjmp	.+4      	; 0x66d0 <vfprintf+0x368>
    66cc:	88 e5       	ldi	r24, 0x58	; 88
    66ce:	90 e0       	ldi	r25, 0x00	; 0
    66d0:	b6 01       	movw	r22, r12
    66d2:	0c c0       	rjmp	.+24     	; 0x66ec <vfprintf+0x384>
    66d4:	8a 2d       	mov	r24, r10
    66d6:	86 78       	andi	r24, 0x86	; 134
    66d8:	51 f0       	breq	.+20     	; 0x66ee <vfprintf+0x386>
    66da:	a1 fe       	sbrs	r10, 1
    66dc:	02 c0       	rjmp	.+4      	; 0x66e2 <vfprintf+0x37a>
    66de:	8b e2       	ldi	r24, 0x2B	; 43
    66e0:	01 c0       	rjmp	.+2      	; 0x66e4 <vfprintf+0x37c>
    66e2:	80 e2       	ldi	r24, 0x20	; 32
    66e4:	a7 fc       	sbrc	r10, 7
    66e6:	8d e2       	ldi	r24, 0x2D	; 45
    66e8:	b6 01       	movw	r22, r12
    66ea:	90 e0       	ldi	r25, 0x00	; 0
    66ec:	a6 d2       	rcall	.+1356   	; 0x6c3a <fputc>
    66ee:	89 14       	cp	r8, r9
    66f0:	30 f4       	brcc	.+12     	; 0x66fe <vfprintf+0x396>
    66f2:	b6 01       	movw	r22, r12
    66f4:	80 e3       	ldi	r24, 0x30	; 48
    66f6:	90 e0       	ldi	r25, 0x00	; 0
    66f8:	a0 d2       	rcall	.+1344   	; 0x6c3a <fputc>
    66fa:	9a 94       	dec	r9
    66fc:	f8 cf       	rjmp	.-16     	; 0x66ee <vfprintf+0x386>
    66fe:	8a 94       	dec	r8
    6700:	f3 01       	movw	r30, r6
    6702:	e8 0d       	add	r30, r8
    6704:	f1 1d       	adc	r31, r1
    6706:	80 81       	ld	r24, Z
    6708:	b6 01       	movw	r22, r12
    670a:	90 e0       	ldi	r25, 0x00	; 0
    670c:	96 d2       	rcall	.+1324   	; 0x6c3a <fputc>
    670e:	81 10       	cpse	r8, r1
    6710:	f6 cf       	rjmp	.-20     	; 0x66fe <vfprintf+0x396>
    6712:	22 20       	and	r2, r2
    6714:	09 f4       	brne	.+2      	; 0x6718 <vfprintf+0x3b0>
    6716:	4e ce       	rjmp	.-868    	; 0x63b4 <vfprintf+0x4c>
    6718:	b6 01       	movw	r22, r12
    671a:	80 e2       	ldi	r24, 0x20	; 32
    671c:	90 e0       	ldi	r25, 0x00	; 0
    671e:	8d d2       	rcall	.+1306   	; 0x6c3a <fputc>
    6720:	2a 94       	dec	r2
    6722:	f7 cf       	rjmp	.-18     	; 0x6712 <vfprintf+0x3aa>
    6724:	f6 01       	movw	r30, r12
    6726:	86 81       	ldd	r24, Z+6	; 0x06
    6728:	97 81       	ldd	r25, Z+7	; 0x07
    672a:	02 c0       	rjmp	.+4      	; 0x6730 <vfprintf+0x3c8>
    672c:	8f ef       	ldi	r24, 0xFF	; 255
    672e:	9f ef       	ldi	r25, 0xFF	; 255
    6730:	2b 96       	adiw	r28, 0x0b	; 11
    6732:	0f b6       	in	r0, 0x3f	; 63
    6734:	f8 94       	cli
    6736:	de bf       	out	0x3e, r29	; 62
    6738:	0f be       	out	0x3f, r0	; 63
    673a:	cd bf       	out	0x3d, r28	; 61
    673c:	df 91       	pop	r29
    673e:	cf 91       	pop	r28
    6740:	1f 91       	pop	r17
    6742:	0f 91       	pop	r16
    6744:	ff 90       	pop	r15
    6746:	ef 90       	pop	r14
    6748:	df 90       	pop	r13
    674a:	cf 90       	pop	r12
    674c:	bf 90       	pop	r11
    674e:	af 90       	pop	r10
    6750:	9f 90       	pop	r9
    6752:	8f 90       	pop	r8
    6754:	7f 90       	pop	r7
    6756:	6f 90       	pop	r6
    6758:	5f 90       	pop	r5
    675a:	4f 90       	pop	r4
    675c:	3f 90       	pop	r3
    675e:	2f 90       	pop	r2
    6760:	08 95       	ret

00006762 <dtoa_prf>:
    6762:	8f 92       	push	r8
    6764:	9f 92       	push	r9
    6766:	af 92       	push	r10
    6768:	bf 92       	push	r11
    676a:	cf 92       	push	r12
    676c:	df 92       	push	r13
    676e:	ef 92       	push	r14
    6770:	ff 92       	push	r15
    6772:	0f 93       	push	r16
    6774:	1f 93       	push	r17
    6776:	cf 93       	push	r28
    6778:	df 93       	push	r29
    677a:	cd b7       	in	r28, 0x3d	; 61
    677c:	de b7       	in	r29, 0x3e	; 62
    677e:	29 97       	sbiw	r28, 0x09	; 9
    6780:	0f b6       	in	r0, 0x3f	; 63
    6782:	f8 94       	cli
    6784:	de bf       	out	0x3e, r29	; 62
    6786:	0f be       	out	0x3f, r0	; 63
    6788:	cd bf       	out	0x3d, r28	; 61
    678a:	6a 01       	movw	r12, r20
    678c:	12 2f       	mov	r17, r18
    678e:	b0 2e       	mov	r11, r16
    6790:	2b e3       	ldi	r18, 0x3B	; 59
    6792:	20 17       	cp	r18, r16
    6794:	20 f0       	brcs	.+8      	; 0x679e <dtoa_prf+0x3c>
    6796:	ff 24       	eor	r15, r15
    6798:	f3 94       	inc	r15
    679a:	f0 0e       	add	r15, r16
    679c:	02 c0       	rjmp	.+4      	; 0x67a2 <dtoa_prf+0x40>
    679e:	2c e3       	ldi	r18, 0x3C	; 60
    67a0:	f2 2e       	mov	r15, r18
    67a2:	0f 2d       	mov	r16, r15
    67a4:	27 e0       	ldi	r18, 0x07	; 7
    67a6:	ae 01       	movw	r20, r28
    67a8:	4f 5f       	subi	r20, 0xFF	; 255
    67aa:	5f 4f       	sbci	r21, 0xFF	; 255
    67ac:	50 d1       	rcall	.+672    	; 0x6a4e <__ftoa_engine>
    67ae:	bc 01       	movw	r22, r24
    67b0:	49 81       	ldd	r20, Y+1	; 0x01
    67b2:	84 2f       	mov	r24, r20
    67b4:	89 70       	andi	r24, 0x09	; 9
    67b6:	81 30       	cpi	r24, 0x01	; 1
    67b8:	31 f0       	breq	.+12     	; 0x67c6 <dtoa_prf+0x64>
    67ba:	e1 fc       	sbrc	r14, 1
    67bc:	06 c0       	rjmp	.+12     	; 0x67ca <dtoa_prf+0x68>
    67be:	e0 fe       	sbrs	r14, 0
    67c0:	06 c0       	rjmp	.+12     	; 0x67ce <dtoa_prf+0x6c>
    67c2:	90 e2       	ldi	r25, 0x20	; 32
    67c4:	05 c0       	rjmp	.+10     	; 0x67d0 <dtoa_prf+0x6e>
    67c6:	9d e2       	ldi	r25, 0x2D	; 45
    67c8:	03 c0       	rjmp	.+6      	; 0x67d0 <dtoa_prf+0x6e>
    67ca:	9b e2       	ldi	r25, 0x2B	; 43
    67cc:	01 c0       	rjmp	.+2      	; 0x67d0 <dtoa_prf+0x6e>
    67ce:	90 e0       	ldi	r25, 0x00	; 0
    67d0:	5e 2d       	mov	r21, r14
    67d2:	50 71       	andi	r21, 0x10	; 16
    67d4:	43 ff       	sbrs	r20, 3
    67d6:	3c c0       	rjmp	.+120    	; 0x6850 <dtoa_prf+0xee>
    67d8:	91 11       	cpse	r25, r1
    67da:	02 c0       	rjmp	.+4      	; 0x67e0 <dtoa_prf+0x7e>
    67dc:	83 e0       	ldi	r24, 0x03	; 3
    67de:	01 c0       	rjmp	.+2      	; 0x67e2 <dtoa_prf+0x80>
    67e0:	84 e0       	ldi	r24, 0x04	; 4
    67e2:	81 17       	cp	r24, r17
    67e4:	18 f4       	brcc	.+6      	; 0x67ec <dtoa_prf+0x8a>
    67e6:	21 2f       	mov	r18, r17
    67e8:	28 1b       	sub	r18, r24
    67ea:	01 c0       	rjmp	.+2      	; 0x67ee <dtoa_prf+0x8c>
    67ec:	20 e0       	ldi	r18, 0x00	; 0
    67ee:	51 11       	cpse	r21, r1
    67f0:	0b c0       	rjmp	.+22     	; 0x6808 <dtoa_prf+0xa6>
    67f2:	f6 01       	movw	r30, r12
    67f4:	82 2f       	mov	r24, r18
    67f6:	30 e2       	ldi	r19, 0x20	; 32
    67f8:	88 23       	and	r24, r24
    67fa:	19 f0       	breq	.+6      	; 0x6802 <dtoa_prf+0xa0>
    67fc:	31 93       	st	Z+, r19
    67fe:	81 50       	subi	r24, 0x01	; 1
    6800:	fb cf       	rjmp	.-10     	; 0x67f8 <dtoa_prf+0x96>
    6802:	c2 0e       	add	r12, r18
    6804:	d1 1c       	adc	r13, r1
    6806:	20 e0       	ldi	r18, 0x00	; 0
    6808:	99 23       	and	r25, r25
    680a:	29 f0       	breq	.+10     	; 0x6816 <dtoa_prf+0xb4>
    680c:	d6 01       	movw	r26, r12
    680e:	9c 93       	st	X, r25
    6810:	f6 01       	movw	r30, r12
    6812:	31 96       	adiw	r30, 0x01	; 1
    6814:	6f 01       	movw	r12, r30
    6816:	c6 01       	movw	r24, r12
    6818:	03 96       	adiw	r24, 0x03	; 3
    681a:	e2 fe       	sbrs	r14, 2
    681c:	0a c0       	rjmp	.+20     	; 0x6832 <dtoa_prf+0xd0>
    681e:	3e e4       	ldi	r19, 0x4E	; 78
    6820:	d6 01       	movw	r26, r12
    6822:	3c 93       	st	X, r19
    6824:	41 e4       	ldi	r20, 0x41	; 65
    6826:	11 96       	adiw	r26, 0x01	; 1
    6828:	4c 93       	st	X, r20
    682a:	11 97       	sbiw	r26, 0x01	; 1
    682c:	12 96       	adiw	r26, 0x02	; 2
    682e:	3c 93       	st	X, r19
    6830:	06 c0       	rjmp	.+12     	; 0x683e <dtoa_prf+0xdc>
    6832:	3e e6       	ldi	r19, 0x6E	; 110
    6834:	f6 01       	movw	r30, r12
    6836:	30 83       	st	Z, r19
    6838:	41 e6       	ldi	r20, 0x61	; 97
    683a:	41 83       	std	Z+1, r20	; 0x01
    683c:	32 83       	std	Z+2, r19	; 0x02
    683e:	fc 01       	movw	r30, r24
    6840:	32 2f       	mov	r19, r18
    6842:	40 e2       	ldi	r20, 0x20	; 32
    6844:	33 23       	and	r19, r19
    6846:	09 f4       	brne	.+2      	; 0x684a <dtoa_prf+0xe8>
    6848:	42 c0       	rjmp	.+132    	; 0x68ce <dtoa_prf+0x16c>
    684a:	41 93       	st	Z+, r20
    684c:	31 50       	subi	r19, 0x01	; 1
    684e:	fa cf       	rjmp	.-12     	; 0x6844 <dtoa_prf+0xe2>
    6850:	42 ff       	sbrs	r20, 2
    6852:	44 c0       	rjmp	.+136    	; 0x68dc <dtoa_prf+0x17a>
    6854:	91 11       	cpse	r25, r1
    6856:	02 c0       	rjmp	.+4      	; 0x685c <dtoa_prf+0xfa>
    6858:	83 e0       	ldi	r24, 0x03	; 3
    685a:	01 c0       	rjmp	.+2      	; 0x685e <dtoa_prf+0xfc>
    685c:	84 e0       	ldi	r24, 0x04	; 4
    685e:	81 17       	cp	r24, r17
    6860:	18 f4       	brcc	.+6      	; 0x6868 <dtoa_prf+0x106>
    6862:	21 2f       	mov	r18, r17
    6864:	28 1b       	sub	r18, r24
    6866:	01 c0       	rjmp	.+2      	; 0x686a <dtoa_prf+0x108>
    6868:	20 e0       	ldi	r18, 0x00	; 0
    686a:	51 11       	cpse	r21, r1
    686c:	0b c0       	rjmp	.+22     	; 0x6884 <dtoa_prf+0x122>
    686e:	f6 01       	movw	r30, r12
    6870:	82 2f       	mov	r24, r18
    6872:	30 e2       	ldi	r19, 0x20	; 32
    6874:	88 23       	and	r24, r24
    6876:	19 f0       	breq	.+6      	; 0x687e <dtoa_prf+0x11c>
    6878:	31 93       	st	Z+, r19
    687a:	81 50       	subi	r24, 0x01	; 1
    687c:	fb cf       	rjmp	.-10     	; 0x6874 <dtoa_prf+0x112>
    687e:	c2 0e       	add	r12, r18
    6880:	d1 1c       	adc	r13, r1
    6882:	20 e0       	ldi	r18, 0x00	; 0
    6884:	99 23       	and	r25, r25
    6886:	29 f0       	breq	.+10     	; 0x6892 <dtoa_prf+0x130>
    6888:	d6 01       	movw	r26, r12
    688a:	9c 93       	st	X, r25
    688c:	f6 01       	movw	r30, r12
    688e:	31 96       	adiw	r30, 0x01	; 1
    6890:	6f 01       	movw	r12, r30
    6892:	c6 01       	movw	r24, r12
    6894:	03 96       	adiw	r24, 0x03	; 3
    6896:	e2 fe       	sbrs	r14, 2
    6898:	0b c0       	rjmp	.+22     	; 0x68b0 <dtoa_prf+0x14e>
    689a:	39 e4       	ldi	r19, 0x49	; 73
    689c:	d6 01       	movw	r26, r12
    689e:	3c 93       	st	X, r19
    68a0:	3e e4       	ldi	r19, 0x4E	; 78
    68a2:	11 96       	adiw	r26, 0x01	; 1
    68a4:	3c 93       	st	X, r19
    68a6:	11 97       	sbiw	r26, 0x01	; 1
    68a8:	36 e4       	ldi	r19, 0x46	; 70
    68aa:	12 96       	adiw	r26, 0x02	; 2
    68ac:	3c 93       	st	X, r19
    68ae:	07 c0       	rjmp	.+14     	; 0x68be <dtoa_prf+0x15c>
    68b0:	39 e6       	ldi	r19, 0x69	; 105
    68b2:	f6 01       	movw	r30, r12
    68b4:	30 83       	st	Z, r19
    68b6:	3e e6       	ldi	r19, 0x6E	; 110
    68b8:	31 83       	std	Z+1, r19	; 0x01
    68ba:	36 e6       	ldi	r19, 0x66	; 102
    68bc:	32 83       	std	Z+2, r19	; 0x02
    68be:	fc 01       	movw	r30, r24
    68c0:	32 2f       	mov	r19, r18
    68c2:	40 e2       	ldi	r20, 0x20	; 32
    68c4:	33 23       	and	r19, r19
    68c6:	19 f0       	breq	.+6      	; 0x68ce <dtoa_prf+0x16c>
    68c8:	41 93       	st	Z+, r20
    68ca:	31 50       	subi	r19, 0x01	; 1
    68cc:	fb cf       	rjmp	.-10     	; 0x68c4 <dtoa_prf+0x162>
    68ce:	fc 01       	movw	r30, r24
    68d0:	e2 0f       	add	r30, r18
    68d2:	f1 1d       	adc	r31, r1
    68d4:	10 82       	st	Z, r1
    68d6:	8e ef       	ldi	r24, 0xFE	; 254
    68d8:	9f ef       	ldi	r25, 0xFF	; 255
    68da:	a6 c0       	rjmp	.+332    	; 0x6a28 <dtoa_prf+0x2c6>
    68dc:	21 e0       	ldi	r18, 0x01	; 1
    68de:	30 e0       	ldi	r19, 0x00	; 0
    68e0:	91 11       	cpse	r25, r1
    68e2:	02 c0       	rjmp	.+4      	; 0x68e8 <dtoa_prf+0x186>
    68e4:	20 e0       	ldi	r18, 0x00	; 0
    68e6:	30 e0       	ldi	r19, 0x00	; 0
    68e8:	16 16       	cp	r1, r22
    68ea:	17 06       	cpc	r1, r23
    68ec:	1c f4       	brge	.+6      	; 0x68f4 <dtoa_prf+0x192>
    68ee:	fb 01       	movw	r30, r22
    68f0:	31 96       	adiw	r30, 0x01	; 1
    68f2:	02 c0       	rjmp	.+4      	; 0x68f8 <dtoa_prf+0x196>
    68f4:	e1 e0       	ldi	r30, 0x01	; 1
    68f6:	f0 e0       	ldi	r31, 0x00	; 0
    68f8:	2e 0f       	add	r18, r30
    68fa:	3f 1f       	adc	r19, r31
    68fc:	bb 20       	and	r11, r11
    68fe:	21 f0       	breq	.+8      	; 0x6908 <dtoa_prf+0x1a6>
    6900:	eb 2d       	mov	r30, r11
    6902:	f0 e0       	ldi	r31, 0x00	; 0
    6904:	31 96       	adiw	r30, 0x01	; 1
    6906:	02 c0       	rjmp	.+4      	; 0x690c <dtoa_prf+0x1aa>
    6908:	e0 e0       	ldi	r30, 0x00	; 0
    690a:	f0 e0       	ldi	r31, 0x00	; 0
    690c:	2e 0f       	add	r18, r30
    690e:	3f 1f       	adc	r19, r31
    6910:	e1 2f       	mov	r30, r17
    6912:	f0 e0       	ldi	r31, 0x00	; 0
    6914:	2e 17       	cp	r18, r30
    6916:	3f 07       	cpc	r19, r31
    6918:	1c f4       	brge	.+6      	; 0x6920 <dtoa_prf+0x1be>
    691a:	12 1b       	sub	r17, r18
    691c:	21 2f       	mov	r18, r17
    691e:	01 c0       	rjmp	.+2      	; 0x6922 <dtoa_prf+0x1c0>
    6920:	20 e0       	ldi	r18, 0x00	; 0
    6922:	8e 2d       	mov	r24, r14
    6924:	88 71       	andi	r24, 0x18	; 24
    6926:	59 f4       	brne	.+22     	; 0x693e <dtoa_prf+0x1dc>
    6928:	f6 01       	movw	r30, r12
    692a:	82 2f       	mov	r24, r18
    692c:	30 e2       	ldi	r19, 0x20	; 32
    692e:	88 23       	and	r24, r24
    6930:	19 f0       	breq	.+6      	; 0x6938 <dtoa_prf+0x1d6>
    6932:	31 93       	st	Z+, r19
    6934:	81 50       	subi	r24, 0x01	; 1
    6936:	fb cf       	rjmp	.-10     	; 0x692e <dtoa_prf+0x1cc>
    6938:	c2 0e       	add	r12, r18
    693a:	d1 1c       	adc	r13, r1
    693c:	20 e0       	ldi	r18, 0x00	; 0
    693e:	99 23       	and	r25, r25
    6940:	29 f0       	breq	.+10     	; 0x694c <dtoa_prf+0x1ea>
    6942:	d6 01       	movw	r26, r12
    6944:	9c 93       	st	X, r25
    6946:	f6 01       	movw	r30, r12
    6948:	31 96       	adiw	r30, 0x01	; 1
    694a:	6f 01       	movw	r12, r30
    694c:	51 11       	cpse	r21, r1
    694e:	0b c0       	rjmp	.+22     	; 0x6966 <dtoa_prf+0x204>
    6950:	f6 01       	movw	r30, r12
    6952:	82 2f       	mov	r24, r18
    6954:	90 e3       	ldi	r25, 0x30	; 48
    6956:	88 23       	and	r24, r24
    6958:	19 f0       	breq	.+6      	; 0x6960 <dtoa_prf+0x1fe>
    695a:	91 93       	st	Z+, r25
    695c:	81 50       	subi	r24, 0x01	; 1
    695e:	fb cf       	rjmp	.-10     	; 0x6956 <dtoa_prf+0x1f4>
    6960:	c2 0e       	add	r12, r18
    6962:	d1 1c       	adc	r13, r1
    6964:	20 e0       	ldi	r18, 0x00	; 0
    6966:	0f 2d       	mov	r16, r15
    6968:	06 0f       	add	r16, r22
    696a:	9a 81       	ldd	r25, Y+2	; 0x02
    696c:	34 2f       	mov	r19, r20
    696e:	30 71       	andi	r19, 0x10	; 16
    6970:	44 ff       	sbrs	r20, 4
    6972:	03 c0       	rjmp	.+6      	; 0x697a <dtoa_prf+0x218>
    6974:	91 33       	cpi	r25, 0x31	; 49
    6976:	09 f4       	brne	.+2      	; 0x697a <dtoa_prf+0x218>
    6978:	01 50       	subi	r16, 0x01	; 1
    697a:	10 16       	cp	r1, r16
    697c:	24 f4       	brge	.+8      	; 0x6986 <dtoa_prf+0x224>
    697e:	09 30       	cpi	r16, 0x09	; 9
    6980:	18 f0       	brcs	.+6      	; 0x6988 <dtoa_prf+0x226>
    6982:	08 e0       	ldi	r16, 0x08	; 8
    6984:	01 c0       	rjmp	.+2      	; 0x6988 <dtoa_prf+0x226>
    6986:	01 e0       	ldi	r16, 0x01	; 1
    6988:	ab 01       	movw	r20, r22
    698a:	77 ff       	sbrs	r23, 7
    698c:	02 c0       	rjmp	.+4      	; 0x6992 <dtoa_prf+0x230>
    698e:	40 e0       	ldi	r20, 0x00	; 0
    6990:	50 e0       	ldi	r21, 0x00	; 0
    6992:	fb 01       	movw	r30, r22
    6994:	e4 1b       	sub	r30, r20
    6996:	f5 0b       	sbc	r31, r21
    6998:	a1 e0       	ldi	r26, 0x01	; 1
    699a:	b0 e0       	ldi	r27, 0x00	; 0
    699c:	ac 0f       	add	r26, r28
    699e:	bd 1f       	adc	r27, r29
    69a0:	ea 0f       	add	r30, r26
    69a2:	fb 1f       	adc	r31, r27
    69a4:	8e e2       	ldi	r24, 0x2E	; 46
    69a6:	a8 2e       	mov	r10, r24
    69a8:	4b 01       	movw	r8, r22
    69aa:	80 1a       	sub	r8, r16
    69ac:	91 08       	sbc	r9, r1
    69ae:	0b 2d       	mov	r16, r11
    69b0:	10 e0       	ldi	r17, 0x00	; 0
    69b2:	11 95       	neg	r17
    69b4:	01 95       	neg	r16
    69b6:	11 09       	sbc	r17, r1
    69b8:	4f 3f       	cpi	r20, 0xFF	; 255
    69ba:	bf ef       	ldi	r27, 0xFF	; 255
    69bc:	5b 07       	cpc	r21, r27
    69be:	21 f4       	brne	.+8      	; 0x69c8 <dtoa_prf+0x266>
    69c0:	d6 01       	movw	r26, r12
    69c2:	ac 92       	st	X, r10
    69c4:	11 96       	adiw	r26, 0x01	; 1
    69c6:	6d 01       	movw	r12, r26
    69c8:	64 17       	cp	r22, r20
    69ca:	75 07       	cpc	r23, r21
    69cc:	2c f0       	brlt	.+10     	; 0x69d8 <dtoa_prf+0x276>
    69ce:	84 16       	cp	r8, r20
    69d0:	95 06       	cpc	r9, r21
    69d2:	14 f4       	brge	.+4      	; 0x69d8 <dtoa_prf+0x276>
    69d4:	81 81       	ldd	r24, Z+1	; 0x01
    69d6:	01 c0       	rjmp	.+2      	; 0x69da <dtoa_prf+0x278>
    69d8:	80 e3       	ldi	r24, 0x30	; 48
    69da:	41 50       	subi	r20, 0x01	; 1
    69dc:	51 09       	sbc	r21, r1
    69de:	31 96       	adiw	r30, 0x01	; 1
    69e0:	d6 01       	movw	r26, r12
    69e2:	11 96       	adiw	r26, 0x01	; 1
    69e4:	7d 01       	movw	r14, r26
    69e6:	40 17       	cp	r20, r16
    69e8:	51 07       	cpc	r21, r17
    69ea:	24 f0       	brlt	.+8      	; 0x69f4 <dtoa_prf+0x292>
    69ec:	d6 01       	movw	r26, r12
    69ee:	8c 93       	st	X, r24
    69f0:	67 01       	movw	r12, r14
    69f2:	e2 cf       	rjmp	.-60     	; 0x69b8 <dtoa_prf+0x256>
    69f4:	64 17       	cp	r22, r20
    69f6:	75 07       	cpc	r23, r21
    69f8:	39 f4       	brne	.+14     	; 0x6a08 <dtoa_prf+0x2a6>
    69fa:	96 33       	cpi	r25, 0x36	; 54
    69fc:	20 f4       	brcc	.+8      	; 0x6a06 <dtoa_prf+0x2a4>
    69fe:	95 33       	cpi	r25, 0x35	; 53
    6a00:	19 f4       	brne	.+6      	; 0x6a08 <dtoa_prf+0x2a6>
    6a02:	31 11       	cpse	r19, r1
    6a04:	01 c0       	rjmp	.+2      	; 0x6a08 <dtoa_prf+0x2a6>
    6a06:	81 e3       	ldi	r24, 0x31	; 49
    6a08:	f6 01       	movw	r30, r12
    6a0a:	80 83       	st	Z, r24
    6a0c:	f7 01       	movw	r30, r14
    6a0e:	82 2f       	mov	r24, r18
    6a10:	90 e2       	ldi	r25, 0x20	; 32
    6a12:	88 23       	and	r24, r24
    6a14:	19 f0       	breq	.+6      	; 0x6a1c <dtoa_prf+0x2ba>
    6a16:	91 93       	st	Z+, r25
    6a18:	81 50       	subi	r24, 0x01	; 1
    6a1a:	fb cf       	rjmp	.-10     	; 0x6a12 <dtoa_prf+0x2b0>
    6a1c:	f7 01       	movw	r30, r14
    6a1e:	e2 0f       	add	r30, r18
    6a20:	f1 1d       	adc	r31, r1
    6a22:	10 82       	st	Z, r1
    6a24:	80 e0       	ldi	r24, 0x00	; 0
    6a26:	90 e0       	ldi	r25, 0x00	; 0
    6a28:	29 96       	adiw	r28, 0x09	; 9
    6a2a:	0f b6       	in	r0, 0x3f	; 63
    6a2c:	f8 94       	cli
    6a2e:	de bf       	out	0x3e, r29	; 62
    6a30:	0f be       	out	0x3f, r0	; 63
    6a32:	cd bf       	out	0x3d, r28	; 61
    6a34:	df 91       	pop	r29
    6a36:	cf 91       	pop	r28
    6a38:	1f 91       	pop	r17
    6a3a:	0f 91       	pop	r16
    6a3c:	ff 90       	pop	r15
    6a3e:	ef 90       	pop	r14
    6a40:	df 90       	pop	r13
    6a42:	cf 90       	pop	r12
    6a44:	bf 90       	pop	r11
    6a46:	af 90       	pop	r10
    6a48:	9f 90       	pop	r9
    6a4a:	8f 90       	pop	r8
    6a4c:	08 95       	ret

00006a4e <__ftoa_engine>:
    6a4e:	28 30       	cpi	r18, 0x08	; 8
    6a50:	08 f0       	brcs	.+2      	; 0x6a54 <__ftoa_engine+0x6>
    6a52:	27 e0       	ldi	r18, 0x07	; 7
    6a54:	33 27       	eor	r19, r19
    6a56:	da 01       	movw	r26, r20
    6a58:	99 0f       	add	r25, r25
    6a5a:	31 1d       	adc	r19, r1
    6a5c:	87 fd       	sbrc	r24, 7
    6a5e:	91 60       	ori	r25, 0x01	; 1
    6a60:	00 96       	adiw	r24, 0x00	; 0
    6a62:	61 05       	cpc	r22, r1
    6a64:	71 05       	cpc	r23, r1
    6a66:	39 f4       	brne	.+14     	; 0x6a76 <__ftoa_engine+0x28>
    6a68:	32 60       	ori	r19, 0x02	; 2
    6a6a:	2e 5f       	subi	r18, 0xFE	; 254
    6a6c:	3d 93       	st	X+, r19
    6a6e:	30 e3       	ldi	r19, 0x30	; 48
    6a70:	2a 95       	dec	r18
    6a72:	e1 f7       	brne	.-8      	; 0x6a6c <__ftoa_engine+0x1e>
    6a74:	08 95       	ret
    6a76:	9f 3f       	cpi	r25, 0xFF	; 255
    6a78:	30 f0       	brcs	.+12     	; 0x6a86 <__ftoa_engine+0x38>
    6a7a:	80 38       	cpi	r24, 0x80	; 128
    6a7c:	71 05       	cpc	r23, r1
    6a7e:	61 05       	cpc	r22, r1
    6a80:	09 f0       	breq	.+2      	; 0x6a84 <__ftoa_engine+0x36>
    6a82:	3c 5f       	subi	r19, 0xFC	; 252
    6a84:	3c 5f       	subi	r19, 0xFC	; 252
    6a86:	3d 93       	st	X+, r19
    6a88:	91 30       	cpi	r25, 0x01	; 1
    6a8a:	08 f0       	brcs	.+2      	; 0x6a8e <__ftoa_engine+0x40>
    6a8c:	80 68       	ori	r24, 0x80	; 128
    6a8e:	91 1d       	adc	r25, r1
    6a90:	df 93       	push	r29
    6a92:	cf 93       	push	r28
    6a94:	1f 93       	push	r17
    6a96:	0f 93       	push	r16
    6a98:	ff 92       	push	r15
    6a9a:	ef 92       	push	r14
    6a9c:	19 2f       	mov	r17, r25
    6a9e:	98 7f       	andi	r25, 0xF8	; 248
    6aa0:	96 95       	lsr	r25
    6aa2:	e9 2f       	mov	r30, r25
    6aa4:	96 95       	lsr	r25
    6aa6:	96 95       	lsr	r25
    6aa8:	e9 0f       	add	r30, r25
    6aaa:	ff 27       	eor	r31, r31
    6aac:	ea 57       	subi	r30, 0x7A	; 122
    6aae:	fe 4f       	sbci	r31, 0xFE	; 254
    6ab0:	99 27       	eor	r25, r25
    6ab2:	33 27       	eor	r19, r19
    6ab4:	ee 24       	eor	r14, r14
    6ab6:	ff 24       	eor	r15, r15
    6ab8:	a7 01       	movw	r20, r14
    6aba:	e7 01       	movw	r28, r14
    6abc:	05 90       	lpm	r0, Z+
    6abe:	08 94       	sec
    6ac0:	07 94       	ror	r0
    6ac2:	28 f4       	brcc	.+10     	; 0x6ace <__ftoa_engine+0x80>
    6ac4:	36 0f       	add	r19, r22
    6ac6:	e7 1e       	adc	r14, r23
    6ac8:	f8 1e       	adc	r15, r24
    6aca:	49 1f       	adc	r20, r25
    6acc:	51 1d       	adc	r21, r1
    6ace:	66 0f       	add	r22, r22
    6ad0:	77 1f       	adc	r23, r23
    6ad2:	88 1f       	adc	r24, r24
    6ad4:	99 1f       	adc	r25, r25
    6ad6:	06 94       	lsr	r0
    6ad8:	a1 f7       	brne	.-24     	; 0x6ac2 <__ftoa_engine+0x74>
    6ada:	05 90       	lpm	r0, Z+
    6adc:	07 94       	ror	r0
    6ade:	28 f4       	brcc	.+10     	; 0x6aea <__ftoa_engine+0x9c>
    6ae0:	e7 0e       	add	r14, r23
    6ae2:	f8 1e       	adc	r15, r24
    6ae4:	49 1f       	adc	r20, r25
    6ae6:	56 1f       	adc	r21, r22
    6ae8:	c1 1d       	adc	r28, r1
    6aea:	77 0f       	add	r23, r23
    6aec:	88 1f       	adc	r24, r24
    6aee:	99 1f       	adc	r25, r25
    6af0:	66 1f       	adc	r22, r22
    6af2:	06 94       	lsr	r0
    6af4:	a1 f7       	brne	.-24     	; 0x6ade <__ftoa_engine+0x90>
    6af6:	05 90       	lpm	r0, Z+
    6af8:	07 94       	ror	r0
    6afa:	28 f4       	brcc	.+10     	; 0x6b06 <__ftoa_engine+0xb8>
    6afc:	f8 0e       	add	r15, r24
    6afe:	49 1f       	adc	r20, r25
    6b00:	56 1f       	adc	r21, r22
    6b02:	c7 1f       	adc	r28, r23
    6b04:	d1 1d       	adc	r29, r1
    6b06:	88 0f       	add	r24, r24
    6b08:	99 1f       	adc	r25, r25
    6b0a:	66 1f       	adc	r22, r22
    6b0c:	77 1f       	adc	r23, r23
    6b0e:	06 94       	lsr	r0
    6b10:	a1 f7       	brne	.-24     	; 0x6afa <__ftoa_engine+0xac>
    6b12:	05 90       	lpm	r0, Z+
    6b14:	07 94       	ror	r0
    6b16:	20 f4       	brcc	.+8      	; 0x6b20 <__ftoa_engine+0xd2>
    6b18:	49 0f       	add	r20, r25
    6b1a:	56 1f       	adc	r21, r22
    6b1c:	c7 1f       	adc	r28, r23
    6b1e:	d8 1f       	adc	r29, r24
    6b20:	99 0f       	add	r25, r25
    6b22:	66 1f       	adc	r22, r22
    6b24:	77 1f       	adc	r23, r23
    6b26:	88 1f       	adc	r24, r24
    6b28:	06 94       	lsr	r0
    6b2a:	a9 f7       	brne	.-22     	; 0x6b16 <__ftoa_engine+0xc8>
    6b2c:	84 91       	lpm	r24, Z
    6b2e:	10 95       	com	r17
    6b30:	17 70       	andi	r17, 0x07	; 7
    6b32:	41 f0       	breq	.+16     	; 0x6b44 <__ftoa_engine+0xf6>
    6b34:	d6 95       	lsr	r29
    6b36:	c7 95       	ror	r28
    6b38:	57 95       	ror	r21
    6b3a:	47 95       	ror	r20
    6b3c:	f7 94       	ror	r15
    6b3e:	e7 94       	ror	r14
    6b40:	1a 95       	dec	r17
    6b42:	c1 f7       	brne	.-16     	; 0x6b34 <__ftoa_engine+0xe6>
    6b44:	ec e2       	ldi	r30, 0x2C	; 44
    6b46:	f1 e0       	ldi	r31, 0x01	; 1
    6b48:	68 94       	set
    6b4a:	15 90       	lpm	r1, Z+
    6b4c:	15 91       	lpm	r17, Z+
    6b4e:	35 91       	lpm	r19, Z+
    6b50:	65 91       	lpm	r22, Z+
    6b52:	95 91       	lpm	r25, Z+
    6b54:	05 90       	lpm	r0, Z+
    6b56:	7f e2       	ldi	r23, 0x2F	; 47
    6b58:	73 95       	inc	r23
    6b5a:	e1 18       	sub	r14, r1
    6b5c:	f1 0a       	sbc	r15, r17
    6b5e:	43 0b       	sbc	r20, r19
    6b60:	56 0b       	sbc	r21, r22
    6b62:	c9 0b       	sbc	r28, r25
    6b64:	d0 09       	sbc	r29, r0
    6b66:	c0 f7       	brcc	.-16     	; 0x6b58 <__ftoa_engine+0x10a>
    6b68:	e1 0c       	add	r14, r1
    6b6a:	f1 1e       	adc	r15, r17
    6b6c:	43 1f       	adc	r20, r19
    6b6e:	56 1f       	adc	r21, r22
    6b70:	c9 1f       	adc	r28, r25
    6b72:	d0 1d       	adc	r29, r0
    6b74:	7e f4       	brtc	.+30     	; 0x6b94 <__ftoa_engine+0x146>
    6b76:	70 33       	cpi	r23, 0x30	; 48
    6b78:	11 f4       	brne	.+4      	; 0x6b7e <__ftoa_engine+0x130>
    6b7a:	8a 95       	dec	r24
    6b7c:	e6 cf       	rjmp	.-52     	; 0x6b4a <__ftoa_engine+0xfc>
    6b7e:	e8 94       	clt
    6b80:	01 50       	subi	r16, 0x01	; 1
    6b82:	30 f0       	brcs	.+12     	; 0x6b90 <__ftoa_engine+0x142>
    6b84:	08 0f       	add	r16, r24
    6b86:	0a f4       	brpl	.+2      	; 0x6b8a <__ftoa_engine+0x13c>
    6b88:	00 27       	eor	r16, r16
    6b8a:	02 17       	cp	r16, r18
    6b8c:	08 f4       	brcc	.+2      	; 0x6b90 <__ftoa_engine+0x142>
    6b8e:	20 2f       	mov	r18, r16
    6b90:	23 95       	inc	r18
    6b92:	02 2f       	mov	r16, r18
    6b94:	7a 33       	cpi	r23, 0x3A	; 58
    6b96:	28 f0       	brcs	.+10     	; 0x6ba2 <__ftoa_engine+0x154>
    6b98:	79 e3       	ldi	r23, 0x39	; 57
    6b9a:	7d 93       	st	X+, r23
    6b9c:	2a 95       	dec	r18
    6b9e:	e9 f7       	brne	.-6      	; 0x6b9a <__ftoa_engine+0x14c>
    6ba0:	10 c0       	rjmp	.+32     	; 0x6bc2 <__ftoa_engine+0x174>
    6ba2:	7d 93       	st	X+, r23
    6ba4:	2a 95       	dec	r18
    6ba6:	89 f6       	brne	.-94     	; 0x6b4a <__ftoa_engine+0xfc>
    6ba8:	06 94       	lsr	r0
    6baa:	97 95       	ror	r25
    6bac:	67 95       	ror	r22
    6bae:	37 95       	ror	r19
    6bb0:	17 95       	ror	r17
    6bb2:	17 94       	ror	r1
    6bb4:	e1 18       	sub	r14, r1
    6bb6:	f1 0a       	sbc	r15, r17
    6bb8:	43 0b       	sbc	r20, r19
    6bba:	56 0b       	sbc	r21, r22
    6bbc:	c9 0b       	sbc	r28, r25
    6bbe:	d0 09       	sbc	r29, r0
    6bc0:	98 f0       	brcs	.+38     	; 0x6be8 <__ftoa_engine+0x19a>
    6bc2:	23 95       	inc	r18
    6bc4:	7e 91       	ld	r23, -X
    6bc6:	73 95       	inc	r23
    6bc8:	7a 33       	cpi	r23, 0x3A	; 58
    6bca:	08 f0       	brcs	.+2      	; 0x6bce <__ftoa_engine+0x180>
    6bcc:	70 e3       	ldi	r23, 0x30	; 48
    6bce:	7c 93       	st	X, r23
    6bd0:	20 13       	cpse	r18, r16
    6bd2:	b8 f7       	brcc	.-18     	; 0x6bc2 <__ftoa_engine+0x174>
    6bd4:	7e 91       	ld	r23, -X
    6bd6:	70 61       	ori	r23, 0x10	; 16
    6bd8:	7d 93       	st	X+, r23
    6bda:	30 f0       	brcs	.+12     	; 0x6be8 <__ftoa_engine+0x19a>
    6bdc:	83 95       	inc	r24
    6bde:	71 e3       	ldi	r23, 0x31	; 49
    6be0:	7d 93       	st	X+, r23
    6be2:	70 e3       	ldi	r23, 0x30	; 48
    6be4:	2a 95       	dec	r18
    6be6:	e1 f7       	brne	.-8      	; 0x6be0 <__ftoa_engine+0x192>
    6be8:	11 24       	eor	r1, r1
    6bea:	ef 90       	pop	r14
    6bec:	ff 90       	pop	r15
    6bee:	0f 91       	pop	r16
    6bf0:	1f 91       	pop	r17
    6bf2:	cf 91       	pop	r28
    6bf4:	df 91       	pop	r29
    6bf6:	99 27       	eor	r25, r25
    6bf8:	87 fd       	sbrc	r24, 7
    6bfa:	90 95       	com	r25
    6bfc:	08 95       	ret

00006bfe <__ctype_isfalse>:
    6bfe:	99 27       	eor	r25, r25
    6c00:	88 27       	eor	r24, r24

00006c02 <__ctype_istrue>:
    6c02:	08 95       	ret

00006c04 <strnlen_P>:
    6c04:	fc 01       	movw	r30, r24
    6c06:	05 90       	lpm	r0, Z+
    6c08:	61 50       	subi	r22, 0x01	; 1
    6c0a:	70 40       	sbci	r23, 0x00	; 0
    6c0c:	01 10       	cpse	r0, r1
    6c0e:	d8 f7       	brcc	.-10     	; 0x6c06 <strnlen_P+0x2>
    6c10:	80 95       	com	r24
    6c12:	90 95       	com	r25
    6c14:	8e 0f       	add	r24, r30
    6c16:	9f 1f       	adc	r25, r31
    6c18:	08 95       	ret

00006c1a <strrev>:
    6c1a:	dc 01       	movw	r26, r24
    6c1c:	fc 01       	movw	r30, r24
    6c1e:	67 2f       	mov	r22, r23
    6c20:	71 91       	ld	r23, Z+
    6c22:	77 23       	and	r23, r23
    6c24:	e1 f7       	brne	.-8      	; 0x6c1e <strrev+0x4>
    6c26:	32 97       	sbiw	r30, 0x02	; 2
    6c28:	04 c0       	rjmp	.+8      	; 0x6c32 <strrev+0x18>
    6c2a:	7c 91       	ld	r23, X
    6c2c:	6d 93       	st	X+, r22
    6c2e:	70 83       	st	Z, r23
    6c30:	62 91       	ld	r22, -Z
    6c32:	ae 17       	cp	r26, r30
    6c34:	bf 07       	cpc	r27, r31
    6c36:	c8 f3       	brcs	.-14     	; 0x6c2a <strrev+0x10>
    6c38:	08 95       	ret

00006c3a <fputc>:
    6c3a:	0f 93       	push	r16
    6c3c:	1f 93       	push	r17
    6c3e:	cf 93       	push	r28
    6c40:	df 93       	push	r29
    6c42:	fb 01       	movw	r30, r22
    6c44:	23 81       	ldd	r18, Z+3	; 0x03
    6c46:	21 fd       	sbrc	r18, 1
    6c48:	03 c0       	rjmp	.+6      	; 0x6c50 <fputc+0x16>
    6c4a:	8f ef       	ldi	r24, 0xFF	; 255
    6c4c:	9f ef       	ldi	r25, 0xFF	; 255
    6c4e:	2c c0       	rjmp	.+88     	; 0x6ca8 <fputc+0x6e>
    6c50:	22 ff       	sbrs	r18, 2
    6c52:	16 c0       	rjmp	.+44     	; 0x6c80 <fputc+0x46>
    6c54:	46 81       	ldd	r20, Z+6	; 0x06
    6c56:	57 81       	ldd	r21, Z+7	; 0x07
    6c58:	24 81       	ldd	r18, Z+4	; 0x04
    6c5a:	35 81       	ldd	r19, Z+5	; 0x05
    6c5c:	42 17       	cp	r20, r18
    6c5e:	53 07       	cpc	r21, r19
    6c60:	44 f4       	brge	.+16     	; 0x6c72 <fputc+0x38>
    6c62:	a0 81       	ld	r26, Z
    6c64:	b1 81       	ldd	r27, Z+1	; 0x01
    6c66:	9d 01       	movw	r18, r26
    6c68:	2f 5f       	subi	r18, 0xFF	; 255
    6c6a:	3f 4f       	sbci	r19, 0xFF	; 255
    6c6c:	31 83       	std	Z+1, r19	; 0x01
    6c6e:	20 83       	st	Z, r18
    6c70:	8c 93       	st	X, r24
    6c72:	26 81       	ldd	r18, Z+6	; 0x06
    6c74:	37 81       	ldd	r19, Z+7	; 0x07
    6c76:	2f 5f       	subi	r18, 0xFF	; 255
    6c78:	3f 4f       	sbci	r19, 0xFF	; 255
    6c7a:	37 83       	std	Z+7, r19	; 0x07
    6c7c:	26 83       	std	Z+6, r18	; 0x06
    6c7e:	14 c0       	rjmp	.+40     	; 0x6ca8 <fputc+0x6e>
    6c80:	8b 01       	movw	r16, r22
    6c82:	ec 01       	movw	r28, r24
    6c84:	fb 01       	movw	r30, r22
    6c86:	00 84       	ldd	r0, Z+8	; 0x08
    6c88:	f1 85       	ldd	r31, Z+9	; 0x09
    6c8a:	e0 2d       	mov	r30, r0
    6c8c:	19 95       	eicall
    6c8e:	89 2b       	or	r24, r25
    6c90:	e1 f6       	brne	.-72     	; 0x6c4a <fputc+0x10>
    6c92:	d8 01       	movw	r26, r16
    6c94:	16 96       	adiw	r26, 0x06	; 6
    6c96:	8d 91       	ld	r24, X+
    6c98:	9c 91       	ld	r25, X
    6c9a:	17 97       	sbiw	r26, 0x07	; 7
    6c9c:	01 96       	adiw	r24, 0x01	; 1
    6c9e:	17 96       	adiw	r26, 0x07	; 7
    6ca0:	9c 93       	st	X, r25
    6ca2:	8e 93       	st	-X, r24
    6ca4:	16 97       	sbiw	r26, 0x06	; 6
    6ca6:	ce 01       	movw	r24, r28
    6ca8:	df 91       	pop	r29
    6caa:	cf 91       	pop	r28
    6cac:	1f 91       	pop	r17
    6cae:	0f 91       	pop	r16
    6cb0:	08 95       	ret

00006cb2 <__ultoa_invert>:
    6cb2:	fa 01       	movw	r30, r20
    6cb4:	aa 27       	eor	r26, r26
    6cb6:	28 30       	cpi	r18, 0x08	; 8
    6cb8:	51 f1       	breq	.+84     	; 0x6d0e <__ultoa_invert+0x5c>
    6cba:	20 31       	cpi	r18, 0x10	; 16
    6cbc:	81 f1       	breq	.+96     	; 0x6d1e <__ultoa_invert+0x6c>
    6cbe:	e8 94       	clt
    6cc0:	6f 93       	push	r22
    6cc2:	6e 7f       	andi	r22, 0xFE	; 254
    6cc4:	6e 5f       	subi	r22, 0xFE	; 254
    6cc6:	7f 4f       	sbci	r23, 0xFF	; 255
    6cc8:	8f 4f       	sbci	r24, 0xFF	; 255
    6cca:	9f 4f       	sbci	r25, 0xFF	; 255
    6ccc:	af 4f       	sbci	r26, 0xFF	; 255
    6cce:	b1 e0       	ldi	r27, 0x01	; 1
    6cd0:	3e d0       	rcall	.+124    	; 0x6d4e <__ultoa_invert+0x9c>
    6cd2:	b4 e0       	ldi	r27, 0x04	; 4
    6cd4:	3c d0       	rcall	.+120    	; 0x6d4e <__ultoa_invert+0x9c>
    6cd6:	67 0f       	add	r22, r23
    6cd8:	78 1f       	adc	r23, r24
    6cda:	89 1f       	adc	r24, r25
    6cdc:	9a 1f       	adc	r25, r26
    6cde:	a1 1d       	adc	r26, r1
    6ce0:	68 0f       	add	r22, r24
    6ce2:	79 1f       	adc	r23, r25
    6ce4:	8a 1f       	adc	r24, r26
    6ce6:	91 1d       	adc	r25, r1
    6ce8:	a1 1d       	adc	r26, r1
    6cea:	6a 0f       	add	r22, r26
    6cec:	71 1d       	adc	r23, r1
    6cee:	81 1d       	adc	r24, r1
    6cf0:	91 1d       	adc	r25, r1
    6cf2:	a1 1d       	adc	r26, r1
    6cf4:	20 d0       	rcall	.+64     	; 0x6d36 <__ultoa_invert+0x84>
    6cf6:	09 f4       	brne	.+2      	; 0x6cfa <__ultoa_invert+0x48>
    6cf8:	68 94       	set
    6cfa:	3f 91       	pop	r19
    6cfc:	2a e0       	ldi	r18, 0x0A	; 10
    6cfe:	26 9f       	mul	r18, r22
    6d00:	11 24       	eor	r1, r1
    6d02:	30 19       	sub	r19, r0
    6d04:	30 5d       	subi	r19, 0xD0	; 208
    6d06:	31 93       	st	Z+, r19
    6d08:	de f6       	brtc	.-74     	; 0x6cc0 <__ultoa_invert+0xe>
    6d0a:	cf 01       	movw	r24, r30
    6d0c:	08 95       	ret
    6d0e:	46 2f       	mov	r20, r22
    6d10:	47 70       	andi	r20, 0x07	; 7
    6d12:	40 5d       	subi	r20, 0xD0	; 208
    6d14:	41 93       	st	Z+, r20
    6d16:	b3 e0       	ldi	r27, 0x03	; 3
    6d18:	0f d0       	rcall	.+30     	; 0x6d38 <__ultoa_invert+0x86>
    6d1a:	c9 f7       	brne	.-14     	; 0x6d0e <__ultoa_invert+0x5c>
    6d1c:	f6 cf       	rjmp	.-20     	; 0x6d0a <__ultoa_invert+0x58>
    6d1e:	46 2f       	mov	r20, r22
    6d20:	4f 70       	andi	r20, 0x0F	; 15
    6d22:	40 5d       	subi	r20, 0xD0	; 208
    6d24:	4a 33       	cpi	r20, 0x3A	; 58
    6d26:	18 f0       	brcs	.+6      	; 0x6d2e <__ultoa_invert+0x7c>
    6d28:	49 5d       	subi	r20, 0xD9	; 217
    6d2a:	31 fd       	sbrc	r19, 1
    6d2c:	40 52       	subi	r20, 0x20	; 32
    6d2e:	41 93       	st	Z+, r20
    6d30:	02 d0       	rcall	.+4      	; 0x6d36 <__ultoa_invert+0x84>
    6d32:	a9 f7       	brne	.-22     	; 0x6d1e <__ultoa_invert+0x6c>
    6d34:	ea cf       	rjmp	.-44     	; 0x6d0a <__ultoa_invert+0x58>
    6d36:	b4 e0       	ldi	r27, 0x04	; 4
    6d38:	a6 95       	lsr	r26
    6d3a:	97 95       	ror	r25
    6d3c:	87 95       	ror	r24
    6d3e:	77 95       	ror	r23
    6d40:	67 95       	ror	r22
    6d42:	ba 95       	dec	r27
    6d44:	c9 f7       	brne	.-14     	; 0x6d38 <__ultoa_invert+0x86>
    6d46:	00 97       	sbiw	r24, 0x00	; 0
    6d48:	61 05       	cpc	r22, r1
    6d4a:	71 05       	cpc	r23, r1
    6d4c:	08 95       	ret
    6d4e:	9b 01       	movw	r18, r22
    6d50:	ac 01       	movw	r20, r24
    6d52:	0a 2e       	mov	r0, r26
    6d54:	06 94       	lsr	r0
    6d56:	57 95       	ror	r21
    6d58:	47 95       	ror	r20
    6d5a:	37 95       	ror	r19
    6d5c:	27 95       	ror	r18
    6d5e:	ba 95       	dec	r27
    6d60:	c9 f7       	brne	.-14     	; 0x6d54 <__ultoa_invert+0xa2>
    6d62:	62 0f       	add	r22, r18
    6d64:	73 1f       	adc	r23, r19
    6d66:	84 1f       	adc	r24, r20
    6d68:	95 1f       	adc	r25, r21
    6d6a:	a0 1d       	adc	r26, r0
    6d6c:	08 95       	ret

00006d6e <__do_global_dtors>:
    6d6e:	14 e0       	ldi	r17, 0x04	; 4
    6d70:	c2 e4       	ldi	r28, 0x42	; 66
    6d72:	d4 e0       	ldi	r29, 0x04	; 4
    6d74:	00 e0       	ldi	r16, 0x00	; 0
    6d76:	06 c0       	rjmp	.+12     	; 0x6d84 <__do_global_dtors+0x16>
    6d78:	80 2f       	mov	r24, r16
    6d7a:	fe 01       	movw	r30, r28
    6d7c:	0e 94 fa 2d 	call	0x5bf4	; 0x5bf4 <__tablejump2__>
    6d80:	21 96       	adiw	r28, 0x01	; 1
    6d82:	01 1d       	adc	r16, r1
    6d84:	c4 34       	cpi	r28, 0x44	; 68
    6d86:	d1 07       	cpc	r29, r17
    6d88:	80 e0       	ldi	r24, 0x00	; 0
    6d8a:	08 07       	cpc	r16, r24
    6d8c:	a9 f7       	brne	.-22     	; 0x6d78 <__do_global_dtors+0xa>
    6d8e:	f8 94       	cli

00006d90 <__stop_program>:
    6d90:	ff cf       	rjmp	.-2      	; 0x6d90 <__stop_program>
